                /* QQ½»Á÷Èº:66890718*/
// Enum  UE4Singletons.ECompAttachedType
enum class ECompAttachedType : uint8_t
{
    Default                                        = 0,
    ServerSide                                     = 1,
    ClientSide                                     = 2,
    Replicated                                     = 4,
    NameStable                                     = 8,
    BothSide                                       = 3,
    ECompAttachedType_MAX                          = 9

};

// Enum  CoreUObject.Default__Enum
enum class Default__Enum : uint8_t
{

};

// Enum  UE4Singletons.ESystemAttachedType
enum class ESystemAttachedType : uint8_t
{
    Default                                        = 0,
    ServerSide                                     = 1,
    ClientSide                                     = 2,
    Replicated                                     = 4,
    Instanced                                      = 8,
    BothSide                                       = 3,
    ESystemAttachedType_MAX                        = 9

};

// Enum  GameCore.EAppUpdateType
enum class EAppUpdateType : uint8_t
{
    Dolphin                                        = 0,
    Puffer                                         = 1,
    EAppUpdateType_MAX                             = 2

};

// Enum  GameCore.EPreloadType
enum class EPreloadType : uint8_t
{
    NoBlock                                        = 0,
    Block                                          = 1,
    EPreloadType_MAX                               = 2

};

// Enum  GameCore.EDataTableLoadingStep
enum class EDataTableLoadingStep : uint8_t
{
    None                                           = 0,
    Loading                                        = 1,
    Success                                        = 2,
    Fail                                           = 3,
    EDataTableLoadingStep_MAX                      = 4

};

// Enum  GameCore.EDataTableUseClientType
enum class EDataTableUseClientType : uint8_t
{
    All                                            = 0,
    DS                                             = 1,
    Editor                                         = 2,
    Android                                        = 3,
    IOS                                            = 4,
    PC                                             = 5,
    Console                                        = 6,
    OpenHarmony                                    = 7,
    EDataTableUseClientType_MAX                    = 8

};

// Enum  GameCore.EDataTableUseScene
enum class EDataTableUseScene : uint8_t
{
    None                                           = 0,
    Common                                         = 1,
    FrontEnd                                       = 2,
    InGameSOL                                      = 3,
    InGameBattleField                              = 4,
    Login                                          = 6,
    Disable                                        = 5,
    EDataTableUseScene_MAX                         = 7

};

// Enum  GameCore.EDatatableAssetinfoOPCode
enum class EDatatableAssetinfoOPCode : uint8_t
{
    Default                                        = 0,
    Add                                            = 1,
    Remove                                         = 2,
    AddLoaded                                      = 3,
    EDatatableAssetinfoOPCode_MAX                  = 4

};

// Enum  GameCore.EDeviceLevel
enum class EDeviceLevel : uint8_t
{
    VeryLow                                        = 0,
    Low                                            = 1,
    Middle                                         = 2,
    Standard                                       = 3,
    High                                           = 4,
    VeryHigh                                       = 5,
    Unknown                                        = 6,
    EDeviceLevel_MAX                               = 7

};

// Enum  GameCore.EBackgroundType
enum class EBackgroundType : uint8_t
{
    None                                           = 0,
    Image                                          = 1,
    Media                                          = 2,
    CustomBP                                       = 3,
    CDNImage                                       = 4,
    DirectOnStackBP                                = 5,
    EBackgroundType_MAX                            = 6

};

// Enum  GameCore.EBackgroundScaleType
enum class EBackgroundScaleType : uint8_t
{
    Scale                                          = 0,
    UnScale                                        = 1,
    EBackgroundScaleType_MAX                       = 2

};

// Enum  GameCore.EGameVersionCompareResult
enum class EGameVersionCompareResult : uint8_t
{
    VERSION_COMPARE_EQUAL                          = 0,
    VERSION_COMPARE_LOWER                          = 1,
    VERSION_COMPARE_HIGHER                         = 2,
    VERSION_COMPARE_ERROR                          = 3,
    VERSION_COMPARE_MAX                            = 4

};

// Enum  GameCore.EResourceMSVersion
enum class EResourceMSVersion : uint8_t
{
    Unknown                                        = 0,
    She1                                           = 11,
    She2                                           = 12,
    She3                                           = 13,
    She4                                           = 14,
    She5                                           = 15,
    Ma1                                            = 21,
    Ma2                                            = 22,
    Ma3                                            = 23,
    Ma4                                            = 24,
    Ma5                                            = 25,
    Yang1                                          = 31,
    Yang2                                          = 32,
    Yang3                                          = 33,
    Yang4                                          = 34,
    Yang5                                          = 35,
    Hou1                                           = 41,
    Hou2                                           = 42,
    Hou3                                           = 43,
    Hou4                                           = 45,
    Hou5                                           = 46,
    Ji1                                            = 51,
    Ji2                                            = 52,
    Ji3                                            = 53,
    Ji4                                            = 54,
    Ji5                                            = 55,
    Gou1                                           = 61,
    Gou2                                           = 62,
    Gou3                                           = 63,
    Gou4                                           = 64,
    Gou5                                           = 65,
    Zhu1                                           = 71,
    Zhu2                                           = 72,
    Zhu3                                           = 73,
    Zhu4                                           = 74,
    Zhu5                                           = 75,
    EResourceMSVersion_MAX                         = 76

};

// Enum  GameCore.EGameChannel
enum class EGameChannel : uint8_t
{
    Unknown                                        = 0,
    Official                                       = 1,
    WeGame                                         = 2,
    Steam                                          = 3,
    Epic                                           = 4,
    Google                                         = 5,
    EGameChannel_MAX                               = 6

};

// Enum  GameCore.EGameBuildRegion
enum class EGameBuildRegion : uint8_t
{
    Default                                        = 0,
    CN                                             = 1,
    CN_Exper                                       = 2,
    CN_Match                                       = 3,
    Global                                         = 4,
    Global_Exper                                   = 5,
    Global_Match                                   = 6,
    GA                                             = 7,
    GA_Exper                                       = 8,
    EGameBuildRegion_MAX                           = 9

};

// Enum  GameCore.EGameBuildConfiguration
enum class EGameBuildConfiguration : uint8_t
{
    Default                                        = 0,
    Daily                                          = 1,
    Test                                           = 2,
    Match                                          = 3,
    Shipping                                       = 4,
    ShippingTest                                   = 5,
    Release                                        = 6,
    EGameBuildConfiguration_MAX                    = 7

};

// Enum  GameCore.ETODType
enum class ETODType : uint8_t
{
    Day                                            = 0,
    Dusk                                           = 1,
    Random                                         = 2,
    DONOTUSE                                       = 3,
    ETODType_MAX                                   = 4

};

// Enum  GlobalMessageRuntime.EMessageAuthorityType
enum class EMessageAuthorityType : uint8_t
{
    EMessageTypeBoth                               = 0,
    EMessageTypeServer                             = 1,
    EMessageTypeClient                             = 2,
    EMessageAuthorityType_MAX                      = 3

};

// Enum  GlobalMessageRuntime.EFireMessagesAtPosition
enum class EFireMessagesAtPosition : uint8_t
{
    AtStartOfEvaluation                            = 0,
    AtEndOfEvaluation                              = 1,
    AfterSpawn                                     = 2,
    EFireMessagesAtPosition_MAX                    = 3

};

// Enum  MessageTags.EMessageTagQueryExprType
enum class EMessageTagQueryExprType : uint8_t
{
    Undefined                                      = 0,
    AnyTagsMatch                                   = 1,
    AllTagsMatch                                   = 2,
    NoTagsMatch                                    = 3,
    AnyExprMatch                                   = 4,
    AllExprMatch                                   = 5,
    NoExprMatch                                    = 6,
    EMessageTagQueryExprType_MAX                   = 7

};

// Enum  MessageTags.EMessageContainerMatchType
enum class EMessageContainerMatchType : uint8_t
{
    Any                                            = 0,
    All                                            = 1,
    EMessageContainerMatchType_MAX                 = 2

};

// Enum  MessageTags.EMessageTagMatchType
enum class EMessageTagMatchType : uint8_t
{
    Explicit                                       = 0,
    IncludeParentTags                              = 1,
    EMessageTagMatchType_MAX                       = 2

};

// Enum  MessageTags.EMessageTagSelectionType
enum class EMessageTagSelectionType : uint8_t
{
    None                                           = 0,
    NonRestrictedOnly                              = 1,
    RestrictedOnly                                 = 2,
    All                                            = 3,
    EMessageTagSelectionType_MAX                   = 4

};

// Enum  MessageTags.EMessageTagSourceType
enum class EMessageTagSourceType : uint8_t
{
    Native                                         = 0,
    DefaultTagList                                 = 1,
    TagList                                        = 2,
    RestrictedTagList                              = 3,
    DataTable                                      = 4,
    Invalid                                        = 5,
    EMessageTagSourceType_MAX                      = 6

};

// Enum  GPAIBase.EAIJobState
enum class EAIJobState : uint8_t
{
    EAIJobState_Idle                               = 0,
    EAIJobState_Finish                             = 1,
    EAIJobState_InProgress                         = 2,
    EAIJobState_MAX                                = 3

};

// Enum  GPAIBase.EAIJobType
enum class EAIJobType : uint8_t
{
    EAIJob_None                                    = 0,
    EAIJob_NormalAttack                            = 1,
    EAIJob_FindIdlePlayer                          = 2,
    EAIJob_Search                                  = 3,
    EAIJob_Patrol                                  = 4,
    EAIJob_Guard                                   = 5,
    EAIJob_Dash                                    = 6,
    EAIJob_Investigate                             = 7,
    EAIJob_GroupPatrol                             = 8,
    EAIJob_GroupRomytheus                          = 9,
    EAIJob_GroupBossEncounter                      = 10,
    EAIJob_MAX                                     = 11

};

// Enum  GPAIBase.EAIThreatAreaWeightPainter
enum class EAIThreatAreaWeightPainter : uint8_t
{
    EAIPAINTER_CONST                               = 0,
    EAIPAINTER_LINEAR_DISTANCE                     = 1,
    EAIPAINTER_MAX                                 = 2

};

// Enum  GPAIBase.EAIThreatAreaType
enum class EAIThreatAreaType : uint8_t
{
    EThreatArea_Static                             = 0,
    EThreatArea_Dynamic                            = 1,
    EThreatArea_MAX                                = 2

};

// Enum  GPAIBase.EAIThreatType
enum class EAIThreatType : uint8_t
{
    EThreatType_Default                            = 0,
    EThreatType_EyeSight                           = 1,
    EThreatType_Hurt                               = 2,
    EThreatType_HearSound                          = 3,
    EThreatType_AirHit                             = 4,
    EThreatType_MAX                                = 5

};

// Enum  GPAIBase.EGPSpecificBehaviorType
enum class EGPSpecificBehaviorType : uint8_t
{
    ENormal                                        = 0,
    EDefensive                                     = 1,
    EDistanceApart                                 = 2,
    EAgressive                                     = 3,
    ECarefully                                     = 4,
    ETestType1                                     = 5,
    ETestType2                                     = 6,
    EMAX_Valid                                     = 7,
    EGPSpecificBehaviorType_MAX                    = 8

};

// Enum  GPAIBase.ECoverPointCondition
enum class ECoverPointCondition : uint8_t
{
    ECover_None                                    = 0,
    ECover_Enter_Approaching                       = 1,
    ECover_Enter_PlayingEnterCoverMontage          = 2,
    ECover_Enter_InterruptedEnterCoverMontage      = 3,
    ECover_Enter_Complete                          = 4,
    ECover_MAX                                     = 5

};

// Enum  GPAIBase.EAIDensityDistanceType
enum class EAIDensityDistanceType : uint8_t
{
    ECheckDistType_2D                              = 0,
    ECheckDistType_3D                              = 1,
    ECheckDistType_2DSquare                        = 2,
    ECheckDistType_3DSquare                        = 3,
    ECheckDistType_MAX                             = 4

};

// Enum  GPAIBase.EAIDensityRatingType
enum class EAIDensityRatingType : uint8_t
{
    EDensityType_Intensity                         = 0,
    EDensityType_Sparsity                          = 1,
    EDensityType_MAX                               = 2

};

// Enum  GPAIBase.EAIDistanceType
enum class EAIDistanceType : uint8_t
{
    ECheckDistType_3D                              = 0,
    ECheckDistType_2D                              = 1,
    ECheckDistType_Z                               = 2,
    ECheckDistType_AbsoluteZ                       = 3,
    ECheckDistType_MAX                             = 4

};

// Enum  GPAIBase.EGPEnvTestPathTest
enum class EGPEnvTestPathTest : uint8_t
{
    PathExist                                      = 0,
    PathCost                                       = 1,
    PathLength                                     = 2,
    PathMinDistFromTheTarget                       = 3,
    EGPEnvTestPathTest_MAX                         = 4

};

// Enum  GPAIBase.EGPThreatRatingType
enum class EGPThreatRatingType : uint8_t
{
    EThreatRateType_Safe                           = 0,
    EThreatRateType_Danger                         = 1,
    EThreatRateType_MAX                            = 2

};

// Enum  GPAIBase.EAIVisibilityRatingType
enum class EAIVisibilityRatingType : uint8_t
{
    EVisRateType_Visible                           = 0,
    EVisRateType_Invisible                         = 1,
    EVisRateType_MAX                               = 2

};

// Enum  GPAIBase.EAIVisibilityCheckType
enum class EAIVisibilityCheckType : uint8_t
{
    EVisCheckType_FromTestToContext                = 0,
    EVisCheckType_FromContextToTest                = 1,
    EVisCheckType_MAX                              = 2

};

// Enum  GPAIBase.EGeneratorIncludeType
enum class EGeneratorIncludeType : uint8_t
{
    EPointInclude_RoundDiscreteOnly                = 0,
    EPointInclude_CoverOnly                        = 1,
    EPointInclude_Both                             = 2,
    EPointInclude_MAX                              = 3

};

// Enum  GPAIBase.ECoverOccupyState
enum class ECoverOccupyState : uint8_t
{
    ECoverOccupyState_None                         = 0,
    ECoverOccupyState_PreOccupy                    = 1,
    ECoverOccupyState_Occupied                     = 2,
    ECoverOccupyState_PostOccupy                   = 3,
    ECoverOccupyState_MAX                          = 4

};

// Enum  GPAIBase.ECoverType
enum class ECoverType : uint8_t
{
    ECT_None                                       = 0,
    ECT_Standing                                   = 1,
    ECT_StandingAndCrounching                      = 2,
    ECT_Crounching                                 = 3,
    ECST_MAX                                       = 4,
    ECoverType_MAX                                 = 5

};

// Enum  GPAIBase.ECoverShootType
enum class ECoverShootType : uint8_t
{
    ECST_None                                      = 0,
    ECST_StandingLeft                              = 1,
    ECST_StandingRight                             = 2,
    ECST_CrouchingRight                            = 3,
    ECST_CrouchingLeft                             = 4,
    ECST_CrouchingFront                            = 5,
    ECST_MAX                                       = 6

};

// Enum  BetterSpline.EParamCurveMode
enum class EParamCurveMode : uint8_t
{
    None                                           = 0,
    Curve                                          = 1,
    Linear                                         = 2,
    Constant                                       = 3,
    EParamCurveMode_MAX                            = 4

};

// Enum  CoreUObject.EInterpCurveMode
enum class EInterpCurveMode : uint8_t
{
    CIM_Linear                                     = 0,
    CIM_CurveAuto                                  = 1,
    CIM_Constant                                   = 2,
    CIM_CurveUser                                  = 3,
    CIM_CurveBreak                                 = 4,
    CIM_CurveAutoClamped                           = 5,
    CIM_MAX                                        = 6

};

// Enum  CoreUObject.ERangeBoundTypes
enum class ERangeBoundTypes : uint8_t
{
    Exclusive                                      = 0,
    Inclusive                                      = 1,
    Open                                           = 2,
    ERangeBoundTypes_MAX                           = 3

};

// Enum  CoreUObject.ELocalizedTextSourceCategory
enum class ELocalizedTextSourceCategory : uint8_t
{
    Game                                           = 0,
    Engine                                         = 1,
    Editor                                         = 2,
    ELocalizedTextSourceCategory_MAX               = 3

};

// Enum  CoreUObject.EAutomationEventType
enum class EAutomationEventType : uint8_t
{
    Info                                           = 0,
    Warning                                        = 1,
    Error                                          = 2,
    EAutomationEventType_MAX                       = 3

};

// Enum  SlateCore.ESlateBrushImageType
enum class ESlateBrushImageType : uint8_t
{
    NoImage                                        = 0,
    FullColor                                      = 1,
    Linear                                         = 2,
    ESlateBrushImageType_MAX                       = 3

};

// Enum  SlateCore.ESlateBrushMirrorType
enum class ESlateBrushMirrorType : uint8_t
{
    NoMirror                                       = 0,
    Horizontal                                     = 1,
    Vertical                                       = 2,
    Both                                           = 3,
    ESlateBrushMirrorType_MAX                      = 4

};

// Enum  SlateCore.ESlateBrushTileType
enum class ESlateBrushTileType : uint8_t
{
    NoTile                                         = 0,
    Horizontal                                     = 1,
    Vertical                                       = 2,
    Both                                           = 3,
    ESlateBrushTileType_MAX                        = 4

};

// Enum  SlateCore.ESlateBrushDrawType
enum class ESlateBrushDrawType : uint8_t
{
    NoDrawType                                     = 0,
    Box                                            = 1,
    Border                                         = 2,
    Image                                          = 3,
    ESlateBrushDrawType_MAX                        = 4

};

// Enum  SlateCore.ESlateColorStylingMode
enum class ESlateColorStylingMode : uint8_t
{
    UseColor_Specified                             = 0,
    UseColor_Specified_Link                        = 1,
    UseColor_Foreground                            = 2,
    UseColor_Foreground_Subdued                    = 3,
    UseColor_MAX                                   = 4

};

// Enum  UMG.ESlateAccessibleBehavior
enum class ESlateAccessibleBehavior : uint8_t
{
    NotAccessible                                  = 0,
    Auto                                           = 1,
    Summary                                        = 2,
    Custom                                         = 3,
    ToolTip                                        = 4,
    ESlateAccessibleBehavior_MAX                   = 5

};

// Enum  SlateCore.EUINavigation
enum class EUINavigation : uint8_t
{
    Left                                           = 0,
    Right                                          = 1,
    Up                                             = 2,
    Down                                           = 3,
    Next                                           = 4,
    Previous                                       = 5,
    Num                                            = 6,
    Invalid                                        = 7,
    EUINavigation_MAX                              = 8

};

// Enum  SlateCore.ECheckBoxState
enum class ECheckBoxState : uint8_t
{
    Unchecked                                      = 0,
    Checked                                        = 1,
    Undetermined                                   = 2,
    ECheckBoxState_MAX                             = 3

};

// Enum  SlateCore.EWidgetClipping
enum class EWidgetClipping : uint8_t
{
    Inherit                                        = 0,
    ClipToBounds                                   = 1,
    ClipToBoundsWithoutIntersecting                = 2,
    ClipToBoundsAlways                             = 3,
    OnDemand                                       = 4,
    EWidgetClipping_MAX                            = 5

};

// Enum  SlateCore.EMaterialStrategy
enum class EMaterialStrategy : uint8_t
{
    None                                           = 0,
    Inherite                                       = 1,
    EMaterialStrategy_MAX                          = 2

};

// Enum  CoreUObject.EMouseCursor
enum class EMouseCursor : uint8_t
{
    None                                           = 0,
    Default                                        = 1,
    TextEditBeam                                   = 2,
    ResizeLeftRight                                = 3,
    ResizeUpDown                                   = 4,
    ResizeSouthEast                                = 5,
    ResizeSouthWest                                = 6,
    CardinalCross                                  = 7,
    Crosshairs                                     = 8,
    Hand                                           = 9,
    GrabHand                                       = 10,
    GrabHandClosed                                 = 11,
    SlashedCircle                                  = 12,
    EyeDropper                                     = 13,
    Menu                                           = 14,
    Custom1                                        = 15,
    Custom2                                        = 16,
    Custom3                                        = 17,
    Custom4                                        = 18,
    Custom5                                        = 19,
    Custom6                                        = 20,
    Custom7                                        = 21,
    Custom8                                        = 22,
    Custom9                                        = 23,
    Custom10                                       = 24,
    EMouseCursor_MAX                               = 25

};

// Enum  SlateCore.EWidgetPixelSnapping
enum class EWidgetPixelSnapping : uint8_t
{
    Inherit                                        = 0,
    Disabled                                       = 1,
    SnapToPixel                                    = 2,
    EWidgetPixelSnapping_MAX                       = 3

};

// Enum  UMG.ESlateVisibility
enum class ESlateVisibility : uint8_t
{
    Visible                                        = 0,
    Collapsed                                      = 1,
    Hidden                                         = 2,
    HitTestInvisible                               = 3,
    HitTestSelfOnly                                = 4,
    SelfHitTestInvisible                           = 5,
    ESlateVisibility_MAX                           = 6

};

// Enum  SlateCore.EUINavigationRule
enum class EUINavigationRule : uint8_t
{
    Escape                                         = 0,
    Explicit                                       = 1,
    Wrap                                           = 2,
    Stop                                           = 3,
    Custom                                         = 4,
    CustomBoundary                                 = 5,
    Invalid                                        = 6,
    EUINavigationRule_MAX                          = 7

};

// Enum  SlateCore.ESlateGeometryMaskType
enum class ESlateGeometryMaskType : uint8_t
{
    None                                           = 0,
    Rectangle                                      = 1,
    Circle                                         = 2,
    ESlateGeometryMaskType_MAX                     = 3

};

// Enum  SlateCore.EFlowDirectionPreference
enum class EFlowDirectionPreference : uint8_t
{
    Inherit                                        = 0,
    Culture                                        = 1,
    LeftToRight                                    = 2,
    RightToLeft                                    = 3,
    EFlowDirectionPreference_MAX                   = 4

};

// Enum  UMG.EWidgetEnablePlatformFlags
enum class EWidgetEnablePlatformFlags : uint8_t
{
    None                                           = 0,
    Mobile                                         = 1,
    Window                                         = 2,
    XBox                                           = 4,
    PS                                             = 8,
    Consoles                                       = 12,
    ConsolesAndPC                                  = 14,
    All                                            = 3,
    EWidgetEnablePlatformFlags_MAX                 = 15

};

// Enum  UMG.EWidgetEnableQualityFlags
enum class EWidgetEnableQualityFlags : uint8_t
{
    None                                           = 0,
    High                                           = 8,
    Mid                                            = 12,
    Low                                            = 14,
    VeryLow                                        = 15,
    EWidgetEnableQualityFlags_MAX                  = 16

};

// Enum  Engine.ETextGender
enum class ETextGender : uint8_t
{
    Masculine                                      = 0,
    Feminine                                       = 1,
    Neuter                                         = 2,
    ETextGender_MAX                                = 3

};

// Enum  Engine.EFormatArgumentType
enum class EFormatArgumentType : uint8_t
{
    Int                                            = 0,
    UInt                                           = 1,
    Float                                          = 2,
    Double                                         = 3,
    Text                                           = 4,
    Gender                                         = 5,
    EFormatArgumentType_MAX                        = 6

};

// Enum  InputCore.ETouchIndex
enum class ETouchIndex : uint8_t
{
    Touch1                                         = 0,
    Touch2                                         = 1,
    Touch3                                         = 2,
    Touch4                                         = 3,
    Touch5                                         = 4,
    Touch6                                         = 5,
    Touch7                                         = 6,
    Touch8                                         = 7,
    Touch9                                         = 8,
    Touch10                                        = 9,
    CursorPointerIndex                             = 10,
    MAX_TOUCHES                                    = 11,
    ETouchIndex_MAX                                = 12

};

// Enum  Engine.EEndPlayReason
enum class EEndPlayReason : uint8_t
{
    Destroyed                                      = 0,
    LevelTransition                                = 1,
    EndPlayInEditor                                = 2,
    RemovedFromWorld                               = 3,
    Quit                                           = 4,
    EEndPlayReason_MAX                             = 5

};

// Enum  Engine.ETickingGroup
enum class ETickingGroup : uint8_t
{
    TG_PrePhysics                                  = 0,
    TG_StartPhysics                                = 1,
    TG_DuringPhysics                               = 2,
    TG_EndPhysics                                  = 3,
    TG_PostPhysics                                 = 4,
    TG_PostUpdateWork                              = 5,
    TG_LastDemotable                               = 6,
    TG_NewlySpawned                                = 7,
    TG_MAX                                         = 8

};

// Enum  Engine.EComponentCreationMethod
enum class EComponentCreationMethod : uint8_t
{
    Native                                         = 0,
    SimpleConstructionScript                       = 1,
    UserConstructionScript                         = 2,
    Instance                                       = 3,
    EComponentCreationMethod_MAX                   = 4

};

// Enum  Engine.EComponentReplicationFlags
enum class EComponentReplicationFlags : uint8_t
{
    Rep_Always                                     = 0,
    Rep_OwnerOnly                                  = 1,
    Rep_SimulateOnly                               = 4,
    Rep_ToBeObservedOnly                           = 8,
    Rep_OwnerAndSimulate                           = 16,
    Rep_OwnerAndOB                                 = 32,
    Rep_SimulteAndOB                               = 64,
    Rep_MAX                                        = 65

};

// Enum  Engine.ETemperatureSeverityType
enum class ETemperatureSeverityType : uint8_t
{
    Unknown                                        = 0,
    Good                                           = 1,
    Bad                                            = 2,
    Serious                                        = 3,
    Critical                                       = 4,
    NumSeverities                                  = 5,
    ETemperatureSeverityType_MAX                   = 6

};

// Enum  Engine.EPlaneConstraintAxisSetting
enum class EPlaneConstraintAxisSetting : uint8_t
{
    Custom                                         = 0,
    X                                              = 1,
    Y                                              = 2,
    Z                                              = 3,
    UseGlobalPhysicsSetting                        = 4,
    EPlaneConstraintAxisSetting_MAX                = 5

};

// Enum  Engine.EInterpToBehaviourType
enum class EInterpToBehaviourType : uint8_t
{
    OneShot                                        = 0,
    OneShot_Reverse                                = 1,
    Loop_Reset                                     = 2,
    PingPong                                       = 3,
    EInterpToBehaviourType_MAX                     = 4

};

// Enum  Engine.ETeleportType
enum class ETeleportType : uint8_t
{
    None                                           = 0,
    TeleportPhysics                                = 1,
    ResetPhysics                                   = 2,
    SkipSkeletalMeshUpdateChildComponents          = 4,
    ETeleportType_MAX                              = 5

};

// Enum  Engine.EPlatformInterfaceDataType
enum class EPlatformInterfaceDataType : uint8_t
{
    PIDT_None                                      = 0,
    PIDT_Int                                       = 1,
    PIDT_Float                                     = 2,
    PIDT_String                                    = 3,
    PIDT_Object                                    = 4,
    PIDT_Custom                                    = 5,
    PIDT_MAX                                       = 6

};

// Enum  Engine.EMovementMode
enum class EMovementMode : uint8_t
{
    MOVE_None                                      = 0,
    MOVE_Walking                                   = 1,
    MOVE_NavWalking                                = 2,
    MOVE_Falling                                   = 3,
    MOVE_Swimming                                  = 4,
    MOVE_Flying                                    = 5,
    MOVE_Custom                                    = 6,
    MOVE_MAX                                       = 7

};

// Enum  Engine.ENetworkFailure
enum class ENetworkFailure : uint8_t
{
    NetDriverAlreadyExists                         = 0,
    NetDriverCreateFailure                         = 1,
    NetDriverListenFailure                         = 2,
    ConnectionLost                                 = 3,
    ConnectionTimeout                              = 4,
    FailureReceived                                = 5,
    OutdatedClient                                 = 6,
    OutdatedServer                                 = 7,
    PendingConnectionFailure                       = 8,
    NetGuidMismatch                                = 9,
    NetChecksumMismatch                            = 10,
    NonExistantPackage                             = 11,
    CorruptedPacket                                = 12,
    ENetworkFailure_MAX                            = 13

};

// Enum  Engine.ETravelFailure
enum class ETravelFailure : uint8_t
{
    NoLevel                                        = 0,
    LoadMapFailure                                 = 1,
    InvalidURL                                     = 2,
    PackageMissing                                 = 3,
    PackageVersion                                 = 4,
    NoDownload                                     = 5,
    TravelFailure                                  = 6,
    CheatCommands                                  = 7,
    PendingNetGameCreateFailure                    = 8,
    CloudSaveFailure                               = 9,
    ServerTravelFailure                            = 10,
    ClientTravelFailure                            = 11,
    ETravelFailure_MAX                             = 12

};

// Enum  Engine.EScreenOrientation
enum class EScreenOrientation : uint8_t
{
    Unknown                                        = 0,
    Portrait                                       = 1,
    PortraitUpsideDown                             = 2,
    LandscapeLeft                                  = 3,
    LandscapeRight                                 = 4,
    FaceUp                                         = 5,
    FaceDown                                       = 6,
    EScreenOrientation_MAX                         = 7

};

// Enum  Engine.EApplicationState
enum class EApplicationState : uint8_t
{
    Unknown                                        = 0,
    Inactive                                       = 1,
    Background                                     = 2,
    Active                                         = 3,
    EApplicationState_MAX                          = 4

};

// Enum  Engine.EObjectTypeQuery
enum class EObjectTypeQuery : uint8_t
{
    ObjectTypeQuery1                               = 0,
    ObjectTypeQuery2                               = 1,
    ObjectTypeQuery3                               = 2,
    ObjectTypeQuery4                               = 3,
    ObjectTypeQuery5                               = 4,
    ObjectTypeQuery6                               = 5,
    ObjectTypeQuery7                               = 6,
    ObjectTypeQuery8                               = 7,
    ObjectTypeQuery9                               = 8,
    ObjectTypeQuery10                              = 9,
    ObjectTypeQuery11                              = 10,
    ObjectTypeQuery12                              = 11,
    ObjectTypeQuery13                              = 12,
    ObjectTypeQuery14                              = 13,
    ObjectTypeQuery15                              = 14,
    ObjectTypeQuery16                              = 15,
    ObjectTypeQuery17                              = 16,
    ObjectTypeQuery18                              = 17,
    ObjectTypeQuery19                              = 18,
    ObjectTypeQuery20                              = 19,
    ObjectTypeQuery21                              = 20,
    ObjectTypeQuery22                              = 21,
    ObjectTypeQuery23                              = 22,
    ObjectTypeQuery24                              = 23,
    ObjectTypeQuery25                              = 24,
    ObjectTypeQuery26                              = 25,
    ObjectTypeQuery27                              = 26,
    ObjectTypeQuery28                              = 27,
    ObjectTypeQuery29                              = 28,
    ObjectTypeQuery30                              = 29,
    ObjectTypeQuery31                              = 30,
    ObjectTypeQuery32                              = 31,
    ObjectTypeQuery_MAX                            = 32,
    EObjectTypeQuery_MAX                           = 33

};

// Enum  Engine.EDrawDebugTrace
enum class EDrawDebugTrace : uint8_t
{
    None                                           = 0,
    ForOneFrame                                    = 1,
    ForDuration                                    = 2,
    Persistent                                     = 3,
    EDrawDebugTrace_MAX                            = 4

};

// Enum  Engine.ETraceTypeQuery
enum class ETraceTypeQuery : uint8_t
{
    TraceTypeQuery1                                = 0,
    TraceTypeQuery2                                = 1,
    TraceTypeQuery3                                = 2,
    TraceTypeQuery4                                = 3,
    TraceTypeQuery5                                = 4,
    TraceTypeQuery6                                = 5,
    TraceTypeQuery7                                = 6,
    TraceTypeQuery8                                = 7,
    TraceTypeQuery9                                = 8,
    TraceTypeQuery10                               = 9,
    TraceTypeQuery11                               = 10,
    TraceTypeQuery12                               = 11,
    TraceTypeQuery13                               = 12,
    TraceTypeQuery14                               = 13,
    TraceTypeQuery15                               = 14,
    TraceTypeQuery16                               = 15,
    TraceTypeQuery17                               = 16,
    TraceTypeQuery18                               = 17,
    TraceTypeQuery19                               = 18,
    TraceTypeQuery20                               = 19,
    TraceTypeQuery21                               = 20,
    TraceTypeQuery22                               = 21,
    TraceTypeQuery23                               = 22,
    TraceTypeQuery24                               = 23,
    TraceTypeQuery25                               = 24,
    TraceTypeQuery26                               = 25,
    TraceTypeQuery27                               = 26,
    TraceTypeQuery28                               = 27,
    TraceTypeQuery29                               = 28,
    TraceTypeQuery30                               = 29,
    TraceTypeQuery31                               = 30,
    TraceTypeQuery32                               = 31,
    TraceTypeQuery_MAX                             = 32,
    ETraceTypeQuery_MAX                            = 33

};

// Enum  Engine.EMoveComponentAction
enum class EMoveComponentAction : uint8_t
{
    Move                                           = 0,
    Stop                                           = 1,
    Return                                         = 2,
    EMoveComponentAction_MAX                       = 3

};

// Enum  Engine.EQuitPreference
enum class EQuitPreference : uint8_t
{
    Quit                                           = 0,
    Background                                     = 1,
    EQuitPreference_MAX                            = 2

};

// Enum  SlateCore.EColorVisionDeficiency
enum class EColorVisionDeficiency : uint8_t
{
    NormalVision                                   = 0,
    Deuteranope                                    = 1,
    Protanope                                      = 2,
    Tritanope                                      = 3,
    EColorVisionDeficiency_MAX                     = 4

};

// Enum  Engine.EMouseLockMode
enum class EMouseLockMode : uint8_t
{
    DoNotLock                                      = 0,
    LockOnCapture                                  = 1,
    LockAlways                                     = 2,
    LockInFullscreen                               = 3,
    EMouseLockMode_MAX                             = 4

};

// Enum  Engine.EWindowTitleBarMode
enum class EWindowTitleBarMode : uint8_t
{
    Overlay                                        = 0,
    VerticalBox                                    = 1,
    EWindowTitleBarMode_MAX                        = 2

};

// Enum  SlateCore.ESelectInfo
enum class ESelectInfo : uint8_t
{
    OnKeyPress                                     = 0,
    OnNavigation                                   = 1,
    OnMouseClick                                   = 2,
    Direct                                         = 3,
    ESelectInfo_MAX                                = 4

};

// Enum  SlateCore.ETextCommit
enum class ETextCommit : uint8_t
{
    Default                                        = 0,
    OnEnter                                        = 1,
    OnUserMovedFocus                               = 2,
    OnCleared                                      = 3,
    ETextCommit_MAX                                = 4

};

// Enum  Slate.ECustomTextFlowPolicy
enum class ECustomTextFlowPolicy : uint8_t
{
    DefaultTextFlow                                = 0,
    DisableTextFlow                                = 1,
    TextFlowForceLTR                               = 2,
    TextFlowForceRTL                               = 3,
    ECustomTextFlowPolicy_MAX                      = 4

};

// Enum  Slate.ETextJustify
enum class ETextJustify : uint8_t
{
    Left                                           = 0,
    Center                                         = 1,
    Right                                          = 2,
    ETextJustify_MAX                               = 3

};

// Enum  Slate.ETextFlowDirection
enum class ETextFlowDirection : uint8_t
{
    Auto                                           = 0,
    LeftToRight                                    = 1,
    RightToLeft                                    = 2,
    ETextFlowDirection_MAX                         = 3

};

// Enum  SlateCore.ETextShapingMethod
enum class ETextShapingMethod : uint8_t
{
    Auto                                           = 0,
    KerningOnly                                    = 1,
    FullShaping                                    = 2,
    ETextShapingMethod_MAX                         = 3

};

// Enum  Slate.EVirtualKeyboardDismissAction
enum class EVirtualKeyboardDismissAction : uint8_t
{
    TextChangeOnDismiss                            = 0,
    TextCommitOnAccept                             = 1,
    TextCommitOnDismiss                            = 2,
    EVirtualKeyboardDismissAction_MAX              = 3

};

// Enum  UMG.EVirtualKeyboardType
enum class EVirtualKeyboardType : uint8_t
{
    Default                                        = 0,
    Number                                         = 1,
    Web                                            = 2,
    Email                                          = 3,
    Password                                       = 4,
    AlphaNumeric                                   = 5,
    EVirtualKeyboardType_MAX                       = 6

};

// Enum  Slate.EVirtualKeyboardTrigger
enum class EVirtualKeyboardTrigger : uint8_t
{
    OnFocusByPointer                               = 0,
    OnAllFocusEvents                               = 1,
    EVirtualKeyboardTrigger_MAX                    = 2

};

// Enum  SlateCore.ETextOverflowPolicy
enum class ETextOverflowPolicy : uint8_t
{
    Default                                        = 0,
    Ellipsis                                       = 1,
    MultilineEllipsis                              = 2,
    SingleWordsEllipsis                            = 3,
    ETextOverflowPolicy_MAX                        = 4

};

// Enum  Slate.ETextVerticalJustify
enum class ETextVerticalJustify : uint8_t
{
    Top                                            = 0,
    Middle                                         = 1,
    Bottom                                         = 2,
    ETextVerticalJustify_MAX                       = 3

};

// Enum  Slate.ETextWrappingPolicy
enum class ETextWrappingPolicy : uint8_t
{
    DefaultWrapping                                = 0,
    AllowPerCharacterWrapping                      = 1,
    ETextWrappingPolicy_MAX                        = 2

};

// Enum  LAI.ELuaLogCategory
enum class ELuaLogCategory : uint8_t
{
    LuaTemp                                        = 0,
    LuaSAccount                                    = 1,
    LuaSActivity                                   = 2,
    LuaSArmedForce                                 = 3,
    LuaSAuction                                    = 4,
    LuaSBlackSite                                  = 5,
    LuaSChat                                       = 6,
    LuaSCollection                                 = 7,
    LuaSComparePrice                               = 8,
    LuaSCurrency                                   = 9,
    LuaSDataTableHotfix                            = 10,
    LuaSEquipment                                  = 11,
    LuaSFacePop                                    = 12,
    LuaSFriend                                     = 13,
    LuaSFrontEndChat                               = 14,
    LuaSGameMode                                   = 15,
    LuaSGM                                         = 16,
    LuaSGrowthRoad                                 = 17,
    LuaSGuide                                      = 18,
    LuaSGunsmith                                   = 19,
    LuaSHero                                       = 20,
    LuaSHope                                       = 21,
    LuaSInsurance                                  = 22,
    LuaSInventory                                  = 23,
    LuaSIrisRaid                                   = 24,
    LuaSIrisSafeHouse                              = 25,
    LuaSLitePack                                   = 26,
    LuaSLocalize                                   = 27,
    LuaSLogUpload                                  = 28,
    LuaSLooting                                    = 29,
    LuaSMail                                       = 30,
    LuaSMatch                                      = 31,
    LuaSMidas                                      = 32,
    LuaSModeHall                                   = 33,
    LuaSModuleSwitcher                             = 34,
    LuaSModuleUnlock                               = 35,
    LuaSPersonal                                   = 36,
    LuaSPreset                                     = 37,
    LuaSProperty                                   = 38,
    LuaSPVEEntry                                   = 39,
    LuaSPVESettlement                              = 40,
    LuaSQuest                                      = 41,
    LuaSQuickPatch                                 = 42,
    LuaSRanking                                    = 43,
    LuaSRecruit                                    = 44,
    LuaSReport                                     = 45,
    LuaSReward                                     = 46,
    LuaSRoleInfo                                   = 47,
    LuaSRoom                                       = 48,
    LuaSScav                                       = 49,
    LuaSSDKInfo                                    = 50,
    LuaSSeason                                     = 51,
    LuaSSettlement                                 = 52,
    LuaSShopMystery                                = 53,
    LuaSShop                                       = 54,
    LuaSShopStation                                = 55,
    LuaSSocial                                     = 56,
    LuaSStore                                      = 57,
    LuaSSystemSetting                              = 58,
    LuaSTeam                                       = 59,
    LuaSTipsRecord                                 = 60,
    LuaSVehicle                                    = 61,
    LuaSWeaponAssembly                             = 62,
    LuaSWorldEntrance                              = 63,
    LuaMACE                                        = 64,
    LuaMActivity                                   = 65,
    LuaMArchive                                    = 66,
    LuaMArmedForce                                 = 67,
    LuaMAuction                                    = 68,
    LuaMBattlefieldEntry                           = 69,
    LuaMBlackSite                                  = 70,
    LuaMChat                                       = 71,
    LuaMCollection                                 = 72,
    LuaMCommonBar                                  = 73,
    LuaMCommonTips                                 = 74,
    LuaMCommonUILibrary                            = 75,
    LuaMCommonWidget                               = 76,
    LuaMComparePrice                               = 77,
    LuaMCurrency                                   = 78,
    LuaMDiscovery                                  = 79,
    LuaMExample                                    = 80,
    LuaMFacePop                                    = 81,
    LuaMFastEquip                                  = 82,
    LuaMFriend                                     = 83,
    LuaMGamelet                                    = 84,
    LuaMGameMode                                   = 85,
    LuaMGCloudSDK                                  = 86,
    LuaMGM                                         = 87,
    LuaMGPM                                        = 88,
    LuaMGuide                                      = 89,
    LuaMGunsmith                                   = 90,
    LuaMGVoice                                     = 91,
    LuaMHall                                       = 92,
    LuaMHero                                       = 93,
    LuaMHotUpdate                                  = 94,
    LuaMHUD                                        = 95,
    LuaMHUDToolBar                                 = 96,
    LuaMInGame                                     = 97,
    LuaMInsurance                                  = 98,
    LuaMInventory                                  = 99,
    LuaMIrisRaid                                   = 100,
    LuaMIrisSafeHouse                              = 101,
    LuaMItemDetail                                 = 102,
    LuaMJump                                       = 103,
    LuaMLBS                                        = 104,
    LuaMLitePackage                                = 105,
    LuaMLobbyBHD                                   = 106,
    LuaMLobbyDisplay                               = 107,
    LuaMLogin                                      = 108,
    LuaMLooting                                    = 109,
    LuaMMail                                       = 110,
    LuaMMap                                        = 111,
    LuaMMatch                                      = 112,
    LuaMMidas                                      = 113,
    LuaM                                           = 114,
    LuaMParamAdjust                                = 115,
    LuaMPostLaunch                                 = 116,
    LuaMPreload                                    = 117,
    LuaMPreparation                                = 118,
    LuaMPVESettlement                              = 119,
    LuaMQuest                                      = 120,
    LuaMRanking                                    = 121,
    LuaMReconnect                                  = 122,
    LuaMRecruit                                    = 123,
    LuaMReddot                                     = 124,
    LuaMReddotTrie                                 = 125,
    LuaMReport                                     = 126,
    LuaMReward                                     = 127,
    LuaMRoleInfo                                   = 128,
    LuaMRoom                                       = 129,
    LuaMRuntimeDebug                               = 130,
    LuaMSandBoxMap                                 = 131,
    LuaMSettlement                                 = 132,
    LuaMShop                                       = 133,
    LuaMSocial                                     = 134,
    LuaMSOLHealthSystem                            = 135,
    LuaMSOL                                        = 136,
    LuaMStore                                      = 137,
    LuaMStoryDialog                                = 138,
    LuaMSystemSetting                              = 139,
    LuaMTeam                                       = 140,
    LuaMTgpa                                       = 141,
    LuaMTransition                                 = 142,
    LuaMTss                                        = 143,
    LuaMUISceneObject                              = 144,
    LuaMVehicle                                    = 145,
    LuaMVersionUpdate                              = 146,
    LuaMWeaponAssembly                             = 147,
    LuaMWeaponDebugView                            = 148,
    LuaMWeaponGameplay                             = 149,
    LuaSLiveRadio                                  = 150,
    LuaSMarket                                     = 151,
    LuaMLiveRadio                                  = 152,
    LuaMMarket                                     = 153,
    LuaMRange                                      = 154,
    LuaFManager                                    = 155,
    LuaSBattlePass                                 = 156,
    LuaMAchievement                                = 157,
    LuaMBattlePass                                 = 158,
    LuaSBHD                                        = 159,
    LuaSExperienceData                             = 160,
    LuaSMoss                                       = 161,
    LuaSPay                                        = 162,
    LuaSTournament                                 = 163,
    LuaMCDNIcon                                    = 164,
    LuaMCustomerServices                           = 165,
    LuaMDeepLink                                   = 166,
    LuaMInvite                                     = 167,
    LuaMMicroOfficialWeb                           = 168,
    LuaMMoss                                       = 169,
    LuaMOpActMinorProtection                       = 170,
    LuaMOpActQQBonusCenter                         = 171,
    LuaMOpActQQChannel                             = 172,
    LuaMOpActQQGameHub                             = 173,
    LuaMOpActQQPrivilege                           = 174,
    LuaMOpActWeChatGameHub                         = 175,
    LuaMOpActWeChatPrivilege                       = 176,
    LuaMOpActWeChatWelfare                         = 177,
    LuaMPay                                        = 178,
    LuaMPermission                                 = 179,
    LuaMShare                                      = 180,
    LuaMTournament                                 = 181,
    LuaSPlayerReturn                               = 182,
    LuaMOpActWeChatVideoChannel                    = 183,
    LuaMOpActXYClub                                = 184,
    LuaMPlayerReturn                               = 185,
    LuaSArmory                                     = 186,
    LuaSItemUnlockPath                             = 187,
    LuaSJump                                       = 188,
    LuaSRankingList                                = 189,
    LuaSRecovery                                   = 190,
    LuaSReputation                                 = 191,
    LuaSSubscribe                                  = 192,
    LuaMArmory                                     = 193,
    LuaMDFDevops                                   = 194,
    LuaMDFOnlineService                            = 195,
    LuaMDiscord                                    = 196,
    LuaMLocalizeFont                               = 197,
    LuaMNetworkControl                             = 198,
    LuaMOpActPerks                                 = 199,
    LuaMRankingList                                = 200,
    LuaMRecovery                                   = 201,
    LuaMReputation                                 = 202,
    LuaMSubscribe                                  = 203,
    LuaMWeGameSDK                                  = 204,
    LuaSCollectionRoom                             = 205,
    LuaSGamelet                                    = 206,
    LuaMAccountBind                                = 207,
    LuaMCollectionRoom                             = 208,
    LuaMExpansionPackCoordinator                   = 209,
    LuaMMusicPlayer                                = 210,
    LuaMNetworkBusiness                            = 211,
    LuaMPopupManager                               = 212,
    LuaMPopupSequencer                             = 213,
    LuaMImGui                                      = 214,
    LuaMImGuiPanel                                 = 215,
    LuaMOpActXunYouClub                            = 216,
    ELuaLogCategory_MAX                            = 217

};

// Enum  slua_unreal.ELuaDelegateType
enum class ELuaDelegateType : uint8_t
{
    EDefault                                       = 0,
    ELuaDelegate                                   = 1,
    ELuaMultiDelegate                              = 2,
    ELuaDelegateType_MAX                           = 3

};

// Enum  slua_unreal.EPropertyClass
enum class EPropertyClass : uint8_t
{
    Byte                                           = 0,
    Int8                                           = 1,
    Int16                                          = 2,
    Int                                            = 3,
    Int64                                          = 4,
    UInt16                                         = 5,
    UInt32                                         = 6,
    UInt64                                         = 7,
    UnsizedInt                                     = 8,
    UnsizedUInt                                    = 9,
    Float                                          = 10,
    Double                                         = 11,
    Bool                                           = 12,
    SoftClass                                      = 13,
    WeakObject                                     = 14,
    LazyObject                                     = 15,
    SoftObject                                     = 16,
    Class                                          = 17,
    Object                                         = 18,
    Interface                                      = 19,
    Name                                           = 20,
    Str                                            = 21,
    Array                                          = 22,
    Map                                            = 23,
    Set                                            = 24,
    Struct                                         = 25,
    Delegate                                       = 26,
    MulticastDelegate                              = 27,
    Text                                           = 28,
    Enum                                           = 29,
    EPropertyClass_MAX                             = 30

};

// Enum  NZLuaRuntime.ELuaArgumentType
enum class ELuaArgumentType : uint8_t
{
    None                                           = 0,
    Boolean                                        = 1,
    Int                                            = 2,
    Float                                          = 3,
    String                                         = 4,
    Object                                         = 5,
    ELuaArgumentType_MAX                           = 6

};

// Enum  SMSystem.ESMNetworkConfigurationType
enum class ESMNetworkConfigurationType : uint8_t
{
    SM_Client                                      = 0,
    SM_Server                                      = 1,
    SM_ClientAndServer                             = 2,
    SM_MAX                                         = 3

};

// Enum  SMSystem.ESMTransactionType
enum class ESMTransactionType : uint8_t
{
    SM_Transition                                  = 0,
    SM_State                                       = 1,
    SM_MAX                                         = 2

};

// Enum  SMSystem.ESMConditionalEvaluationType
enum class ESMConditionalEvaluationType : uint8_t
{
    SM_Graph                                       = 0,
    SM_NodeInstance                                = 1,
    SM_AlwaysFalse                                 = 2,
    SM_AlwaysTrue                                  = 3,
    SM_MAX                                         = 4

};

// Enum  KantanChartsSlate.EChartAxisPosition
enum class EChartAxisPosition : uint8_t
{
    LeftBottom                                     = 0,
    RightTop                                       = 1,
    Floating                                       = 2,
    EChartAxisPosition_MAX                         = 3

};

// Enum  KantanChartsSlate.EKantanDataPointSize
enum class EKantanDataPointSize : uint8_t
{
    Small                                          = 0,
    Medium                                         = 1,
    Large                                          = 2,
    EKantanDataPointSize_MAX                       = 3

};

// Enum  KantanChartsSlate.ECartesianRangeBoundType
enum class ECartesianRangeBoundType : uint8_t
{
    FixedValue                                     = 0,
    FitToData                                      = 1,
    FitToDataRounded                               = 2,
    ECartesianRangeBoundType_MAX                   = 3

};

// Enum  KantanChartsSlate.ECartesianScalingType
enum class ECartesianScalingType : uint8_t
{
    FixedScale                                     = 0,
    FixedRange                                     = 1,
    ECartesianScalingType_MAX                      = 2

};

// Enum  KantanChartsSlate.EKantanBarValueExtents
enum class EKantanBarValueExtents : uint8_t
{
    NoValueLines                                   = 0,
    ZeroLineOnly                                   = 1,
    ZeroAndMaxLines                                = 2,
    EKantanBarValueExtents_MAX                     = 3

};

// Enum  KantanChartsSlate.EKantanBarLabelPosition
enum class EKantanBarLabelPosition : uint8_t
{
    NoLabels                                       = 0,
    Standard                                       = 1,
    Overlaid                                       = 2,
    EKantanBarLabelPosition_MAX                    = 3

};

// Enum  KantanChartsSlate.EKantanBarChartOrientation
enum class EKantanBarChartOrientation : uint8_t
{
    Vertical                                       = 0,
    Horizontal                                     = 1,
    EKantanBarChartOrientation_MAX                 = 2

};

// Enum  GeneBatch.EGeneAtlasObjectiveType
enum class EGeneAtlasObjectiveType : uint8_t
{
    TotalAtlasNum                                  = 0,
    TotalAtlasNetResolution                        = 1,
    AllObjectiveNum                                = 2,
    TotalAtlasResolution                           = -1,
    TotalDrawSectionNum                            = -1,
    EGeneAtlasObjectiveType_MAX                    = 3

};

// Enum  GeneBatch.EGeneBatchObjectiveType
enum class EGeneBatchObjectiveType : uint8_t
{
    TotalMeshVertexCount                           = 0,
    TotalDrawCallNum                               = 1,
    TotalDrawInstancingNum                         = 2,
    TotalBoundingBoxVolume                         = 3,
    AllObjectiveNum                                = 4,
    TotalAtlasResolution                           = -1,
    EGeneBatchObjectiveType_MAX                    = 5

};

// Enum  GeneBatch.EGeneBatchWhyNotBatchDetailType
enum class EGeneBatchWhyNotBatchDetailType : uint8_t
{
    Batchable                                      = 0,
    NumericDataCount                               = 1,
    AtlasResolution                                = 2,
    RegionGroupCount                               = 3,
    SourceMaterialCount                            = 4,
    AtlasMaterial                                  = 5,
    MergeMaterialKey                               = 6,
    ISMCluster                                     = 7,
    ComponentMergeKey                              = 8,
    MeshMergeKey                                   = 9,
    ComponentKey                                   = 10,
    VertexOrBounds                                 = 11,
    Root                                           = 12,
    POI                                            = 13,
    NotBatchable                                   = 14,
    EGeneBatchWhyNotBatchDetailType_MAX            = 15

};

// Enum  GeneBatch.EGeneBatchWhyNotBatchReason
enum class EGeneBatchWhyNotBatchReason : uint8_t
{
    Unknown                                        = 0,
    Config                                         = 1,
    LevelKey                                       = 2,
    ActorResource                                  = 3,
    MeshBuildData                                  = 4,
    StaticMeshTag                                  = 5,
    CastShadow                                     = 6,
    Grid                                           = 7,
    AtlasMap                                       = 8,
    AtlasChannelUsage                              = 9,
    PreferNot                                      = 10,
    BaseMaterial                                   = 11,
    MaterialParameter                              = 12,
    ChannelUsage                                   = 13,
    MaterialInstanceCount                          = 14,
    NumericParameterCount                          = 15,
    Bound                                          = 16,
    VertexCount                                    = 17,
    CanMerge                                       = 18,
    NUM_REASONS                                    = 19,
    EGeneBatchWhyNotBatchReason_MAX                = 20

};

// Enum  GeneBatch.EMaterialParameterClusterSaveMode
enum class EMaterialParameterClusterSaveMode : uint8_t
{
    Median                                         = 0,
    ResetToDefault                                 = 1,
    EMaterialParameterClusterSaveMode_MAX          = 2

};

// Enum  GeneBatch.EMaterialParameterClusterMode
enum class EMaterialParameterClusterMode : uint8_t
{
    None                                           = 0,
    Cluster                                        = 1,
    ResetToDefault                                 = 2,
    EMaterialParameterClusterMode_MAX              = 3

};

// Enum  GeneBatch.EMaterialParameterDataType
enum class EMaterialParameterDataType : uint8_t
{
    Unknown                                        = 0,
    Scalar                                         = 1,
    Vector                                         = 2,
    Texture                                        = 3,
    StaticSwitch                                   = 4,
    BasePropertyOverrides                          = 5,
    Font                                           = 6,
    StaticComponentMask                            = 7,
    MaterialLayers                                 = 8,
    EMaterialParameterDataType_MAX                 = 9

};

// Enum  GeneBatch.EGeneBatchBakeMethod
enum class EGeneBatchBakeMethod : uint8_t
{
    Unknown                                        = 0,
    RuntimeBake                                    = 1,
    EditorBake                                     = 2,
    EGeneBatchBakeMethod_MAX                       = 3

};

// Enum  GeneBatch.EGeneJointBatchObjectiveType
enum class EGeneJointBatchObjectiveType : uint8_t
{
    TotalMeshVertexCount                           = 0,
    TotalDrawCallCount                             = 1,
    TotalDrawInstancingCount                       = 2,
    TotalBoundingBoxVolume                         = 3,
    TotalAtlasMapCount                             = 4,
    AllObjectiveNum                                = 5,
    EGeneJointBatchObjectiveType_MAX               = 6

};

// Enum  GeneBatch.EGeneUnionBatchObjectiveType
enum class EGeneUnionBatchObjectiveType : uint8_t
{
    TotalMeshVertexCount                           = 0,
    TotalDrawCallCount                             = 1,
    TotalDrawInstancingCount                       = 2,
    TotalBoundingBoxVolume                         = 3,
    TotalAtlasMapCount                             = 4,
    AllObjectiveNum                                = 5,
    EGeneUnionBatchObjectiveType_MAX               = 6

};

// Enum  CoreUObject.EPixelFormat
enum class EPixelFormat : uint8_t
{
    PF_Unknown                                     = 0,
    PF_A32B32G32R32F                               = 1,
    PF_B8G8R8A8                                    = 2,
    PF_G8                                          = 3,
    PF_G16                                         = 4,
    PF_DXT1                                        = 5,
    PF_DXT3                                        = 6,
    PF_DXT5                                        = 7,
    PF_UYVY                                        = 8,
    PF_FloatRGB                                    = 9,
    PF_FloatRGBA                                   = 10,
    PF_DepthStencil                                = 11,
    PF_ShadowDepth                                 = 12,
    PF_R32_FLOAT                                   = 13,
    PF_G16R16                                      = 14,
    PF_G16R16F                                     = 15,
    PF_G16R16F_FILTER                              = 16,
    PF_G32R32F                                     = 17,
    PF_A2B10G10R10                                 = 18,
    PF_A16B16G16R16                                = 19,
    PF_D24                                         = 20,
    PF_R16F                                        = 21,
    PF_R16F_FILTER                                 = 22,
    PF_BC5                                         = 23,
    PF_V8U8                                        = 24,
    PF_A1                                          = 25,
    PF_FloatR11G11B10                              = 26,
    PF_A8                                          = 27,
    PF_R32_UINT                                    = 28,
    PF_R32_SINT                                    = 29,
    PF_PVRTC2                                      = 30,
    PF_PVRTC4                                      = 31,
    PF_R16_UINT                                    = 32,
    PF_R16_SINT                                    = 33,
    PF_R16G16B16A16_UINT                           = 34,
    PF_R16G16B16A16_SINT                           = 35,
    PF_R5G6B5_UNORM                                = 36,
    PF_R8G8B8A8                                    = 37,
    PF_A8R8G8B8                                    = 38,
    PF_BC4                                         = 39,
    PF_R8G8                                        = 40,
    PF_ATC_RGB                                     = 41,
    PF_ATC_RGBA_E                                  = 42,
    PF_ATC_RGBA_I                                  = 43,
    PF_X24_G8                                      = 44,
    PF_ETC1                                        = 45,
    PF_ETC2_RGB                                    = 46,
    PF_ETC2_RGBA                                   = 47,
    PF_R32G32B32A32_UINT                           = 48,
    PF_R16G16_UINT                                 = 49,
    PF_ASTC_4x4                                    = 50,
    PF_ASTC_5x5                                    = 70,
    PF_ASTC_6x6                                    = 51,
    PF_ASTC_8x8                                    = 52,
    PF_ASTC_10x10                                  = 53,
    PF_ASTC_12x12                                  = 54,
    PF_BC6H                                        = 55,
    PF_BC7                                         = 56,
    PF_R8_UINT                                     = 57,
    PF_L8                                          = 58,
    PF_XGXR8                                       = 59,
    PF_R8G8B8A8_UINT                               = 60,
    PF_R8G8B8A8_SNORM                              = 61,
    PF_R16G16B16A16_UNORM                          = 62,
    PF_R16G16B16A16_SNORM                          = 63,
    PF_PLATFORM_HDR                                = 64,
    PF_PLATFORM_HDR                                = 65,
    PF_PLATFORM_HDR                                = 66,
    PF_NV12                                        = 67,
    PF_R32G32_UINT                                 = 68,
    PF_ASTC_5x4                                    = 69,
    PF_ASTC_5x5                                    = 70,
    PF_ASTC_6x5                                    = 71,
    PF_ASTC_8x5                                    = 72,
    PF_ASTC_8x6                                    = 73,
    PF_ASTC_10x5                                   = 74,
    PF_ASTC_10x6                                   = 75,
    PF_ASTC_10x8                                   = 76,
    PF_ASTC_12x10                                  = 77,
    PF_MAX                                         = 79

};

// Enum  Engine.EMaterialAtlasUsage
enum class EMaterialAtlasUsage : uint8_t
{
    None                                           = 0,
    Usage0                                         = 1,
    Usage1                                         = 2,
    Usage2                                         = 3,
    Usage3                                         = 4,
    EMaterialAtlasUsage_MAX                        = 5

};

// Enum  GeneBatchBlueprintGlue.EVertexColorChannel
enum class EVertexColorChannel : uint8_t
{
    Red                                            = 0,
    Green                                          = 1,
    Blue                                           = 2,
    Alpha                                          = 3,
    EVertexColorChannel_MAX                        = 4

};

// Enum  UploadToolsModule.EUploadFileType
enum class EUploadFileType : uint8_t
{
    Log                                            = 0,
    LogAndDump                                     = 1,
    LogAndUObject                                  = 2,
    MemoryStats                                    = 3,
    EUploadFileType_MAX                            = 4

};

// Enum  GPQuest.ETraceActorAttributeType
enum class ETraceActorAttributeType : uint8_t
{
    None                                           = 0,
    HEALTH                                         = 1,
    ETraceActorAttributeType_MAX                   = 2

};

// Enum  GPQuest.EGPQuestObjectiveHUDType
enum class EGPQuestObjectiveHUDType : uint8_t
{
    None                                           = 0,
    Normal                                         = 1,
    TimeLimit                                      = 2,
    ProtectTarget                                  = 3,
    ProtectVehicle                                 = 4,
    Kill                                           = 5,
    Complete                                       = 19,
    Type_MAX                                       = 20,
    EGPQuestObjectiveHUDType_MAX                   = 21

};

// Enum  GPQuest.EGPQuestStageState
enum class EGPQuestStageState : uint8_t
{
    Begin                                          = 0,
    Update                                         = 1,
    Complete                                       = 2,
    Failed                                         = 3,
    AllDieFailed                                   = 4,
    TimeOutFailed                                  = 5,
    EGPQuestStageState_MAX                         = 6

};

// Enum  GPQuest.ELootingStatus
enum class ELootingStatus : uint8_t
{
    None                                           = 0,
    ShowButton                                     = 1,
    LootingBegin                                   = 2,
    LootingEnd                                     = 3,
    ELootingStatus_MAX                             = 4

};

// Enum  GPQuest.ESubtitleType
enum class ESubtitleType : uint8_t
{
    EST_Sequence                                   = 0,
    EST_CutScene                                   = 1,
    EST_NPCDialogue                                = 2,
    EST_Wireless                                   = 3,
    EST_SoldierDialog                              = 4,
    EST_Max                                        = 5

};

// Enum  GPQuest.EGPQuestObjectiveState
enum class EGPQuestObjectiveState : uint8_t
{
    None                                           = 0,
    Begin                                          = 1,
    Complete                                       = 2,
    Failed                                         = 3,
    EGPQuestObjectiveState_MAX                     = 4

};

// Enum  GPQuest.ESOLActionType
enum class ESOLActionType : uint8_t
{
    ENone                                          = 0,
    ESpawnAI                                       = 1,
    EInteract                                      = 2,
    EPlay2DAudio                                   = 3,
    EPlay3DAudio                                   = 4,
    ESetLightData                                  = 5,
    ESOLActionType_MAX                             = 6

};

// Enum  GPQuest.EGPQuestObjectiveAsyncReturnBranch
enum class EGPQuestObjectiveAsyncReturnBranch : uint8_t
{
    Failed                                         = 0,
    Complete                                       = 1,
    EGPQuestObjectiveAsyncReturnBranch_MAX         = 2

};

// Enum  GPQuest.ESOLTargetType
enum class ESOLTargetType : uint8_t
{
    None                                           = 0,
    ReachArea                                      = 1,
    Interact                                       = 2,
    KillAI                                         = 3,
    KillBoss                                       = 4,
    Timer                                          = 5,
    PlacingC4                                      = 6,
    SpawnAI                                        = 7,
    LootingSafeBox                                 = 8,
    BreakItem                                      = 9,
    lootingDeadBody                                = 10,
    DisableInteractor                              = 11,
    ESOLTargetType_MAX                             = 12

};

// Enum  GPQuest.VisibleGameHUDStateOperators
enum class VisibleGameHUDStateOperators : uint8_t
{
    None                                           = 0,
    Remove_InvisibleGameHudState                   = 1,
    Add_InvisibleGameHudState                      = 2,
    Remove_VisibleGameHudState                     = 3,
    Add_VisibleGameHudState                        = 4,
    VisibleGameHUDStateOperators_MAX               = 5

};

// Enum  GPQuest.EQA_CountdownType
enum class EQA_CountdownType : uint8_t
{
    ENone                                          = 0,
    EAirDrop                                       = 1,
    EAirSupport                                    = 2,
    ERaid_NeedWaitCountDown                        = 3,
    ERaid_NoNeedWaitCountDown                      = 4,
    EQA_MAX                                        = 5

};

// Enum  GPQuest.ECountDownHUDClassType
enum class ECountDownHUDClassType : uint8_t
{
    ENone                                          = 0,
    ERaidCountDownHUDClassType                     = 1,
    ECountDownHUDClassType_MAX                     = 2

};

// Enum  GPQuest.EGPQuestOptionalObjectiveOperationType
enum class EGPQuestOptionalObjectiveOperationType : uint8_t
{
    Show                                           = 0,
    Hide                                           = 1,
    Complete                                       = 2,
    Failed                                         = 3,
    EGPQuestOptionalObjectiveOperationType_MAX     = 4

};

// Enum  GPQuest.EGPQuestObjectiveType
enum class EGPQuestObjectiveType : uint8_t
{
    Unkown                                         = 0,
    Kill                                           = 1,
    Arrive                                         = 2,
    Interact                                       = 3,
    Protect                                        = 4,
    Follow                                         = 5,
    Destory                                        = 6,
    TotalCount                                     = 7,
    EGPQuestObjectiveType_MAX                      = 8

};

// Enum  GPQuest.EGPQuestActionMarkerType
enum class EGPQuestActionMarkerType : uint8_t
{
    Arrive                                         = 0,
    Destroy                                        = 1,
    Protect                                        = 2,
    ProtectWithHP                                  = 3,
    Arrive_Optional                                = 4,
    Destroy_Optional                               = 5,
    Protect_Optional                               = 6,
    ProtectWithHP_Optional                         = 7,
    NPCTalk                                        = 8,
    TargetTrack                                    = 9,
    NPCTrigger                                     = 10,
    RPGTrack                                       = 11,
    Vehicle                                        = 12,
    Hostage                                        = 13,
    MarkerNarrow                                   = 14,
    AmmoBox                                        = 15,
    EliteAI                                        = 16,
    InteractiveReading                             = 17,
    InteractGame                                   = 18,
    Raid_ValkyrieVehicle                           = 19,
    NPCTeamMate                                    = 20,
    SOLContractKill                                = 21,
    SOLContractArrive                              = 22,
    SOLContractInteract                            = 23,
    SOLContractManning                             = 24,
    SOLMissionKill                                 = 25,
    SOLMissionArrive                               = 26,
    SOLMissionInteract                             = 27,
    EGPQuestActionMarkerType_MAX                   = 28

};

// Enum  GPQuest.EGPQuestActionTeamId
enum class EGPQuestActionTeamId : uint8_t
{
    TeamAll                                        = 0,
    Team1                                          = 1,
    Team2                                          = 2,
    Team3                                          = 3,
    Team4                                          = 4,
    Team5                                          = 5,
    Team6                                          = 6,
    Team7                                          = 7,
    Team8                                          = 8,
    Team9                                          = 9,
    Team10                                         = 10,
    TeamCount                                      = 11,
    EGPQuestActionTeamId_MAX                       = 12

};

// Enum  GPQuest.EGPQuestActionTriggerType
enum class EGPQuestActionTriggerType : uint8_t
{
    BeginOverlap                                   = 0,
    EndOverlap                                     = 1,
    Hit                                            = 2,
    EGPQuestActionTriggerType_MAX                  = 3

};

// Enum  GPQuest.EGPQuestActionCompareOperator
enum class EGPQuestActionCompareOperator : uint8_t
{
    Equal                                          = 0,
    NotEqual                                       = 1,
    Greater                                        = 2,
    GreaterEqual                                   = 3,
    Less                                           = 4,
    LessEqual                                      = 5,
    EGPQuestActionCompareOperator_MAX              = 6

};

// Enum  GPQuest.EGPQuestPlayReason
enum class EGPQuestPlayReason : uint8_t
{
    DefaultPlay                                    = 0,
    DebugJump                                      = 1,
    FailReplay                                     = 2,
    EGPQuestPlayReason_MAX                         = 3

};

// Enum  GPQuest.EGPQuestEndReason
enum class EGPQuestEndReason : uint8_t
{
    Complete                                       = 0,
    Fail                                           = 1,
    Cancel                                         = 2,
    Break                                          = 3,
    AllDied                                        = 4,
    TimeOut                                        = 5,
    EGPQuestEndReason_MAX                          = 6

};

// Enum  GPQuest.EGPQuestActionScope
enum class EGPQuestActionScope : uint8_t
{
    Stage                                          = 0,
    World                                          = 1,
    Volume                                         = 2,
    EGPQuestActionScope_MAX                        = 3

};

// Enum  GPQuest.EGPQuestInteractorStatus
enum class EGPQuestInteractorStatus : uint8_t
{
    Unkown                                         = 0,
    Activated                                      = 1,
    Deactivated                                    = 2,
    Succeed                                        = 3,
    Failed                                         = 4,
    EGPQuestInteractorStatus_MAX                   = 5

};

// Enum  GPQuest.EGPQuestStageAsyncReturnBranch
enum class EGPQuestStageAsyncReturnBranch : uint8_t
{
    Failed                                         = 0,
    Complete                                       = 1,
    Branch2                                        = 2,
    Branch3                                        = 3,
    Branch4                                        = 4,
    Branch5                                        = 5,
    AllDieFailed                                   = 6,
    EGPQuestStageAsyncReturnBranch_MAX             = 7

};

// Enum  GPQuest.EQuestVolumeShape
enum class EQuestVolumeShape : uint8_t
{
    Shape_Sphere                                   = 0,
    Shape_Cylinder                                 = 1,
    Shape_MAX                                      = 2

};

// Enum  GPGameFlow.EGameFlowStageType
enum class EGameFlowStageType : uint8_t
{
    None                                           = 0,
    Hotfix                                         = 1,
    VersionUpdate                                  = 2,
    PrecompilePSO                                  = 3,
    Login                                          = 4,
    LoginToLobby                                   = 5,
    Lobby                                          = 6,
    LobbyToGame                                    = 7,
    LobbyBHD                                       = 8,
    LobbyBHDToGame                                 = 9,
    Game                                           = 10,
    GameToLobby                                    = 11,
    GameToLobbyBHD                                 = 12,
    Discovery                                      = 13,
    SafeHouse                                      = 14,
    LoginToModeHall                                = 15,
    LoginToBattleField                             = 16,
    LoginToSafeHouse                               = 17,
    LoginToLobbyBHD                                = 18,
    SafeHouseToBattleField                         = 19,
    SafeHouseToLobbyBHD                            = 20,
    BattleFieldToSafeHouse                         = 21,
    LobbyToLobbyBHD                                = 22,
    LobbyBHDToLobby                                = 23,
    LobbyBHDToSafeHouse                            = 24,
    ModeHall                                       = 25,
    ModeHallToLobby                                = 26,
    ModeHallToSafeHouse                            = 27,
    ModeHallToLobbyBHD                             = 28,
    SafeHouseToGame                                = 29,
    GameToSafeHouse                                = 30,
    GameToGame                                     = 31,
    LobbyToLogin                                   = 32,
    LoginToIntro                                   = 33,
    Intro                                          = 34,
    IntroToSafeHouse                               = 35,
    PostLaunch                                     = 36,
    LaunchToLogin                                  = 37,
    GameSettlement                                 = 38,
    EGameFlowStageType_MAX                         = 39

};

// Enum  SubstanceCore.ESubstanceInputType
enum class ESubstanceInputType : uint8_t
{
    SIT_Float                                      = 0,
    SIT_Float2                                     = 1,
    SIT_Float3                                     = 2,
    SIT_Float4                                     = 3,
    SIT_Integer                                    = 4,
    SIT_Image                                      = 5,
    SIT_Unused                                     = 6,
    SIT_Unused                                     = 7,
    SIT_Integer2                                   = 8,
    SIT_Integer3                                   = 9,
    SIT_Integer4                                   = 10,
    SIT_MAX                                        = 11

};

// Enum  SubstanceCore.ESubstanceGenerationMode
enum class ESubstanceGenerationMode : uint8_t
{
    SGM_PlatformDefault                            = 0,
    SGM_Baked                                      = 1,
    SGM_OnLoadSync                                 = 2,
    SGM_OnLoadSyncAndCache                         = 3,
    SGM_OnLoadAsync                                = 4,
    SGM_OnLoadAsyncAndCache                        = 5,
    SGM_MAX                                        = 6

};

// Enum  SubstanceCore.EDefaultSubstanceTextureSize
enum class EDefaultSubstanceTextureSize : uint8_t
{
    size                                           = 0,
    size                                           = 4,
    size                                           = 5,
    size                                           = 6,
    size                                           = 7,
    size                                           = 8,
    size                                           = 9,
    size                                           = 10,
    size                                           = 11,
    size                                           = 12,
    size_MAX                                       = 13

};

// Enum  SubstanceCore.ESubstanceEngineType
enum class ESubstanceEngineType : uint8_t
{
    SET_CPU                                        = 0,
    SET_GPU                                        = 1,
    SET_MAX                                        = 2

};

// Enum  SubstanceCore.ESubstanceTextureSize
enum class ESubstanceTextureSize : uint8_t
{
    ERL                                            = 0,
    ERL                                            = 1,
    ERL                                            = 2,
    ERL                                            = 3,
    ERL                                            = 4,
    ERL                                            = 5,
    ERL                                            = 6,
    ERL                                            = 7,
    ERL                                            = 8,
    ERL                                            = 9,
    ERL_MAX                                        = 10

};

// Enum  RuntimeFilesDownloader.CdnDownResult
enum class CdnDownResult : uint8_t
{
    None                                           = 0,
    DownloadFailed                                 = 1,
    SaveFileFailed                                 = 2,
    SuccessCompare                                 = 3,
    CreateTextureSuccess                           = 4,
    DownloadSuccess                                = 5,
    CdnDownResult_MAX                              = 6

};

// Enum  RuntimeFilesDownloader.DownloadResult
enum class DownloadResult : uint8_t
{
    SuccessDownloading                             = 0,
    DownloadFailed                                 = 1,
    SaveFailed                                     = 2,
    DirectoryCreationFailed                        = 3,
    SuccessCompare                                 = 4,
    DownloadResult_MAX                             = 5

};

// Enum  RuntimeFilesDownloader.ECdnDownPriority
enum class ECdnDownPriority : uint8_t
{
    Low                                            = 0,
    Default                                        = 1,
    Hight                                          = 2,
    ECdnDownPriority_MAX                           = 3

};

// Enum  RuntimeFilesDownloader.CdnDownStage
enum class CdnDownStage : uint8_t
{
    Wait                                           = 0,
    Start                                          = 1,
    Progress                                       = 2,
    End                                            = 3,
    CdnDownStage_MAX                               = 4

};

// Enum  ZipLib.EZipErrType
enum class EZipErrType : uint8_t
{
    NoError                                        = 0,
    ExceedSizeLimit                                = 1,
    OverwriteExistingArchiveFailed                 = 2,
    TargetArchiveExists                            = 3,
    CreateOrOpenFileFailed                         = 4,
    CloseFileFailed                                = 5,
    EZipErrType_MAX                                = 6

};

// Enum  ZipLib.EZipCreationFlag
enum class EZipCreationFlag : uint8_t
{
    CancelIfExists                                 = 0,
    Overwrite                                      = 1,
    Append                                         = 2,
    EZipCreationFlag_MAX                           = 3

};

// Enum  ZipLib.EZipCompressLevel
enum class EZipCompressLevel : uint8_t
{
    Level0                                         = 0,
    Level1                                         = 1,
    Level2                                         = 2,
    Level3                                         = 3,
    Level4                                         = 4,
    Level5                                         = 5,
    Level6                                         = 6,
    Level7                                         = 7,
    Level8                                         = 8,
    Level9                                         = 9,
    EZipCompressLevel_MAX                          = 10

};

// Enum  SkeletalMeshMergeRuntime.EMeshMergeResultType
enum class EMeshMergeResultType : uint8_t
{
    None                                           = 0,
    Success                                        = 1,
    ExceptionInterrupt                             = 2,
    MergeMeshEmpty                                 = 3,
    MergeSkeletonEmpty                             = 4,
    RequestTimeOut                                 = 5,
    SourceMeshListEmpty                            = 6,
    FailToFindBoneOnSkeleton                       = 7,
    MissSourceSkeleton                             = 8,
    MergeableAnalysisFailed                        = 9,
    LodNumNotEqual                                 = 10,
    BoneNumsMismatch                               = 11,
    VertexNumsMismatch                             = 12,
    IndexBufferInvalid                             = 13,
    EMeshMergeResultType_MAX                       = 14

};

// Enum  BlueprintNodeTemplate.ETickPrerequisite_BP
enum class ETickPrerequisite_BP : uint8_t
{
    IndependentTick                                = 0,
    TickBeforeOwner                                = 1,
    TickAfterOwner                                 = 2,
    ETickPrerequisite_MAX                          = 3

};

// Enum  RadarChart.ERadarChartEventSource
enum class ERadarChartEventSource : uint8_t
{
    BaseLabel                                      = 0,
    BasePin                                        = 1,
    ValueLabel                                     = 2,
    ValuePin                                       = 3,
    ERadarChartEventSource_MAX                     = 4

};

// Enum  RadarChart.ERadarChartBlendMode
enum class ERadarChartBlendMode : uint8_t
{
    Opaque                                         = 0,
    Translucent                                    = 1,
    Additive                                       = 2,
    ERadarChartBlendMode_MAX                       = 3

};

// Enum  RadarChart.ERadarChartColorOverride
enum class ERadarChartColorOverride : uint8_t
{
    None                                           = 0,
    Multiply                                       = 1,
    Override                                       = 2,
    OverrideAlphaOnly                              = 3,
    OverrideHue                                    = 4,
    OverrideHueAndAlpha                            = 5,
    Desaturate                                     = 6,
    DesaturateAndAlpha                             = 7,
    ERadarChartColorOverride_MAX                   = 8

};

// Enum  RadarChart.ERadarChartValueDisplay
enum class ERadarChartValueDisplay : uint8_t
{
    Disabled                                       = 0,
    Normal                                         = 1,
    Snap                                           = 2,
    ERadarChartValueDisplay_MAX                    = 3

};

// Enum  UIParticular.EParticleAxisFlags
enum class EParticleAxisFlags : uint8_t
{
    XY                                             = 0,
    XZ                                             = 1,
    EParticleAxisFlags_MAX                         = 2

};

// Enum  UIParticular.EUMGPlayAnimMode
enum class EUMGPlayAnimMode : uint8_t
{
    Page_In                                        = 0,
    Page_Out                                       = 1,
    Anim_Loop                                      = 2,
    Btn_Click                                      = 3,
    EUMGPlayAnimMode_MAX                           = 4

};

// Enum  HTN.EHTNDecoratorTestResult
enum class EHTNDecoratorTestResult : uint8_t
{
    Failed                                         = 0,
    Passed                                         = 1,
    NotTested                                      = 2,
    EHTNDecoratorTestResult_MAX                    = 3

};

// Enum  HTN.EHTNDecoratorConditionCheckType
enum class EHTNDecoratorConditionCheckType : uint8_t
{
    PlanEnter                                      = 0,
    PlanExit                                       = 1,
    PlanRecheck                                    = 2,
    Execution                                      = 3,
    EHTNDecoratorConditionCheckType_MAX            = 4

};

// Enum  HTN.EHTNTaskFunction
enum class EHTNTaskFunction : uint8_t
{
    None                                           = 0,
    CreatePlanSteps                                = 1,
    RecheckPlan                                    = 2,
    Execute                                        = 3,
    Abort                                          = 4,
    EHTNTaskFunction_MAX                           = 5

};

// Enum  HTN.EHTNTaskStatus
enum class EHTNTaskStatus : uint8_t
{
    Active                                         = 0,
    Aborting                                       = 1,
    Inactive                                       = 2,
    EHTNTaskStatus_MAX                             = 3

};

// Enum  HTN.EHTNNodeResult
enum class EHTNNodeResult : uint8_t
{
    Succeeded                                      = 0,
    Failed                                         = 1,
    Aborted                                        = 2,
    InProgress                                     = 3,
    EHTNNodeResult_MAX                             = 4

};

// Enum  FSR2TemporalUpscaling.EFSR2LandscapeHISMMode
enum class EFSR2LandscapeHISMMode : uint8_t
{
    Off                                            = 0,
    AllStatic                                      = 1,
    StaticWPO                                      = 2,
    EFSR2LandscapeHISMMode_MAX                     = 3

};

// Enum  FSR2TemporalUpscaling.EFSR2DeDitherMode
enum class EFSR2DeDitherMode : uint8_t
{
    Off                                            = 0,
    Full                                           = 1,
    HairOnly                                       = 2,
    EFSR2DeDitherMode_MAX                          = 3

};

// Enum  FSR2TemporalUpscaling.EFSR2HistoryFormat
enum class EFSR2HistoryFormat : uint8_t
{
    FloatRGBA                                      = 0,
    FloatR11G11B10                                 = 1,
    EFSR2HistoryFormat_MAX                         = 2

};

// Enum  FSR2TemporalUpscaling.EFSR2QualityMode
enum class EFSR2QualityMode : uint8_t
{
    Unused                                         = 0,
    Quality                                        = 1,
    Balanced                                       = 2,
    Performance                                    = 3,
    UltraPerformance                               = 4,
    EFSR2QualityMode_MAX                           = 5

};

// Enum  FSR2TemporalUpscaling.UFSR2Support
enum class UFSR2Support : uint8_t
{
    Supported                                      = 0,
    NotSupported                                   = 1,
    NotSupportedIncompatibleHardware               = 2,
    UFSR2Support_MAX                               = 3

};

// Enum  DLSS.EDLSSPreset
enum class EDLSSPreset : uint8_t
{
    Default                                        = 0,
    A                                              = 1,
    B                                              = 2,
    C                                              = 3,
    D                                              = 4,
    E                                              = 5,
    F                                              = 6,
    EDLSSPreset_MAX                                = 7

};

// Enum  DLSS.EDLSSSettingOverride
enum class EDLSSSettingOverride : uint8_t
{
    Enabled                                        = 0,
    Disabled                                       = 1,
    UseProjectSettings                             = 2,
    EDLSSSettingOverride_MAX                       = 3

};

// Enum  DLSSBlueprint.UDLSSMode
enum class UDLSSMode : uint8_t
{
    Off                                            = 0,
    Auto                                           = 1,
    UltraQuality                                   = 2,
    Quality                                        = 3,
    Balanced                                       = 4,
    Performance                                    = 5,
    UltraPerformance                               = 6,
    UDLSSMode_MAX                                  = 7

};

// Enum  DLSSBlueprint.UDLSSSupport
enum class UDLSSSupport : uint8_t
{
    Supported                                      = 0,
    NotSupported                                   = 1,
    NotSupportedIncompatibleHardware               = 2,
    NotSupportedDriverOutOfDate                    = 3,
    NotSupportedOperatingSystemOutOfDate           = 4,
    NotSupportedByPlatformAtBuildTime              = 5,
    NotSupportedIncompatibleAPICaptureToolActive   = 6,
    UDLSSSupport_MAX                               = 7

};

// Enum  WeGameSDK.EWeGameLoginState
enum class EWeGameLoginState : uint8_t
{
    InValidState                                   = 0,
    QQ                                             = 1,
    WeChat                                         = 2,
    Email                                          = 3,
    EWeGameLoginState_MAX                          = 4

};

// Enum  WeGameSDK.EWeGameDLCContentType
enum class EWeGameDLCContentType : uint8_t
{
    kDlcContentTypeFile                            = 1,
    kDlcContentTypeBuiltIn                         = 2,
    EWeGameDLCContentType_MAX                      = 3

};

// Enum  WeGameSDK.EWeGamePlatformType
enum class EWeGamePlatformType : uint8_t
{
    PlatformTypeUnknow                             = 0,
    PlatformTypeLauncher                           = 1,
    PlatformTypeSteam                              = 2,
    PlatformTypeEpic                               = 3,
    EWeGamePlatformType_MAX                        = 4

};

// Enum  WeGameSDK.EWeGamePackResultType
enum class EWeGamePackResultType : uint8_t
{
    PackBegin                                      = 0,
    PackQueryExpansionPackListResult               = 1,
    PackInstallExpansionPackStart                  = 2,
    PackInstallExpansionPackProgress               = 3,
    PackPauseInstallExpansionPack                  = 4,
    PackResumeInstallExpansionPack                 = 5,
    PackInstallExpansionPackResult                 = 6,
    PackUninstallExpansionPackResult               = 7,
    EWeGamePackResultType_MAX                      = 8

};

// Enum  WeGameSDK.EWeGamePackInstallState
enum class EWeGamePackInstallState : uint8_t
{
    PackInstallStateNotInstalled                   = 0,
    PackInstallStateWaitForInstallation            = 1,
    PackInstallStateInstalling                     = 2,
    PackInstallStatePauseInstallation              = 3,
    PackInstallStateInstalled                      = 4,
    PackInstallStateInstallationFailed             = 5,
    PackInstallStateUninstalling                   = 6,
    EWeGamePackInstallState_MAX                    = 7

};

// Enum  WeGameSDK.EWeGameDLCResultType
enum class EWeGameDLCResultType : uint8_t
{
    DlcBegin                                       = 0,
    DlcCheckAllDlcsStateReadyResult                = 1,
    DlcInstallStart                                = 2,
    DlcInstallProgress                             = 3,
    DlcInstallFinished                             = 4,
    DlcUninstallProgress                           = 5,
    DlcUninstallFinished                           = 6,
    DlcPauseInstall                                = 7,
    DlcResumeInstall                               = 8,
    DlcNeedUpdate                                  = 9,
    DlcShowDlcManageWindowResult                   = 10,
    EWeGameDLCResultType_MAX                       = 11

};

// Enum  WeGameSDK.EWeGameLoginErrType
enum class EWeGameLoginErrType : uint8_t
{
    PlatformExit                                   = 0,
    SDKInitErr                                     = 1,
    InValidLoginChannel                            = 2,
    MSDKErr                                        = 3,
    EWeGameLoginErrType_MAX                        = 4

};

// Enum  BinkMediaPlayer.EBinkMediaPlayerBinkDrawStyle
enum class EBinkMediaPlayerBinkDrawStyle : uint8_t
{
    BMASM_Bink_DS_RenderToTexture                  = 0,
    BMASM_Bink_DS_OverlayFillScreenWithAspectRatio = 1,
    BMASM_Bink_DS_OverlayOriginalMovieSize         = 2,
    BMASM_Bink_DS_OverlayFillScreen                = 3,
    BMASM_Bink_DS_OverlaySpecificDestinationRectangle = 4,
    BMASM_Bink_DS_MAX                              = 5

};

// Enum  BinkMediaPlayer.EBinkMediaPlayerBinkSoundTrack
enum class EBinkMediaPlayerBinkSoundTrack : uint8_t
{
    BMASM_Bink_Sound_None                          = 0,
    BMASM_Bink_Sound_Simple                        = 1,
    BMASM_Bink_Sound_LanguageOverride              = 2,
    BMASM_Bink_Sound                               = 3,
    BMASM_Bink_Sound_51LanguageOverride            = 4,
    BMASM_Bink_Sound                               = 5,
    BMASM_Bink_Sound_71LanguageOverride            = 6,
    BMASM_Bink_Sound_MAX                           = 7

};

// Enum  BinkMediaPlayer.EBinkMediaPlayerBinkBufferModes
enum class EBinkMediaPlayerBinkBufferModes : uint8_t
{
    BMASM_Bink_Stream                              = 0,
    BMASM_Bink_PreloadAll                          = 1,
    BMASM_Bink_StreamUntilResident                 = 2,
    BMASM_Bink_MAX                                 = 3

};

// Enum  BinkMediaPlayer.EBinkMoviePlayerBinkSoundTrack
enum class EBinkMoviePlayerBinkSoundTrack : uint8_t
{
    MP_Bink_Sound_None                             = 0,
    MP_Bink_Sound_Simple                           = 1,
    MP_Bink_Sound_LanguageOverride                 = 2,
    MP_Bink_Sound                                  = 3,
    MP_Bink_Sound_51LanguageOverride               = 4,
    MP_Bink_Sound                                  = 5,
    MP_Bink_Sound_71LanguageOverride               = 6,
    MP_Bink_Sound_MAX                              = 7

};

// Enum  BinkMediaPlayer.EBinkMoviePlayerBinkBufferModes
enum class EBinkMoviePlayerBinkBufferModes : uint8_t
{
    MP_Bink_Stream                                 = 0,
    MP_Bink_PreloadAll                             = 1,
    MP_Bink_StreamUntilResident                    = 2,
    MP_Bink_MAX                                    = 3

};

// Enum  StreamlineBlueprint.UStreamlineFeatureRequirementsFlags
enum class UStreamlineFeatureRequirementsFlags : uint8_t
{
    None                                           = 0,
    D3D11Supported                                 = 1,
    D3D12Supported                                 = 2,
    VulkanSupported                                = 4,
    VSyncOffRequired                               = 8,
    HardwareSchedulingRequired                     = 16,
    UStreamlineFeatureRequirementsFlags_MAX        = 17

};

// Enum  StreamlineBlueprint.UStreamlineFeatureSupport
enum class UStreamlineFeatureSupport : uint8_t
{
    Supported                                      = 0,
    NotSupported                                   = 1,
    NotSupportedIncompatibleHardware               = 2,
    NotSupportedDriverOutOfDate                    = 3,
    NotSupportedOperatingSystemOutOfDate           = 4,
    NotSupportedHardewareSchedulingDisabled        = 5,
    NotSupportedByRHI                              = 6,
    NotSupportedByPlatformAtBuildTime              = 7,
    NotSupportedIncompatibleAPICaptureToolActive   = 8,
    UStreamlineFeatureSupport_MAX                  = 9

};

// Enum  StreamlineBlueprint.UStreamlineFeature
enum class UStreamlineFeature : uint8_t
{
    DLSSG                                          = 0,
    Reflex                                         = 1,
    DeepDVC                                        = 2,
    Count                                          = 3,
    UStreamlineFeature_MAX                         = 4

};

// Enum  StreamlineBlueprint.UStreamlineDLSSGMode
enum class UStreamlineDLSSGMode : uint8_t
{
    Off                                            = 0,
    On                                             = 1,
    Auto                                           = 2,
    UStreamlineDLSSGMode_MAX                       = 3

};

// Enum  StreamlineBlueprint.UStreamlineReflexMode
enum class UStreamlineReflexMode : uint8_t
{
    Disabled                                       = 0,
    Enabled                                        = 1,
    EnabledPlusBoost                               = 3,
    UStreamlineReflexMode_MAX                      = 4

};

// Enum  StreamlineRHI.EStreamlineSettingOverride
enum class EStreamlineSettingOverride : uint8_t
{
    Enabled                                        = 0,
    Disabled                                       = 1,
    UseProjectSettings                             = 2,
    EStreamlineSettingOverride_MAX                 = 3

};

// Enum  UITween.ETweenerPropType
enum class ETweenerPropType : uint8_t
{
    Default                                        = 0,
    RenderTranslation                              = 1,
    RenderScale                                    = 2,
    RenderShear                                    = 3,
    RenderTransformAngle                           = 4,
    RenderOpacity                                  = 5,
    BrushMaterial                                  = 6,
    ColorAndOpacity                                = 7,
    OverrideMaterial                               = 8,
    ETweenerPropType_MAX                           = 9

};

// Enum  UITween.EUITweenEaseType
enum class EUITweenEaseType : uint8_t
{
    Custom                                         = 0,
    Linear                                         = 1,
    EaseInQuad                                     = 2,
    EaseOutQuad                                    = 3,
    EaseInOutQuad                                  = 4,
    EaseOutInQuad                                  = 5,
    EaseInCubic                                    = 6,
    EaseOutCubic                                   = 7,
    EaseInOutCubic                                 = 8,
    EaseOutInCubic                                 = 9,
    EaseInQuart                                    = 10,
    EaseOutQuart                                   = 11,
    EaseInOutQuart                                 = 12,
    EaseOutInQuart                                 = 13,
    EaseInQuint                                    = 14,
    EaseOutQuint                                   = 15,
    EaseInOutQuint                                 = 16,
    EaseOutInQuint                                 = 17,
    EaseInSine                                     = 18,
    EaseOutSine                                    = 19,
    EaseInOutSine                                  = 20,
    EaseOutInSine                                  = 21,
    EaseInExpo                                     = 22,
    EaseOutExpo                                    = 23,
    EaseInOutExpo                                  = 24,
    EaseOutInExpo                                  = 25,
    EaseInCirc                                     = 26,
    EaseOutCirc                                    = 27,
    EaseInOutCirc                                  = 28,
    EaseOutInCirc                                  = 29,
    EaseInElastic                                  = 30,
    EaseOutElastic                                 = 31,
    EaseInOutElastic                               = 32,
    EaseOutInElastic                               = 33,
    EaseInBack                                     = 34,
    EaseOutBack                                    = 35,
    EaseInOutBack                                  = 36,
    EaseOutInBack                                  = 37,
    EaseInBounce                                   = 38,
    EaseOutBounce                                  = 39,
    EaseInOutBounce                                = 40,
    EaseOutInBounce                                = 41,
    EUITweenEaseType_MAX                           = 42

};

// Enum  DSPlaybackTool.EPlaybackStructAce_ActionType
enum class EPlaybackStructAce_ActionType : uint8_t
{
    Default                                        = 0,
    Reload                                         = 1,
    Crouch                                         = 2,
    Prone                                          = 3,
    Stand                                          = 4,
    Zoom                                           = 5,
    LeftLean                                       = 6,
    RightLean                                      = 7,
    NoneLean                                       = 8,
    SlidingTackle                                  = 9,
    EndZoom                                        = 10,
    Jump                                           = 11,
    EPlaybackStructAce_MAX                         = 12

};

// Enum  DSPlaybackTool.EPlaybackStructType
enum class EPlaybackStructType : uint8_t
{
    Default                                        = 0,
    Common_ClickPoint                              = 1,
    Common_Points                                  = 2,
    Common_Line                                    = 3,
    Common_Path                                    = 4,
    Common_BoxLine                                 = 5,
    Common_BoxFill                                 = 6,
    Nav_Agent                                      = 10,
    Nav_AgentMove                                  = 11,
    Nav_AgentEQS                                   = 12,
    Nav_AgentFind                                  = 13,
    Nav_Fire                                       = 14,
    Ace_Start                                      = 100,
    Ace_Summary                                    = 101,
    Ace_Position                                   = 102,
    Ace_WorldToScreen                              = 103,
    Ace_Fire                                       = 104,
    Ace_Hit                                        = 105,
    Ace_HitDown                                    = 106,
    Ace_Death                                      = 107,
    Ace_Action                                     = 108,
    Ace_MatchStart                                 = 109,
    Ace_RebornStart                                = 110,
    Ace_Grenade                                    = 111,
    SkillStart                                     = 112,
    SkillEnd                                       = 113,
    BuffStart                                      = 114,
    BuffEnd                                        = 115,
    VehicleIn                                      = 116,
    VehicleOut                                     = 117,
    Ace_SwitchWeapon                               = 118,
    Ace_ActiveWeapon                               = 119,
    ACE_MarkLoc                                    = 120,
    ACE_CancelMarkLoc                              = 121,
    ACE_SmokeStart                                 = 122,
    ACE_SmokeEnd                                   = 123,
    Ace_MatchEnd                                   = 124,
    Ace_BeingResuce                                = 125,
    Ace_Looting                                    = 126,
    Ace_SpawnDropItem                              = 127,
    Ace_NightVision                                = 128,
    Ace_Connection                                 = 129,
    Ace_DoorInfo                                   = 130,
    EPlaybackStructType_MAX                        = 131

};

// Enum  DSPlaybackTool.EPlaybackDataType
enum class EPlaybackDataType : uint8_t
{
    Default                                        = 0,
    Nav                                            = 1,
    AI                                             = 2,
    Player                                         = 3,
    Weapon                                         = 4,
    ACE                                            = 5,
    EPlaybackDataType_MAX                          = 6

};

// Enum  SimplygonUObjects.EShaderCodeInputMode
enum class EShaderCodeInputMode : uint8_t
{
    Source                                         = 0,
    Binary                                         = 1,
    EShaderCodeInputMode_MAX                       = 2

};

// Enum  SimplygonUObjects.EOutputColorSpace
enum class EOutputColorSpace : uint8_t
{
    Undefined                                      = 0,
    Linear                                         = 1,
    sRGB                                           = 2,
    EOutputColorSpace_MAX                          = 3

};

// Enum  SimplygonUObjects.EGeometryDataFieldType
enum class EGeometryDataFieldType : uint8_t
{
    Coords                                         = 0,
    TexCoords                                      = 1,
    Normals                                        = 2,
    Tangents                                       = 3,
    Bitangents                                     = 4,
    Colors                                         = 5,
    TriangleIds                                    = 6,
    MaterialIds                                    = 7,
    VertexIds                                      = 8,
    UserVertexField                                = 9,
    UserCornerField                                = 10,
    UserTriangleField                              = 11,
    CustomField                                    = 12,
    EGeometryDataFieldType_MAX                     = 13

};

// Enum  SimplygonUObjects.EFlipBackfacingMode
enum class EFlipBackfacingMode : uint8_t
{
    PixelNormal                                    = 0,
    FaceNormal                                     = 1,
    EFlipBackfacingMode_MAX                        = 2

};

// Enum  SimplygonUObjects.EOutputOpacityType
enum class EOutputOpacityType : uint8_t
{
    Opacity                                        = 0,
    Transparency                                   = 1,
    EOutputOpacityType_MAX                         = 2

};

// Enum  SimplygonUObjects.EOutputDDSCompressionType
enum class EOutputDDSCompressionType : uint8_t
{
    NoCompression                                  = 255,
    BC1                                            = 0,
    BC2                                            = 1,
    BC3                                            = 2,
    BC4                                            = 3,
    BC5                                            = 4,
    EOutputDDSCompressionType_MAX                  = 256

};

// Enum  SimplygonUObjects.EOutputImageFileFormat
enum class EOutputImageFileFormat : uint8_t
{
    BMP                                            = 0,
    DDS                                            = 1,
    JPEG                                           = 2,
    PNG                                            = 3,
    TGA                                            = 4,
    TIFF                                           = 5,
    EXR                                            = 8,
    EOutputImageFileFormat_MAX                     = 9

};

// Enum  SimplygonUObjects.EOutputPixelFormat
enum class EOutputPixelFormat : uint8_t
{
    R8G8B8A8                                       = 0,
    R8G8B8                                         = 1,
    R8                                             = 2,
    R16G16B16A16                                   = 3,
    R16G16B16                                      = 4,
    R16                                            = 5,
    R32G32B32A32F                                  = 6,
    EOutputPixelFormat_MAX                         = 7

};

// Enum  SimplygonUObjects.EFillMode
enum class EFillMode : uint8_t
{
    Interpolate                                    = 0,
    NearestNeighbor                                = 1,
    NoFill                                         = 2,
    EFillMode_MAX                                  = 3

};

// Enum  SimplygonUObjects.EDitherType
enum class EDitherType : uint8_t
{
    NoDither                                       = 0,
    FloydSteinberg                                 = 1,
    JarvisJudiceNinke                              = 2,
    Sierra                                         = 3,
    EDitherType_MAX                                = 4

};

// Enum  SimplygonUObjects.EOpacityChannelComponent
enum class EOpacityChannelComponent : uint8_t
{
    Red                                            = 0,
    Green                                          = 1,
    Blue                                           = 2,
    Alpha                                          = 3,
    EOpacityChannelComponent_MAX                   = 4

};

// Enum  SimplygonUObjects.EStopCondition
enum class EStopCondition : uint8_t
{
    Any                                            = 0,
    All                                            = 1,
    EStopCondition_MAX                             = 2

};

// Enum  SimplygonUObjects.EBillboardMode
enum class EBillboardMode : uint8_t
{
    OuterShell                                     = 0,
    Foliage                                        = 1,
    EBillboardMode_MAX                             = 2

};

// Enum  SimplygonUObjects.ESurfaceTransferMode
enum class ESurfaceTransferMode : uint8_t
{
    Fast                                           = 0,
    Accurate                                       = 1,
    ESurfaceTransferMode_MAX                       = 2

};

// Enum  SimplygonUObjects.ERemeshingMode
enum class ERemeshingMode : uint8_t
{
    Outside                                        = 0,
    Inside                                         = 1,
    Manual                                         = 2,
    ERemeshingMode_MAX                             = 3

};

// Enum  SimplygonUObjects.EHoleFilling
enum class EHoleFilling : uint8_t
{
    Disabled                                       = 0,
    Low                                            = 1,
    Medium                                         = 2,
    High                                           = 3,
    EHoleFilling_MAX                               = 4

};

// Enum  SimplygonUObjects.ESurfaceAreaScale
enum class ESurfaceAreaScale : uint8_t
{
    LargestInstance                                = 0,
    SmallestInstance                               = 1,
    Average                                        = 2,
    ESurfaceAreaScale_MAX                          = 3

};

// Enum  SimplygonUObjects.EChartAggregatorMode
enum class EChartAggregatorMode : uint8_t
{
    TextureSizeProportions                         = 0,
    SurfaceArea                                    = 1,
    OriginalPixelDensity                           = 2,
    UVSizeProportions                              = 3,
    EChartAggregatorMode_MAX                       = 4

};

// Enum  SimplygonUObjects.ETexCoordGeneratorType
enum class ETexCoordGeneratorType : uint8_t
{
    Parameterizer                                  = 0,
    ChartAggregator                                = 1,
    ETexCoordGeneratorType_MAX                     = 2

};

// Enum  SimplygonUObjects.ETransformationSpace
enum class ETransformationSpace : uint8_t
{
    Global                                         = 0,
    Local                                          = 1,
    Tangent                                        = 2,
    View                                           = 3,
    ETransformationSpace_MAX                       = 4

};

// Enum  SimplygonUObjects.EAttributeTessellationDensityMode
enum class EAttributeTessellationDensityMode : uint8_t
{
    RelativeArea                                   = 0,
    AbsoluteArea                                   = 1,
    RelativeLength                                 = 2,
    AbsoluteLength                                 = 3,
    UserDefined                                    = 4,
    OnScreenSize                                   = 5,
    EAttributeTessellationDensityMode_MAX          = 6

};

// Enum  SimplygonUObjects.EWeightsFromColorMode
enum class EWeightsFromColorMode : uint8_t
{
    Standard                                       = 0,
    High                                           = 1,
    Low                                            = 2,
    EWeightsFromColorMode_MAX                      = 3

};

// Enum  SimplygonUObjects.EWeightsFromColorComponent
enum class EWeightsFromColorComponent : uint8_t
{
    Red                                            = 0,
    Green                                          = 1,
    Blue                                           = 2,
    Alpha                                          = 3,
    EWeightsFromColorComponent_MAX                 = 4

};

// Enum  SimplygonUObjects.EBoneReductionTargetStopCondition
enum class EBoneReductionTargetStopCondition : uint8_t
{
    Any                                            = 0,
    All                                            = 1,
    EBoneReductionTargetStopCondition_MAX          = 2

};

// Enum  SimplygonUObjects.EComputeVisibilityMode
enum class EComputeVisibilityMode : uint8_t
{
    DirectX                                        = 0,
    Software                                       = 1,
    EComputeVisibilityMode_MAX                     = 2

};

// Enum  SimplygonUObjects.EDataCreationPreferences
enum class EDataCreationPreferences : uint8_t
{
    OnlyUseOriginalData                            = 0,
    PreferOriginalData                             = 1,
    PreferOptimizedResult                          = 2,
    EDataCreationPreferences_MAX                   = 3

};

// Enum  SimplygonUObjects.ESymmetryAxis
enum class ESymmetryAxis : uint8_t
{
    X                                              = 0,
    Y                                              = 1,
    Z                                              = 2,
    ESymmetryAxis_MAX                              = 3

};

// Enum  SimplygonUObjects.EReductionHeuristics
enum class EReductionHeuristics : uint8_t
{
    Fast                                           = 0,
    Consistent                                     = 1,
    EReductionHeuristics_MAX                       = 2

};

// Enum  SimplygonUObjects.EReductionTargetStopCondition
enum class EReductionTargetStopCondition : uint8_t
{
    Any                                            = 0,
    All                                            = 1,
    EReductionTargetStopCondition_MAX              = 2

};

// Enum  SimplygonUObjects.EReductionPerformanceMode
enum class EReductionPerformanceMode : uint8_t
{
    AllFeatures                                    = 0,
    HighPerformance                                = 1,
    EReductionPerformanceMode_MAX                  = 2

};

// Enum  ProceduralMeshComponent.EProcMeshSliceCapOption
enum class EProcMeshSliceCapOption : uint8_t
{
    NoCap                                          = 0,
    CreateNewSectionForCap                         = 1,
    UseLastSectionForCap                           = 2,
    EProcMeshSliceCapOption_MAX                    = 3

};

// Enum  ACLPlugin.ACLCompressionLevel
enum class ACLCompressionLevel : uint8_t
{
    ACLCL_Lowest                                   = 0,
    ACLCL_Low                                      = 1,
    ACLCL_Medium                                   = 2,
    ACLCL_High                                     = 3,
    ACLCL_Highest                                  = 4,
    ACLCL_MAX                                      = 5

};

// Enum  ACLPlugin.ACLVectorFormat
enum class ACLVectorFormat : uint8_t
{
    ACLVF_Vector3                                  = 0,
    ACLVF_Vector3_Variable                         = 1,
    ACLVF_Vector3_MAX                              = 2

};

// Enum  ACLPlugin.ACLRotationFormat
enum class ACLRotationFormat : uint8_t
{
    ACLRF_Quat                                     = 0,
    ACLRF_QuatDropW                                = 1,
    ACLRF_QuatDropW_Variable                       = 2,
    ACLRF_MAX                                      = 3

};

// Enum  ACLPlugin.ACLVisualFidelityChangeResult
enum class ACLVisualFidelityChangeResult : uint8_t
{
    Dispatched                                     = 0,
    Completed                                      = 1,
    Failed                                         = 2,
    ACLVisualFidelityChangeResult_MAX              = 3

};

// Enum  ACLPlugin.ACLVisualFidelity
enum class ACLVisualFidelity : uint8_t
{
    Highest                                        = 0,
    Medium                                         = 1,
    Lowest                                         = 2,
    ACLVisualFidelity_MAX                          = 3

};

// Enum  AnalysisCommon.EAssetType
enum class EAssetType : uint8_t
{
    Texture2D                                      = 0,
    TextureCube                                    = 1,
    TextureRenderTarget2D                          = 2,
    LightMapTexture2D                              = 3,
    Texture2DArray                                 = 4,
    VolumeTexture                                  = 5,
    StaticMesh                                     = 6,
    SkeletalMesh                                   = 7,
    Material                                       = 8,
    MaterialInstanceConstant                       = 9,
    MaterialInstanceDynamic                        = 10,
    ParticleSystem                                 = 11,
    AnimSequence                                   = 12,
    Max                                            = 13

};

// Enum  AnalysisCommon.ERenderPerformField
enum class ERenderPerformField : uint8_t
{
    MeshDrawCalls                                  = 18,
    ParticleDrawCalls                              = 19,
    RHITriangles                                   = 20,
    SkelMeshTriangles                              = 21,
    StaticMeshTriangles                            = 22,
    CPUSkinVertices                                = 23,
    GPUSkinVertices                                = 24,
    MaxOrInvalid                                   = 25,
    ERenderPerformField_MAX                        = 26

};

// Enum  AnalysisCommon.ECPUPerformField
enum class ECPUPerformField : uint8_t
{
    FrameTime                                      = 13,
    TickTime                                       = 14,
    EventWait                                      = 15,
    WorldTickTime                                  = 16,
    UpdateCameraTime                               = 17,
    MaxOrInvalid                                   = 18,
    ECPUPerformField_MAX                           = 19

};

// Enum  AnalysisCommon.EMemPerformField
enum class EMemPerformField : uint8_t
{
    TextureMemory                                  = 1,
    UsedPhysical                                   = 2,
    UsedVirtual                                    = 3,
    TotalSummaryLLM                                = 4,
    MeshesSummaryLLM                               = 5,
    TexturesSummaryLLM                             = 6,
    UObjectSummaryLLM                              = 7,
    AnimationSummaryLLM                            = 8,
    StaticMeshSummaryLLM                           = 9,
    MaterialsSummaryLLM                            = 10,
    ParticlesSummaryLLM                            = 11,
    UISummaryLLM                                   = 12,
    MaxOrInvalid                                   = 13,
    EMemPerformField_MAX                           = 14

};

// Enum  AssetPackerRuntime.EHashType
enum class EHashType : uint8_t
{
    MD5                                            = 0,
    EHashType_MAX                                  = 1

};

// Enum  AssetPackerRuntime.FAssetPackerAssetType
enum class FAssetPackerAssetType : uint8_t
{
    UFS                                            = 0,
    NonUFS                                         = 1,
    FAssetPackerAssetType_MAX                      = 2

};

// Enum  AssetPackerRuntime.EPackagingConfigurations
enum class EPackagingConfigurations : uint8_t
{
    Shipping                                       = 0,
    Test                                           = 1,
    Deprecated                                     = 2,
    EPackagingConfigurations_MAX                   = 3

};

// Enum  AssetPackerRuntime.EMergePakErrorType
enum class EMergePakErrorType : uint8_t
{
    NoError                                        = 0,
    NoEnoughSpace                                  = -1,
    WriteFileFailed                                = -2,
    InvalidSourcePakFile                           = -3,
    PakEncryptStatusNotSame                        = -4,
    EncryptKeyNotFound                             = -5,
    MD5CheckFailed                                 = -6,
    FileAlreadyExists                              = -7,
    SourceMD5CheckFailed                           = -8,
    PatchMD5CheckFailed                            = -9,
    EMergePakErrorType_MAX                         = 1

};

// Enum  VirtualMaterialRuntime.EVirtualMaterialPlatform
enum class EVirtualMaterialPlatform : uint8_t
{
    Unknown                                        = 0,
    Mobile                                         = 1,
    Desktop                                        = 2,
    EVirtualMaterialPlatform_MAX                   = 3

};

// Enum  DataTableLoader.EDataTableHotfixFileState
enum class EDataTableHotfixFileState : uint8_t
{
    EState_Obsoleted                               = 0,
    EState_WaitSync                                = 1,
    EState_Synced                                  = 2,
    EState_Overrided                               = 4,
    EState_WaitNofity                              = 8,
    EState_MAX                                     = 9

};

// Enum  DataTableLoader.EDataTableLoaderGameScene
enum class EDataTableLoaderGameScene : uint8_t
{
    GameScene_None                                 = 0,
    GameScene_SOL                                  = 1,
    GameScene_BattleField                          = 2,
    GameScene_MAX                                  = 3

};

// Enum  DFMAnalysTool.EParamType
enum class EParamType : uint8_t
{
    Invalid                                        = 0,
    P_BOOL                                         = 1,
    P_INT                                          = 2,
    P_FLOAT                                        = 3,
    P_DOUBLE                                       = 4,
    P_FSTRING                                      = 5,
    P_JSON_DATA                                    = 6,
    EParamType_MAX                                 = 7

};

// Enum  DFMAnalysTool.EJsonDataType
enum class EJsonDataType : uint8_t
{
    Empty                                          = 0,
    ENTRY                                          = 1,
    array                                          = 2,
    Section                                        = 3,
    EJsonDataType_MAX                              = 4

};

// Enum  DFMAnalysTool.EUICostType
enum class EUICostType : uint8_t
{
    None                                           = 0,
    TotalTime                                      = 1,
    Open                                           = 2,
    Close                                          = 3,
    AsyncLoad                                      = 4,
    CreateSub                                      = 10,
    ProtoReceive                                   = 20,
    GameFlow                                       = 30,
    Other                                          = 255,
    EUICostType_MAX                                = 256

};

// Enum  DFMLocalization.ECommonTextType
enum class ECommonTextType : uint8_t
{
    InGame                                         = 0,
    OutGame                                        = 1,
    ECommonTextType_MAX                            = 2

};

// Enum  DFMLocalization.ETimeType
enum class ETimeType : uint8_t
{
    Default                                        = 0,
    Short                                          = 1,
    Medium                                         = 2,
    Long                                           = 3,
    Full                                           = 4,
    ETimeType_MAX                                  = 5

};

// Enum  DFMLocalization.ECulturePlatformType
enum class ECulturePlatformType : uint8_t
{
    Default                                        = 0,
    Common                                         = 1,
    Console_Only                                   = 2,
    ECulturePlatformType_MAX                       = 3

};

// Enum  DFMLocalization.EVersionType
enum class EVersionType : uint8_t
{
    None                                           = 0,
    Test                                           = 1,
    Shipping                                       = 2,
    EVersionType_MAX                               = 3

};

// Enum  DFOnlineService.EOverlayType
enum class EOverlayType : uint8_t
{
    Default                                        = 0,
    ToUser                                         = 1,
    ToWebPage                                      = 2,
    ToStore                                        = 3,
    EOverlayType_MAX                               = 4

};

// Enum  Discord.EDiscordActivityDataType
enum class EDiscordActivityDataType : uint8_t
{
    None                                           = 0,
    ApplicationId                                  = 1,
    Name                                           = 2,
    State                                          = 3,
    Details                                        = 4,
    StartTimestamps                                = 5,
    EndTimestamps                                  = 6,
    LargeImage                                     = 7,
    LargeText                                      = 8,
    SmallImage                                     = 9,
    SmallText                                      = 10,
    PartyId                                        = 11,
    PartyCurrentSize                               = 12,
    PartyMaxSize                                   = 13,
    Match                                          = 14,
    Join                                           = 15,
    Spectate                                       = 16,
    Instance                                       = 17,
    Type                                           = 18,
    EDiscordActivityDataType_MAX                   = 19

};

// Enum  SlateCore.EHorizontalAlignment
enum class EHorizontalAlignment : uint8_t
{
    HAlign_Fill                                    = 0,
    HAlign_Left                                    = 1,
    HAlign_Center                                  = 2,
    HAlign_Right                                   = 3,
    HAlign_MAX                                     = 4

};

// Enum  SlateCore.EVerticalAlignment
enum class EVerticalAlignment : uint8_t
{
    VAlign_Fill                                    = 0,
    VAlign_Top                                     = 1,
    VAlign_Center                                  = 2,
    VAlign_Bottom                                  = 3,
    VAlign_MAX                                     = 4

};

// Enum  SlateCore.EDynamicAdaptType
enum class EDynamicAdaptType : uint8_t
{
    Close                                          = 0,
    AutoResizeHorizontal                           = 1,
    AutoResizeAndWrap                              = 2,
    EDynamicAdaptType_MAX                          = 3

};

// Enum  SlateCore.ETextUpperPolicy
enum class ETextUpperPolicy : uint8_t
{
    Default                                        = 0,
    Upper                                          = 1,
    ETextUpperPolicy_MAX                           = 2

};

// Enum  ExCommonUI.EExCommonNumericType
enum class EExCommonNumericType : uint8_t
{
    Number                                         = 0,
    Percentage                                     = 1,
    Seconds                                        = 2,
    Distance                                       = 3,
    EExCommonNumericType_MAX                       = 4

};

// Enum  Engine.ERoundingMode
enum class ERoundingMode : uint8_t
{
    HalfToEven                                     = 0,
    HalfFromZero                                   = 1,
    HalfToZero                                     = 2,
    FromZero                                       = 3,
    ToZero                                         = 4,
    ToNegativeInfinity                             = 5,
    ToPositiveInfinity                             = 6,
    ERoundingMode_MAX                              = 7

};

// Enum  ExCommonUI.EWidgetCarouselCurve
enum class EWidgetCarouselCurve : uint8_t
{
    Const                                          = 0,
    Linear                                         = 1,
    Quad                                           = 2,
    EaseInOutQuad                                  = 3,
    Cubic                                          = 4,
    EWidgetCarouselCurve_MAX                       = 5

};

// Enum  ExCommonUI.ERichTextInlineIconDisplayMode
enum class ERichTextInlineIconDisplayMode : uint8_t
{
    IconOnly                                       = 0,
    TextOnly                                       = 1,
    IconAndText                                    = 2,
    MAX                                            = 3

};

// Enum  ExCommonUI.ETransitionCurve
enum class ETransitionCurve : uint8_t
{
    Linear                                         = 0,
    QuadIn                                         = 1,
    QuadOut                                        = 2,
    QuadInOut                                      = 3,
    CubicIn                                        = 4,
    CubicOut                                       = 5,
    CubicInOut                                     = 6,
    ETransitionCurve_MAX                           = 7

};

// Enum  ExCommonUI.EExCommonSwitcherTransition
enum class EExCommonSwitcherTransition : uint8_t
{
    FadeOnly                                       = 0,
    Horizontal                                     = 1,
    Vertical                                       = 2,
    Zoom                                           = 3,
    EExCommonSwitcherTransition_MAX                = 4

};

// Enum  ExCommonUI.EWidgetCarouselMode
enum class EWidgetCarouselMode : uint8_t
{
    Normal                                         = 0,
    ScrollBox                                      = 1,
    EWidgetCarouselMode_MAX                        = 2

};

// Enum  OpenWorldWaterDataStreaming.EWaterBodyType
enum class EWaterBodyType : uint8_t
{
    River                                          = 0,
    Lake                                           = 1,
    Ocean                                          = 2,
    Transition                                     = 3,
    Num                                            = 4,
    EWaterBodyType_MAX                             = 5

};

// Enum  OpenWorldWaterDataStreaming.EInteractiveWaterType
enum class EInteractiveWaterType : uint8_t
{
    TraceAttachPoint                               = 0,
    EmmitOnce                                      = 1,
    Custom                                         = 2,
    EInteractiveWaterType_MAX                      = 3

};

// Enum  OpenWorldFoliageStreaming.EFoliageSwapType
enum class EFoliageSwapType : uint8_t
{
    OnlyMainWorld                                  = 0,
    OnlySubWorld                                   = 1,
    Both                                           = 2,
    None                                           = 3,
    Num                                            = 4,
    EFoliageSwapType_MAX                           = 5

};

// Enum  OpenWorldPrecomputedVisibility.EOpenWorldPrecomputedFormType
enum class EOpenWorldPrecomputedFormType : uint8_t
{
    None                                           = 0,
    StaticBreakable                                = 1,
    LimitedBounds                                  = 2,
    Transformable                                  = 3,
    NUM                                            = 4,
    EOpenWorldPrecomputedFormType_MAX              = 5

};

// Enum  OpenWorldPrecomputedVisibility.ELevelPVSQueryType
enum class ELevelPVSQueryType : uint8_t
{
    InvisibleUnloaded                              = 0,
    AllInvisible                                   = 1,
    AllUnloaded                                    = 2,
    ELevelPVSQueryType_MAX                         = 3

};

// Enum  OpenWorldStreaming.EInstanceAreaTyep
enum class EInstanceAreaTyep : uint8_t
{
    AABB                                           = 0,
    OBB                                            = 1,
    CYLINDRICAL                                    = 2,
    EInstanceAreaTyep_MAX                          = 3

};

// Enum  OpenWorldStreaming.EOpenWorldProfilerSampleMethod
enum class EOpenWorldProfilerSampleMethod : uint8_t
{
    NavMesh                                        = 0,
    Collision                                      = 1,
    NavMesh_Hydrant                                = 2,
    EOpenWorldProfilerSampleMethod_MAX             = 3

};

// Enum  OpenWorldStreaming.EOpenWorldRescanState
enum class EOpenWorldRescanState : uint8_t
{
    None                                           = 0,
    Once                                           = 1,
    Twice                                          = 2,
    Num                                            = 3,
    EOpenWorldRescanState_MAX                      = 4

};

// Enum  OpenWorldStreaming.EOpenWorldStreamingFlushFlags
enum class EOpenWorldStreamingFlushFlags : uint8_t
{
    None                                           = 0,
    Load                                           = 1,
    Unload                                         = 2,
    Block                                          = 4,
    Purge                                          = 8,
    Tradeoff                                       = 15,
    EOpenWorldStreamingFlushFlags_MAX              = 16

};

// Enum  OpenWorldStreaming.EOpenWorldStreamingImportance
enum class EOpenWorldStreamingImportance : uint8_t
{
    Necessary                                      = 0,
    Major                                          = 1,
    General                                        = 2,
    Num                                            = 3,
    All                                            = 2,
    None                                           = 3,
    EOpenWorldStreamingImportance_MAX              = 4

};

// Enum  OpenWorldStreaming.EOpenWorldFilterType
enum class EOpenWorldFilterType : uint8_t
{
    Runtime                                        = 0,
    Editor                                         = 1,
    EOpenWorldFilterType_MAX                       = 2

};

// Enum  GeneKit.EPositionSnapArrangeType
enum class EPositionSnapArrangeType : uint8_t
{
    TopLeft                                        = 0,
    TopCenter                                      = 1,
    TopRight                                       = 2,
    MiddleLeft                                     = 3,
    MiddleCenter                                   = 4,
    MiddleRight                                    = 5,
    BottomLeft                                     = 6,
    BottomCenter                                   = 7,
    BottomRight                                    = 8,
    EPositionSnapArrangeType_MAX                   = 9

};

// Enum  GeneKit.EGeneKitMaterialType
enum class EGeneKitMaterialType : uint8_t
{
    Wood                                           = 0,
    EGeneKitMaterialType_MAX                       = 1

};

// Enum  GeneKit.EGeneKitConnectType
enum class EGeneKitConnectType : uint8_t
{
    Constant                                       = 0,
    Sigle                                          = 1,
    Combined                                       = 2,
    EGeneKitConnectType_MAX                        = 3

};

// Enum  GeneKit.EGeneKitRotateType
enum class EGeneKitRotateType : uint8_t
{
    CannotRotate                                   = 0,
    HorizontalRotate                               = 1,
    VerticalRotate                                 = 2,
    FreeRotate                                     = 3,
    EGeneKitRotateType_MAX                         = 4

};

// Enum  GeneKit.EGeneKitSnapType
enum class EGeneKitSnapType : uint8_t
{
    Unknow                                         = 0,
    GripSnap                                       = 1,
    AnchorSnap                                     = 2,
    SocketPluginSnap                               = 3,
    EGeneKitSnapType_MAX                           = 4

};

// Enum  GeneKit.EGeneKitPrefabType
enum class EGeneKitPrefabType : uint8_t
{
    Unknown                                        = 0,
    Atomic                                         = 1,
    Combined                                       = 2,
    EGeneKitPrefabType_MAX                         = 3

};

// Enum  GeneKit.EGeneKitAnchorType
enum class EGeneKitAnchorType : uint8_t
{
    Unknown                                        = 0,
    Socket                                         = 1,
    Plugin                                         = 2,
    EGeneKitAnchorType_MAX                         = 3

};

// Enum  GameplayAbilities.EGameplayEffectGrantedAbilityRemovePolicy
enum class EGameplayEffectGrantedAbilityRemovePolicy : uint8_t
{
    CancelAbilityImmediately                       = 0,
    RemoveAbilityOnEnd                             = 1,
    DoNothing                                      = 2,
    EGameplayEffectGrantedAbilityRemovePolicy_MAX  = 3

};

// Enum  GameplayAbilities.EGameplayEffectAttributeCaptureSource
enum class EGameplayEffectAttributeCaptureSource : uint8_t
{
    Source                                         = 0,
    Target                                         = 1,
    EGameplayEffectAttributeCaptureSource_MAX      = 2

};

// Enum  GameplayTasks.ETaskResourceOverlapPolicy
enum class ETaskResourceOverlapPolicy : uint8_t
{
    StartOnTop                                     = 0,
    StartAtEnd                                     = 1,
    ETaskResourceOverlapPolicy_MAX                 = 2

};

// Enum  GameplayTasks.EGameplayTaskRunResult
enum class EGameplayTaskRunResult : uint8_t
{
    Error                                          = 0,
    Failed                                         = 1,
    Success_Paused                                 = 2,
    Success_Active                                 = 3,
    Success_Finished                               = 4,
    EGameplayTaskRunResult_MAX                     = 5

};

// Enum  GameplayAbilities.EGameplayAbilityActivationMode
enum class EGameplayAbilityActivationMode : uint8_t
{
    Authority                                      = 0,
    NonAuthority                                   = 1,
    Predicting                                     = 2,
    Confirmed                                      = 3,
    Rejected                                       = 4,
    EGameplayAbilityActivationMode_MAX             = 5

};

// Enum  GameplayAbilities.EAbilityGenericReplicatedEvent
enum class EAbilityGenericReplicatedEvent : uint8_t
{
    GenericConfirm                                 = 0,
    GenericCancel                                  = 1,
    InputPressed                                   = 2,
    InputReleased                                  = 3,
    GenericSignalFromClient                        = 4,
    GenericSignalFromServer                        = 5,
    GameCustom1                                    = 6,
    GameCustom2                                    = 7,
    GameCustom3                                    = 8,
    GameCustom4                                    = 9,
    GameCustom5                                    = 10,
    GameCustom6                                    = 11,
    MAX                                            = 12

};

// Enum  Engine.EFastArraySerializerDeltaFlags
enum class EFastArraySerializerDeltaFlags : uint8_t
{
    None                                           = 0,
    HasBeenSerialized                              = 1,
    HasDeltaBeenRequested                          = 2,
    IsUsingDeltaSerialization                      = 4,
    EFastArraySerializerDeltaFlags_MAX             = 5

};

// Enum  GPAbility.EGPAbilityGivenPolicy
enum class EGPAbilityGivenPolicy : uint8_t
{
    GiveNew                                        = 0,
    GiveOnce                                       = 1,
    FindOrGiveNew                                  = 2,
    FindOrGiveOnce                                 = 3,
    FindExisted                                    = 4,
    OnceFlag                                       = 1,
    FindFlag                                       = 2,
    EGPAbilityGivenPolicy_MAX                      = 5

};

// Enum  GPAbility.EAttributeSetTickType
enum class EAttributeSetTickType : uint8_t
{
    None                                           = 0,
    ServerSide                                     = 1,
    ClientSide                                     = 2,
    BothSide                                       = 3,
    Max                                            = 4

};

// Enum  GPAbility.EGPValidFlag
enum class EGPValidFlag : uint8_t
{
    Valid                                          = 0,
    Invalid                                        = 1,
    EGPValidFlag_MAX                               = 2

};

// Enum  GPAbility.EEditorExec
enum class EEditorExec : uint8_t
{
    InEditorExec                                   = 0,
    NoEditorExec                                   = 1,
    EEditorExec_MAX                                = 2

};

// Enum  GameplayAbilities.EGameplayEffectReplicationMode
enum class EGameplayEffectReplicationMode : uint8_t
{
    Minimal                                        = 0,
    Mixed                                          = 1,
    Full                                           = 2,
    EGameplayEffectReplicationMode_MAX             = 3

};

// Enum  GameplayAbilities.EAbilityTaskWaitState
enum class EAbilityTaskWaitState : uint8_t
{
    WaitingOnGame                                  = 1,
    WaitingOnUser                                  = 2,
    WaitingOnAvatar                                = 4,
    EAbilityTaskWaitState_MAX                      = 5

};

// Enum  GameplayAbilities.ERootMotionMoveToActorTargetOffsetType
enum class ERootMotionMoveToActorTargetOffsetType : uint8_t
{
    AlignFromTargetToSource                        = 0,
    AlignToTargetForward                           = 1,
    AlignToWorldSpace                              = 2,
    ERootMotionMoveToActorTargetOffsetType_MAX     = 3

};

// Enum  GameplayAbilities.EAbilityTaskNetSyncType
enum class EAbilityTaskNetSyncType : uint8_t
{
    BothWait                                       = 0,
    OnlyServerWait                                 = 1,
    OnlyClientWait                                 = 2,
    EAbilityTaskNetSyncType_MAX                    = 3

};

// Enum  GameplayAbilities.EWaitAttributeChangeComparison
enum class EWaitAttributeChangeComparison : uint8_t
{
    None                                           = 0,
    GreaterThan                                    = 1,
    LessThan                                       = 2,
    GreaterThanOrEqualTo                           = 3,
    LessThanOrEqualTo                              = 4,
    NotEqualTo                                     = 5,
    ExactlyEqualTo                                 = 6,
    MAX                                            = 7

};

// Enum  GameplayAbilities.EGameplayAbilityInputBinds
enum class EGameplayAbilityInputBinds : uint8_t
{
    Ability1                                       = 0,
    Ability2                                       = 1,
    Ability3                                       = 2,
    Ability4                                       = 3,
    Ability5                                       = 4,
    Ability6                                       = 5,
    Ability7                                       = 6,
    Ability8                                       = 7,
    Ability9                                       = 8,
    EGameplayAbilityInputBinds_MAX                 = 9

};

// Enum  GameplayAbilities.ETargetDataFilterSelf
enum class ETargetDataFilterSelf : uint8_t
{
    TDFS_Any                                       = 0,
    TDFS_NoSelf                                    = 1,
    TDFS_NoOthers                                  = 2,
    TDFS_MAX                                       = 3

};

// Enum  GameplayAbilities.EGameplayAbilityTargetingLocationType
enum class EGameplayAbilityTargetingLocationType : uint8_t
{
    LiteralTransform                               = 0,
    ActorTransform                                 = 1,
    SocketTransform                                = 2,
    EGameplayAbilityTargetingLocationType_MAX      = 3

};

// Enum  GameplayAbilities.EGameplayTargetingConfirmation
enum class EGameplayTargetingConfirmation : uint8_t
{
    Instant                                        = 0,
    UserConfirmed                                  = 1,
    Custom                                         = 2,
    CustomMulti                                    = 3,
    EGameplayTargetingConfirmation_MAX             = 4

};

// Enum  GameplayAbilities.EGameplayAbilityTriggerSource
enum class EGameplayAbilityTriggerSource : uint8_t
{
    GameplayEvent                                  = 0,
    OwnedTagAdded                                  = 1,
    OwnedTagPresent                                = 2,
    EGameplayAbilityTriggerSource_MAX              = 3

};

// Enum  GameplayAbilities.EGameplayAbilityReplicationPolicy
enum class EGameplayAbilityReplicationPolicy : uint8_t
{
    ReplicateNo                                    = 0,
    ReplicateYes                                   = 1,
    EGameplayAbilityReplicationPolicy_MAX          = 2

};

// Enum  GameplayAbilities.EGameplayAbilityNetExecutionPolicy
enum class EGameplayAbilityNetExecutionPolicy : uint8_t
{
    LocalPredicted                                 = 0,
    LocalOnly                                      = 1,
    ServerInitiated                                = 2,
    ServerOnly                                     = 3,
    EGameplayAbilityNetExecutionPolicy_MAX         = 4

};

// Enum  GameplayAbilities.EGameplayAbilityInstancingPolicy
enum class EGameplayAbilityInstancingPolicy : uint8_t
{
    NonInstanced                                   = 0,
    InstancedPerActor                              = 1,
    InstancedPerExecution                          = 2,
    EGameplayAbilityInstancingPolicy_MAX           = 3

};

// Enum  GameplayAbilities.EGameplayCuePayloadType
enum class EGameplayCuePayloadType : uint8_t
{
    EffectContext                                  = 0,
    CueParameters                                  = 1,
    FromSpec                                       = 2,
    EGameplayCuePayloadType_MAX                    = 3

};

// Enum  GameplayAbilities.EGameplayEffectPeriodInhibitionRemovedPolicy
enum class EGameplayEffectPeriodInhibitionRemovedPolicy : uint8_t
{
    NeverReset                                     = 0,
    ResetPeriod                                    = 1,
    ExecuteAndResetPeriod                          = 2,
    EGameplayEffectPeriodInhibitionRemovedPolicy_MAX = 3

};

// Enum  GameplayAbilities.EGameplayEffectStackingExpirationPolicy
enum class EGameplayEffectStackingExpirationPolicy : uint8_t
{
    ClearEntireStack                               = 0,
    RemoveSingleStackAndRefreshDuration            = 1,
    RefreshDuration                                = 2,
    EGameplayEffectStackingExpirationPolicy_MAX    = 3

};

// Enum  GameplayAbilities.EGameplayEffectStackingPeriodPolicy
enum class EGameplayEffectStackingPeriodPolicy : uint8_t
{
    ResetOnSuccessfulApplication                   = 0,
    NeverReset                                     = 1,
    EGameplayEffectStackingPeriodPolicy_MAX        = 2

};

// Enum  GameplayAbilities.EGameplayEffectStackingDurationPolicy
enum class EGameplayEffectStackingDurationPolicy : uint8_t
{
    RefreshOnSuccessfulApplication                 = 0,
    NeverRefresh                                   = 1,
    EGameplayEffectStackingDurationPolicy_MAX      = 2

};

// Enum  GameplayAbilities.EGameplayEffectDurationType
enum class EGameplayEffectDurationType : uint8_t
{
    Instant                                        = 0,
    Infinite                                       = 1,
    HasDuration                                    = 2,
    EGameplayEffectDurationType_MAX                = 3

};

// Enum  GameplayAbilities.EGameplayEffectScopedModifierAggregatorType
enum class EGameplayEffectScopedModifierAggregatorType : uint8_t
{
    CapturedAttributeBacked                        = 0,
    Transient                                      = 1,
    EGameplayEffectScopedModifierAggregatorType_MAX = 2

};

// Enum  GameplayAbilities.EAttributeBasedFloatCalculationType
enum class EAttributeBasedFloatCalculationType : uint8_t
{
    AttributeMagnitude                             = 0,
    AttributeBaseValue                             = 1,
    AttributeBonusMagnitude                        = 2,
    AttributeMagnitudeEvaluatedUpToChannel         = 3,
    EAttributeBasedFloatCalculationType_MAX        = 4

};

// Enum  GameplayAbilities.EGameplayEffectMagnitudeCalculation
enum class EGameplayEffectMagnitudeCalculation : uint8_t
{
    ScalableFloat                                  = 0,
    AttributeBased                                 = 1,
    CustomCalculationClass                         = 2,
    SetByCaller                                    = 3,
    EGameplayEffectMagnitudeCalculation_MAX        = 4

};

// Enum  GameplayAbilities.EGameplayTagEventType
enum class EGameplayTagEventType : uint8_t
{
    NewOrRemoved                                   = 0,
    AnyCountChange                                 = 1,
    EGameplayTagEventType_MAX                      = 2

};

// Enum  GameplayAbilities.EGameplayCueEvent
enum class EGameplayCueEvent : uint8_t
{
    OnActive                                       = 0,
    WhileActive                                    = 1,
    Executed                                       = 2,
    Removed                                        = 3,
    EGameplayCueEvent_MAX                          = 4

};

// Enum  GameplayAbilities.EGameplayEffectStackingType
enum class EGameplayEffectStackingType : uint8_t
{
    None                                           = 0,
    AggregateBySource                              = 1,
    AggregateByTarget                              = 2,
    EGameplayEffectStackingType_MAX                = 3

};

// Enum  GameplayAbilities.EGameplayModOp
enum class EGameplayModOp : uint8_t
{
    Additive                                       = 0,
    Multiplicitive                                 = 1,
    Division                                       = 2,
    Override                                       = 3,
    Max                                            = 4

};

// Enum  GameplayAbilities.EGameplayModEvaluationChannel
enum class EGameplayModEvaluationChannel : uint8_t
{
    Channel0                                       = 0,
    Channel1                                       = 1,
    Channel2                                       = 2,
    Channel3                                       = 3,
    Channel4                                       = 4,
    Channel5                                       = 5,
    Channel6                                       = 6,
    Channel7                                       = 7,
    Channel8                                       = 8,
    Channel9                                       = 9,
    Channel_MAX                                    = 10,
    EGameplayModEvaluationChannel_MAX              = 11

};

// Enum  GPAudioRuntime.EGPEventCallbackType
enum class EGPEventCallbackType : uint8_t
{
    BeginPlay                                      = 0,
    EndPlay                                        = 1,
    StopWhenLoading                                = 2,
    PlayFailed                                     = 3,
    AsyncPlayFailed                                = 4,
    EGPEventCallbackType_MAX                       = 5

};

// Enum  GPAudioRuntime.EGPAnimNotifyType
enum class EGPAnimNotifyType : uint8_t
{
    None                                           = 0,
    GAudio                                         = 1,
    Foot                                           = 2,
    EGPAnimNotifyType_MAX                          = 3

};

// Enum  GPAudioRuntime.EGPGameAudioGeometryType
enum class EGPGameAudioGeometryType : uint8_t
{
    OBB                                            = 0,
    Cylinder                                       = 1,
    EGPGameAudioGeometryType_MAX                   = 2

};

// Enum  GPAudioRuntime.EGameAudioVolumeOutOfPlanType
enum class EGameAudioVolumeOutOfPlanType : uint8_t
{
    PROJECT_ANY                                    = 0,
    PROJECT_NORMAL_PLAN_SEG                        = 1,
    PROJECT_NORMAL_PLAN_Z                          = 2,
    SECTOR_XY                                      = 3,
    EGameAudioVolumeOutOfPlanType_MAX              = 4

};

// Enum  GPAudioRuntime.ESpatialVolumeDisableCondition
enum class ESpatialVolumeDisableCondition : uint8_t
{
    CONDITION_CRACKED_BIG_EVENT                    = 0,
    CONDITION_CRACKED_BIG_MAX                      = 1

};

// Enum  GPAudioRuntime.EAudioFootStepCompanionPlayCondition
enum class EAudioFootStepCompanionPlayCondition : uint8_t
{
    CONDITION_DEFAULT                              = 0,
    CONDITION_ABILITY_OVERLOAD                     = 1,
    CONDITION_ABILITY_BlastShield                  = 2,
    CONDITION_ABILITY_HeavyRain                    = 3,
    CONDITION_MAX                                  = 4

};

// Enum  GPAudioRuntime.EFaceOperateMode
enum class EFaceOperateMode : uint8_t
{
    Expand                                         = 0,
    Shrink                                         = 1,
    Expand_CollisionCheck                          = 2,
    Shrink_CollisionCheck                          = 3,
    EFaceOperateMode_MAX                           = 4

};

// Enum  GPAudioRuntime.EGPAkCompPoolMethod
enum class EGPAkCompPoolMethod : uint8_t
{
    None                                           = 0,
    AutoRelease                                    = 1,
    ManualRelease                                  = 2,
    ManualRelease_OnComplete                       = 3,
    FreeInPool                                     = 4,
    EGPAkCompPoolMethod_MAX                        = 5

};

// Enum  GPAudioRuntime.EGPAudioDebugPlayFlag
enum class EGPAudioDebugPlayFlag : uint8_t
{
    PLAY_ALL                                       = 0,
    PLAY_ONLY_1P                                   = 1,
    PLAY_ONLY_3P                                   = 2,
    PLAY_MAX                                       = 3

};

// Enum  GPAudioRuntime.EGPAudioEventLimitFireType
enum class EGPAudioEventLimitFireType : uint8_t
{
    WP_NORMAL_FIRE                                 = 0,
    WP_SUP_FIRE                                    = 1,
    WP_BULLET_FLY                                  = 2,
    WP_BULLET_CRACK                                = 3,
    WP_MAX                                         = 4

};

// Enum  GPAudioRuntime.EGPAudioEventLimitFootStepType
enum class EGPAudioEventLimitFootStepType : uint8_t
{
    E_FOOT_STEP                                    = 0,
    E_FOOT_STEP_SPRINT                             = 1,
    E_FOOT_STEP_RUN                                = 2,
    E_FOOT_STEP_PRONE                              = 3,
    E_FOOT_STEP_MED                                = 4,
    E_FOOT_STEP_SLIDETACKLE                        = 5,
    E_FOOT_MAX                                     = 6

};

// Enum  GPAudioRuntime.EGPAudioEventLimitCharGroup
enum class EGPAudioEventLimitCharGroup : uint8_t
{
    Never                                          = 0,
    Player                                         = 1,
    Ally                                           = 2,
    Enemy                                          = 3,
    EGPAudioEventLimitCharGroup_MAX                = 4

};

// Enum  GPAudioRuntime.EGPAudioEventLimitType
enum class EGPAudioEventLimitType : uint8_t
{
    Never                                          = 0,
    GameObject                                     = 1,
    Event                                          = 2,
    EGPAudioEventLimitType_MAX                     = 3

};

// Enum  GPAudioRuntime.EQuadrantDirection
enum class EQuadrantDirection : uint8_t
{
    EQD_F                                          = 0,
    EQD_L                                          = 1,
    EQD_R                                          = 2,
    EQD_B                                          = 3,
    EQD_MAX                                        = 4

};

// Enum  GPAudioRuntime.EBusStateEnum
enum class EBusStateEnum : uint8_t
{
    Inactive                                       = 0,
    WaitingActiveConfirm                           = 1,
    Active                                         = 2,
    WaitingInactiveConfirm                         = 3,
    Release                                        = 4,
    EBusStateEnum_MAX                              = 5

};

// Enum  GPAudioRuntime.EMusicLoopType
enum class EMusicLoopType : uint8_t
{
    ELOOP_ONE                                      = 0,
    ELOOP_RANDOM                                   = 1,
    ELOOP_MAX                                      = 2

};

// Enum  GPAudioRuntime.EGPAudioAniNotifyType
enum class EGPAudioAniNotifyType : uint8_t
{
    EANI_CHANGLE_CLIP                              = 0,
    EANI_CHANGLE                                   = 1,
    EANI_CHANGLE                                   = 2,
    EANI_CHANGLE                                   = 3,
    EANI_CHANGLE                                   = 4,
    EANI_CHANGLE                                   = 5,
    EANI_CHANGLE                                   = 6,
    EANI_CHANGLE                                   = 7,
    EANI_CHANGLE                                   = 8,
    EANI_CHANGLE                                   = 9,
    EANI_CHANGLE                                   = 10,
    EANI_CHANGLE                                   = 11,
    EANI_CHANGLE                                   = 12,
    EANI_CHANGLE                                   = 13,
    EANI_CHANGLE                                   = 14,
    EANI_CHANGLE                                   = 15,
    EANI_CHANGLE                                   = 16,
    EANI_CHANGLE                                   = 17,
    EANI_CHANGLE                                   = 18,
    EANI_CHANGLE                                   = 19,
    EANI_CHANGLE                                   = 20,
    EANI_CHANGLE                                   = 21,
    EANI_CHANGLE                                   = 22,
    EANI_CHANGLE                                   = 23,
    EANI_CHANGLE                                   = 24,
    EANI_CHANGLE                                   = 25,
    EANI_CHANGLE                                   = 26,
    EANI_CHANGLE                                   = 27,
    EANI_CHANGLE                                   = 28,
    EANI_CHANGLE                                   = 29,
    EANI_CHANGLE                                   = 30,
    EANI_CHANGLE                                   = 31,
    EANI_CHANGLE                                   = 32,
    EANI_CHANGLE                                   = 33,
    EANI_CHANGLE                                   = 34,
    EANI_CHANGLE                                   = 35,
    EANI_CHANGLE                                   = 36,
    EANI_CHANGLE                                   = 37,
    EANI_CHANGLE                                   = 38,
    EANI_CHANGLE                                   = 39,
    EANI_CHANGLE                                   = 40,
    EANI_CHANGLE                                   = 41,
    EANI_CHANGLE                                   = 42,
    EANI_CHANGLE                                   = 43,
    EANI_CHANGLE                                   = 44,
    EANI_CHANGLE                                   = 45,
    EANI_CHANGLE                                   = 46,
    EANI_CHANGLE                                   = 47,
    EANI_CHANGLE                                   = 48,
    EANI_CHANGLE                                   = 49,
    EANI_CHANGLE                                   = 50,
    EANI_CHANGLE                                   = 51,
    EANI_CHANGLE                                   = 52,
    EANI_CHANGLE                                   = 53,
    EANI_CHANGLE_MAX                               = 54

};

// Enum  GPAudioRuntime.EGPAudioBlueprintType
enum class EGPAudioBlueprintType : uint8_t
{
    None                                           = 0,
    Default                                        = 1,
    Music_OutGame                                  = 2,
    Music_Ingame                                   = 3,
    Character_Voice                                = 11,
    Character_Breath                               = 12,
    Character_Action                               = 13,
    Character_Footstep                             = 14,
    Character_Skill                                = 15,
    Character_Prop                                 = 16,
    Character_Rescue                               = 17,
    Voice_NPC                                      = 31,
    Voice_System                                   = 32,
    Ambience                                       = 41,
    Object_Static                                  = 42,
    Object_Scale                                   = 43,
    Weapon_Action                                  = 61,
    Weapon_Reload                                  = 62,
    Weapon_Fire                                    = 63,
    Weapon_Fire_Sup                                = 64,
    Weapon_Bullet                                  = 65,
    Explosion                                      = 81,
    Vehicle                                        = 82,
    Drone                                          = 83,
    EGPAudioBlueprintType_MAX                      = 84

};

// Enum  GPAudioRuntime.EGPAudioFootSoundType
enum class EGPAudioFootSoundType : uint8_t
{
    EACTION_DEFAULT                                = 0,
    EACTION_FOOTSTEP_RUN                           = 1,
    EACTION_FOOTSTEP_WALK                          = 2,
    EACTION_FOOTSTEP_AI_WALK                       = 3,
    EACTION_FOOTSTEP_SPRINT                        = 4,
    EACTION_FOOTSTEP_PRONE                         = 5,
    EACTION_FOOTSTEP_Crouch_Run                    = 6,
    EACTION_FOOTSTEP_Crouch_Walk                   = 7,
    EACTION_FOOTSTEP_AI_Crouch_Walk                = 8,
    EACTION_FOOTSTEP_JUMP                          = 9,
    EACTION_FOOTSTEP_BodyFall                      = 10,
    EACTION_FOOTSTEP_LandHigh                      = 11,
    EACTION_FOOTSTEP_LandMedium                    = 12,
    EACTION_FOOTSTEP_LandLow                       = 13,
    EACTION_FOOTSTEP_LandDie                       = 14,
    EACTION_FOOTSTEP_Shuffle                       = 15,
    EACTION_FOOTSTEP_SPRINT_STOP                   = 16,
    EACTION_FOOTSTEP_FRACTURE_WALK                 = 17,
    EACTION_FOOTSTEP_FRACTURE_RUN                  = 18,
    EACTION_FOOTSTEP_HandTouch_High                = 19,
    EACTION_FOOTSTEP_HandTouch_Low                 = 20,
    EACTION_FOOTSTEP_SLIDETACKLE                   = 21,
    EACTION_FOOTSTEP_SLIDETACKLE_END               = 22,
    EACTION_FOOTSTEP_DiveStart                     = 23,
    EACTION_FOOTSTEP_DiveEnd                       = 24,
    EACTION_FOOTSTEP_SwimmingStart                 = 25,
    EACTION_FOOTSTEP_Swimming                      = 26,
    EACTION_FOOTSTEP_SwimmingFast                  = 27,
    EACTION_FOOTSTEP_SwimmingBack                  = 28,
    EACTION_FOOTSTEP_SwimmingTreading              = 29,
    EACTION_FOOTSTEP_SwimmingEnd                   = 30,
    EACTION_FOOTSTEP_SwimmingTreadingInsweep       = 31,
    EACTION_FOOTSTEP_SwimmingTurn                  = 32,
    EACTION_MAX                                    = 33

};

// Enum  GPAudioRuntime.EGPAudioFootSoundBodyType
enum class EGPAudioFootSoundBodyType : uint8_t
{
    Default                                        = 0,
    Male                                           = 1,
    Female                                         = 2,
    FatGuy                                         = 3,
    Crocodile                                      = 4,
    EGPAudioFootSoundBodyType_MAX                  = 5

};

// Enum  GPAudioRuntime.ERadioCuttingType
enum class ERadioCuttingType : uint8_t
{
    ERANGE_PLAY                                    = 0,
    EALWAYS_PLAY                                   = 1,
    ERadioCuttingType_MAX                          = 2

};

// Enum  GPAudioRuntime.ERadioChannelLoopType
enum class ERadioChannelLoopType : uint8_t
{
    ELOOP_RANDOM                                   = 0,
    ELOOP_SEQUENCE                                 = 1,
    ELOOP_ONE                                      = 2,
    EONE_SEQUENCE                                  = 3,
    ELOOP_PRESET                                   = 4,
    ERadioChannelLoopType_MAX                      = 5

};

// Enum  GPAudioRuntime.EGPAudioReverbType
enum class EGPAudioReverbType : uint8_t
{
    Default                                        = 0,
    Room                                           = 1,
    Pipe                                           = 2,
    HalfOpen                                       = 3,
    Alley                                          = 4,
    OpenField                                      = 5,
    EGPAudioReverbType_MAX                         = 6

};

// Enum  GPAudioRuntime.EGPABakeSubZoneType
enum class EGPABakeSubZoneType : uint8_t
{
    AABB                                           = 0,
    OBB                                            = 1,
    CYLINDER                                       = 2,
    EGPABakeSubZoneType_MAX                        = 3

};

// Enum  GPAudioRuntime.EGPAudioRoomBakeDataType
enum class EGPAudioRoomBakeDataType : uint8_t
{
    S_ARRAY_DS_MAP                                 = 0,
    RUN_LENGTH_COMPRESS                            = 1,
    CELL_INDEX_INONE                               = 2,
    CELL_INDEX_INONE_SET                           = 3,
    CELL_INDEX_MAP                                 = 4,
    EGPAudioRoomBakeDataType_MAX                   = 5

};

// Enum  GPAudioRuntime.EGPARoomBakeInterpolationType
enum class EGPARoomBakeInterpolationType : uint8_t
{
    NONE                                           = 0,
    RANGE_DIS_WEIGHT                               = 1,
    AVG_RANGE                                      = 2,
    EGPARoomBakeInterpolationType_MAX              = 3

};

// Enum  GPAudioRuntime.EAttenuationScaleType
enum class EAttenuationScaleType : uint8_t
{
    ESCALE_GLOBAL                                  = 0,
    ESCALE_NON_SCALE                               = 1,
    ESCALE_TYPE_CONFIG                             = 2,
    ESCALE_SPECIFIC                                = 3,
    ESCALE_MAX                                     = 4

};

// Enum  GPAudioRuntime.EGPAudioEnvEmitterState
enum class EGPAudioEnvEmitterState : uint8_t
{
    EEmitterPlay3D                                 = 0,
    EEmitterPlay2D                                 = 1,
    EEmitterStopPlay                               = 2,
    EGPAudioEnvEmitterState_MAX                    = 3

};

// Enum  GPAudioRuntime.EGPAudioTag
enum class EGPAudioTag : uint8_t
{
    ETAG_FEMALE                                    = 0,
    ETAG_1P                                        = 1,
    ETAG_3P                                        = 2,
    ETAG_SUP                                       = 3,
    ETAG_RAID                                      = 4,
    ETAG_WT                                        = 5,
    ETAG_SUB                                       = 6,
    ETAG_MAX                                       = 7

};

// Enum  GPAudioRuntime.EAudioCharacterGroup
enum class EAudioCharacterGroup : uint8_t
{
    EGROUP_ALL                                     = 0,
    EGROUP_LOCALLY                                 = 1,
    EGROUP_NON_LOCALLY                             = 2,
    EGROUP_TEAM_ALL                                = 3,
    EGROUP_TEAMATE                                 = 4,
    EGROUP_SAMECAMP_ALL                            = 5,
    EGROUP_SAMECAMP                                = 6,
    EGROUP_ENEMY                                   = 7,
    EGROUP_MAX                                     = 8

};

// Enum  GPAudioRuntime.EAudioCharacterViewState
enum class EAudioCharacterViewState : uint8_t
{
    ESTATE_NONE                                    = 0,
    ESTATE_IP                                      = 1,
    ESTATE_LOCALLY_3P                              = 2,
    ESTATE_REMOTE_3P                               = 3,
    ESTATE_AI_3P                                   = 4,
    ESTATE_MAX                                     = 5

};

// Enum  GPAudioRuntime.EGPAOpenReflectionGeometryType
enum class EGPAOpenReflectionGeometryType : uint8_t
{
    BOX                                            = 0,
    OPENTANGENT                                    = 1,
    EGPAOpenReflectionGeometryType_MAX             = 2

};

// Enum  GPAudioRuntime.EGPATickFrameGroupType
enum class EGPATickFrameGroupType : uint8_t
{
    G_Default                                      = 0,
    G_OcclusionObstruction                         = 1,
    G_3PGameAKUpdateSpatial                        = 2,
    G_3PUpdateReverb                               = 3,
    G_UpdateFoliage                                = 4,
    G_MAX                                          = 5

};

// Enum  GPAudioRuntime.EGPAudioActorEndPlayStopType
enum class EGPAudioActorEndPlayStopType : uint8_t
{
    STOP_LOOP                                      = 0,
    STOP_ALL                                       = 1,
    DO_NOTHING                                     = 2,
    EGPAudioActorEndPlayStopType_MAX               = 3

};

// Enum  GPAudioRuntime.EStopAllSoundType
enum class EStopAllSoundType : uint8_t
{
    ESCALE_ALL                                     = 0,
    ESCALE_MAX                                     = 1

};

// Enum  GPAudioRuntime.EGPAudioActionOnEventType
enum class EGPAudioActionOnEventType : uint8_t
{
    Stop                                           = 0,
    Pause                                          = 1,
    Resume                                         = 2,
    Break                                          = 3,
    ReleaseEnvelope                                = 4,
    EGPAudioActionOnEventType_MAX                  = 5

};

// Enum  GPAudioRuntime.EGPAudioWaterPreset
enum class EGPAudioWaterPreset : uint8_t
{
    NotSet                                         = 0,
    OutsideWater                                   = 1,
    InsideWater                                    = 2,
    EGPAudioWaterPreset_MAX                        = 3

};

// Enum  GPAudioRuntime.EWeapon3PFirePoolLevel
enum class EWeapon3PFirePoolLevel : uint8_t
{
    Normal                                         = 0,
    Warning                                        = 1,
    Danger                                         = 2,
    EWeapon3PFirePoolLevel_MAX                     = 3

};

// Enum  GPAudioRuntime.EGPFootSoundAttenuationScaleType
enum class EGPFootSoundAttenuationScaleType : uint8_t
{
    EGPFSAST_None                                  = 0,
    EGPFSAST_CatGirl                               = 1,
    EGPFSAST_MAX                                   = 2

};

// Enum  GPAudioRuntime.EGPAttenuationScaleReason
enum class EGPAttenuationScaleReason : uint8_t
{
    None                                           = 0,
    Headset                                        = 1,
    CatGirl_CrouchMove                             = 2,
    Buff                                           = 3,
    Shadow_Skill                                   = 4,
    EGPAttenuationScaleReason_MAX                  = 5

};

// Enum  GPAudioRuntime.EGameAkHighFreqUpdatePosReason
enum class EGameAkHighFreqUpdatePosReason : uint8_t
{
    DrivenVehicle                                  = 0,
    ControlCruiseMissile                           = 1,
    Elevator                                       = 2,
    StepOnVehicle                                  = 3,
    EGameAkHighFreqUpdatePosReason_MAX             = 4

};

// Enum  GPAudioRuntime.EObserveredAudioState
enum class EObserveredAudioState : uint8_t
{
    NotSet                                         = 0,
    Observered                                     = 1,
    NotObservered                                  = 2,
    EObserveredAudioState_MAX                      = 3

};

// Enum  GPAudioRuntime.EAudioPortalType
enum class EAudioPortalType : uint8_t
{
    None                                           = 0,
    Normal                                         = 1,
    Roomy                                          = 2,
    Transparent                                    = 3,
    EAudioPortalType_MAX                           = 4

};

// Enum  GPAudioRuntime.EAudioVolumeType
enum class EAudioVolumeType : uint8_t
{
    Default                                        = 0,
    GameArea                                       = 1,
    SpatialRoom                                    = 2,
    Portal                                         = 3,
    POIArea                                        = 4,
    EAudioVolumeType_MAX                           = 5

};

// Enum  GPAudioRuntime.EGPAudioComponent
enum class EGPAudioComponent : uint8_t
{
    ECP_NONE                                       = 0,
    ECP_BARREL                                     = 1,
    ECP_STOCK                                      = 2,
    ECP_MAGAZINE                                   = 3,
    ECP_MAX                                        = 4

};

// Enum  GPAudioRuntime.EAudioWeatherType
enum class EAudioWeatherType : uint32_t
{
    None                                           = 0,
    Sunnyday                                       = 8008,
    Cloudy                                         = 9002,
    HeavyRain                                      = 9003,
    Foggy                                          = 9004,
    Sunnyday                                       = 20001,
    EAudioWeatherType_MAX                          = 20002

};

// Enum  GPAudioRuntime.EGameAkType
enum class EGameAkType : uint8_t
{
    EGAMEAK_DEFAULT                                = 0,
    EGAMEAK_STATIC                                 = 1,
    EGAMEAK_TRAVELER                               = 2,
    EGAMEAK_MAX                                    = 3

};

// Enum  GPAudioRuntime.EGPAudioFloorType
enum class EGPAudioFloorType : uint8_t
{
    GP_AUDIO_FLOOR_TYPE_DEFAULT                    = 0,
    GP_AUDIO_FLOOR_TYPE_UPSTAIRS                   = 1,
    GP_AUDIO_FLOOR_TYPE_UPSTAIRS                   = 2,
    GP_AUDIO_FLOOR_TYPE_Downstairs                 = 3,
    GP_AUDIO_FLOOR_TYPE_Downstairs                 = 4,
    GP_AUDIO_FLOOR_TYPE_MAX                        = 5

};

// Enum  AkAudio.EAkCallbackType
enum class EAkCallbackType : uint8_t
{
    EndOfEvent                                     = 0,
    Marker                                         = 2,
    Duration                                       = 3,
    Starvation                                     = 5,
    MusicPlayStarted                               = 7,
    MusicSyncBeat                                  = 8,
    MusicSyncBar                                   = 9,
    MusicSyncEntry                                 = 10,
    MusicSyncExit                                  = 11,
    MusicSyncGrid                                  = 12,
    MusicSyncUserCue                               = 13,
    MusicSyncPoint                                 = 14,
    MIDIEvent                                      = 16,
    EAkCallbackType_MAX                            = 17

};

// Enum  AkAudio.EAkResult
enum class EAkResult : uint8_t
{
    NotImplemented                                 = 0,
    Success                                        = 1,
    Fail                                           = 2,
    PartialSuccess                                 = 3,
    NotCompatible                                  = 4,
    AlreadyConnected                               = 5,
    InvalidFile                                    = 7,
    AudioFileHeaderTooLarge                        = 8,
    MaxReached                                     = 9,
    InvalidID                                      = 14,
    IDNotFound                                     = 15,
    InvalidInstanceID                              = 16,
    NoMoreData                                     = 17,
    InvalidStateGroup                              = 20,
    ChildAlreadyHasAParent                         = 21,
    InvalidLanguage                                = 22,
    CannotAddItseflAsAChild                        = 23,
    InvalidParameter                               = 31,
    ElementAlreadyInList                           = 35,
    PathNotFound                                   = 36,
    PathNoVertices                                 = 37,
    PathNotRunning                                 = 38,
    PathNotPaused                                  = 39,
    PathNodeAlreadyInList                          = 40,
    PathNodeNotInList                              = 41,
    DataNeeded                                     = 43,
    NoDataNeeded                                   = 44,
    DataReady                                      = 45,
    NoDataReady                                    = 46,
    InsufficientMemory                             = 52,
    Cancelled                                      = 53,
    UnknownBankID                                  = 54,
    BankReadError                                  = 56,
    InvalidSwitchType                              = 57,
    FormatNotReady                                 = 63,
    WrongBankVersion                               = 64,
    FileNotFound                                   = 66,
    DeviceNotReady                                 = 67,
    BankAlreadyLoaded                              = 69,
    RenderedFX                                     = 71,
    ProcessNeeded                                  = 72,
    ProcessDone                                    = 73,
    MemManagerNotInitialized                       = 74,
    StreamMgrNotInitialized                        = 75,
    SSEInstructionsNotSupported                    = 76,
    Busy                                           = 77,
    UnsupportedChannelConfig                       = 78,
    PluginMediaNotAvailable                        = 79,
    MustBeVirtualized                              = 80,
    CommandTooLarge                                = 81,
    RejectedByFilter                               = 82,
    InvalidCustomPlatformName                      = 83,
    DLLCannotLoad                                  = 84,
    DLLPathNotFound                                = 85,
    NoJavaVM                                       = 86,
    OpenSLError                                    = 87,
    PluginNotRegistered                            = 88,
    DataAlignmentError                             = 89,
    EAkResult_MAX                                  = 90

};

// Enum  AkAudio.EAkAndroidAudioAPI
enum class EAkAndroidAudioAPI : uint8_t
{
    AAudio                                         = 0,
    OpenSL_ES                                      = 1,
    EAkAndroidAudioAPI_MAX                         = 2

};

// Enum  AkAudio.EAkAudioSessionMode
enum class EAkAudioSessionMode : uint8_t
{
    Default                                        = 0,
    VoiceChat                                      = 1,
    GameChat                                       = 2,
    VideoRecording                                 = 3,
    Measurement                                    = 4,
    MoviePlayback                                  = 5,
    VideoChat                                      = 6,
    EAkAudioSessionMode_MAX                        = 7

};

// Enum  AkAudio.EAkAudioSessionCategoryOptions
enum class EAkAudioSessionCategoryOptions : uint8_t
{
    MixWithOthers                                  = 0,
    DuckOthers                                     = 1,
    AllowBluetooth                                 = 2,
    DefaultToSpeaker                               = 3,
    EAkAudioSessionCategoryOptions_MAX             = 4

};

// Enum  AkAudio.EAkAudioSessionCategory
enum class EAkAudioSessionCategory : uint8_t
{
    Ambient                                        = 0,
    SoloAmbient                                    = 1,
    PlayAndRecord                                  = 2,
    EAkAudioSessionCategory_MAX                    = 3

};

// Enum  AkAudio.EReflectionFilterBits
enum class EReflectionFilterBits : uint8_t
{
    Wall                                           = 0,
    Ceiling                                        = 1,
    Floor                                          = 2,
    EReflectionFilterBits_MAX                      = 3

};

// Enum  AkAudio.AkCodecId
enum class AkCodecId : uint8_t
{
    None                                           = 0,
    PCM                                            = 1,
    ADPCM                                          = 2,
    XMA                                            = 3,
    Vorbis                                         = 4,
    AAC                                            = 10,
    ATRAC9                                         = 12,
    OpusNX                                         = 17,
    AkOpus                                         = 19,
    AkOpusWEM                                      = 20,
    AkCodecId_MAX                                  = 21

};

// Enum  AkAudio.EAkMidiCcValues
enum class EAkMidiCcValues : uint8_t
{
    AkMidiCcBankSelectCoarse                       = 0,
    AkMidiCcModWheelCoarse                         = 1,
    AkMidiCcBreathCtrlCoarse                       = 2,
    AkMidiCcCtrl3Coarse                            = 3,
    AkMidiCcFootPedalCoarse                        = 4,
    AkMidiCcPortamentoCoarse                       = 5,
    AkMidiCcDataEntryCoarse                        = 6,
    AkMidiCcVolumeCoarse                           = 7,
    AkMidiCcBalanceCoarse                          = 8,
    AkMidiCcCtrl9Coarse                            = 9,
    AkMidiCcPanPositionCoarse                      = 10,
    AkMidiCcExpressionCoarse                       = 11,
    AkMidiCcEffectCtrl1Coarse                      = 12,
    AkMidiCcEffectCtrl2Coarse                      = 13,
    AkMidiCcCtrl14Coarse                           = 14,
    AkMidiCcCtrl15Coarse                           = 15,
    AkMidiCcGenSlider1                             = 16,
    AkMidiCcGenSlider2                             = 17,
    AkMidiCcGenSlider3                             = 18,
    AkMidiCcGenSlider4                             = 19,
    AkMidiCcCtrl20Coarse                           = 20,
    AkMidiCcCtrl21Coarse                           = 21,
    AkMidiCcCtrl22Coarse                           = 22,
    AkMidiCcCtrl23Coarse                           = 23,
    AkMidiCcCtrl24Coarse                           = 24,
    AkMidiCcCtrl25Coarse                           = 25,
    AkMidiCcCtrl26Coarse                           = 26,
    AkMidiCcCtrl27Coarse                           = 27,
    AkMidiCcCtrl28Coarse                           = 28,
    AkMidiCcCtrl29Coarse                           = 29,
    AkMidiCcCtrl30Coarse                           = 30,
    AkMidiCcCtrl31Coarse                           = 31,
    AkMidiCcBankSelectFine                         = 32,
    AkMidiCcModWheelFine                           = 33,
    AkMidiCcBreathCtrlFine                         = 34,
    AkMidiCcCtrl3Fine                              = 35,
    AkMidiCcFootPedalFine                          = 36,
    AkMidiCcPortamentoFine                         = 37,
    AkMidiCcDataEntryFine                          = 38,
    AkMidiCcVolumeFine                             = 39,
    AkMidiCcBalanceFine                            = 40,
    AkMidiCcCtrl9Fine                              = 41,
    AkMidiCcPanPositionFine                        = 42,
    AkMidiCcExpressionFine                         = 43,
    AkMidiCcEffectCtrl1Fine                        = 44,
    AkMidiCcEffectCtrl2Fine                        = 45,
    AkMidiCcCtrl14Fine                             = 46,
    AkMidiCcCtrl15Fine                             = 47,
    AkMidiCcCtrl20Fine                             = 52,
    AkMidiCcCtrl21Fine                             = 53,
    AkMidiCcCtrl22Fine                             = 54,
    AkMidiCcCtrl23Fine                             = 55,
    AkMidiCcCtrl24Fine                             = 56,
    AkMidiCcCtrl25Fine                             = 57,
    AkMidiCcCtrl26Fine                             = 58,
    AkMidiCcCtrl27Fine                             = 59,
    AkMidiCcCtrl28Fine                             = 60,
    AkMidiCcCtrl29Fine                             = 61,
    AkMidiCcCtrl30Fine                             = 62,
    AkMidiCcCtrl31Fine                             = 63,
    AkMidiCcHoldPedal                              = 64,
    AkMidiCcPortamentoOnOff                        = 65,
    AkMidiCcSustenutoPedal                         = 66,
    AkMidiCcSoftPedal                              = 67,
    AkMidiCcLegatoPedal                            = 68,
    AkMidiCcHoldPedal2                             = 69,
    AkMidiCcSoundVariation                         = 70,
    AkMidiCcSoundTimbre                            = 71,
    AkMidiCcSoundReleaseTime                       = 72,
    AkMidiCcSoundAttackTime                        = 73,
    AkMidiCcSoundBrightness                        = 74,
    AkMidiCcSoundCtrl6                             = 75,
    AkMidiCcSoundCtrl7                             = 76,
    AkMidiCcSoundCtrl8                             = 77,
    AkMidiCcSoundCtrl9                             = 78,
    AkMidiCcSoundCtrl10                            = 79,
    AkMidiCcGeneralButton1                         = 80,
    AkMidiCcGeneralButton2                         = 81,
    AkMidiCcGeneralButton3                         = 82,
    AkMidiCcGeneralButton4                         = 83,
    AkMidiCcReverbLevel                            = 91,
    AkMidiCcTremoloLevel                           = 92,
    AkMidiCcChorusLevel                            = 93,
    AkMidiCcCelesteLevel                           = 94,
    AkMidiCcPhaserLevel                            = 95,
    AkMidiCcDataButtonP1                           = 96,
    AkMidiCcDataButtonM1                           = 97,
    AkMidiCcNonRegisterCoarse                      = 98,
    AkMidiCcNonRegisterFine                        = 99,
    AkMidiCcAllSoundOff                            = 120,
    AkMidiCcAllControllersOff                      = 121,
    AkMidiCcLocalKeyboard                          = 122,
    AkMidiCcAllNotesOff                            = 123,
    AkMidiCcOmniModeOff                            = 124,
    AkMidiCcOmniModeOn                             = 125,
    AkMidiCcOmniMonophonicOn                       = 126,
    AkMidiCcOmniPolyphonicOn                       = 127,
    EAkMidiCcValues_MAX                            = 128

};

// Enum  AkAudio.EAkMidiEventType
enum class EAkMidiEventType : uint8_t
{
    AkMidiEventTypeInvalid                         = 0,
    AkMidiEventTypeNoteOff                         = 128,
    AkMidiEventTypeNoteOn                          = 144,
    AkMidiEventTypeNoteAftertouch                  = 160,
    AkMidiEventTypeController                      = 176,
    AkMidiEventTypeProgramChange                   = 192,
    AkMidiEventTypeChannelAftertouch               = 208,
    AkMidiEventTypePitchBend                       = 224,
    AkMidiEventTypeSysex                           = 240,
    AkMidiEventTypeEscape                          = 247,
    AkMidiEventTypeMeta                            = 255,
    EAkMidiEventType_MAX                           = 256

};

// Enum  AkAudio.ERTPCValueType
enum class ERTPCValueType : uint8_t
{
    Default                                        = 0,
    Global                                         = 1,
    GameObject                                     = 2,
    PlayingID                                      = 3,
    Unavailable                                    = 4,
    ERTPCValueType_MAX                             = 5

};

// Enum  AkAudio.EAkCurveInterpolation
enum class EAkCurveInterpolation : uint8_t
{
    Log3                                           = 0,
    Sine                                           = 1,
    Log1                                           = 2,
    InvSCurve                                      = 3,
    Linear                                         = 4,
    SCurve                                         = 5,
    Exp1                                           = 6,
    SineRecip                                      = 7,
    Exp3                                           = 8,
    LastFadeCurve                                  = 8,
    Constant                                       = 9,
    EAkCurveInterpolation_MAX                      = 10

};

// Enum  AkAudio.AkActionOnEventType
enum class AkActionOnEventType : uint8_t
{
    Stop                                           = 0,
    Pause                                          = 1,
    Resume                                         = 2,
    Break                                          = 3,
    ReleaseEnvelope                                = 4,
    AkActionOnEventType_MAX                        = 5

};

// Enum  AkAudio.AkMultiPositionType
enum class AkMultiPositionType : uint8_t
{
    SingleSource                                   = 0,
    MultiSources                                   = 1,
    MultiDirections                                = 2,
    AkMultiPositionType_MAX                        = 3

};

// Enum  AkAudio.AkSpeakerConfiguration
enum class AkSpeakerConfiguration : uint32_t
{
    Ak_Speaker_Front_Left                          = 1,
    Ak_Speaker_Front_Right                         = 2,
    Ak_Speaker_Front_Center                        = 4,
    Ak_Speaker_Low_Frequency                       = 8,
    Ak_Speaker_Back_Left                           = 16,
    Ak_Speaker_Back_Right                          = 32,
    Ak_Speaker_Back_Center                         = 256,
    Ak_Speaker_Side_Left                           = 512,
    Ak_Speaker_Side_Right                          = 1024,
    Ak_Speaker_Top                                 = 2048,
    Ak_Speaker_Height_Front_Left                   = 4096,
    Ak_Speaker_Height_Front_Center                 = 8192,
    Ak_Speaker_Height_Front_Right                  = 16384,
    Ak_Speaker_Height_Back_Left                    = 32768,
    Ak_Speaker_Height_Back_Center                  = 65536,
    Ak_Speaker_Height_Back_Right                   = 131072,
    Ak_Speaker_MAX                                 = 131073

};

// Enum  AkAudio.AkChannelConfiguration
enum class AkChannelConfiguration : uint8_t
{
    Ak_Parent                                      = 0,
    Ak_LFE                                         = 1,
    Ak_1                                           = 2,
    Ak_2                                           = 3,
    Ak_2                                           = 4,
    Ak_3                                           = 5,
    Ak_3                                           = 6,
    Ak_4                                           = 7,
    Ak_4                                           = 8,
    Ak_5                                           = 9,
    Ak_5                                           = 10,
    Ak_7                                           = 11,
    Ak_5_1                                         = 12,
    Ak_7_1                                         = 13,
    Ak_7_1                                         = 14,
    Ak_Auro_9                                      = 15,
    Ak_Auro_10                                     = 16,
    Ak_Auro_11                                     = 17,
    Ak_Auro_13                                     = 18,
    Ak_Ambisonics_1st_order                        = 19,
    Ak_Ambisonics_2nd_order                        = 20,
    Ak_Ambisonics_3rd_order                        = 21,
    Ak_MAX                                         = 22

};

// Enum  AkAudio.AkAcousticPortalState
enum class AkAcousticPortalState : uint8_t
{
    Closed                                         = 0,
    Open                                           = 1,
    AkAcousticPortalState_MAX                      = 2

};

// Enum  AkAudio.PanningRule
enum class PanningRule : uint8_t
{
    PanningRule_Speakers                           = 0,
    PanningRule_Headphones                         = 1,
    PanningRule_MAX                                = 2

};

// Enum  AkAudio.LeakingMediaMemTickRule
enum class LeakingMediaMemTickRule : uint8_t
{
    None                                           = 0,
    TryUnsetMedia                                  = 1,
    ForceUnsetMedia_NonPlaying                     = 2,
    LeakingMediaMemTickRule_MAX                    = 3

};

// Enum  AkAudio.MediaMemReuseRule
enum class MediaMemReuseRule : uint8_t
{
    None                                           = 0,
    Only_Leaking                                   = 1,
    Leaking_And_OnSetting                          = 2,
    MediaMemReuseRule_MAX                          = 3

};

// Enum  AkAudio.AkMeshType
enum class AkMeshType : uint8_t
{
    StaticMesh                                     = 0,
    CollisionMesh                                  = 1,
    AkMeshType_MAX                                 = 2

};

// Enum  AkAudio.EAkHololensAudioAPI
enum class EAkHololensAudioAPI : uint8_t
{
    Wasapi                                         = 0,
    XAudio2                                        = 1,
    DirectSound                                    = 2,
    EAkHololensAudioAPI_MAX                        = 3

};

// Enum  AkAudio.EAkCommSystem
enum class EAkCommSystem : uint8_t
{
    Socket                                         = 0,
    HTCS                                           = 1,
    EAkCommSystem_MAX                              = 2

};

// Enum  AkAudio.EAkChannelMask
enum class EAkChannelMask : uint8_t
{
    FrontLeft                                      = 0,
    FrontRight                                     = 1,
    FrontCenter                                    = 2,
    LowFrequency                                   = 3,
    BackLeft                                       = 4,
    BackRight                                      = 5,
    BackCenter                                     = 8,
    SideLeft                                       = 9,
    SideRight                                      = 10,
    Top                                            = 11,
    HeightFrontLeft                                = 12,
    HeightFrontCenter                              = 13,
    HeightFrontRight                               = 14,
    HeightBackLeft                                 = 15,
    HeightBackCenter                               = 16,
    HeightBackRight                                = 17,
    EAkChannelMask_MAX                             = 18

};

// Enum  AkAudio.EAkChannelConfigType
enum class EAkChannelConfigType : uint8_t
{
    Anonymous                                      = 0,
    Standard                                       = 1,
    Ambisonic                                      = 2,
    EAkChannelConfigType_MAX                       = 3

};

// Enum  AkAudio.EAkDiffractionFlags
enum class EAkDiffractionFlags : uint8_t
{
    UseBuiltInParam                                = 0,
    UseObstruction                                 = 1,
    CalcEmitterVirtualPosition                     = 3,
    EAkDiffractionFlags_MAX                        = 4

};

// Enum  AkAudio.EAkPanningRule
enum class EAkPanningRule : uint8_t
{
    Speakers                                       = 0,
    Headphones                                     = 1,
    EAkPanningRule_MAX                             = 2

};

// Enum  AkAudio.EAkOcclusionTraceType
enum class EAkOcclusionTraceType : uint8_t
{
    Default                                        = 0,
    OnlyListenerToSourceSurfaceTrace               = 1,
    FourFurthestPointEvaluation                    = 2,
    EAkOcclusionTraceType_MAX                      = 3

};

// Enum  AkAudio.EAkOpenHarmonyAudioAPI
enum class EAkOpenHarmonyAudioAPI : uint8_t
{
    AAudio                                         = 0,
    OpenSL_ES                                      = 1,
    EAkOpenHarmonyAudioAPI_MAX                     = 2

};

// Enum  AkAudio.EAkFitToGeometryMode
enum class EAkFitToGeometryMode : uint8_t
{
    OrientedBox                                    = 0,
    AlignedBox                                     = 1,
    ConvexPolyhedron                               = 2,
    EAkFitToGeometryMode_MAX                       = 3

};

// Enum  AkAudio.EAkWindowsAudioAPI
enum class EAkWindowsAudioAPI : uint8_t
{
    Wasapi                                         = 0,
    XAudio2                                        = 1,
    DirectSound                                    = 2,
    EAkWindowsAudioAPI_MAX                         = 3

};

// Enum  GPTools.EGPTFlowMessageLevel
enum class EGPTFlowMessageLevel : uint8_t
{
    Log                                            = 0,
    Warning                                        = 1,
    Error                                          = 2,
    EGPTFlowMessageLevel_MAX                       = 3

};

// Enum  GPTools.EGPTConsoleCommandScope
enum class EGPTConsoleCommandScope : uint8_t
{
    Client                                         = 0,
    Server                                         = 1,
    All                                            = 2,
    EGPTConsoleCommandScope_MAX                    = 3

};

// Enum  GPNetNotice.EGPNetNoticeType
enum class EGPNetNoticeType : uint8_t
{
    Auto                                           = 0,
    EGPNetNoticeType_MAX                           = 1

};

// Enum  GPObjectPool.EGPObjectPoolRecycleType
enum class EGPObjectPoolRecycleType : uint8_t
{
    Auto                                           = 0,
    EGPObjectPoolRecycleType_MAX                   = 1

};

// Enum  GPTween.EaseType
enum class EaseType : uint8_t
{
    Linear                                         = 0,
    InSine                                         = 1,
    InQuad                                         = 2,
    InCubic                                        = 3,
    InQuart                                        = 4,
    InQuint                                        = 5,
    InExpo                                         = 6,
    InCirc                                         = 7,
    InElastic                                      = 8,
    InBack                                         = 9,
    InBounce                                       = 10,
    OutQuad                                        = 31,
    OutSine                                        = 32,
    OutCubic                                       = 33,
    OutQuart                                       = 34,
    OutQuint                                       = 35,
    OutExpo                                        = 36,
    OutCirc                                        = 37,
    OutElastic                                     = 38,
    OutBack                                        = 39,
    OutBounce                                      = 40,
    InOutQuad                                      = 61,
    InOutSine                                      = 62,
    InOutCubic                                     = 63,
    InOutQuart                                     = 64,
    InOutQuint                                     = 65,
    InOutExpo                                      = 66,
    InOutCirc                                      = 67,
    InOutElastic                                   = 68,
    InOutBack                                      = 69,
    InOutBounce                                    = 70,
    EaseType_MAX                                   = 71

};

// Enum  GPWeaponDefineForPlugin.EStateDepFrameCheckMode
enum class EStateDepFrameCheckMode : uint8_t
{
    NONE                                           = 0,
    NORMAL_MODE                                    = 1,
    STRICT_MODE                                    = 2,
    EStateDepFrameCheckMode_MAX                    = 3

};

// Enum  GPWeaponDefineForPlugin.ESwitchWeaponContext
enum class ESwitchWeaponContext : uint8_t
{
    Default                                        = 0,
    Client                                         = 1,
    Init                                           = 2,
    Input                                          = 3,
    Interact                                       = 4,
    Preview                                        = 5,
    AIController                                   = 6,
    AILab                                          = 7,
    AITask                                         = 8,
    SafeHouse                                      = 9,
    DSLogic                                        = 10,
    InventoryManager                               = 11,
    BattleFieldCharacter                           = 12,
    Ability                                        = 13,
    AIDifficulty                                   = 14,
    Skill                                          = 15,
    Looting                                        = 16,
    FuncPVE                                        = 17,
    RemoveWeapon                                   = 18,
    Character                                      = 19,
    MachineGun                                     = 20,
    Vehicle                                        = 21,
    SkillEnd                                       = 22,
    Reborn                                         = 23,
    WeaponBlueprint                                = 24,
    WeaponBase                                     = 25,
    InitDefWeapon                                  = 26,
    CharacterBase                                  = 27,
    ImpendingDeathAction                           = 28,
    SOLEscapedStateAction                          = 29,
    SwitchEmptyHandComponent                       = 30,
    OnHelicopterAction                             = 31,
    GM                                             = 32,
    CancelSwitchWeapon                             = 33,
    FastFire                                       = 34,
    JailBreak                                      = 35,
    SwimmingSprintBegin                            = 36,
    SwimmingSprintEnd                              = 37,
    ESwitchWeaponContext_MAX                       = 38

};

// Enum  GPWeaponDefineForPlugin.EWeaponAutoReloadOption
enum class EWeaponAutoReloadOption : uint8_t
{
    OncePerState                                   = 0,
    Always                                         = 1,
    EWeaponAutoReloadOption_MAX                    = 2

};

// Enum  GPWeaponDefineForPlugin.EHeadDetailType
enum class EHeadDetailType : uint8_t
{
    None                                           = 0,
    Head                                           = 1,
    FrontHead                                      = 2,
    FrontHeadDown                                  = 3,
    LeftHead                                       = 4,
    RightHead                                      = 5,
    BackHead                                       = 6,
    TopHead                                        = 7,
    EHeadDetailType_MAX                            = 8

};

// Enum  GPWeaponDefineForPlugin.EWeaponCancelCurrentStateReason
enum class EWeaponCancelCurrentStateReason : uint8_t
{
    GM                                             = 0,
    Knockback                                      = 1,
    CancelWeaponReload                             = 2,
    InteractivePutWeapon                           = 3,
    TwoHandedGestureAction                         = 4,
    VaultAndClimb                                  = 5,
    ApplySprayAction                               = 6,
    AssassinateGlobalAction                        = 7,
    OneHandedGestureAction                         = 8,
    RescueOperateAction                            = 9,
    SwitchClickSkillWeapon                         = 10,
    EnterSkillState                                = 11,
    WeaponBlueprintLibrary                         = 12,
    BowCancelCharging                              = 13,
    AbilityStopFire                                = 14,
    CancelPreFire                                  = 15,
    VehicleStateChange                             = 16,
    Parachute                                      = 17,
    Emote                                          = 18,
    Helmet                                         = 19,
    SlidingTackle                                  = 20,
    SkillCharacterStateConflict                    = 21,
    EMPBuff                                        = 22,
    SwimmingSprint                                 = 23,
    NetBuff                                        = 24,
    Zipline                                        = 25,
    EWeaponCancelCurrentStateReason_MAX            = 26

};

// Enum  GPWeaponDefineForPlugin.EGPWeaponTickFrequency
enum class EGPWeaponTickFrequency : uint8_t
{
    Normal                                         = 0,
    High                                           = 1,
    Middle                                         = 2,
    Low                                            = 3,
    NotTick                                        = 4,
    EGPWeaponTickFrequency_MAX                     = 5

};

// Enum  GPWeaponDefineForPlugin.EGPWeaponFireSocketMode
enum class EGPWeaponFireSocketMode : uint8_t
{
    Single                                         = 0,
    Loop                                           = 1,
    Random                                         = 2,
    MeshOrder                                      = 3,
    EGPWeaponFireSocketMode_MAX                    = 4

};

// Enum  GPWeaponDefineForPlugin.EWeaponMeshHideReason
enum class EWeaponMeshHideReason : uint8_t
{
    FuncAppearance                                 = 0,
    FireThrowableWeapon                            = 1,
    FPPInteraction                                 = 2,
    ThrowableWeaponAnimNotify                      = 3,
    SocketNotExist                                 = 4,
    EWeaponMeshHideReason_MAX                      = 5

};

// Enum  GPWeaponDefineForPlugin.EWeaponAddAmmoType
enum class EWeaponAddAmmoType : uint8_t
{
    AddWithNum                                     = 0,
    AddWithPercent                                 = 1,
    AddToFull                                      = 2,
    EWeaponAddAmmoType_MAX                         = 3

};

// Enum  GPWeaponDefineForPlugin.EWeaponConsumeAmmoType
enum class EWeaponConsumeAmmoType : uint8_t
{
    Normal                                         = 0,
    FireFreeAmmo                                   = 1,
    RloadFreeAmmo                                  = 2,
    EWeaponConsumeAmmoType_MAX                     = 3

};

// Enum  GPWeaponDefineForPlugin.EInteractivePutWeaponType
enum class EInteractivePutWeaponType : uint8_t
{
    FastUnEquip                                    = 1,
    NomalUnEquip                                   = 2,
    QuietUnEquip                                   = 3,
    EInteractivePutWeaponType_MAX                  = 4

};

// Enum  GPWeaponDefineForPlugin.EInteractiveGetWeaponType
enum class EInteractiveGetWeaponType : uint8_t
{
    FastEquip                                      = 1,
    NomalEquip                                     = 2,
    QuietEquip                                     = 3,
    EInteractiveGetWeaponType_MAX                  = 4

};

// Enum  GPWeaponDefineForPlugin.EWeaponSwitchType
enum class EWeaponSwitchType : uint8_t
{
    Default                                        = 0,
    Quiet                                          = 1,
    Instant                                        = 2,
    GetWeaponQuiet                                 = 3,
    PutWeaponQuiet                                 = 4,
    GetWeaponFast                                  = 5,
    PutWeaponFast                                  = 6,
    GetAndPutWeaponFast                            = 7,
    PutQuietAndGetWeaponFast                       = 8,
    EWeaponSwitchType_MAX                          = 9

};

// Enum  GPWeaponDefineForPlugin.EGPThrowableWeaponTypeForADS
enum class EGPThrowableWeaponTypeForADS : uint8_t
{
    Damage                                         = 0,
    Special                                        = 1,
    Placement                                      = 2,
    Max                                            = 3

};

// Enum  GPWeaponDefineForPlugin.EGPWeaponChangeClipMode
enum class EGPWeaponChangeClipMode : uint8_t
{
    Replace                                        = 0,
    OneByOne                                       = 1,
    TooHotToReload                                 = 2,
    EGPWeaponChangeClipMode_MAX                    = 3

};

// Enum  GPWeaponDefineForPlugin.EGPWeaponFiringRateMode
enum class EGPWeaponFiringRateMode : uint8_t
{
    Auto                                           = 0,
    Burst                                          = 1,
    Max                                            = 2

};

// Enum  GPWeaponDefineForPlugin.EGPWeaponFiringMode
enum class EGPWeaponFiringMode : uint8_t
{
    Auto                                           = 0,
    Single                                         = 1,
    AutoBurst                                      = 2,
    Burst                                          = 3,
    ThrowHigh                                      = 4,
    ThrowLow                                       = 5,
    Max                                            = 6

};

// Enum  GPWeaponDefineForPlugin.EProjectileMedium
enum class EProjectileMedium : uint8_t
{
    None                                           = 0,
    Air                                            = 1,
    Water                                          = 2,
    EProjectileMedium_MAX                          = 3

};

// Enum  GPWeaponDefineForPlugin.EGPWeaponStateEvent
enum class EGPWeaponStateEvent : uint8_t
{
    EStateEvent_None                               = 0,
    EStateEvent_Activate                           = 1,
    EStateEvent_ActivateNotEquip                   = 2,
    EStateEvent_BeginFire                          = 3,
    EStateEvent_BeginZoomAndFire                   = 4,
    EStateEvent_EndFire                            = 5,
    EStateEvent_BeginAltFire                       = 6,
    EStateEvent_EndAltFire                         = 7,
    EStateEvent_BeginChangeClip                    = 8,
    EStateEvent_CancelChangeClip                   = 9,
    EStateEvent_CancelChangeClipSingle             = 10,
    EStateEvent_Deactivate                         = 11,
    EStateEvent_PutBackWeapon                      = 12,
    EStateEvent_PutBackWeaponNotUnEquip            = 13,
    EStateEvent_BeginZooming                       = 14,
    EStateEvent_EndZooming                         = 15,
    EStateEvent_Pickup                             = 16,
    EStateEvent_StopShootAiming                    = 17,
    EStateEvent_BeginSwitchFireMode                = 18,
    EStateEvent_NotifyBreak                        = 19,
    EStateEvent_CancelFire                         = 20,
    EStateEvent_CancelCurrentState                 = 21,
    EStateEvent_BeginInteraction                   = 22,
    EStateEvent_EndInteraction                     = 23,
    EStateEvent_BeginSwitchPot                     = 24,
    EStateEvent_BeginLeftHold                      = 25,
    EStateEvent_EndLeftHold                        = 26,
    EStateEvent_BeginSawAttack                     = 27,
    EStateEvent_EndSawAttack                       = 28,
    EStateEvent_CancelCharging                     = 29,
    EStateEvent_Max                                = 30

};

// Enum  GPWeaponDefineForPlugin.EGPWeaponStateType
enum class EGPWeaponStateType : uint8_t
{
    EWeapState_None                                = 0,
    EWeapState_Active                              = 1,
    EWeapState_Inactive                            = 2,
    EWeapState_Equipping                           = 3,
    EWeapState_Unequipping                         = 4,
    EWeapState_PreFire                             = 5,
    EWeapState_KeepPreFire                         = 6,
    EWeapState_Firing                              = 7,
    EWeapState_PostFire                            = 8,
    EWeapState_ChangingClip                        = 9,
    EWeapState_Chamber                             = 10,
    EWeapState_Interaction                         = 11,
    EWeapState_Zoom                                = 12,
    EWeapState_AltFiring                           = 13,
    EWeapState_ZoomTransition                      = 14,
    EWeapState_SwitchFireMode                      = 15,
    EWeapState_BeginingInteraction                 = 16,
    EWeapState_CancelPreFire                       = 17,
    EWeapState_EndingInteraction                   = 18,
    EWeapState_SwitchPot                           = 19,
    EWeapState_LeftHold                            = 20,
    EWeapState_SawAttackState                      = 21,
    EWeapState_MAX                                 = 22

};

// Enum  GPWeaponDefineForPlugin.EGPWeaponAttachBackConflict
enum class EGPWeaponAttachBackConflict : uint8_t
{
    None                                           = 0,
    LunaDoubleBow                                  = 1,
    EGPWeaponAttachBackConflict_MAX                = 2

};

// Enum  GPWeaponDefineForPlugin.EGPWeaponAttachBackSocket
enum class EGPWeaponAttachBackSocket : uint8_t
{
    None                                           = 0,
    Left                                           = 1,
    Right                                          = 2,
    Middle                                         = 3,
    EGPWeaponAttachBackSocket_MAX                  = 4

};

// Enum  GPWeaponDefineForPlugin.EGPWeaponAppearanceAttachType
enum class EGPWeaponAppearanceAttachType : uint8_t
{
    None                                           = 0,
    Primary                                        = 1,
    Assistant                                      = 2,
    Grenade                                        = 3,
    MeleeWeapon                                    = 4,
    Pistol                                         = 5,
    SecondaryWeapon                                = 6,
    EGPWeaponAppearanceAttachType_MAX              = 7

};

// Enum  GPWeaponDefineForPlugin.EGPWeaponAppearanceMeshType
enum class EGPWeaponAppearanceMeshType : uint8_t
{
    ThirdPersonMesh                                = 0,
    FirstPersonMesh                                = 1,
    EGPWeaponAppearanceMeshType_MAX                = 2

};

// Enum  GPWeaponDefineForPlugin.EGPComponentSpawnCondition
enum class EGPComponentSpawnCondition : uint8_t
{
    ECompInitCond_AlwaysSpawn                      = 0,
    ECompInitCond_Logic                            = 1,
    ECompInitCond_Client                           = 2,
    ECompInitCond_Server                           = 3,
    ECompInitCond_NotOwned_Tpp_Client              = 4,
    ECompInitCond_Fpp_Client                       = 5,
    ECompInitCond_LocalFocus_Client                = 6,
    ECompInitCond_MAX                              = 7

};

// Enum  GPWeaponDefineForPlugin.EGPWeaponInnerEvent
enum class EGPWeaponInnerEvent : uint8_t
{
    EInnerEvent_None                               = 0,
    EStateEvent_SwitchToIdle                       = 1,
    EStateEvent_BeginEquip                         = 2,
    EStateEvent_EndEquip                           = 3,
    EStateEvent_PreFire                            = 4,
    EStateEvent_BeginKeepPreFire                   = 5,
    EStateEvent_EndKeepPreFire                     = 6,
    EStateEvent_BeginLeftHold                      = 7,
    EStateEvent_EndLeftHold                        = 8,
    EStateEvent_TimeoutAutoFire                    = 9,
    EStateEvent_CancelFire                         = 10,
    EStateEvent_BeginFire                          = 11,
    EStateEvent_AutoBurstGroupEnd                  = 12,
    EStateEvent_NoDelayEndFire                     = 13,
    EStateEvent_EndFire                            = 14,
    EStateEvent_FireModeProxyStateDirty            = 15,
    EStateEvent_MeleeRealFire                      = 16,
    EStateEvent_SawAttackFire                      = 17,
    EStateEvent_PlugAfterFire                      = 18,
    EStateEvent_AfterFire                          = 19,
    EStateEvent_ZoomAfterPlug                      = 20,
    EStateEvent_BeginJumpFire                      = 21,
    EStateEvent_BeginZoom                          = 22,
    EStateEvent_BeginZoomAction                    = 23,
    EStateEvent_EndZoom                            = 24,
    EStateEvent_BeginChangeClip                    = 25,
    EStateEvent_CancelChangeClip                   = 26,
    EStateEvent_BeginChangeClipLogic               = 27,
    EStateEvent_BeginChangeClip_Single             = 28,
    EStateEvent_BeginChangeClip_Single_End         = 29,
    EStateEvent_BeginChangeClip_FirstPartalSingle  = 30,
    EStateEvent_BeginChangeClip_ContinuePartalSingle = 31,
    EStateEvent_BeginChangeClip_EmptyReload        = 32,
    EStateEvent_BeginChangeClip_Normal             = 33,
    EStateEvent_EndChangeClip                      = 34,
    EStateEvent_SwitchToInactive                   = 35,
    EStateEvent_BeginInteraction                   = 36,
    EStateEvent_EndInteraction                     = 37,
    EStateEvent_SwitchToInteraction                = 38,
    EStateEvent_BeginSwitchPot                     = 39,
    EStateEvent_DoSwitchPot                        = 40,
    EStateEvent_EmptyClip                          = 41,
    EStateEvent_DryFire                            = 42,
    EStateEvent_StandToCrouch                      = 43,
    EStateEvent_StandToProne                       = 44,
    EStateEvent_CrouchToStand                      = 45,
    EStateEvent_CrouchToProne                      = 46,
    EStateEvent_ProneToStand                       = 47,
    EStateEvent_ProneToCrouch                      = 48,
    EStateEvent_InstantHit                         = 49,
    EStateEvent_SprayHit                           = 50,
    EStateEvent_BulletEffect                       = 51,
    EStateEvent_PenetratingMedium                  = 52,
    EStateEvent_BeginSwitchFireMode                = 53,
    EStateEvent_EndSwitchFireMode                  = 54,
    EStateEvent_BeginSawAttack                     = 55,
    EStateEvent_EndSawAttack                       = 56,
    EStateEvent_ConfigBecomeEffective              = 57,
    EStateEvent_DoFire                             = 58,
    EStateEvent_ReEquip                            = 59,
    EStateEvent_StateCacheBeginFire                = 60,
    EStateEvent_StateCacheEndFire                  = 61,
    EStateEvent_PutBackWeaponNotUnEquip            = 62,
    EStateEvent_PutBackWeapon                      = 63,
    EStateEvent_Max                                = 64,
    EStateEvent_NotifyBreak                        = 65,
    EStateEvent_BreakEquip                         = 66,
    EInnerEvent_DoBeginZoom                        = 67,
    EInnerEvent_DoEndZoom                          = 68,
    EInnerEvent_OverHeat                           = 69,
    EInnerEvent_CoolDown                           = 70,
    EInnerEvent_CompoleteCoolDown                  = 71,
    EInnerEvent_CompleteLocking                    = 72,
    EInnerEvent_ModifyFireModeIndex                = 73,
    EInnerEvent_ModifyFiringModeType               = 74,
    EInnerEvent_NextFiringModeType                 = 75,
    EInnerEvent_FiringModeTypeChanged              = 76,
    EInnerEvent_ModifyWeaponParts                  = 77,
    EInnerEvent_ModifyWeaponPartsReady             = 78,
    EInnerEvent_InitModularWeaponParts             = 79,
    EInnerEvent_ShowFullAmmoMag                    = 80,
    EInnerEvent_WeaponPartsDynamicAttrModifed      = 81,
    EInnerEvent_WeaponAmmoDynamicAttrModifed       = 82,
    EInnerEvent_WriteWeaponPartsDynamicAttr        = 83,
    EInnerEvent_RotationBegin                      = 84,
    EInnerEvent_RotationEnd                        = 85,
    EInnerEvent_EquipPerk                          = 86,
    EInnerEvent_UnEquipPerk                        = 87,
    EInnerEvent_ClearState                         = 88,
    EInnerEvent_OwnerReplicated                    = 89,
    EInnerEvent_OnInitAbilityActorInfo             = 90,
    EInnerEvent_3PExtraDataReplicated              = 91,
    EInnerEvent_StateChanged                       = 92,
    EInnerEvent_BeginInspect                       = 93,
    EInnerEvent_EndInspect                         = 94,
    EInnerEvent_MakeDamage                         = 95,
    EInnerEvent_BulletHit                          = 96,
    EInnerEvent_BeginChamber                       = 97,
    EInnerEvent_ChamberMax                         = 98,
    EInnerEvent_CancelChamber                      = 99,
    EInnerEvent_EndChamber                         = 100,
    EInnerEvent_AnimShellDrop                      = 101,
    EInnerEvent_Charging                           = 102,
    EInnerEvent_CancelCharge                       = 103,
    EInnerEvent_AnimEndFire                        = 104,
    EInnerEvent_ScopeParamOverrideChanged          = 105,
    EInnerEvent_Max                                = 106,
    EStateEvent_Extend01                           = 107,
    EInnerEvent_WeaponMeshAttached                 = 108,
    EInnerEvent_BipodUp                            = 109,
    EInnerEvent_BipodDown                          = 110,
    EInnerEvent_PowerFlashOn                       = 111,
    EInnerEvent_TacticalEquipUOn                   = 112,
    EInnerEvent_TacticalEquipUOff                  = 113,
    EInnerEvent_TacticalEquipU1On                  = 114,
    EInnerEvent_TacticalEquipU1Off                 = 115,
    EInnerEvent_TacticalEquipU2On                  = 116,
    EInnerEvent_TacticalEquipU2Off                 = 117,
    EInnerEvent_TacticalEquipROn                   = 118,
    EInnerEvent_TacticalEquipROff                  = 119,
    EInnerEvent_TacticalEquipR1On                  = 120,
    EInnerEvent_TacticalEquipR1Off                 = 121,
    EInnerEvent_TacticalEquipR2On                  = 122,
    EInnerEvent_TacticalEquipR2Off                 = 123,
    EInnerEvent_TacticalEquipDOn                   = 124,
    EInnerEvent_TacticalEquipDOff                  = 125,
    EInnerEvent_TacticalEquipD1On                  = 126,
    EInnerEvent_TacticalEquipD1Off                 = 127,
    EInnerEvent_TacticalEquipD2On                  = 128,
    EInnerEvent_TacticalEquipD2Off                 = 129,
    EInnerEvent_TacticalEquipLOn                   = 130,
    EInnerEvent_TacticalEquipLOff                  = 131,
    EInnerEvent_TacticalEquipL1On                  = 132,
    EInnerEvent_TacticalEquipL1Off                 = 133,
    EInnerEvent_TacticalEquipL2On                  = 134,
    EInnerEvent_TacticalEquipL2Off                 = 135,
    EInnerEvent_SwitchRangeScope                   = 136,
    EInnerEvent_BeginSideAiming                    = 137,
    EInnerEvent_EndSideAiming                      = 138,
    EInnerEvent_SwitchLaser                        = 139,
    EInnerEvent_ToggleRangeFinder                  = 140,
    EInnerEvent_CharacterOwnerChanged              = 141,
    ENZAdapterEvent_Extend01                       = 142,
    EInnerEvent_AutoAddAmmoComplete                = 143,
    EStateEvent_LauncherBeginFire                  = 144,
    EInnerEvent_ChainHook_HitTarget                = 145,
    EInnerEvent_ChainHook_PullBackLoop             = 146,
    EInnerEvent_ChainHook_PullBackSuccess          = 147,
    EInnerEvent_ChainHook_PullBackBreak            = 148,
    EInnerEvent_ChainHook_PullBackNoneLoop         = 149,
    EInnerEvent_ChainHook_PullBackNoneSuccess      = 150,
    EInnerEvent_ToggleSkillWeaponExtraFunc         = 151,
    EInnerEvent_InstantHitFor1P                    = 152,
    EGPWeaponInnerEvent_MAX                        = 153

};

// Enum  GPWeaponDefineForPlugin.EGPWeaponMode
enum class EGPWeaponMode : uint8_t
{
    EWeapMode_None                                 = 0,
    EWeapMode_OwnerFirstPerson                     = 1,
    EWeapMode_OwnerThirdPerson                     = 2,
    EWeapMode_ObserverFirstPerson                  = 3,
    EWeapMode_ThirdPerson                          = 4,
    EWeapMode_MAX                                  = 5

};

// Enum  GPWeaponDefineForPlugin.EFireCrackerType
enum class EFireCrackerType : uint8_t
{
    HoldPerform                                    = 0,
    SettleStill                                    = 1,
    SettleLaunch                                   = 2,
    SettleLaunch_Real                              = 3,
    EFireCrackerType_MAX                           = 4

};

// Enum  GPWeaponDefineForPlugin.EPenetrateAttenuationType
enum class EPenetrateAttenuationType : uint8_t
{
    Never                                          = 0,
    Always                                         = 1,
    WithHandArmor                                  = 2,
    EPenetrateAttenuationType_MAX                  = 3

};

// Enum  GPWeaponDefineForPlugin.EWeaponAmmoDamageType
enum class EWeaponAmmoDamageType : uint8_t
{
    HitFirst                                       = 0,
    PassHand                                       = 1,
    PassHand_IncludeHand                           = 2,
    EWeaponAmmoDamageType_MAX                      = 3

};

// Enum  GPWeaponRuntime.EProjectileTrajectoryFlag
enum class EProjectileTrajectoryFlag : uint8_t
{
    TrajectoryFlagNone                             = 0,
    TrajectoryFlagStart                            = 1,
    TrajectoryFlagBounce                           = 2,
    TrajectoryFlagStop                             = 3,
    TrajectoryFlagForce                            = 4,
    TrajectoryFlagMedium                           = 5,
    TrajectoryFlagZeroGravityEnd                   = 6,
    EProjectileTrajectoryFlag_MAX                  = 7

};

// Enum  GPWeaponRuntime.EActorPoolMethod
enum class EActorPoolMethod : uint8_t
{
    None                                           = 0,
    AutoRelease                                    = 1,
    ManualRelease                                  = 2,
    ManualRelease_OnComplete                       = 3,
    EActorPoolMethod_MAX                           = 4

};

// Enum  GPWeaponRuntime.EProjectileEvent
enum class EProjectileEvent : uint8_t
{
    EVENT_STOP                                     = 0,
    EVENT_BOUNCE                                   = 1,
    EVENT_EXPLOSION                                = 2,
    EVENT_PenetratingMedium                        = 3,
    EVENT_MAX                                      = 4

};

// Enum  GPWeaponRuntime.EProjectileCustomReplicateRole
enum class EProjectileCustomReplicateRole : uint8_t
{
    None                                           = 0,
    Publisher                                      = 1,
    Subscriber                                     = 2,
    EProjectileCustomReplicateRole_MAX             = 3

};

// Enum  GPWeaponRuntime.EFakeBulletRole
enum class EFakeBulletRole : uint8_t
{
    FBRoleNone                                     = 0,
    FBRoleFake                                     = 1,
    FBRoleMaster                                   = 2,
    EFakeBulletRole_MAX                            = 3

};

// Enum  GPWeaponRuntime.EGPWeaponEasingType
enum class EGPWeaponEasingType : uint8_t
{
    Linear                                         = 0,
    EaseInSine                                     = 1,
    EaseOutSine                                    = 2,
    EaseInOutSine                                  = 3,
    EaseInQuad                                     = 4,
    EaseOutQuad                                    = 5,
    EaseInOutQuad                                  = 6,
    EaseInCubic                                    = 7,
    EaseOutCubic                                   = 8,
    EaseInOutCubic                                 = 9,
    EaseInQuart                                    = 10,
    EaseOutQuart                                   = 11,
    EaseInOutQuart                                 = 12,
    EaseInQuint                                    = 13,
    EaseOutQuint                                   = 14,
    EaseInOutQuint                                 = 15,
    EaseInExpo                                     = 16,
    EaseOutExpo                                    = 17,
    EaseInOutExpo                                  = 18,
    EaseInCirc                                     = 19,
    EaseOutCirc                                    = 20,
    EaseInOutCirc                                  = 21,
    EaseInBack                                     = 22,
    EaseOutBack                                    = 23,
    EaseInOutBack                                  = 24,
    EaseInElastic                                  = 25,
    EaseOutElastic                                 = 26,
    EaseInOutElastic                               = 27,
    EaseInBounce                                   = 28,
    EaseOutBounce                                  = 29,
    EaseInOutBounce                                = 30,
    EGPWeaponEasingType_MAX                        = 31

};

// Enum  GPWeaponRuntime.EGPWeaponAnimHandIKType
enum class EGPWeaponAnimHandIKType : uint8_t
{
    None                                           = 0,
    Primary                                        = 1,
    Pistol                                         = 2,
    LongWeapon                                     = 3,
    EGPWeaponAnimHandIKType_MAX                    = 4

};

// Enum  GPWeaponRuntime.EWeaponOverrideUseAttachParentBound
enum class EWeaponOverrideUseAttachParentBound : uint8_t
{
    Dont_Override                                  = 0,
    Force_Dont_UseAttachParentBound                = 1,
    Force_UseAttachParentBound                     = 2,
    EWeaponOverrideUseAttachParentBound_MAX        = 3

};

// Enum  GPWeaponRuntime.EWeaponRepCondition
enum class EWeaponRepCondition : uint8_t
{
    None                                           = 0,
    Ob                                             = 1,
    EWeaponRepCondition_MAX                        = 2

};

// Enum  GPWeaponRuntime.EGPWeaponFireModeSubType
enum class EGPWeaponFireModeSubType : uint8_t
{
    Default                                        = 0,
    Secondary                                      = 1,
    EGPWeaponFireModeSubType_MAX                   = 2

};

// Enum  GPWeaponRuntime.EFiringModeContext
enum class EFiringModeContext : uint8_t
{
    Blueprint                                      = 0,
    DataTable                                      = 1,
    WeaponDesc                                     = 2,
    Input                                          = 3,
    Max                                            = 4

};

// Enum  GPWeaponRuntime.EFireModeRole
enum class EFireModeRole : uint8_t
{
    FireModeROLE_SimulatedProxy                    = 0,
    FireModeROLE_AutonomousProxy                   = 1,
    FireModeROLE_Authority                         = 2,
    FireModeROLE_MAX                               = 3

};

// Enum  GPWeaponRuntime.EWeaponFuncAppearanceHideReason
enum class EWeaponFuncAppearanceHideReason : uint8_t
{
    None                                           = 0,
    HideAllWeapon                                  = 1,
    AttachParentHidden                             = 2,
    StateHidden                                    = 3,
    XPPHidden                                      = 4,
    FPPAttachBack                                  = 5,
    ErrorSocket                                    = 6,
    FPPInteraction                                 = 8,
    InPending                                      = 9,
    WeaponFeatureChange                            = 10,
    Inactive                                       = 11,
    DelayVisible                                   = 12,
    ReplayWorld                                    = 13,
    HideAllWeapon_ByExtraTag                       = 14,
    SocketOccupied                                 = 15,
    UseLeftHand                                    = 16,
    SocketNotExist                                 = 17,
    EWeaponFuncAppearanceHideReason_MAX            = 18

};

// Enum  GPWeaponRuntime.EGPPhysicalSurfaceGroup
enum class EGPPhysicalSurfaceGroup : uint8_t
{
    Default                                        = 0,
    Cement                                         = 1,
    Soil                                           = 2,
    Water                                          = 3,
    Grass                                          = 4,
    Glass                                          = 5,
    Wood                                           = 6,
    NoSurfaceEffect                                = 7,
    EGPPhysicalSurfaceGroup_MAX                    = 8

};

// Enum  GPWeaponRuntime.EGPReplicatedDataOperation
enum class EGPReplicatedDataOperation : uint8_t
{
    EGPReplicatedDataOperation_Add                 = 0,
    EGPReplicatedDataOperation_Delete              = 1,
    EGPReplicatedDataOperation_Modify              = 2,
    EGPReplicatedDataOperation_MAX                 = 3

};

// Enum  GPWeaponRuntime.EWeaponThrowableUnderWaterExplosionType
enum class EWeaponThrowableUnderWaterExplosionType : uint8_t
{
    None                                           = 0,
    IntoWaterStartPreExp                           = 1,
    OutFromWaterStartExp                           = 2,
    EWeaponThrowableUnderWaterExplosionType_MAX    = 3

};

// Enum  GPWeaponRuntime.EWeaponThrowableExplosionType
enum class EWeaponThrowableExplosionType : uint8_t
{
    None                                           = 0,
    Hit                                            = 1,
    Timer                                          = 2,
    Stop                                           = 3,
    Interval                                       = 4,
    Manual                                         = 5,
    HitGround                                      = 6,
    HitEnemy                                       = 7,
    HitVehicle                                     = 8,
    HitOrTimer                                     = 9,
    EWeaponThrowableExplosionType_MAX              = 10

};

// Enum  GPWeaponRuntime.EWeaponThrowableEffectType
enum class EWeaponThrowableEffectType : uint8_t
{
    None                                           = 0,
    Damage                                         = 1,
    Smoke                                          = 2,
    Flash                                          = 3,
    Incendiary                                     = 4,
    EWeaponThrowableEffectType_MAX                 = 5

};

// Enum  GPWeaponRuntime.EPreViewRole
enum class EPreViewRole : uint8_t
{
    ROLE_None                                      = 0,
    ROLE_SimulatedProxy                            = 1,
    ROLE_AutonomousProxy                           = 2,
    ROLE_Authority                                 = 3,
    ROLE_MAX                                       = 4

};

// Enum  GPWeaponRuntime.ECharacterOwnerObserveState
enum class ECharacterOwnerObserveState : uint8_t
{
    ObState_None                                   = 0,
    ObState_PendingOb                              = 1,
    ObState_Observed                               = 2,
    ObState_MAX                                    = 3

};

// Enum  GPWeaponFSM.EEventEnumBase
enum class EEventEnumBase : uint8_t
{
    EBeginJump                                     = 0,
    EStartRun                                      = 1,
    EOnHit                                         = 2,
    EEventEnumBase_MAX                             = 3

};

// Enum  GPWeaponFSM.EStateEnumBase
enum class EStateEnumBase : uint8_t
{
    EBegin                                         = 0,
    ERunning                                       = 1,
    EFinish                                        = 2,
    EStateEnumBase_MAX                             = 3

};

// Enum  HotPatcherRuntime.ETargetPlatform
enum class ETargetPlatform : uint8_t
{
    None                                           = 0,
    AllPlatforms                                   = 1,
    AllDesktop                                     = 2,
    MacClient                                      = 3,
    MacNoEditor                                    = 4,
    MacServer                                      = 5,
    Mac                                            = 6,
    WindowsClient                                  = 7,
    WindowsNoEditor                                = 8,
    WindowsServer                                  = 9,
    Windows                                        = 10,
    Android                                        = 11,
    Android_ASTC                                   = 12,
    Android_ATC                                    = 13,
    Android_DXT                                    = 14,
    Android_ETC1                                   = 15,
    Android_ETC1a                                  = 16,
    Android_ETC2                                   = 17,
    Android_PVRTC                                  = 18,
    AndroidClient                                  = 19,
    Android_ASTCClient                             = 20,
    Android_ATCClient                              = 21,
    Android_DXTClient                              = 22,
    Android_ETC1Client                             = 23,
    Android_ETC1aClient                            = 24,
    Android_ETC2Client                             = 25,
    Android_PVRTCClient                            = 26,
    Android_Multi                                  = 27,
    Android_MultiClient                            = 28,
    OpenHarmony                                    = 29,
    OpenHarmony_ASTC                               = 30,
    OpenHarmony_DXT                                = 31,
    OpenHarmony_ETC2                               = 32,
    OpenHarmonyClient                              = 33,
    OpenHarmony_ASTCClient                         = 34,
    OpenHarmony_DXTClient                          = 35,
    OpenHarmony_ETC2Client                         = 36,
    HTML5                                          = 37,
    IOSClient                                      = 38,
    IOS                                            = 39,
    TVOSClient                                     = 40,
    TVOS                                           = 41,
    LinuxClient                                    = 42,
    LinuxNoEditor                                  = 43,
    LinuxServer                                    = 44,
    Linux                                          = 45,
    Lumin                                          = 46,
    LuminClient                                    = 47,
    XSX                                            = 48,
    PS5                                            = 49,
    ETargetPlatform_MAX                            = 50

};

// Enum  HotPatcherRuntime.EMatchOperator
enum class EMatchOperator : uint8_t
{
    None                                           = 0,
    GREAT_THAN                                     = 1,
    LESS_THAN                                      = 2,
    EQUAL                                          = 3,
    EMatchOperator_MAX                             = 4

};

// Enum  HotPatcherRuntime.EMatchRule
enum class EMatchRule : uint8_t
{
    MATCH                                          = 0,
    IGNORE                                         = 1,
    EMatchRule_MAX                                 = 2

};

// Enum  HotPatcherRuntime.EMonolithicPathMode
enum class EMonolithicPathMode : uint8_t
{
    MountPath                                      = 0,
    PackagePath                                    = 1,
    EMonolithicPathMode_MAX                        = 2

};

// Enum  HotPatcherRuntime.EPSOSaveMode
enum class EPSOSaveMode : uint8_t
{
    Incremental                                    = 0,
    BoundPSOsOnly                                  = 1,
    SortedBoundPSOs                                = 2,
    EPSOSaveMode_MAX                               = 3

};

// Enum  HotPatcherRuntime.ESearchCaseMode
enum class ESearchCaseMode : uint8_t
{
    CaseSensitive                                  = 0,
    IgnoreCase                                     = 1,
    ESearchCaseMode_MAX                            = 2

};

// Enum  AssetManagerEx.EAssetRegistryDependencyTypeEx
enum class EAssetRegistryDependencyTypeEx : uint8_t
{
    None                                           = 0,
    Soft                                           = 1,
    Hard                                           = 2,
    SearchableName                                 = 4,
    SoftManage                                     = 8,
    HardManage                                     = 16,
    Packages                                       = 3,
    Manage                                         = 24,
    All                                            = 31,
    EAssetRegistryDependencyTypeEx_MAX             = 32

};

// Enum  BinariesPatchFeature.EBinariesPatchFeature
enum class EBinariesPatchFeature : uint8_t
{
    None                                           = 0,
    Count                                          = 1,
    EBinariesPatchFeature_MAX                      = 2

};

// Enum  HudFramework.EHudShowType
enum class EHudShowType : uint8_t
{
    OnDemand                                       = 0,
    AutoShow                                       = 1,
    OnlyPreCreateController                        = 2,
    EHudShowType_MAX                               = 3

};

// Enum  HudFramework.EHudUpdateFrequency
enum class EHudUpdateFrequency : uint8_t
{
    NeverTick                                      = 0,
    FPS1                                           = 1,
    FPS10                                          = 10,
    FPS20                                          = 20,
    FPS30                                          = 30,
    FPS40                                          = 40,
    FPS50                                          = 50,
    FPS60                                          = 60,
    EveryFrame                                     = 255,
    EHudUpdateFrequency_MAX                        = 256

};

// Enum  HudFramework.EHudLayer
enum class EHudLayer : uint8_t
{
    None                                           = 0,
    ScreenEffect                                   = 11,
    Mark                                           = 12,
    Common                                         = 13,
    Hint                                           = 14,
    Feedback                                       = 15,
    Touch                                          = 16,
    Popup                                          = 17,
    LargePopup                                     = 18,
    EHudLayer_MAX                                  = 19

};

// Enum  PerfGear.EPerfGearQualityLevel
enum class EPerfGearQualityLevel : uint8_t
{
    EQuality_VeryLow                               = 0,
    EQuality_Low                                   = 1,
    EQuality_Medium                                = 2,
    EQuality_High                                  = 3,
    EQuality_VeryHigh                              = 4,
    EQuality_TotalNum                              = 5,
    EQuality_Custom90                              = 6,
    EQuality_Custom120                             = 7,
    EQuality_Custom144                             = 8,
    EQuality_CustomQuality1                        = 9,
    EQuality_Custom165                             = 10,
    EQuality_CustomTotal                           = 11,
    EQuality_MAX                                   = 12

};

// Enum  PerfGear.ELowFpsOP
enum class ELowFpsOP : uint8_t
{
    EHighToLow                                     = 0,
    ELowToHigh                                     = 1,
    ELowFpsOP_MAX                                  = 2

};

// Enum  PerfGear.EFXQualityLevel
enum class EFXQualityLevel : uint8_t
{
    None                                           = 0,
    Low                                            = 1,
    Middle                                         = 2,
    High                                           = 3,
    Num                                            = 4,
    EFXQualityLevel_MAX                            = 5

};

// Enum  PerfGear.EPerfGearRHIType
enum class EPerfGearRHIType : uint8_t
{
    Unknow                                         = 0,
    Metal                                          = 3,
    Vulkan                                         = 4,
    OpenGLES                                       = 5,
    EPerfGearRHIType_MAX                           = 6

};

// Enum  PerfGear.EPerfGearCompareType
enum class EPerfGearCompareType : uint8_t
{
    EQUAL                                          = 0,
    NOT_EQUAL                                      = 1,
    LESS                                           = 2,
    GREATER                                        = 3,
    LESS_OR_EQUALTO                                = 4,
    GREATER_OR_EQUALTO                             = 5,
    EPerfGearCompareType_MAX                       = 6

};

// Enum  PerfGear.EPerfGearLogicType
enum class EPerfGearLogicType : uint8_t
{
    LOGICTYPE_OR                                   = 0,
    LOGICTYPE_AND                                  = 1,
    LOGICTYPE_MAX                                  = 2

};

// Enum  PerfGear.EPerfGearInternalLevel
enum class EPerfGearInternalLevel : uint8_t
{
    ELevel1                                        = 0,
    ELevel2                                        = 1,
    ELevel3                                        = 2,
    ELevel4                                        = 3,
    ELevel5                                        = 4,
    ELevel6                                        = 5,
    ELevel_TotalNum                                = 6,
    ELevelCustom90                                 = 7,
    ELevelCustom120                                = 8,
    ELevelCustom144                                = 9,
    ELevelCustom165                                = 10,
    ELevel_CustomTotal                             = 11,
    EPerfGearInternalLevel_MAX                     = 12

};

// Enum  PerfGear.ESwitchStatus
enum class ESwitchStatus : uint8_t
{
    ESwitchStatus_OFF                              = 0,
    ESwitchStatus_ON                               = 1,
    ESwitchStatus_MAX                              = 2

};

// Enum  PerfGear.EModeSwitchType
enum class EModeSwitchType : uint8_t
{
    ESwitchOffCustom                               = 0,
    ESwitchOverride                                = 1,
    EModeSwitchType_MAX                            = 2

};

// Enum  PerfGear.ERHIType
enum class ERHIType : uint8_t
{
    Unknown                                        = 0,
    D3D11                                          = 1,
    D3D12                                          = 2,
    Metal                                          = 3,
    Vulkan                                         = 4,
    OpenGLES                                       = 5,
    ERHIType_MAX                                   = 6

};

// Enum  PerfGear.ELowFpsType
enum class ELowFpsType : uint8_t
{
    EUI                                            = 0,
    ECUTSCENE                                      = 1,
    EIMPENDINGDEATH                                = 2,
    EDEATH                                         = 3,
    ERedeploy                                      = 4,
    ESetting                                       = 5,
    ELowFpsType_MAX                                = 6

};

// Enum  PerfGear.EBlackVarType
enum class EBlackVarType : uint8_t
{
    EBV_ALLLEVEL                                   = 0,
    EBV_SUBLEVEL                                   = 1,
    EBV_MAX                                        = 2

};

// Enum  PerfGear.EBlackVarPriority
enum class EBlackVarPriority : uint8_t
{
    EBLACK_HIGHEST                                 = 0,
    EBLACK_UNDER_SWITCH                            = 1,
    EBLACK_MAX                                     = 2

};

// Enum  PerfGear.ELowMemoryFeatureExecuteFlag
enum class ELowMemoryFeatureExecuteFlag : uint8_t
{
    OVERRIDE                                       = 0,
    NEW                                            = 1,
    ELowMemoryFeatureExecuteFlag_MAX               = 2

};

// Enum  PerfGear.EOpenHarmonyPadSizeType
enum class EOpenHarmonyPadSizeType : uint8_t
{
    PADSIZE_SMALL                                  = 0,
    PADSIZE_MID                                    = 1,
    PADSIZE_BIG                                    = 2,
    PADSIZE_MAX                                    = 3

};

// Enum  PerfGear.EAndroidPadSizeType
enum class EAndroidPadSizeType : uint8_t
{
    PADSIZE_SMALL                                  = 0,
    PADSIZE_MID                                    = 1,
    PADSIZE_BIG                                    = 2,
    PADSIZE_MAX                                    = 3

};

// Enum  PerfGear.EDeviceMemoryType
enum class EDeviceMemoryType : uint8_t
{
    MEMORY_NORMAL                                  = 0,
    MEMORY_LOW                                     = 1,
    MEMORY_VERYLOW                                 = 2,
    MEMORY_UNKNOWN                                 = 3,
    MEMORY_MAX                                     = 4

};

// Enum  PerfGear.EQaulityFpsStatus
enum class EQaulityFpsStatus : uint8_t
{
    ENABLE                                         = 0,
    DISABLE                                        = 1,
    UNSUPPORT                                      = 2,
    EQaulityFpsStatus_MAX                          = 3

};

// Enum  NetworkControl.ENetworkControlType
enum class ENetworkControlType : uint8_t
{
    Invalid                                        = 0,
    CDN                                            = 1,
    Puffer                                         = 2,
    HLS                                            = 3,
    ENetworkControlType_MAX                        = 4

};

// Enum  Gamelet.EGameletEnvironment
enum class EGameletEnvironment : uint8_t
{
    Gamelet_Test                                   = 0,
    Gamelet_Product                                = 1,
    Gamelet_SingaporeTest                          = 2,
    Gamelet_SingaporeProduct                       = 3,
    Gamelet_GarenaTest                             = 4,
    Gamelet_GarenaProduct                          = 5,
    Gamelet_MAX                                    = 6

};

// Enum  Gamelet.ECmd
enum class ECmd : uint32_t
{
    ECmdGSendMessageToApp                          = 10001,
    ECmdS2ESDKInitialized                          = 40001,
    ECmdS2EOnCgiProcessComplete                    = 40002,
    ECmdS2EStartPuertsVM                           = 40003,
    ECmdS2EPrepareGcrpRes                          = 40004,
    ECmdS2PMin                                     = 60000,
    ECmdS2PMax                                     = 69999,
    ECmd_MAX                                       = 70000

};

// Enum  PixUI.EPxKeyboardTypes
enum class EPxKeyboardTypes : uint8_t
{
    Default                                        = 0,
    Number                                         = 1,
    Password                                       = 2,
    MultiLine                                      = 3,
    EPxKeyboardTypes_MAX                           = 4

};

// Enum  PixUI.EPxWidgetTransformType
enum class EPxWidgetTransformType : uint8_t
{
    MoveBy                                         = 0,
    MoveTo                                         = 1,
    ResizeBy                                       = 2,
    ResizeTo                                       = 3,
    ScrollBy                                       = 4,
    ScrollTo                                       = 5,
    Count                                          = 6,
    EPxWidgetTransformType_MAX                     = 7

};

// Enum  PixUI.EPxTickMode
enum class EPxTickMode : uint8_t
{
    JS                                             = 0,
    Layout                                         = 1,
    All                                            = 2,
    EPxTickMode_MAX                                = 3

};

// Enum  PixUI.EPxFontFaceType
enum class EPxFontFaceType : uint8_t
{
    FaceType100                                    = 0,
    FaceType200                                    = 1,
    FaceType300                                    = 2,
    FaceType350                                    = 3,
    FaceType400                                    = 4,
    FaceType500                                    = 5,
    FaceType600                                    = 6,
    FaceType700                                    = 7,
    FaceType800                                    = 8,
    FaceType900                                    = 9,
    FaceType950                                    = 10,
    EPxFontFaceType_MAX                            = 11

};

// Enum  PixUI.EPxDynamicTextureUpdateMode
enum class EPxDynamicTextureUpdateMode : uint8_t
{
    UpdateRegion                                   = 0,
    UpdateBulkData                                 = 1,
    EPxDynamicTextureUpdateMode_MAX                = 2

};

// Enum  PixUI.EPxKeyEventType
enum class EPxKeyEventType : uint8_t
{
    KeyDown                                        = 0,
    KeyUp                                          = 1,
    EPxKeyEventType_MAX                            = 2

};

// Enum  PixUI.EPxMouseType
enum class EPxMouseType : uint8_t
{
    MouseLeft                                      = 0,
    MouseRight                                     = 1,
    MouseMiddle                                    = 2,
    MouseThumb                                     = 3,
    MouseThumb2                                    = 4,
    MouseUnknown                                   = 5,
    EPxMouseType_MAX                               = 6

};

// Enum  PixUI.EPxTouchType
enum class EPxTouchType : uint8_t
{
    TouchStart                                     = 0,
    TouchMoved                                     = 1,
    TouchEnd                                       = 2,
    TouchCanceled                                  = 3,
    EPxTouchType_MAX                               = 4

};

// Enum  PixUI.EPxPublicCapability
enum class EPxPublicCapability : uint8_t
{
    HookCoreLibProfiler                            = 0,
    AsyncModeUseSemaphore                          = 1,
    Count                                          = 2,
    EPxPublicCapability_MAX                        = 3

};

// Enum  PixUI.EPxDebugInfo
enum class EPxDebugInfo : uint8_t
{
    ShowMouse                                      = 0,
    Count                                          = 1,
    EPxDebugInfo_MAX                               = 2

};

// Enum  PixUI.EPxWidgetBatchType
enum class EPxWidgetBatchType : uint8_t
{
    Default                                        = 0,
    Auto                                           = 1,
    NoBatch                                        = 2,
    EPxWidgetBatchType_MAX                         = 3

};

// Enum  PixUILog.EPxLogLevels
enum class EPxLogLevels : uint8_t
{
    Log                                            = 0,
    Warning                                        = 1,
    Error                                          = 2,
    Debug                                          = 3,
    Count                                          = 4,
    EPxLogLevels_MAX                               = 5

};

// Enum  PixUILog.EPxLogGroups
enum class EPxLogGroups : uint8_t
{
    Core                                           = 0,
    Plugin                                         = 1,
    Script                                         = 2,
    Profiler                                       = 3,
    Count                                          = 4,
    EPxLogGroups_MAX                               = 5

};

// Enum  PixUIProfiler.EPxProfilerCapability
enum class EPxProfilerCapability : uint8_t
{
    PrintSizeChange                                = 0,
    PrintCountChange                               = 1,
    AsyncInnerData                                 = 2,
    Count                                          = 3,
    EPxProfilerCapability_MAX                      = 4

};

// Enum  Paper2D.EFlipbookCollisionMode
enum class EFlipbookCollisionMode : uint8_t
{
    NoCollision                                    = 0,
    FirstFrameCollision                            = 1,
    EachFrameCollision                             = 2,
    EFlipbookCollisionMode_MAX                     = 3

};

// Enum  Paper2D.EPaperSpriteAtlasPadding
enum class EPaperSpriteAtlasPadding : uint8_t
{
    DilateBorder                                   = 0,
    PadWithZero                                    = 1,
    EPaperSpriteAtlasPadding_MAX                   = 2

};

// Enum  Paper2D.ETileMapProjectionMode
enum class ETileMapProjectionMode : uint8_t
{
    Orthogonal                                     = 0,
    IsometricDiamond                               = 1,
    IsometricStaggered                             = 2,
    HexagonalStaggered                             = 3,
    ETileMapProjectionMode_MAX                     = 4

};

// Enum  Paper2D.ESpritePivotMode
enum class ESpritePivotMode : uint8_t
{
    Top_Left                                       = 0,
    Top_Center                                     = 1,
    Top_Right                                      = 2,
    Center_Left                                    = 3,
    Center_Center                                  = 4,
    Center_Right                                   = 5,
    Bottom_Left                                    = 6,
    Bottom_Center                                  = 7,
    Bottom_Right                                   = 8,
    Custom                                         = 9,
    ESpritePivotMode_MAX                           = 10

};

// Enum  Paper2D.ESpritePolygonMode
enum class ESpritePolygonMode : uint8_t
{
    SourceBoundingBox                              = 0,
    TightBoundingBox                               = 1,
    ShrinkWrapped                                  = 2,
    FullyCustom                                    = 3,
    Diced                                          = 4,
    ESpritePolygonMode_MAX                         = 5

};

// Enum  Paper2D.ESpriteShapeType
enum class ESpriteShapeType : uint8_t
{
    Box                                            = 0,
    Circle                                         = 1,
    Polygon                                        = 2,
    ESpriteShapeType_MAX                           = 3

};

// Enum  Paper2D.ESpriteCollisionMode
enum class ESpriteCollisionMode : uint8_t
{
    None                                           = 0,
    Use2DPhysics                                   = 1,
    Use3DPhysics                                   = 2,
    ESpriteCollisionMode_MAX                       = 3

};

// Enum  PBDPhysics.EChainSAPGridNumMode
enum class EChainSAPGridNumMode : uint8_t
{
    None                                           = 0,
    Grid8                                          = 1,
    Grid12                                         = 2,
    Grid16                                         = 3,
    EChainSAPGridNumMode_MAX                       = 4

};

// Enum  PBDPhysics.EChainCollisionMode
enum class EChainCollisionMode : uint8_t
{
    None                                           = 0,
    Discrete                                       = 1,
    CCD                                            = 2,
    EChainCollisionMode_MAX                        = 3

};

// Enum  PBDPhysics.ELengthConstraintMode
enum class ELengthConstraintMode : uint8_t
{
    SimpleClamp                                    = 0,
    LengthConstraint                               = 1,
    Custom                                         = 2,
    ELengthConstraintMode_MAX                      = 3

};

// Enum  PBDPhysics.EWindType
enum class EWindType : uint8_t
{
    Wind_TriangleWave                              = 0,
    Wind_SinWave                                   = 1,
    Wind_Custom                                    = 2,
    Wind_MAX                                       = 3

};

// Enum  PermissionMgr.EDFPermissionType
enum class EDFPermissionType : uint8_t
{
    Unknow                                         = 0,
    AccessAlbum                                    = 1,
    Camera                                         = 2,
    RecordAudio                                    = 3,
    WriteSettings                                  = 4,
    InstallPackages                                = 5,
    Notifications                                  = 6,
    Location                                       = 7,
    Calendar                                       = 8,
    BlueTooth                                      = 9,
    ManageExternalStorage                          = 10,
    EDFPermissionType_MAX                          = 11

};

// Enum  PermissionMgr.EDFPermissionShowType
enum class EDFPermissionShowType : uint8_t
{
    Director                                       = 0,
    ShowConfirmWindow                              = 1,
    ShowFloatingWindow                             = 2,
    EDFPermissionShowType_MAX                      = 3

};

// Enum  PrefabricatorRuntime.EPrefabricatorPivotPosition
enum class EPrefabricatorPivotPosition : uint8_t
{
    ExtremeLeft                                    = 0,
    ExtremeRight                                   = 1,
    Center                                         = 2,
    EPrefabricatorPivotPosition_MAX                = 3

};

// Enum  PropertyReplication.EPropertyReplicationCullingMethod
enum class EPropertyReplicationCullingMethod : uint8_t
{
    ECM_AUTO                                       = 0,
    ECM_DISTANCE                                   = 1,
    ECM_NO_CULLING                                 = 2,
    ECM_MAX                                        = 3

};

// Enum  OnlineSubsystem.EInAppPurchaseState
enum class EInAppPurchaseState : uint8_t
{
    Unknown                                        = 0,
    Success                                        = 1,
    Failed                                         = 2,
    Cancelled                                      = 3,
    Invalid                                        = 4,
    NotAllowed                                     = 5,
    Restored                                       = 6,
    AlreadyOwned                                   = 7,
    EInAppPurchaseState_MAX                        = 8

};

// Enum  OnlineSubsystemUtils.EBeaconConnectionState
enum class EBeaconConnectionState : uint8_t
{
    Invalid                                        = 0,
    Closed                                         = 1,
    Pending                                        = 2,
    Open                                           = 3,
    EBeaconConnectionState_MAX                     = 4

};

// Enum  OnlineSubsystemUtils.EClientRequestType
enum class EClientRequestType : uint8_t
{
    NonePending                                    = 0,
    ExistingSessionReservation                     = 1,
    ReservationUpdate                              = 2,
    EmptyServerReservation                         = 3,
    Reconnect                                      = 4,
    Abandon                                        = 5,
    ReservationRemoveMembers                       = 6,
    EClientRequestType_MAX                         = 7

};

// Enum  OnlineSubsystemUtils.EPartyReservationResult
enum class EPartyReservationResult : uint8_t
{
    NoResult                                       = 0,
    RequestPending                                 = 1,
    GeneralError                                   = 2,
    PartyLimitReached                              = 3,
    IncorrectPlayerCount                           = 4,
    RequestTimedOut                                = 5,
    ReservationDuplicate                           = 6,
    ReservationNotFound                            = 7,
    ReservationAccepted                            = 8,
    ReservationDenied                              = 9,
    ReservationDenied_CrossPlayRestriction         = 10,
    ReservationDenied_Banned                       = 11,
    ReservationRequestCanceled                     = 12,
    ReservationInvalid                             = 13,
    BadSessionId                                   = 14,
    ReservationDenied_ContainsExistingPlayers      = 15,
    EPartyReservationResult_MAX                    = 16

};

// Enum  OnlineSubsystemUtils.ESpectatorClientRequestType
enum class ESpectatorClientRequestType : uint8_t
{
    NonePending                                    = 0,
    ExistingSessionReservation                     = 1,
    ReservationUpdate                              = 2,
    EmptyServerReservation                         = 3,
    Reconnect                                      = 4,
    Abandon                                        = 5,
    ESpectatorClientRequestType_MAX                = 6

};

// Enum  OnlineSubsystemUtils.ESpectatorReservationResult
enum class ESpectatorReservationResult : uint8_t
{
    NoResult                                       = 0,
    RequestPending                                 = 1,
    GeneralError                                   = 2,
    SpectatorLimitReached                          = 3,
    IncorrectPlayerCount                           = 4,
    RequestTimedOut                                = 5,
    ReservationDuplicate                           = 6,
    ReservationNotFound                            = 7,
    ReservationAccepted                            = 8,
    ReservationDenied                              = 9,
    ReservationDenied_CrossPlayRestriction         = 10,
    ReservationDenied_Banned                       = 11,
    ReservationRequestCanceled                     = 12,
    ReservationInvalid                             = 13,
    BadSessionId                                   = 14,
    ReservationDenied_ContainsExistingPlayers      = 15,
    ESpectatorReservationResult_MAX                = 16

};

// Enum  OnlineSubsystem.EMPMatchOutcome
enum class EMPMatchOutcome : uint8_t
{
    None                                           = 0,
    Quit                                           = 1,
    Won                                            = 2,
    Lost                                           = 3,
    Tied                                           = 4,
    TimeExpired                                    = 5,
    First                                          = 6,
    Second                                         = 7,
    Third                                          = 8,
    Fourth                                         = 9,
    EMPMatchOutcome_MAX                            = 10

};

// Enum  Swarms.ESwarmsQualityLevel
enum class ESwarmsQualityLevel : uint8_t
{
    Low                                            = 0,
    Medium                                         = 1,
    High                                           = 2,
    ESwarmsQualityLevel_MAX                        = 3

};

// Enum  Swarms.ESwarmsFadeInType
enum class ESwarmsFadeInType : uint8_t
{
    None                                           = 0,
    Scale                                          = 1,
    ScaleAsAlpha                                   = 2,
    Alpha                                          = 3,
    ESwarmsFadeInType_MAX                          = 4

};

// Enum  TimiAudioProfiler.ETAProfilerObjectType
enum class ETAProfilerObjectType : uint8_t
{
    Event                                          = 0,
    Switch                                         = 1,
    State                                          = 2,
    RTPC                                           = 3,
    SoundBank                                      = 4,
    Listener                                       = 5,
    ETAProfilerObjectType_MAX                      = 6

};

// Enum  TimiAudioProfiler.ETAProfilerType
enum class ETAProfilerType : uint8_t
{
    Message                                        = 0,
    Warning                                        = 1,
    Error                                          = 2,
    ETAProfilerType_MAX                            = 3

};

// Enum  UIClipMap.PackageClipMapMethod
enum class PackageClipMapMethod : uint8_t
{
    EP_Default                                     = 0,
    EP_PCOnly                                      = 1,
    EP_MAX                                         = 2

};

// Enum  UIClipMap.EOriginTextureSizeType
enum class EOriginTextureSizeType : uint8_t
{
    TS_None                                        = 0,
    TS_8k                                          = 1,
    TS_4k                                          = 2,
    TS_MAX                                         = 3

};

// Enum  UMGSplineArea.EUMGSplineAreaType
enum class EUMGSplineAreaType : uint8_t
{
    Linear                                         = 0,
    Curve                                          = 1,
    EUMGSplineAreaType_MAX                         = 2

};

// Enum  Slate.EDescendantScrollDestination
enum class EDescendantScrollDestination : uint8_t
{
    IntoView                                       = 0,
    TopOrLeft                                      = 1,
    Center                                         = 2,
    EDescendantScrollDestination_MAX               = 3

};

// Enum  SlateCore.EConsumeMouseWheel
enum class EConsumeMouseWheel : uint8_t
{
    WhenScrollingPossible                          = 0,
    Always                                         = 1,
    Never                                          = 2,
    EConsumeMouseWheel_MAX                         = 3

};

// Enum  SlateCore.EOrientation
enum class EOrientation : uint8_t
{
    Orient_Horizontal                              = 0,
    Orient_Vertical                                = 1,
    Orient_MAX                                     = 2

};

// Enum  WaterFallScrollBox.EItemWidthType
enum class EItemWidthType : uint8_t
{
    FirstItemDesireSize                            = 0,
    Container                                      = 1,
    FixedSize                                      = 2,
    CustomScale                                    = 3,
    EItemWidthType_MAX                             = 4

};

// Enum  XeSSBlueprint.EXeSSQualityMode
enum class EXeSSQualityMode : uint8_t
{
    Off                                            = 0,
    UltraPerformance                               = 1,
    Performance                                    = 2,
    Balanced                                       = 3,
    Quality                                        = 4,
    UltraQuality                                   = 5,
    UltraQualityPlus                               = 6,
    AntiAliasing                                   = 7,
    EXeSSQualityMode_MAX                           = 8

};

// Enum  ZZAnimationLib.ECacheBlendBoneState
enum class ECacheBlendBoneState : uint8_t
{
    Invalid                                        = 0,
    Valid                                          = 1,
    Excluded                                       = 2,
    ECacheBlendBoneState_MAX                       = 3

};

// Enum  ZZAnimationLib.EFootIKStatus
enum class EFootIKStatus : uint8_t
{
    On                                             = 0,
    Closing                                        = 1,
    EFootIKStatus_MAX                              = 2

};

// Enum  ZZAnimationLib.ELinearSplineBoneAxis
enum class ELinearSplineBoneAxis : uint8_t
{
    None                                           = 0,
    X                                              = 1,
    Y                                              = 2,
    Z                                              = 3,
    ELinearSplineBoneAxis_MAX                      = 4

};

// Enum  ZZAnimationLib.EIKFootRootLocalAxis
enum class EIKFootRootLocalAxis : uint8_t
{
    NONE                                           = 0,
    X                                              = 1,
    Y                                              = 2,
    Z                                              = 3,
    Velocity                                       = 4,
    EIKFootRootLocalAxis_MAX                       = 5

};

// Enum  ZZAnimationLib.EFindTargetFrameResult
enum class EFindTargetFrameResult : uint8_t
{
    NORMAL                                         = 0,
    CANNOTFIND                                     = 1,
    DIVIDEBYZERO                                   = 2,
    Count                                          = 3,
    EFindTargetFrameResult_MAX                     = 4

};

// Enum  ZZAnimationLib.ECharacterLocalDirection
enum class ECharacterLocalDirection : uint8_t
{
    NORTH                                          = 0,
    EAST                                           = 1,
    SOUTH                                          = 2,
    WEST                                           = 3,
    Count                                          = 4,
    ECharacterLocalDirection_MAX                   = 5

};

// Enum  ZZAnimationLib.CopySingleBoneMode
enum class CopySingleBoneMode : uint8_t
{
    Accumulate                                     = 0,
    Copy                                           = 1,
    CopySingleBoneMode_MAX                         = 2

};

// Enum  VariantManagerContent.EPropertyValueCategory
enum class EPropertyValueCategory : uint8_t
{
    Undefined                                      = 0,
    Generic                                        = 1,
    RelativeLocation                               = 2,
    RelativeRotation                               = 4,
    RelativeScale3D                                = 8,
    Visibility                                     = 16,
    Material                                       = 32,
    Color                                          = 64,
    Option                                         = 128,
    EPropertyValueCategory_MAX                     = 129

};

// Enum  UdpMessaging.EUdpMessageFormat
enum class EUdpMessageFormat : uint8_t
{
    None                                           = 0,
    Json                                           = 1,
    TaggedProperty                                 = 2,
    CborPlatformEndianness                         = 3,
    CborStandardEndianness                         = 4,
    EUdpMessageFormat_MAX                          = 5

};

// Enum  ActorSequence.EActorSequenceObjectReferenceType
enum class EActorSequenceObjectReferenceType : uint8_t
{
    ContextActor                                   = 0,
    ExternalActor                                  = 1,
    Component                                      = 2,
    EActorSequenceObjectReferenceType_MAX          = 3

};

// Enum  AppleImageUtils.EAppleTextureType
enum class EAppleTextureType : uint8_t
{
    Unknown                                        = 0,
    Image                                          = 1,
    PixelBuffer                                    = 2,
    Surface                                        = 3,
    MetalTexture                                   = 4,
    EAppleTextureType_MAX                          = 5

};

// Enum  AppleImageUtils.ETextureRotationDirection
enum class ETextureRotationDirection : uint8_t
{
    None                                           = 0,
    Left                                           = 1,
    Right                                          = 2,
    Down                                           = 3,
    ETextureRotationDirection_MAX                  = 4

};

// Enum  AssetTags.ECollectionScriptingShareType
enum class ECollectionScriptingShareType : uint8_t
{
    Local                                          = 0,
    Private                                        = 1,
    Shared                                         = 2,
    ECollectionScriptingShareType_MAX              = 3

};

// Enum  EditableMesh.ETriangleTessellationMode
enum class ETriangleTessellationMode : uint8_t
{
    ThreeTriangles                                 = 0,
    FourTriangles                                  = 1,
    ETriangleTessellationMode_MAX                  = 2

};

// Enum  EditableMesh.EInsetPolygonsMode
enum class EInsetPolygonsMode : uint8_t
{
    All                                            = 0,
    CenterPolygonOnly                              = 1,
    SidePolygonsOnly                               = 2,
    EInsetPolygonsMode_MAX                         = 3

};

// Enum  EditableMesh.EPolygonEdgeHardness
enum class EPolygonEdgeHardness : uint8_t
{
    NewEdgesSoft                                   = 0,
    NewEdgesHard                                   = 1,
    AllEdgesSoft                                   = 2,
    AllEdgesHard                                   = 3,
    EPolygonEdgeHardness_MAX                       = 4

};

// Enum  EditableMesh.EMeshElementAttributeType
enum class EMeshElementAttributeType : uint8_t
{
    None                                           = 0,
    FVector4                                       = 1,
    FVector                                        = 2,
    FVector2D                                      = 3,
    Float                                          = 4,
    Int                                            = 5,
    Bool                                           = 6,
    FName                                          = 7,
    EMeshElementAttributeType_MAX                  = 8

};

// Enum  EditableMesh.EMeshTopologyChange
enum class EMeshTopologyChange : uint8_t
{
    NoTopologyChange                               = 0,
    TopologyChange                                 = 1,
    EMeshTopologyChange_MAX                        = 2

};

// Enum  EditableMesh.EMeshModificationType
enum class EMeshModificationType : uint8_t
{
    FirstInterim                                   = 0,
    Interim                                        = 1,
    Final                                          = 2,
    EMeshModificationType_MAX                      = 3

};

// Enum  GooglePAD.EGooglePADCellularDataConfirmStatus
enum class EGooglePADCellularDataConfirmStatus : uint8_t
{
    AssetPack_CONFIRM_UNKNOWN                      = 0,
    AssetPack_CONFIRM_PENDING                      = 1,
    AssetPack_CONFIRM_USER_APPROVED                = 2,
    AssetPack_CONFIRM_USER_CANCELED                = 3,
    AssetPack_CONFIRM_MAX                          = 4

};

// Enum  GooglePAD.EGooglePADStorageMethod
enum class EGooglePADStorageMethod : uint8_t
{
    AssetPack_STORAGE_FILES                        = 0,
    AssetPack_STORAGE_APK                          = 1,
    AssetPack_STORAGE_UNKNOWN                      = 2,
    AssetPack_STORAGE_NOT_INSTALLED                = 3,
    AssetPack_STORAGE_MAX                          = 4

};

// Enum  GooglePAD.EGooglePADDownloadStatus
enum class EGooglePADDownloadStatus : uint8_t
{
    AssetPack_UNKNOWN                              = 0,
    AssetPack_DOWNLOAD_PENDING                     = 1,
    AssetPack_DOWNLOADING                          = 2,
    AssetPack_TRANSFERRING                         = 3,
    AssetPack_DOWNLOAD_COMPLETED                   = 4,
    AssetPack_DOWNLOAD_FAILED                      = 5,
    AssetPack_DOWNLOAD_CANCELED                    = 6,
    AssetPack_WAITING_FOR_WIFI                     = 7,
    AssetPack_NOT_INSTALLED                        = 8,
    AssetPack_INFO_PENDING                         = 9,
    AssetPack_INFO_FAILED                          = 10,
    AssetPack_REMOVAL_PENDING                      = 11,
    AssetPack_REMOVAL_FAILED                       = 12,
    AssetPack_MAX                                  = 13

};

// Enum  GooglePAD.EGooglePADErrorCode
enum class EGooglePADErrorCode : uint8_t
{
    AssetPack_NO_ERROR                             = 0,
    AssetPack_APP_UNAVAILABLE                      = 1,
    AssetPack_UNAVAILABLE                          = 2,
    AssetPack_INVALID_REQUEST                      = 3,
    AssetPack_DOWNLOAD_NOT_FOUND                   = 4,
    AssetPack_API_NOT_AVAILABLE                    = 5,
    AssetPack_NETWORK_ERROR                        = 6,
    AssetPack_ACCESS_DENIED                        = 7,
    AssetPack_INSUFFICIENT_STORAGE                 = 8,
    AssetPack_PLAY_STORE_NOT_FOUND                 = 9,
    AssetPack_NETWORK_UNRESTRICTED                 = 10,
    AssetPack_INTERNAL_ERROR                       = 11,
    AssetPack_INITIALIZATION_NEEDED                = 12,
    AssetPack_INITIALIZATION_FAILED                = 13,
    AssetPack_MAX                                  = 14

};

// Enum  PhysXVehicles.EVehicleSuspensionQuery
enum class EVehicleSuspensionQuery : uint8_t
{
    Raycast                                        = 0,
    BlockingSweep                                  = 1,
    EVehicleSuspensionQuery_MAX                    = 2

};

// Enum  PhysXVehicles.EWheelSweepType
enum class EWheelSweepType : uint8_t
{
    SimpleAndComplex                               = 0,
    Simple                                         = 1,
    Complex                                        = 2,
    EWheelSweepType_MAX                            = 3

};

// Enum  PhysXVehicles.EVehicleDifferential4W
enum class EVehicleDifferential4W : uint8_t
{
    LimitedSlip_4W                                 = 0,
    LimitedSlip_FrontDrive                         = 1,
    LimitedSlip_RearDrive                          = 2,
    Open_4W                                        = 3,
    Open_FrontDrive                                = 4,
    Open_RearDrive                                 = 5,
    EVehicleDifferential4W_MAX                     = 6

};

// Enum  GPCutScene.EGPSequenceCustomEvent
enum class EGPSequenceCustomEvent : uint8_t
{
    GeneralEvent                                   = 0,
    KillVehicle                                    = 1,
    EGPSequenceCustomEvent_MAX                     = 2

};

// Enum  GPCutScene.FGPSequenceBindingActorPolicy
enum class FGPSequenceBindingActorPolicy : uint8_t
{
    Unkown                                         = 0,
    TriggerActor                                   = 1,
    TriggerActorAttached                           = 2,
    SpecialActor                                   = 3,
    SpecialActorAttached                           = 4,
    TaggedActor                                    = 5,
    TaggedActorAttached                            = 6,
    PlayerActorAttached                            = 7,
    PlayerActorClientTeamMate                      = 253,
    PlayerActorClient                              = 254,
    PlayerActor                                    = 255,
    FGPSequenceBindingActorPolicy_MAX              = 256

};

// Enum  GPCutScene.ESequenceCameraType
enum class ESequenceCameraType : uint8_t
{
    Cinematic                                      = 0,
    CopyFromFPP                                    = 1,
    CopyFromTPP                                    = 2,
    ESequenceCameraType_MAX                        = 3

};

// Enum  GPCutScene.EGPSequenceStatus
enum class EGPSequenceStatus : uint8_t
{
    Stopped                                        = 0,
    Loading                                        = 1,
    Playing                                        = 2,
    Paused                                         = 3,
    EGPSequenceStatus_MAX                          = 4

};

// Enum  GPCutScene.EGPSequenceEvent
enum class EGPSequenceEvent : uint8_t
{
    Unkown                                         = 0,
    EGPSequenceEvent_MAX                           = 1

};

// Enum  GPCutScene.EGPSequenceTriggerAuth
enum class EGPSequenceTriggerAuth : uint8_t
{
    Unkown                                         = 0,
    ClientOnly                                     = 1,
    Authority                                      = 2,
    EGPSequenceTriggerAuth_MAX                     = 3

};

// Enum  GPCutScene.EGPSequencePhysicsMode
enum class EGPSequencePhysicsMode : uint8_t
{
    Unkown                                         = 0,
    Disable                                        = 1,
    Enable                                         = 2,
    EGPSequencePhysicsMode_MAX                     = 3

};

// Enum  GPCutScene.EGPSequencePreloadActorType
enum class EGPSequencePreloadActorType : uint8_t
{
    AnyAny                                         = 0,
    Player1                                        = 1,
    Player2                                        = 2,
    Player3                                        = 3,
    Player4                                        = 4,
    PlayerAny                                      = 5,
    VehiclePlayer                                  = 6,
    VehicleAny                                     = 7,
    AIAny                                          = 8,
    SpecialActor                                   = 9,
    None                                           = 255,
    EGPSequencePreloadActorType_MAX                = 256

};

// Enum  GPCutScene.EGPSequenceTriggerMode
enum class EGPSequenceTriggerMode : uint8_t
{
    AnyAny                                         = 0,
    Player1                                        = 1,
    Player2                                        = 2,
    Player3                                        = 3,
    Player4                                        = 4,
    PlayerAny                                      = 5,
    VehiclePlayer                                  = 6,
    VehicleAny                                     = 7,
    AIAny                                          = 8,
    SpecialActor                                   = 9,
    Custom                                         = 255,
    EGPSequenceTriggerMode_MAX                     = 256

};

// Enum  GPCutScene.EGPSequenceBindingActorType
enum class EGPSequenceBindingActorType : uint8_t
{
    Unkown                                         = 0,
    Player                                         = 1,
    Vehicle                                        = 2,
    AI                                             = 3,
    EGPSequenceBindingActorType_MAX                = 4

};

// Enum  GPCutScene.EGPSequencePerspectiveMode
enum class EGPSequencePerspectiveMode : uint8_t
{
    Unknown                                        = 0,
    FPP                                            = 1,
    TPP                                            = 2,
    TPPWithFacialAnimation                         = 3,
    EGPSequencePerspectiveMode_MAX                 = 4

};

// Enum  GPCutScene.EGPSequencePrepareStatus
enum class EGPSequencePrepareStatus : uint8_t
{
    Initial                                        = 0,
    Preloading                                     = 1,
    Preloaded                                      = 2,
    PrepareAllReady                                = 3,
    Unloading                                      = 4,
    Unloaded                                       = 5,
    EGPSequencePrepareStatus_MAX                   = 6

};

// Enum  GPCutScene.EGPSubLevelPreloaderStatus
enum class EGPSubLevelPreloaderStatus : uint8_t
{
    Initial                                        = 0,
    Preloading                                     = 1,
    Preloaded                                      = 2,
    AllReady                                       = 5,
    EGPSubLevelPreloaderStatus_MAX                 = 6

};

// Enum  GPDeformable.EGPDeformableActorStage
enum class EGPDeformableActorStage : uint8_t
{
    GPDeformableActor_None                         = 0,
    GPDeformableActor_GeneratePoint                = 1,
    GPDeformableActor_GenerateGrid                 = 2,
    GPDeformableActor_GenerateSmoke                = 3,
    GPDeformableActor_MAX                          = 4

};

// Enum  GPDeformable.EGPDeformableStage
enum class EGPDeformableStage : uint8_t
{
    Init                                           = 0,
    Move                                           = 1,
    CheckHeight                                    = 2,
    GenerateMesh                                   = 3,
    Normal                                         = 4,
    EGPDeformableStage_MAX                         = 5

};

// Enum  GPDeformable.ESmokeBreakType
enum class ESmokeBreakType : uint8_t
{
    None                                           = 0,
    SmokeBreaker                                   = 1,
    SmokeBreakTaker                                = 2,
    ESmokeBreakType_MAX                            = 3

};

// Enum  GPDeformable.ESmokeClassType
enum class ESmokeClassType : uint8_t
{
    None                                           = 0,
    CharacterSkill                                 = 1,
    Vehicle                                        = 2,
    ESmokeClassType_MAX                            = 3

};

// Enum  GPDeformable.ESmokeActorType
enum class ESmokeActorType : uint8_t
{
    FX                                             = 0,
    ISM                                            = 1,
    ESmokeActorType_MAX                            = 2

};

// Enum  GPDeformable.ESmokeState
enum class ESmokeState : uint8_t
{
    None                                           = 0,
    BlowingOut                                     = 1,
    Recovering                                     = 2,
    Generating                                     = 3,
    Disappearing                                   = 4,
    Playing                                        = 5,
    Disappeared                                    = 6,
    Explosion1X                                    = 7,
    Explosion2X                                    = 8,
    ESmokeState_MAX                                = 9

};

// Enum  GPDeformable.EUASMovementMode
enum class EUASMovementMode : uint8_t
{
    UASMovementMode_None                           = 0,
    UASMovementMode_ClientLocalControlled          = 1,
    UASMovementMode_ServerAIControlled             = 2,
    UASMovementMode_Server                         = 3,
    UASMovementMode_Simulate                       = 4,
    UASMovementMode_MAX                            = 5

};

// Enum  GPEncryption.EGPEncryptionType
enum class EGPEncryptionType : uint32_t
{
    None                                           = 0,
    POV                                            = 2,
    CharacterCapsule                               = 4,
    CharacterMesh                                  = 8,
    CharacterMeshSceneProxy                        = 16,
    CharacterReplicationMovement                   = 32,
    PickupActor                                    = 64,
    CharacterSceneComponent                        = 128,
    WeaponSceneComponent                           = 256,
    IntCharacterMovement                           = 512,
    MovementReplication                            = 1024,
    EGPEncryptionType_MAX                          = 1025

};

// Enum  GPGameHud.EMutexChangeReason
enum class EMutexChangeReason : uint8_t
{
    OccupyIdle                                     = 0,
    ReleaseActive                                  = 1,
    ReleaseOverTime                                = 2,
    Preempt                                        = 3,
    ForceRefresh                                   = 4,
    EMutexChangeReason_MAX                         = 5

};

// Enum  GPGameHud.EWidgetPriorityType
enum class EWidgetPriorityType : uint8_t
{
    A                                              = 0,
    B                                              = 1,
    C                                              = 2,
    D                                              = 3,
    E                                              = 4,
    F                                              = 5,
    G                                              = 6,
    H                                              = 7,
    I                                              = 8,
    J                                              = 9,
    Never                                          = 10,
    EWidgetPriorityType_MAX                        = 11

};

// Enum  GPGameHud.GameHUDSate
enum class GameHUDSate : uint8_t
{
    GHS_None                                       = 0,
    GHS_Dead                                       = 1,
    GHS_Firing                                     = 2,
    GHS_Aiming                                     = 3,
    GHS_Settlement                                 = 4,
    GHS_OpenMap                                    = 5,
    GHS_Dying                                      = 6,
    GHS_PrepareTime                                = 7,
    GHS_UseItem                                    = 8,
    GHS_VaultAndClimb                              = 9,
    GHS_Operating3DUI                              = 10,
    GHS_CutScene                                   = 11,
    GHS_DriveVehicle                               = 12,
    GHS_RideVehicle                                = 13,
    GHS_UseHeavyMachineGun                         = 14,
    GHS_Reloading                                  = 15,
    GHS_DisposalBomb                               = 16,
    GHS_RescueSomeOne                              = 17,
    GHS_Burden                                     = 18,
    GHS_OB                                         = 19,
    GHS_ForbidFire                                 = 20,
    GHS_ClimbLadder                                = 21,
    GHS_SwitchAds                                  = 22,
    GHS_SwitchPot                                  = 23,
    GHS_UseTelescope                               = 24,
    GHS_Escaping                                   = 25,
    GHS_Monitor                                    = 26,
    GHS_PVEQuestPanelOnly                          = 27,
    GHS_VehicleLeanOut                             = 28,
    GHS_SOLQuestOperation                          = 29,
    GHS_SeamlessGameplay                           = 30,
    GHS_Redeploy                                   = 31,
    GHS_FPPView                                    = 32,
    GHS_InteractOnly                               = 33,
    GHS_Prone                                      = 34,
    GHS_COUNTDOWN                                  = 35,
    GHS_SOLEventSilent                             = 36,
    GHS_BeingRescue                                = 37,
    GHS_ScoreTips                                  = 38,
    GHS_BreakthroughGeneralStrongBroadcast         = 39,
    GHS_KillerMark                                 = 40,
    GHS_RoulettePanel                              = 41,
    GHS_SOLEvacuation                              = 42,
    GHS_WeaponChange                               = 43,
    GHS_VehicleForbidShoot                         = 44,
    GHS_VehicleMode_Common                         = 45,
    GHS_VehicleMode_Skill                          = 46,
    GHS_RedeployView                               = 47,
    GHS_Assassinate                                = 48,
    GHS_PlayingSubTitle                            = 49,
    GHS_SOLEvacuationPOI                           = 50,
    GHS_PCControlMode                              = 51,
    GHS_UseDetectorSkill                           = 52,
    GHS_BattleScoreDetails                         = 53,
    GHS_UseZipline                                 = 54,
    GHS_Breakthrough_Transitioning                 = 55,
    GHS_LiveSpectate                               = 56,
    GHS_VehicleForbidXPPChange                     = 57,
    GHS_BreakthroughTopTimeCountDown               = 58,
    GHS_VehicleWeapon                              = 59,
    GHS_RaidRailRide                               = 60,
    GHS_Tutorial                                   = 61,
    GHS_ObserverMode                               = 62,
    GHS_StingerMissile                             = 63,
    GHS_ContractAccess                             = 64,
    GHS_ObserverModeFreeCamera                     = 65,
    GHS_BreakthroughPreMatchWaitPlayer             = 66,
    GHS_BreakthroughPreMatchChooseArm              = 67,
    GHS_BreakthroughPreMatchFirstDeploy            = 68,
    GHS_SOLBannerFlyIcon                           = 69,
    GHS_BulletTips                                 = 70,
    GHS_AmmoAddTips                                = 71,
    GHS_SOLRadioInfoView                           = 72,
    GHS_SOLCaptureView                             = 73,
    GHS_SOLExitPayment                             = 74,
    GHS_BreakthroughSpecialStrongBroadcast         = 75,
    GHS_BreakthroughSectorActivedBroadcast         = 76,
    GHS_BreakthroughSectorAnchorCapView            = 77,
    GHS_SafeAreaView                               = 78,
    GHS_BlueprintWeapon                            = 79,
    GHS_BlueprintWeaponTips                        = 80,
    GHS_SOLEventProgress                           = 81,
    GHS_HackPCInfoView                             = 82,
    GHS_SOLContract                                = 83,
    GHS_SOLContractProgress                        = 84,
    GHS_SOLContractVote                            = 85,
    GHS_SOLPOITips                                 = 86,
    GHS_UseBow                                     = 87,
    GHS_BowCanCharge                               = 88,
    GHS_DyingView                                  = 89,
    GHS_MiniMapDangerous                           = 90,
    GHS_CountDownViewNew                           = 91,
    GHS_SeamlessEntry                              = 92,
    GHS_SeamlessEntry_Tutorial                     = 93,
    GHS_BreakthroughSupportReleaseView             = 94,
    GHS_SOLInterceptView                           = 95,
    GHS_BlueprintWeaponEstimatedTime               = 96,
    GHS_RealOpenBag                                = 97,
    GHS_RealOpenLoot                               = 98,
    GHS_RealLootSearching                          = 99,
    GHS_CodedLockView                              = 100,
    GHS_SOLKillerInfoCardView                      = 101,
    GHS_ChatWindow                                 = 102,
    GHS_WeaponInspect                              = 103,
    GHS_InteractPanel                              = 104,
    GHS_InteractRescue                             = 105,
    GHS_HudHitFeedBack                             = 106,
    GHS_EscPanel                                   = 107,
    GHS_MarkingRoulette                            = 108,
    GHS_ContractInManningArea                      = 109,
    GHS_VehicleWeaponDriver                        = 110,
    GHS_DeathDamageInfoPanel                       = 111,
    GHS_Redeploy_Rising                            = 112,
    GHS_UseElectricBow                             = 113,
    GHS_LiveReplay                                 = 114,
    GHS_OBReplay                                   = 115,
    GHS_RedeploySelectVehicle                      = 116,
    GHS_RedeployHeroInfo                           = 117,
    GHS_RedeployArmSelectedView                    = 118,
    GHS_UnlockingView                              = 119,
    GHS_SlienceMove                                = 120,
    GHS_CommonCountDownView                        = 121,
    GHS_TeamInfoDetail                             = 122,
    GHS_BreakthroughWeakBroadcast                  = 124,
    GHS_SupportHudMode                             = 125,
    GHS_BreakthroughCharacterTransitionGuidanceEnd = 126,
    GHS_WholeRedeploy                              = 128,
    GHS_RedeployVehicleStore                       = 129,
    GHS_ScouterView                                = 130,
    GHS_ScouterTipsView                            = 131,
    GHS_GuidedCruiseMissile                        = 133,
    GHS_HDPerformance                              = 134,
    GHS_CommercializationRoulette                  = 135,
    GHS_AmmoRoulette                               = 136,
    GHS_MPRankRoulette                             = 137,
    GHS_WeaponScopeRoulette                        = 138,
    GHS_MedicRoulette                              = 139,
    GHS_SafeHouseRange                             = 140,
    GHS_SafeHouseRangeInLane                       = 141,
    GHS_FirstDeployCountDown                       = 142,
    GHS_RedeploySelectArmItemHud                   = 143,
    GHS_FiringBleeding                             = 145,
    GHS_ElectricArrowBleeding                      = 146,
    GHS_SkillProcessBar                            = 147,
    GHS_BreakthroughIconStrongBroadcast            = 148,
    GHS_SnoicDirView                               = 149,
    GHS_UASActionProgressBar                       = 150,
    GHS_OpenParachute                              = 151,
    GHS_FirefightingAction                         = 152,
    GHS_CommonCancelBtn                            = 154,
    GHS_FlashDroneScreenEffect                     = 156,
    GHS_OpenMoss                                   = 157,
    GHS_RedeployWeaponStoreHud                     = 158,
    GHS_RedeployWeaponPresetHud                    = 159,
    GHS_ActiveAdrenaline                           = 160,
    GHS_UseThrowBlocking                           = 161,
    GHS_RedeployVehiclePartStore                   = 162,
    GHS_SkillInspect                               = 163,
    GHS_EmoteAction                                = 164,
    GHS_RedeployCommanderView                      = 165,
    GHS_PatrolVehicle                              = 166,
    GHS_SwimUnderWater                             = 167,
    GHS_SwimOxygenBar                              = 168,
    GHS_SwimDiveButton                             = 169,
    GHS_BreakthroughOrderItemBroadcast             = 170,
    GHS_InGameEquipmentRental                      = 171,
    GHS_ArenaCountDownView                         = 172,
    GHS_ArenaStatusTipsBanner                      = 173,
    GHS_TaskList                                   = 174,
    GHS_InteractCarryBody                          = 175,
    GHS_UseSkill_BionicSpy                         = 179,
    GHS_Controllable_HideHUD                       = 180,
    GHS_Controllable_BionicBird                    = 181,
    GHS_Controllable_BionicSpy                     = 182,
    GHS_ControllableDrone                          = 190,
    GHS_BattleFieldCommanderSkillView              = 191,
    GHS_MPRankView                                 = 192,
    GHS_JailBreak                                  = 193,
    GHS_FingerprintView                            = 194,
    GHS_HackPCOperationMain                        = 195,
    GHS_CollectionRoom                             = 196,
    GHS_Rope                                       = 197,
    GHS_TacticalConquestEvolutionReviveDeployView  = 198,
    GHS_RecycleFortification                       = 199,
    GHS_ButterRescue                               = 200,
    GHS_DeadReplay                                 = 251,
    GHS_GuideDisableInput                          = 252,
    GHS_TutorialHideAllHUD                         = 253,
    GHS_LoadingHideAllHUD                          = 254,
    GHS_GlobalHideAllHUD                           = 255,
    GHS_MAX                                        = 256

};

// Enum  GPGameHud.EHUDCreateType
enum class EHUDCreateType : uint8_t
{
    OnDemand                                       = 0,
    OnDemandButPreload                             = 8,
    OnDemandButPreloadAndShow                      = 12,
    Auto                                           = 16,
    AutoAndBlockGameFlow                           = 18,
    AutoAndShow                                    = 20,
    AutoAndShowAndBlockGameFlow                    = 22,
    EHUDCreateType_MAX                             = 23

};

// Enum  GPGameHud.VisibleChannel
enum class VisibleChannel : uint8_t
{
    VisibleChannel                                 = 0,
    VisibleChannel                                 = 1,
    VisibleChannel                                 = 2,
    VisibleChannel                                 = 3,
    VisibleChannel                                 = 4,
    VisibleChannel                                 = 5,
    VisibleChannel                                 = 6,
    VisibleChannel                                 = 7,
    VisibleChannel_MAX                             = 8

};

// Enum  GPGameHud.LayerZorder
enum class LayerZorder : uint8_t
{
    Zorder_None                                    = 0,
    Zorder_ScreenEffect                            = 1,
    Zorder_Mark                                    = 30,
    Zorder_Hint                                    = 60,
    Zorder_Feedback                                = 90,
    Zorder_Common                                  = 120,
    Zorder_Touch                                   = 150,
    Zorder_Popup                                   = 180,
    Zorder_LargePopup                              = 210,
    Zorder_MAX                                     = 211

};

// Enum  GPGameHud.EUIViewUpdateFrequency
enum class EUIViewUpdateFrequency : uint8_t
{
    EveryFrame                                     = 0,
    HighFrequency                                  = 1,
    MidFrequency                                   = 2,
    LowFrequency                                   = 3,
    Freeze                                         = 4,
    VeryHighFrequency                              = 5,
    EUIViewUpdateFrequency_MAX                     = 6

};

// Enum  GPGameHud.SelectedImgState
enum class SelectedImgState : uint8_t
{
    SelectedImgState_Zero                          = 0,
    SelectedImgState_One                           = 1,
    SelectedImgState_Reduce                        = 2,
    SelectedImgState_MAX                           = 3

};

// Enum  GPGameInput.EGPGamepadInputType
enum class EGPGamepadInputType : uint8_t
{
    XBox360                                        = 0,
    Sony                                           = 1,
    EGPGamepadInputType_MAX                        = 2

};

// Enum  GPGameInput.EGPInputModeType
enum class EGPInputModeType : uint8_t
{
    None                                           = 0,
    GameOnly                                       = 1,
    UIOnly                                         = 2,
    GameAndUI                                      = 3,
    ForceUIOnly                                    = 4,
    Count                                          = 5,
    EGPInputModeType_MAX                           = 6

};

// Enum  GPGameInput.EGPInputType
enum class EGPInputType : uint8_t
{
    MouseAndKeyboard                               = 0,
    Gamepad                                        = 1,
    Touch                                          = 2,
    Count                                          = 3,
    EGPInputType_MAX                               = 4

};

// Enum  GPGameInput.EMobileTouchType
enum class EMobileTouchType : uint8_t
{
    Begin                                          = 0,
    FirstMove                                      = 1,
    Move                                           = 2,
    End                                            = 3,
    EMobileTouchType_MAX                           = 4

};

// Enum  GPGameInput.EMobileControlButtonType
enum class EMobileControlButtonType : uint8_t
{
    EControlButtonType_None                        = 0,
    EControlButtonType_Jump                        = 1,
    EControlButtonType_Crouch                      = 2,
    EControlButtonType_Prone                       = 3,
    EControlButtonType_Aim                         = 4,
    EControlButtonType_Fire                        = 5,
    EControlButtonType_LeftPeek                    = 6,
    EControlButtonType_RightPeek                   = 7,
    EControlButtonType_LeftFire                    = 8,
    EControlButtonType_Throw                       = 9,
    EControlButtonType_SilentWalk                  = 10,
    EControlButtonType_Eye                         = 11,
    EControlButtonType_FastMelee                   = 12,
    EControlButtonType_VaultClimb                  = 13,
    ControlButtonType_Zipline                      = 14,
    ControlButtonType_Parachute                    = 15,
    ControlButtonType_Assassinate                  = 16,
    ControlButtonType_CarryBody                    = 17,
    ControlButtonType_Interact0                    = 18,
    ControlButtonType_Interact1                    = 19,
    ControlButtonType_Interact2                    = 20,
    ControlButtonType_PickUp                       = 21,
    ControlButtonType_ItemDetail                   = 22,
    EControlButtonType_SkillX                      = 23,
    EControlButtonType_SkillG                      = 24,
    EControlButtonType_SkillV                      = 25,
    EControlButtonType_Skill4                      = 26,
    EControlButtonType_Skill5                      = 27,
    EControlButtonType_SkillSelf                   = 28,
    EControlButtonType_SkillActiveMine             = 29,
    EControlButtonType_SkillRecyleMine             = 30,
    EControlButtonType_Marking                     = 31,
    EControlButtonType_Commercialization           = 32,
    EControlButtonType_SkillInspect                = 33,
    EControlButtonType_Reload                      = 34,
    EControlButtonType_ChangeScope                 = 35,
    EControlButtonType_VehicleSkill1               = 36,
    EControlButtonType_VehicleSkill2               = 37,
    EControlButtonType_VehicleSkill3               = 38,
    EControlButtonType_VehicleSkill4               = 39,
    EControlButtonType_VehicleFire                 = 40,
    EControlButtonType_VehicleLeftFire             = 41,
    EControlButtonType_VehicleJoystickFire         = 42,
    EControlButtonType_VehicleJoystickLeftFire     = 43,
    EControlButtonType_SuperSprint                 = 44,
    EControlButtonType_VehicleSecondWeaponFire     = 45,
    EControlButtonType_SwimDown                    = 46,
    EControlButtonType_SwimUp                      = 47,
    EControlButtonType_VehicleSwitchWeaponFastFire = 48,
    EControlButtonType_VehicleFreeCamera           = 49,
    EMobileControlButtonType_MAX                   = 50

};

// Enum  GPGameInput.EJoystickMode
enum class EJoystickMode : uint8_t
{
    EJoystickMode_Character                        = 0,
    EJoystickMode_Vehicle                          = 1,
    EJoystickMode_MAX                              = 2

};

// Enum  GPGameInput.EMouseInputType
enum class EMouseInputType : uint8_t
{
    ENormalWeapon                                  = 0,
    EVehicleDriveWeapon                            = 1,
    EHelicopterDriveWeapon                         = 2,
    EVehicleWeapon                                 = 3,
    EJet                                           = 4,
    EMouseInputType_MAX                            = 5

};

// Enum  GPGameInput.EGyroscopeInputForbidReason
enum class EGyroscopeInputForbidReason : uint8_t
{
    EForbidReason_NumMax                           = 0,
    EForbidReason_MAX                              = 1

};

// Enum  GPGameInput.EMobileInputPhase
enum class EMobileInputPhase : uint8_t
{
    MobileInputPhase_Began                         = 0,
    MobileInputPhase_Moved                         = 1,
    MobileInputPhase_Stationary                    = 2,
    MobileInputPhase_Ended                         = 3,
    MobileInputPhase_Canceled                      = 4,
    MobileInputPhase_MAX                           = 5

};

// Enum  GPGameInput.EGPInputMode
enum class EGPInputMode : uint8_t
{
    GameOnly                                       = 0,
    GameAndUI                                      = 1,
    UIOnly                                         = 2,
    EGPInputMode_MAX                               = 3

};

// Enum  GPGameplay.EStateAudioEventType
enum class EStateAudioEventType : uint8_t
{
    None                                           = 0,
    NormalState                                    = 1,
    LowHealth                                      = 2,
    PendingDeath                                   = 3,
    HoldBreath                                     = 4,
    MP_ExitBoundary                                = 5,
    MP_EnterDeploy                                 = 6,
    Suppressed                                     = 7,
    EStateAudioEventType_MAX                       = 8

};

// Enum  GPGameplay.EModularPartNodeType
enum class EModularPartNodeType : uint8_t
{
    None                                           = 0,
    Adpater                                        = 1,
    ExtraModel                                     = 2,
    SkinAttach                                     = 3,
    Pendant                                        = 4,
    EModularPartNodeType_MAX                       = 5

};

// Enum  GPGlobalDefines.EAdapterItemType
enum class EAdapterItemType : uint8_t
{
    None                                           = 0,
    Receiver                                       = 1,
    GunBarral                                      = 2,
    PistolGrip                                     = 3,
    Stock                                          = 4,
    Handguard                                      = 5,
    Sight                                          = 11,
    Magazine                                       = 12,
    Muzzle                                         = 13,
    Foregrip                                       = 14,
    Underbarrel                                    = 15,
    TacticalDevices                                = 16,
    Bipod                                          = 17,
    ForSight                                       = 18,
    RearSight                                      = 19,
    Special                                        = 20,
    SightBase                                      = 21,
    Handle                                         = 22,
    Attacker                                       = 23,
    Connector                                      = 24,
    Trigger                                        = 25,
    PistolgripPatch                                = 26,
    CheekRest                                      = 29,
    HandguardChip                                  = 32,
    GripBass                                       = 33,
    MagBass                                        = 34,
    Flashkill                                      = 37,
    Hammer                                         = 38,
    GasT                                           = 39,
    HanU                                           = 40,
    Shield                                         = 41,
    Bolt                                           = 42,
    Handle2                                        = 43,
    BowLimb                                        = 44,
    BowGrip                                        = 45,
    Pendant                                        = 46,
    BowString                                      = 47,
    BowRelease                                     = 48,
    ArrowRest                                      = 50,
    BowScope                                       = 51,
    Lever                                          = 52,
    ShellHolder                                    = 53,
    Ammo                                           = 99,
    EAdapterItemType_MAX                           = 100

};

// Enum  GPGameplay.EWeaponAddFunction
enum class EWeaponAddFunction : uint8_t
{
    EWeapAddFunc_None                              = 0,
    EWeapAddFunc_Zooming                           = 1,
    EWeapAddFunc_Silencer                          = 2,
    EWeapAddFunc_FlashSuppressor                   = 3,
    EWeapAddFunc_ClipExtent                        = 4,
    EWeapAddFunc_ChangeClipFaster                  = 5,
    EWeapAddFunc_LeftHandIK                        = 6,
    EWeapAddFunc_BipodUpDown                       = 7,
    EWeapAddFunc_FlashLight                        = 8,
    EWeapAddFunc_Laser                             = 9,
    EWeapAddFunc_PowerFlash                        = 10,
    EWeapAddFunc_InspectWeapon                     = 11,
    EWeapAddFunc_QuicklyAdapt                      = 12,
    EBackWeapPos_Max                               = 13,
    EWeaponAddFunction_MAX                         = 14

};

// Enum  GPGameplay.EDamageValidateType
enum class EDamageValidateType : uint8_t
{
    None                                           = 0,
    HitScan                                        = 1,
    Projectile                                     = 2,
    MeleeHitScan                                   = 3,
    EDamageValidateType_MAX                        = 4

};

// Enum  GPGameplay.EDamageType
enum class EDamageType : uint8_t
{
    ENone                                          = 0,
    EDefault                                       = 1,
    EBuffDamage                                    = 2,
    EWeaponDamage                                  = 3,
    EDroppedDamage                                 = 4,
    EWeaponThrowableDamage                         = 5,
    EPVEVehicleExplodeDamage                       = 6,
    EVehicleHitDamage                              = 7,
    EWeaponMeleeDamage                             = 8,
    EFSMActionDamage                               = 9,
    EDebug                                         = 10,
    EVehicleLightDamage                            = 11,
    EVehicleNormalDamage                           = 12,
    EVehicleHeavyDamage                            = 13,
    EAssassinateDamage                             = 14,
    ETieBreakerDamage                              = 15,
    EFixedTrackRocket                              = 16,
    EAbilityC401                                   = 17,
    EBattleFieldSupportDamage                      = 18,
    LandmineDamage                                 = 19,
    EMax                                           = 20,
    ESectorArtilerrateSkillDamage                  = 21,
    EGuidedMissleSkillDamage                       = 22,
    ESkillDamage                                   = 23,
    EWaterDrowningDamage                           = 24,
    ELaserDamage                                   = 25,
    EInteractDamage                                = 26,
    ESceneFlameDamage                              = 27,
    EDamageType_MAX                                = 28

};

// Enum  GPGameplay.EDamageSystemDamageType
enum class EDamageSystemDamageType : uint8_t
{
    None                                           = 0,
    Point                                          = 1,
    Radial                                         = 2,
    Physics                                        = 3,
    Buff                                           = 4,
    EDamageSystemDamageType_MAX                    = 5

};

// Enum  GPGameplay.EDamageValidateResult
enum class EDamageValidateResult : uint8_t
{
    None                                           = 0,
    Approve                                        = 1,
    Ignore                                         = 2,
    Abort                                          = 3,
    AbortOnlyLog                                   = 4,
    UseServer                                      = 5,
    EDamageValidateResult_MAX                      = 6

};

// Enum  GPGameplay.EGPCharacterFightStateType
enum class EGPCharacterFightStateType : uint8_t
{
    Fighting                                       = 0,
    Leisure                                        = 1,
    Alert                                          = 2,
    EGPCharacterFightStateType_MAX                 = 3

};

// Enum  GPGameplay.ECharacterLiveStatus
enum class ECharacterLiveStatus : uint8_t
{
    ECharacterLiveStatus_None                      = 0,
    ECharacterLiveStatus_Alive                     = 1,
    ECharacterLiveStatus_Death                     = 2,
    ECharacterLiveStatus_ImpendingDeath            = 3,
    ECharacterLiveStatus_WTF                       = 4,
    ECharacterLiveStatus_MAX                       = 5

};

// Enum  GPGameplay.EHitDamageApplyType
enum class EHitDamageApplyType : uint8_t
{
    HitDamageApplyType_Health                      = 0,
    HitDamageApplyType_Shield                      = 1,
    HitDamageApplyType_BothShieldHealth            = 2,
    HitDamageApplyType_MAX                         = 3

};

// Enum  GPGameplay.EDirection
enum class EDirection : uint8_t
{
    Direction_None                                 = 0,
    Direction_Front                                = 1,
    Direction_Back                                 = 2,
    Direction_Left                                 = 3,
    Direction_Right                                = 4,
    Direction_MAX                                  = 5

};

// Enum  GPGameplay.EHitGroupType
enum class EHitGroupType : uint8_t
{
    HitGroupType_None                              = 0,
    HitGroupType_Head                              = 1,
    HitGroupType_Neck                              = 2,
    HitGroupType_LeftShoulder                      = 3,
    HitGroupType_RightShoulder                     = 4,
    HitGroupType_Chest                             = 5,
    HitGroupType_Stomach                           = 6,
    HitGroupType_Hip                               = 7,
    HitGroupType_LeftLeg                           = 8,
    HitGroupType_LeftLegLower                      = 9,
    HitGroupType_LeftFoot                          = 10,
    HitGroupType_RightLeg                          = 11,
    HitGroupType_RightLegLower                     = 12,
    HitGroupType_RightFoot                         = 13,
    HitGroupType_LeftArm                           = 14,
    HitGroupType_LeftForeArm                       = 15,
    HitGroupType_LeftHand                          = 16,
    HitGroupType_RightArm                          = 17,
    HitGroupType_RightForeArm                      = 18,
    HitGroupType_RightHand                         = 19,
    HitGroupType_Shield                            = 20,
    HitGroupType_Weapon                            = 21,
    HitGroupType_RightAnkle                        = 22,
    HitGroupType_LeftAnkle                         = 23,
    HitGroupType_MAX                               = 24

};

// Enum  GPGameplay.EMysticalPendantShowType
enum class EMysticalPendantShowType : uint8_t
{
    None                                           = 0,
    Material                                       = 1,
    Effect                                         = 2,
    Image                                          = 3,
    EMysticalPendantShowType_MAX                   = 4

};

// Enum  GPGameplay.EDeadType
enum class EDeadType : uint8_t
{
    ENone                                          = 0,
    EKilledByWeapon                                = 1,
    EkilledByVehicle                               = 2,
    EkilledBySelf                                  = 3,
    EkilledByPoisonGas                             = 4,
    EkilledFallDown                                = 5,
    EKilledFromImpendingDeath                      = 6,
    EKilledFromBuff                                = 7,
    EKilledByGm                                    = 8,
    EKilledFromEnvExplosion                        = 9,
    EKilledByVehicleWeapon                         = 10,
    EKilledByAssassinateDamage                     = 11,
    EKilledByBattleFieldSupportSkill               = 12,
    EKilledBySectorArtilerrateSkill                = 13,
    EKilledByGuidedMissleSkill                     = 14,
    EDeadType_MAX                                  = 15

};

// Enum  GPGlobalDefines.EWeaponItemType
enum class EWeaponItemType : uint8_t
{
    None                                           = 0,
    Rifle                                          = 1,
    Submachine                                     = 2,
    Shotgun                                        = 3,
    LightMachine                                   = 4,
    PrecisionShootingRifle                         = 5,
    Sniper                                         = 6,
    Pistol                                         = 7,
    Heavy                                          = 8,
    Melee                                          = 10,
    EmptyHand                                      = 11,
    VehicleGun                                     = 12,
    Bow                                            = 13,
    BlastShield                                    = 14,
    CompoundBow                                    = 15,
    HeavyMachineGun                                = 99,
    FlameThrower                                   = 200,
    Max                                            = 201

};

// Enum  GPGameplay.EGPHealthShowMode
enum class EGPHealthShowMode : uint8_t
{
    NeverShow                                      = 0,
    ShowOnPoint                                    = 1,
    AlwaysShow                                     = 2,
    ShowBigBar                                     = 3,
    EGPHealthShowMode_MAX                          = 4

};

// Enum  GPGameplay.EGPFSMTransitionEvent
enum class EGPFSMTransitionEvent : uint8_t
{
    EGPFSMTransitionEvent_Unknown                  = 0,
    EGPFSMTransitionEVent_WaitPlayerStart          = 1,
    EGPFSMTransitionEVent_EndWaitPlayerStart       = 2,
    EGPFSMTransitionEVent_EnterMPLogoutState       = 3,
    EGPFSMTransitionEVent_ExitMPLogoutState        = 4,
    EGPFSMTransitionEvent_Timeout                  = 5,
    EGPFSMTransitionEvent_StartSprint              = 6,
    EGPFSMTransitionEvent_StartSuperSprint         = 7,
    EGPFSMTransitionEvent_EndSprintToStop          = 8,
    EGPFSMTransitionEvent_EndSprintToMoving        = 9,
    EGPFSMTransitionEvent_Finish                   = 10,
    EGPFSMTransitionEvent_NormalToADS              = 11,
    EGPFSMTransitionEvent_AdsToNormal              = 12,
    EGPFSMTransitionEvent_BeginVault               = 13,
    EGPFSMTransitionEvent_EndVault                 = 14,
    EGPFSMTransitionEvent_BeginOperate             = 15,
    EGPFSMTransitionEvent_EndOperate               = 16,
    EGPFSMTransitionEvent_BeginZipline             = 17,
    EGPFSMTransitionEvent_EndZipline               = 18,
    EGPFSMTransitionEvent_CancelZipline            = 19,
    EGPFSMTransitionEvent_CancelOperate            = 20,
    EGPFSMTransitionEvent_ToLooting                = 21,
    EGPFSMTransitionEvent_ToReborn                 = 22,
    EGPFSMTransitionEvent_BeAssassinateToIampendingDeath = 23,
    ESkillEvent_BuffFinish                         = 24,
    ESkillEvent_Cast                               = 25,
    ESkillEvent_Charged                            = 26,
    ESkillEvent_Charging                           = 27,
    ESkillEvent_Restored                           = 28,
    ESkillEvent_SpawnObjectFinish                  = 29,
    ESkillEvent_Terminate                          = 30,
    ESkillEvent_Ultimate                           = 31,
    ESkillEvent_NormalBreak                        = 32,
    ESkillEvent_Timeout                            = 33,
    ESkillEvent_Break                              = 34,
    ESkillEvent_BeginCharging                      = 35,
    ESkillEvent_BeginCooling                       = 36,
    ESkillEvent_BeginPreparing                     = 37,
    ESkillEvent_EndPrepare                         = 38,
    ESkillEvent_CancelPrepare                      = 39,
    ESkillEvent_Yes                                = 40,
    ESkillEvent_No                                 = 41,
    ESkillEvent_SkillEnerngyChange                 = 42,
    ESkillEvent_Failed                             = 43,
    ESkillEvent_EnergyChanged                      = 44,
    ESkillEvent_Death                              = 45,
    ESkillEvent_Uncharged                          = 46,
    EGPFSMTransitionEvent_BeginRelaxIdle           = 47,
    EGPFSMTransitionEvent_EndRelaxIdle             = 48,
    EGPFSMTransitionEvent_BeginStarApp             = 49,
    EGPFSMTransitionEvent_BeginStarAppInRegName    = 50,
    EGPFSMTransitionEvent_EndStarApp               = 51,
    EGPFSMTransitionEvent_BeginCutScne             = 52,
    EGPFSMTransitionEvent_EndCutScne               = 53,
    EGPFSMTransitionEvent_ToLeftLean               = 54,
    EGPFSMTransitionEvent_ToRightLean              = 55,
    EGPFSMTransitionEvent_EndLean                  = 56,
    EGPFSMTransitionEvent_StartClimbLadder         = 57,
    EGPFSMTransitionEvent_GetOffClimbLadder        = 58,
    EGPFSMTransitionEvent_EndClimbLadder           = 59,
    EGPFSMTransitionEvent_CarryBodyGetOnVehicle    = 60,
    EGPFSMTransitionEvent_CarryBodyGetOffVehicle   = 61,
    EGPFSMTransitionEvent_BeginBeHit               = 62,
    EGPFSMTransitionEvent_EndBeHit                 = 63,
    EGPFSMTransitionEvent_CancelBeHit              = 64,
    EGPFSMTransitionEvent_StartAutoDriveVehicle    = 65,
    EGPFSMTransitionEvent_CancelAutoDriveVehicle   = 66,
    EGPFSMTransitionEvent_GetOnFlyBase             = 67,
    EGPFSMTransitionEvent_GetOffFlyBase            = 68,
    EGPFSMTransitionEvent_BeginUseSkill            = 69,
    EGPFSMTransitionEvent_EndUseSkill              = 70,
    EGPFSMTransitionEvent_BeginLeftHandSkill       = 71,
    EGPFSMTransitionEvent_EndLeftHandSkill         = 72,
    EGPFSMTransitionEvent_BeginRightHandSkill      = 73,
    EGPFSMTransitionEvent_EndRightHandSkill        = 74,
    EGPFSMTransitionEvent_BeginDoubleHandsSkill    = 75,
    EGPFSMTransitionEvent_EndDoubleHandsSkill      = 76,
    EGPFSMTransitionEvent_BeginLegsSkill           = 77,
    EGPFSMTransitionEvent_EndLegsSkill             = 78,
    EGPFSMTransitionEvent_BeginSpecialSkill        = 79,
    EGPFSMTransitionEvent_EndSpecialSkill          = 80,
    EGPFSMTransitionEvent_BeginActionSkill         = 81,
    EGPFSMTransitionEvent_EndActionSkill           = 82,
    EGPFSMTransitionEvent_BeginCustomSkill         = 83,
    EGPFSMTransitionEvent_EndCustomSkill           = 84,
    EGPFSMTransitionEvent_BeginCustom2Skill        = 85,
    EGPFSMTransitionEvent_EndCustom2Skill          = 86,
    EGPFSMTransitionEvent_BeginAssassinate         = 87,
    EGPFSMTransitionEvent_EndAssassinate           = 88,
    EGPFSMTransitionEvent_SkillToSkillADS          = 89,
    EGPFSMTransitionEvent_SkillADSToSkill          = 90,
    EGPFSMTransitionEvent_EndRescue                = 91,
    EGPFSMTransitionEvent_StartSearchItem          = 92,
    EGPFSMTransitionEvent_EndSearchItem            = 93,
    EGPFSMTransitionEvent_StartWeaponInspect       = 94,
    EGPFSMTransitionEvent_EndWeaponInspect         = 95,
    EGPFSMTransitionEvent_StartHighValueItemInspect = 96,
    EGPFSMTransitionEvent_EndHighValueItemInspect  = 97,
    EGPFSMTransitionEvent_StartWeaponBipodDeploy   = 98,
    EGPFSMTransitionEvent_EndWeaponBipodDeploy     = 99,
    EGPFSMTransitionEvent_StartSlidingTackle       = 100,
    EGPFSMTransitionEvent_EndSlidingTackle         = 101,
    EGPFSMTransitionEvent_StartCrocodileBite       = 102,
    EGPFSMTransitionEvent_EndCrocodileBite         = 103,
    EGPFSMTransitionEvent_StartSimpleOperate       = 104,
    EGPFSMTransitionEvent_EndSimpleOperate         = 105,
    EGPFSMTransitionEvent_StartSimpleOperateWithUI = 106,
    EGPFSMTransitionEvent_EndSimpleOperateWithUI   = 107,
    EGPFSMTransitionEvent_StartPreciseOperate      = 108,
    EGPFSMTransitionEvent_EndPreciseOperate        = 109,
    EGPFSMTransitionEvent_StartPreciseOperateWithUI = 110,
    EGPFSMTransitionEvent_EndPreciseOperateWithUI  = 111,
    EGPFSMTransitionEvent_StartDelayOperate        = 112,
    EGPFSMTransitionEvent_EndDelayOperate          = 113,
    EGPFSMTransitionEvent_StartDelayOperateWithUI  = 114,
    EGPFSMTransitionEvent_EndDelayOperateWithUI    = 115,
    EGPFSMTransitionEvent_EndKnockbacck            = 116,
    EGPFSMTransitionEvent_StartKnockbacck          = 117,
    EGPFSMTransitionEvent_StartFirefighting        = 118,
    EGPFSMTransitionEvent_EndFirefighting          = 119,
    EGPFSMTransitionEvent_StartMarking             = 120,
    EGPFSMTransitionEvent_EndMarking               = 121,
    EGPFSMTransitionEvent_StartOneHandedGesture    = 122,
    EGPFSMTransitionEvent_EndOneHandedGesture      = 123,
    EGPFSMTransitionEvent_StartTwoHandedGesture    = 124,
    EGPFSMTransitionEvent_EndTwoHandedGesture      = 125,
    EGPFSMTransitionEvent_StartEmote               = 126,
    EGPFSMTransitionEvent_EndEmote                 = 127,
    EGPFSMTransitionEvent_StartApplySpray          = 128,
    EGPFSMTransitionEvent_EndApplySpray            = 129,
    EGPFSMTransitionEvent_StartFallHighBeHit       = 130,
    EGPFSMTransitionEvent_EndFallHighBeHit         = 131,
    EGPFSMTransitionEvent_SafeHouseEnterRange      = 132,
    EGPFSMTransitionEvent_SafeHouseLeaveRange      = 133,
    EGPFSMTransitionEvent_StartAirDropVehicle      = 134,
    EGPFSMTransitionEvent_EndAirDropVehicle        = 135,
    EGPFSMTransitionEvent_StartSeamlessShow        = 136,
    EGPFSMTransitionEvent_EndSeamlessShow          = 137,
    EGPFSMTransitionEvent_StartRankSKillOperate    = 138,
    EGPFSMTransitionEvent_EndRankSKillOperate      = 139,
    EGPFSMTransitionEvent_StartCommonLeftArmAnim   = 140,
    EGPFSMTransitionEvent_EndCommonLeftArmAnim     = 141,
    EGPFSMTransitionEvent_StartDive                = 142,
    EGPFSMTransitionEvent_EndDive                  = 143,
    EGPFSMTransitionEvent_CaptureFlagStarFinish    = 144,
    EGPFSMTransitionEvent_StartCaptureFlag         = 145,
    EGPFSMTransitionEvent_EndCaptureFlag           = 146,
    EGPFSMTransitionEvent_StartPassiveMove         = 147,
    EGPFSMTransitionEvent_EndPassiveMove           = 148,
    EGPFSMTransitionEvent_StartPrePassiveMove      = 149,
    EGPFSMTransitionEvent_EndPrePassiveMove        = 150,
    EGPFSMTransitionEvent_EndElectricShock         = 151,
    EGPFSMTransitionEvent_StartElectricShock       = 152,
    EGPFSMTransitionEvent_StartHelmetAction        = 153,
    EGPFSMTransitionEvent_EndHelmetAction          = 154,
    EGPFSMTransitionEvent_StartDramaFall           = 155,
    EGPFSMTransitionEvent_EndDramaFall             = 156,
    EGPFSMTransitionEvent_GetOnVehicleMoveBase     = 157,
    EGPFSMTransitionEvent_GetOffVehicleMoveBase    = 158,
    EGPFSMTransitionEvent_MAX                      = 159

};

// Enum  GPGameplay.ECharacterFSMEventDefine
enum class ECharacterFSMEventDefine : uint8_t
{
    EVENT_GPFSM_NONE                               = 0,
    EVENT_GPFSM_Server_ReceiveTransitionEvent      = 1,
    EVENT_GPFSM_Client_MoveForward                 = 2,
    EVENT_GPFSM_Client_MoveRight                   = 3,
    EVENT_GPFSM_Client_MoveStatusChanged           = 4,
    EVENT_GPFSM_Client_Turn                        = 5,
    EVENT_GPFSM_Client_TurnAtRate                  = 6,
    EVENT_GPFSM_Client_LookUp                      = 7,
    EVENT_GPFSM_Client_LookUpAtRate                = 8,
    EVENT_GPFSM_Client_PrepareFire                 = 9,
    EVENT_GPFSM_Client_PrepareJump                 = 10,
    EVENT_GPFSM_Client_PrepareAim                  = 11,
    EVENT_GPFSM_Client_PrepareReload               = 12,
    EVENT_GPFSM_Client_FireButtonPressed           = 13,
    EVENT_GPFSM_Client_FireButtonReleased          = 14,
    EVENT_GPFSM_Client_FireButtonRelease_IncludeF  = 15,
    EVENT_GPFSM_Client_JumButtonPressed            = 16,
    EVENT_GPFSM_Client_AimButtonPressed            = 17,
    EVENT_GPFSM_Client_AimButtonReleased           = 18,
    EVENT_GPFSM_Client_ReloadButtonPressed         = 19,
    EVENT_GPFSM_Client_MoveButtonPressed           = 20,
    EVENT_GPFSM_Client_SprintButtonPressed         = 21,
    EVENT_GPFSM_Client_CrouchButtonPressed         = 22,
    EVENT_GPFSM_Client_CrouchButtonReleased        = 23,
    EVENT_GPFSM_Client_ProneButtonPressed          = 24,
    EVENT_GPFSM_Client_SwitchWeaponButtonPressed   = 25,
    EVENT_GPFSM_Client_ToogleCrouch                = 26,
    EVENT_GPFSM_Client_ToogleProne                 = 27,
    EVENT_GPFSM_Client_TooglePose                  = 28,
    EVENT_GPFSM_Server_BeginUseItem                = 29,
    EVENT_GPFSM_Server_EndUseItem                  = 30,
    EVENT_GPFSM_Server_CancelUseItem               = 31,
    EVENT_GPFSM_Client_CancelUseItem               = 32,
    EVENT_GPFSM_Client_ClientPreUseItem            = 33,
    EVENT_GPFSM_Server_BeginOperate                = 34,
    EVENT_GPFSM_Server_EndOperate                  = 35,
    EVENT_GPFSM_Server_CancelOperate               = 36,
    EVENT_GPFSM_Server_TryRescue                   = 37,
    EVENT_GPFSM_Server_TryCancelRescue             = 38,
    EVENT_GPFSM_Client_TryCancelRescue             = 39,
    EVENT_GPFSM_Client_TryCancelRescueMySelf       = 40,
    EVENT_GPFSM_Client_TryCancelCancelRescueMySelf = 41,
    EVENT_GPFSM_Client_BeingRescueInfoArrived      = 42,
    EVENT_GPFSM_Client_BeingRescueAnimationTriggered = 43,
    EVENT_GPFSM_Client_TryCancelRescueMySelfImmediately = 44,
    EVENT_GPFSM_Client_TryCancelCancelRescueMySelfImmediately = 45,
    EVENT_GPFSM_Server_StartSprint                 = 46,
    EVENT_GPFSM_Server_EndSprint                   = 47,
    EVENT_GPFSM_Server_BeginLooting                = 48,
    EVENT_GPFSM_Server_TryDriveCar                 = 49,
    EVENT_GPFSM_Server_TryTexiCar                  = 50,
    EVENT_GPFSM_Server_GetOnVehicleWhenCarryBody   = 51,
    EVENT_GPFSM_Server_GetOffVehicleWhenCarryBody  = 52,
    EVENT_GPFSM_Server_TryStopDrivingCar           = 53,
    EVENT_GPFSM_Server_TryTexiOffCar               = 54,
    EVENT_GPFSM_Client_CarInfoArrived              = 55,
    EVENT_GPFSM_Client_TrySwitchSeat               = 56,
    EVENT_GPFSM_Server_TrySwitchSeat               = 57,
    EVENT_GPFSM_Server_TryGetOnCarWithSpecificSeat = 58,
    EVENT_GPFSM_Server_TryCarryBody                = 59,
    EVENT_GPFSM_Server_TryCancelCarryBody          = 60,
    EVENT_GPFSM_Server_TryDropCarryBody            = 61,
    EVENT_GPFSM_Server_TryStartMonitor             = 62,
    EVENT_GPFSM_Server_TryCancelMonitor            = 63,
    EVENT_GPFSM_Server_TryEnterMonitor             = 64,
    EVENT_GPFSM_Server_TryEnterNextMonitor         = 65,
    EVENT_GPFSM_Server_TryEnterLastMonitor         = 66,
    EVENT_GPFSM_Server_TryUseTelescope             = 67,
    EVENT_GPFSM_Server_TryCancelTelescope          = 68,
    EVENT_GPFSM_Both_ResetPassengerPosition        = 69,
    EVENT_GPFSM_Server_TryUseH2HBInCar             = 70,
    EVENT_GPFSM_Server_TryUseH2HBOnLand            = 71,
    EVENT_GPFSM_Server_TryLeaveMachineGun          = 72,
    EVENT_GPFSM_Client_JumpButtonPressed           = 73,
    EVENT_GPFSM_Client_JumpButtonReleased          = 74,
    EVENT_GPFSM_Client_ForceToStand                = 75,
    EVENT_GPFSM_Client_UseItemInfoArrived          = 76,
    EVENT_GPFSM_Client_TrumpetButtonPressed        = 77,
    EVENT_GPFSM_Client_TrumpetButtonReleased       = 78,
    EVENT_GPFSM_Client_WheelieButtonPressed        = 79,
    EVENT_GPFSM_Client_WheelieButtonReleased       = 80,
    EVENT_GPFSM_Client_StoppieButtonPressed        = 81,
    EVENT_GPFSM_Client_StoppieButtonReleased       = 82,
    EVENT_GPFSM_Client_TryUseStarApp               = 83,
    EVENT_GPFSM_Client_TryCancelStarApp            = 84,
    EVENT_GPFSM_Client_ToogleLeftLean              = 85,
    EVENT_GPFSM_Client_ToogleRightLean             = 86,
    EVENT_GPFSM_CancelLean                         = 87,
    EVENT_GPFSM_Server_StartSearchItem             = 88,
    EVENT_GPFSM_Server_EndSearchItem               = 89,
    EVENT_GPFSM_Server_StartWeaponInspect          = 90,
    EVENT_GPFSM_Server_EndWeaponInspect            = 91,
    EVENT_GPFSM_Server_StartWeaponBipodDeploy      = 92,
    EVENT_GPFSM_Server_EndWeaponBipodDeploy        = 93,
    EVENT_GPFSM_Client_StartWeaponBipodDeploy      = 94,
    EVENT_GPFSM_Client_EndPerformAction            = 95,
    EVENT_GPFSM_Server_EndPerformAction            = 96,
    EVENT_GPFSM_Client_FirefightingButtonReleased  = 97,
    EVENT_GPFSM_Server_KnockDownBeginBeHit         = 98,
    EVENT_GPFSM_Server_KnockDownCancelBeHit        = 99,
    EVENT_GPFSM_Server_ExplodeDamageBeginBeHit     = 100,
    EVENT_GPFSM_Server_ExplodeDamageCancelBeHit    = 101,
    EVENT_GPFSM_Server_BeginUseSkill               = 102,
    EVENT_GPFSM_Server_EndUseSkill                 = 103,
    EVENT_GPFSM_Server_BeginLeftHandSkill          = 104,
    EVENT_GPFSM_Server_EndLeftHandSkill            = 105,
    EVENT_GPFSM_Server_BeginRightHandSkill         = 106,
    EVENT_GPFSM_Server_EndRightHandSkill           = 107,
    EVENT_GPFSM_Server_BeginDoubleHandsSkill       = 108,
    EVENT_GPFSM_Server_EndDoubleHandsSkill         = 109,
    EVENT_GPFSM_Server_BeginLegsSkill              = 110,
    EVENT_GPFSM_Server_EndLegsSkill                = 111,
    EVENT_GPFSM_Server_BeginSpecialSkill           = 112,
    EVENT_GPFSM_Server_EndSpecialSkill             = 113,
    EVENT_GPFSM_Server_BeginActionSkill            = 114,
    EVENT_GPFSM_Server_EndActionSkill              = 115,
    EVENT_GPFSM_Server_BeginCustomSkill            = 116,
    EVENT_GPFSM_Server_EndCustomSkill              = 117,
    EVENT_GPFSM_Server_BeginCustom2Skill           = 118,
    EVENT_GPFSM_Server_EndCustom2Skill             = 119,
    EVENT_GPFSM_Server_BeginZipline                = 120,
    EVENT_GPFSM_Server_EndZipline                  = 121,
    EVENT_GPFSM_Server_CancelZipline               = 122,
    EVENT_GPFSM_Server_BeginAssassinate            = 123,
    EVENT_GPFSM_Server_EndAssassinate              = 124,
    EVENT_GPFSM_Server_CancelAssassinate           = 125,
    EVENT_GPFSM_Server_BeingAssassinateBegin       = 126,
    EVENT_GPFSM_Server_BeingAssassinateEnd         = 127,
    EVENT_GPFSM_Server_BeingAssassinateBreakOff    = 128,
    EVENT_GPFSM_CommandSkill                       = 129,
    EVENT_GPFSM_BeginPrepare                       = 130,
    EVENT_GPFSM_CancelPrepare                      = 131,
    EVENT_GPFSM_Both_TryCancelUseItem              = 132,
    EVENT_GPFSM_Client_ParentAttachmentChange      = 133,
    EVENT_GPFSM_Server_TryEnterRelaxIdle           = 134,
    EVENT_GPFSM_Server_TryCancelRelaxIdle          = 135,
    EVENT_GPFSM_Client_TryGetOutWeapon             = 136,
    EVENT_GPFSM_Client_TryStartAutoDriveVehicle    = 137,
    EVENT_GPFSM_Server_BeginFloating               = 138,
    EVENT_GPFSM_Server_CancelFloating              = 139,
    EVENT_GPFSM_Client_SkillPressed                = 140,
    EVENT_GPFSM_Client_SkillReleased               = 141,
    EVENT_GPFSM_Client_BeginVaultAndClimb          = 142,
    EVENT_GPFSM_Client_EndVaultAndClimb            = 143,
    EVENT_GPFSM_Server_BeginBeSuppressed           = 144,
    EVENT_GPFSM_Server_CanceBeSuppressed           = 145,
    EVENT_GPFSM_Server_BeginRaiseWatch             = 146,
    EVENT_GPFSM_Server_EndRaiseWatch               = 147,
    EVENT_GPFSM_Client_SafeHouseEnterRange         = 148,
    EVENT_GPFSM_Client_SafeHouseLeaveRange         = 149,
    EVENT_GPFSM_Server_StartAirDropVehicle         = 150,
    EVENT_GPFSM_Server_EndAirDropVehicle           = 151,
    EVENT_GPFSM_Server_StartRankSkillOperate       = 152,
    EVENT_GPFSM_Server_EndRankSkillOperate         = 153,
    EVENT_GPFSM_MAX                                = 154

};

// Enum  GPGameplay.EBreathState
enum class EBreathState : uint8_t
{
    None                                           = 0,
    Breath                                         = 1,
    HoldBreath                                     = 2,
    UnHoldBreath                                   = 3,
    EBreathState_MAX                               = 4

};

// Enum  GPGameplay.ECharingSlot
enum class ECharingSlot : uint8_t
{
    None                                           = 0,
    ArmdedForceItem1                               = 1,
    ArmdedForceItem2                               = 2,
    Ability                                        = 3,
    AbilityReady                                   = 4,
    FlyRebotSkill                                  = 5,
    FlyRebotHealth                                 = 6,
    FlyRebotCharging                               = 7,
    BattleFieldPropSkillCD                         = 8,
    GuidedMissle                                   = 9,
    SectorArtilerrate                              = 10,
    SectorSmoke                                    = 11,
    RebornBeacons                                  = 12,
    NightVision                                    = 13,
    ArmdedForceItem1Ready                          = 14,
    ArmdedForceItem2Ready                          = 15,
    BattleFieldPropSkillReady                      = 16,
    UpgradeHighValueAnchor                         = 17,
    UpgradeHighVehicleAnchor                       = 18,
    FastRedeploy                                   = 19,
    FreeBuild                                      = 20,
    CommanderCommumication                         = 21,
    Max                                            = 22

};

// Enum  GPGameplay.ESkillBehavior
enum class ESkillBehavior : uint8_t
{
    NormalStart                                    = 0,
    NormalBreak                                    = 1,
    NormalEnd                                      = 2,
    UnNormalEnd                                    = 3,
    Fire                                           = 4,
    FirePress                                      = 5,
    Reload                                         = 6,
    Jump                                           = 7,
    Aim                                            = 8,
    SwtichWeapon                                   = 9,
    AssaultBreak                                   = 10,
    CharacherImpendingDeat                         = 11,
    CharacherImpendingDeatAction                   = 12,
    CharacherDie                                   = 13,
    CurWeaponAllAmmoEmpty                          = 14,
    UseItem                                        = 15,
    SwtichWeaponSuccess                            = 16,
    BeginEquipWeapon                               = 17,
    EndEquipWeapon                                 = 18,
    FireUnPress                                    = 19,
    EndFire                                        = 20,
    SupportWeaponFire                              = 21,
    UseSkill2_Begin                                = 22,
    UseSkill2_End                                  = 23,
    SkillWeaponAttach                              = 24,
    SkillWeaponDetach                              = 25,
    BeginEquip                                     = 26,
    WeaponComponentFire                            = 27,
    WeaponComponentEndFire                         = 28,
    WeaponComponentSwitchToIdle                    = 29,
    TakeDamge                                      = 30,
    TakeDamgeToDie                                 = 31,
    EMPBreak                                       = 32,
    RePressedInSkill                               = 33,
    LeaveSkillState                                = 34,
    OnEndPassiveMove                               = 35,
    OnPassiveMoveAnimEnd                           = 36,
    ESkillBehavior_MAX                             = 37

};

// Enum  GPGameplay.ESkillBtnCall
enum class ESkillBtnCall : uint8_t
{
    None                                           = 0,
    Pressed                                        = 1,
    Released                                       = 2,
    Click                                          = 3,
    LongPress                                      = 4,
    ESkillBtnCall_MAX                              = 5

};

// Enum  GPGameplay.ESubtitleSequenceType
enum class ESubtitleSequenceType : uint8_t
{
    None                                           = 0,
    Subtitle_Raid1                                 = 1,
    Subtitle_Raid2                                 = 2,
    Subtitle_SafeHouse                             = 3,
    Subtitle_SOLEvent                              = 4,
    Subtitle_SOLQuest                              = 5,
    Subtitle_AI                                    = 6,
    Subtitle_Intro                                 = 7,
    Subtitle_CutScene                              = 8,
    Subtitle_BreakthroughThink                     = 9,
    ESubtitleSequenceType_MAX                      = 10

};

// Enum  GPGameplay.EGameRuleType
enum class EGameRuleType : uint8_t
{
    None                                           = 0,
    Rule_SOL                                       = 2,
    Rule_Arena                                     = 4,
    Rule_JailBreak                                 = 8,
    EGameRuleType_MAX                              = 9

};

// Enum  GPGameplay.ESlotButton
enum class ESlotButton : uint8_t
{
    SlotButton_Right                               = 0,
    SlotButton_Left                                = 1,
    SlotButton_FirePress                           = 2,
    SlotButton_FireRelease                         = 3,
    SlotButton_MAX                                 = 4

};

// Enum  GPGameplay.ESkillUISlot
enum class ESkillUISlot : uint8_t
{
    UIState_NoSlot                                 = 0,
    UIState_FireButtonLeft                         = 1,
    UIState_Custom                                 = 2,
    UIState_Custom2                                = 3,
    UIState_Custom3                                = 4,
    UIState_Self                                   = 5,
    UIState_QTELeft                                = 6,
    UIState_QTERight                               = 7,
    UIState_ActiveSkill                            = 8,
    UIState_SupportSkill                           = 9,
    UIState_BattleFieldPropSkill                   = 10,
    UIState_QTELeft_Ext                            = 11,
    UIState_MAX                                    = 12

};

// Enum  GPGameplay.ESkillCDEffectType
enum class ESkillCDEffectType : uint8_t
{
    SkillCDEffect_Normal                           = 0,
    SkillCDEffect_Support                          = 1,
    SkillCDEffect_MAX                              = 2

};

// Enum  GPGameplay.ERankSkillUIState
enum class ERankSkillUIState : uint8_t
{
    None                                           = 0,
    ScoreLess                                      = 1,
    CDing                                          = 2,
    ToBeUsed                                       = 3,
    ERankSkillUIState_MAX                          = 4

};

// Enum  GPGlobalDefines.EDFMGamePlayMode
enum class EDFMGamePlayMode : uint8_t
{
    None                                           = 0,
    GamePlayMode_SOL                               = 1,
    GamePlayMode_Raid                              = 2,
    GamePlayMode_IrisDiscovery                     = 3,
    GamePlayMode_Conquest                          = 4,
    GamePlayMode_Breakthrough                      = 5,
    GamePlayMode_SafeHouse                         = 6,
    GamePlayMode_Intro                             = 7,
    EDFMGamePlayMode_MAX                           = 8

};

// Enum  GPGameplay.EMarkFeature
enum class EMarkFeature : uint32_t
{
    UpdateScreenPosOnce                            = 1,
    UpdateScreenPos                                = 2,
    UpdateScreenPosFromTargetActor                 = 4,
    UpdateScreenPosFromGivenLocation               = 8,
    UpdateScreenPosByController                    = 16,
    UpdateScreenPosByMatrix                        = 32,
    UpdateScreenPosEnableTraceXYZ                  = 64,
    UpdateScreenPosEnableTraceXY                   = 128,
    Update3DDis                                    = 1024,
    Update2DDis                                    = 2048,
    UpdateDir                                      = 32768,
    UpdateAimed                                    = 1048576,
    UpdateAimedOnTarget                            = 2097152,
    UpdateAimedBasedOnRadialDistance               = 4194304,
    UpdateHasCoverBetween                          = 33554432,
    UpdateHasCoverBetweenUseRayTrace               = 67108864,
    UpdateSizeOnDis                                = 1073741824,
    EMarkFeature_MAX                               = 1073741825

};

// Enum  GPGameplay.ETeamIdentity
enum class ETeamIdentity : uint8_t
{
    None                                           = 0,
    TeamMember                                     = 1,
    TeamLeader                                     = 2,
    Commander                                      = 3,
    ETeamIdentity_MAX                              = 4

};

// Enum  GPGameplay.EMarkingType
enum class EMarkingType : uint8_t
{
    None                                           = 0,
    NormalUnitMarking                              = 1,
    UpgradeMarking                                 = 2,
    TacticalMarking                                = 3,
    COUNT                                          = 4,
    EMarkingType_MAX                               = 5

};

// Enum  GPGameplay.EMarkerCampType
enum class EMarkerCampType : uint8_t
{
    None                                           = 0,
    Neutral                                        = 1,
    Campmate                                       = 2,
    Teammate                                       = 3,
    Enemy                                          = 4,
    Self                                           = 5,
    EMarkerCampType_MAX                            = 6

};

// Enum  GPGameplay.EGPMarkerClassType
enum class EGPMarkerClassType : uint8_t
{
    None                                           = 0,
    FriendlyCharacterMarker                        = 1,
    EnemyCharacterMarker                           = 2,
    SceneWeaponMarker                              = 3,
    VehicleMarker                                  = 4,
    TacticalEquipmentMarker                        = 5,
    BattleFieldGameModeMarker                      = 6,
    SOLGameModeMarker                              = 7,
    QuestMarker                                    = 8,
    MapMarker                                      = 9,
    MarkingMarker                                  = 10,
    InteractorMarker                               = 11,
    TacticalMarking                                = 12,
    EGPMarkerClassType_MAX                         = 13

};

// Enum  GPGlobalDefines.ESoundVisualizationType
enum class ESoundVisualizationType : uint8_t
{
    ESVT_Default                                   = 0,
    ESVT_None                                      = 1,
    ESVT_Weapon_WeaponCommon                       = 2,
    ESVT_Weapon_MeleeWeaponCommon                  = 3,
    ESVT_Weapon_Fire                               = 4,
    ESVT_Weapon_SubFire                            = 5,
    ESVT_Weapon_Reload                             = 6,
    ESVT_Explosion                                 = 7,
    ESVT_Character_SwitchAction                    = 8,
    ESVT_Character_SwitchAction_StandCrouch        = 9,
    ESVT_FootStep_Common                           = 10,
    ESVT_FootStep_Walk                             = 11,
    ESVT_FootStep_Run                              = 12,
    ESVT_FootStep_Sprint                           = 13,
    ESVT_FootStep_Jump                             = 14,
    ESVT_FootStep_Land                             = 15,
    ESVT_FootStep_CrouchMove                       = 16,
    ESVT_FootStep_CrouchRun                        = 17,
    ESVT_FootStep_ProneMove                        = 18,
    ESVT_FootStep_ProneRun                         = 19,
    ESVT_FootStep_FractureMove                     = 20,
    ESVT_FootStep_FractureRun                      = 21,
    ESVT_FootStep_ClimbMove                        = 22,
    ESVT_FootStep_SlideTackle                      = 23,
    ESVT_FootStep_Swim                             = 24,
    ESVT_FootStep_SwimFast                         = 25,
    ESVT_FootStep_SwimUnderWater                   = 26,
    ESVT_FootStep_SwimFastUnderWater               = 27,
    ESVT_FootStep_SwimIdle                         = 28,
    ESVT_FootStep_SwimIdleUnderWater               = 29,
    ESVT_FootStep_SwimUp                           = 30,
    ESVT_FootStep_SwimDown                         = 31,
    ESVT_FootStep_SwimToLand                       = 32,
    ESVT_FootStep_LandToSwim                       = 33,
    ESVT_FootStep_FallingToSwimHigh                = 34,
    ESVT_FootStep_FallingToSwimMid                 = 35,
    ESVT_FootStep_FallingToSwimLow                 = 36,
    ESVT_Interact_InteractCommon                   = 37,
    ESVT_Interact_OpenCloseDoor                    = 38,
    ESVT_Interact_BreakDoor                        = 39,
    ESVT_Interact_KickDoor                         = 40,
    ESVT_Interact_ReleaseLockDoor                  = 41,
    ESVT_Interact_HoldItem                         = 42,
    ESVT_Interact_UseItem                          = 43,
    ESVT_Interact_Looting                          = 44,
    ESVT_Interact_HackPC                           = 45,
    ESVT_Interact_ClimbLadder                      = 46,
    ESVT_Interact_Rescuing                         = 47,
    ESVT_Interact_Vaulting                         = 48,
    ESVT_Interact_CarryBody                        = 49,
    ESVT_Interact_FoliageOverlap                   = 50,
    ESVT_Interact_Parachute                        = 51,
    ESVT_Interact_Zipline                          = 52,
    ESVT_PlayerBreath                              = 53,
    ESVT_PlayerVoice                               = 54,
    ESVT_AIVoice                                   = 55,
    ESVT_AI_FootStep_Common                        = 56,
    ESVT_AI_FootStep_Walk                          = 57,
    ESVT_AI_FootStep_Run                           = 58,
    ESVT_AI_FootStep_Sprint                        = 59,
    ESVT_AI_FootStep_Jump                          = 60,
    ESVT_AI_FootStep_Land                          = 61,
    ESVT_AI_FootStep_CrouchMove                    = 62,
    ESVT_AI_FootStep_CrouchRun                     = 63,
    ESVT_AI_FootStep_ProneMove                     = 64,
    ESVT_AI_FootStep_ProneRun                      = 65,
    ESVT_AI_FootStep_FractureMove                  = 66,
    ESVT_AI_FootStep_FractureRun                   = 67,
    ESVT_AI_FootStep_ClimbMove                     = 68,
    ESVT_AI_FootStep_SlideTackle                   = 69,
    ESVT_Vehicle_VehicleCommon                     = 70,
    ESVT_Vehicle_EngineerCar                       = 71,
    ESVT_Skill_Assault_BuffStart                   = 72,
    ESVT_SKill_Assault_DashStart                   = 73,
    ESVT_Skill_Engineer_MineActivate               = 74,
    ESVT_Skill_Engineer_MineRecycle                = 75,
    ESVT_Skill_Engineer_RobotStart                 = 76,
    ESVT_Skill_Engineer_WeldingIronGauze           = 77,
    ESVT_Skill_Support_SelfCure                    = 78,
    ESVT_Skill_Scout_PathTracing                   = 79,
    ESVT_Skill_Engineer_WearAntiExplosion          = 80,
    ESVT_Skill_Engineer_TakeOffAntiExplosion       = 81,
    ESVT_Skill_Assault_SilenceZone                 = 82,
    ESVT_Skill_304_Roll                            = 83,
    ESVT_Skill_304_Rope                            = 84,
    ESVT_Skill_304_Passive                         = 85,
    ESVT_Vehicle_AIVehicleCommon                   = 86,
    ESVT_Skill_203_BionicSpy                       = 87,
    ESVT_NumMax                                    = 88,
    ESVT_MAX                                       = 89

};

// Enum  GPGameplay.ECountDownPriority
enum class ECountDownPriority : uint8_t
{
    None                                           = 0,
    Common                                         = 1,
    Contract                                       = 2,
    Escape                                         = 3,
    MandelBrick                                    = 4,
    Max                                            = 5

};

// Enum  GPGameplay.EGPAbilityLockerType
enum class EGPAbilityLockerType : uint8_t
{
    None                                           = 0,
    LaserPointer                                   = 1,
    LaserPointerReciver                            = 2,
    LowAmmo                                        = 3,
    EGPAbilityLockerType_MAX                       = 4

};

// Enum  GPGameplay.EAudioListenerType
enum class EAudioListenerType : uint8_t
{
    None                                           = 0,
    Action                                         = 1,
    Weapon                                         = 2,
    Skill                                          = 3,
    Voice                                          = 4,
    Interact                                       = 5,
    Loot                                           = 6,
    Vehicle                                        = 7,
    Buff                                           = 8,
    RemoveBuff                                     = 9,
    UseItem                                        = 10,
    EAudioListenerType_MAX                         = 11

};

// Enum  GPGameplay.EInteractorType
enum class EInteractorType : uint8_t
{
    InteractorType_Unknow                          = 0,
    InteractorType_Default                         = 1,
    InteractorType_BoxOrBag                        = 2,
    InteractorType_DeadBody                        = 3,
    InteractorType_SingleItem                      = 4,
    InteractorType_Vehicle                         = 5,
    InteractorType_Rescue                          = 6,
    InteractorType_Carrybody                       = 7,
    InteractorType_ShopStation                     = 8,
    InteractorType_Door                            = 9,
    InteractorType_SingleItemContainer             = 10,
    InteractorType_HackPC                          = 11,
    InteractorType_MusicPlayer                     = 12,
    InteractorType_Altar                           = 13,
    InteractorType_Max                             = 14

};

// Enum  GPGameplay.EHitEventType
enum class EHitEventType : uint8_t
{
    None                                           = 0,
    HitBody                                        = 1,
    HitBodyWithArmor                               = 2,
    HitBodyWithArmorAndDamageHp                    = 3,
    HitHeadWithoutHelmet                           = 4,
    HitHelmet                                      = 5,
    HitHelmetAndDamageHp                           = 6,
    HitHelmetBroken                                = 7,
    HitArmorBroken                                 = 8,
    HitLowHealth                                   = 9,
    HitBulletWhoosh                                = 10,
    HitBulletHitAround                             = 11,
    HitSuppressByBullet                            = 12,
    KnockDownByHitBody                             = 13,
    KnockDownByHitHead                             = 14,
    KilledByHitBody                                = 15,
    KilledByHitHead                                = 16,
    Shocked                                        = 17,
    HitVehicle                                     = 18,
    KillVehicle                                    = 19,
    BreakthroughRankSkillHit                       = 20,
    HitShield                                      = 21,
    HitHeavyArmor                                  = 22,
    Stagger                                        = 23,
    HitADS                                         = 24,
    HitSkillActor                                  = 25,
    BreakShieldGlass                               = 26,
    CounterProjectile                              = 27,
    Invincible                                     = 28,
    EHitEventType_MAX                              = 29

};

// Enum  GPGameplay.EFSMGamePlayStatusDefine
enum class EFSMGamePlayStatusDefine : uint8_t
{
    GamePlayStatus_None                            = 0,
    GamePlayStatus_AimOn                           = 1,
    GamePlayStatus_Reload                          = 2,
    GamePlayStatus_Looting                         = 3,
    GamePlayStatus_Rescue                          = 4,
    GamePlayStatus_BeingRescue                     = 5,
    GamePlayStatus_ImpedingDeath                   = 6,
    GamePlayStatus_Prone                           = 7,
    GamePlayStatus_Crouch                          = 8,
    GamePlayStatus_float                           = 9,
    GamePlayStatus_MAX                             = 10

};

// Enum  GPGameplay.EFSMCharacterState
enum class EFSMCharacterState : uint8_t
{
    FSMPlayerState_None                            = 0,
    FSMPlayerState_AimOn                           = 1,
    FSMPlayerState_LeanPeek                        = 2,
    FSMPlayerState_Reload                          = 3,
    FSMPlayerState_Fire                            = 4,
    FSMPlayerState_WeaponInspect                   = 5,
    FSMPlayerState_WeaponBipodDeploy               = 6,
    FSMPlayerState_Prone                           = 7,
    FSMPlayerState_Crouch                          = 8,
    FSMPlayerState_Stand                           = 9,
    FSMPlayerState_Sprint                          = 10,
    FSMPlayerState_SlidingTackle                   = 11,
    FSMPlayerState_SpecialMove                     = 12,
    FSMPlayerState_Swimming                        = 13,
    FSMPlayerState_SwimmingSprint                  = 14,
    FSMPlayerState_Marking                         = 15,
    FSMPlayerState_SearchItem                      = 16,
    FSMPlayerState_CarryBody                       = 17,
    FSMPlayerState_CarryBodyDrop                   = 18,
    FSMPlayerState_Rescue                          = 19,
    FSMPlayerState_BeingRescue                     = 20,
    FSMPlayerState_Interact                        = 21,
    FSMPlayerState_PreciseInteract                 = 22,
    FSMPlayerState_DelayInteract                   = 23,
    FSMPlayerState_GameOperate                     = 24,
    FSMPlayerState_Skill                           = 25,
    FSMPlayerState_Vehicle                         = 26,
    FSMPlayerState_SceneWeapon                     = 27,
    FSMPlayerState_UseItem                         = 28,
    FSMPlayerState_Firefighting                    = 29,
    FSMPlayerState_HighValueItemInspect            = 30,
    FSMPlayerState_Helmet                          = 31,
    FSMPlayerState_BeHit                           = 32,
    FSMPlayerState_ImpedingDeath                   = 33,
    FSMPlayerState_Death                           = 34,
    FSMPlayerState_CutScene                        = 35,
    FSMPlayerState_Assassinate                     = 36,
    FSMPlayerState_BeAssassinate                   = 37,
    FSMPlayerState_OneHandedGesture                = 38,
    FSMPlayerState_TwoHandedGesture                = 39,
    FSMPlayerState_Emote                           = 40,
    FSMPlayerState_ApplySpray                      = 41,
    FSMPlayerState_CommonLeftArmAnim               = 42,
    FSMPlayerState_Dive                            = 43,
    FSMPlayerState_CaptureFlag                     = 44,
    FSMPlayerState_PassiveMove                     = 45,
    FSMPlayerState_WaitStart                       = 46,
    FSMPlayerState_QuitGame                        = 47,
    FSMPlayerState_CrowdControl                    = 48,
    FSMPlayerState_MAX                             = 49

};

// Enum  GPGameplay.AttributeAdditionType
enum class AttributeAdditionType : uint8_t
{
    Add_Base                                       = 0,
    Override_Base                                  = 1,
    InitalCover                                    = 2,
    FinalCover                                     = 3,
    Add                                            = 4,
    Mult_A                                         = 5,
    Mult_B                                         = 6,
    Mult_C                                         = 7,
    Mult_D                                         = 8,
    Max                                            = 9

};

// Enum  GPGameplay.EMarkerCoordinatedType
enum class EMarkerCoordinatedType : uint8_t
{
    None                                           = 0,
    MandelBrick                                    = 31,
    MandelBrick_MapMarked                          = 41,
    HighValueBox_MapMarked                         = 42,
    MarkingItemMarker                              = 51,
    EMarkerCoordinatedType_MAX                     = 52

};

// Enum  GPGameplay.ERepairEventType
enum class ERepairEventType : uint8_t
{
    RepairStop                                     = 0,
    RepairFinished                                 = 1,
    ERepairEventType_MAX                           = 2

};

// Enum  GPGameplay.EWeaponLockerType
enum class EWeaponLockerType : uint8_t
{
    None                                           = 0,
    LaserPoniter                                   = 1,
    StingerMissile                                 = 2,
    Javelin                                        = 3,
    AA                                             = 4,
    AT                                             = 5,
    EWeaponLockerType_MAX                          = 6

};

// Enum  GPGameplay.EStingerMissileLockingState
enum class EStingerMissileLockingState : uint8_t
{
    NONE                                           = 0,
    UNLOCK_DISTANCE                                = 1,
    UNLOCK_EMPTY                                   = 2,
    NAP_OF_EARTH                                   = 3,
    CANNOTLOCK                                     = 4,
    START_LOCKING                                  = 5,
    COMPLETE_LOCKING                               = 6,
    MISSILE_ATTACK                                 = 7,
    EStingerMissileLockingState_MAX                = 8

};

// Enum  GPGameplay.ECurveBlendOption_BCOnly
enum class ECurveBlendOption_BCOnly : uint8_t
{
    Override                                       = 0,
    MaxValue                                       = 1,
    Additive                                       = 2,
    ECurveBlendOption_MAX                          = 3

};

// Enum  GPGameplay.EPartNodeFunc
enum class EPartNodeFunc : uint8_t
{
    EPNF_Empty                                     = 0,
    EPNF_None                                      = 1,
    EPNF_MAX                                       = 2

};

// Enum  GPGameplay.EGPPlayParticleEffectRole
enum class EGPPlayParticleEffectRole : uint8_t
{
    ROLE_1PAnd3P                                   = 0,
    ROLE_1P                                        = 1,
    ROLE_3P                                        = 2,
    ROLE_MAX                                       = 3

};

// Enum  GPGameplay.EClimbLadderNotifySettingType
enum class EClimbLadderNotifySettingType : uint8_t
{
    EClimbLadderNotifySettingType_NONE             = 0,
    EClimbLadderNotifySettingType_BreakPoint       = 1,
    EClimbLadderNotifySettingType_MAX              = 2

};

// Enum  GPGameplay.EVaultNotifySettingType
enum class EVaultNotifySettingType : uint8_t
{
    EVaultNotifySettingType_NONE                   = 0,
    EVaultNotifySettingType_StartPoint             = 1,
    EVaultNotifySettingType_HandTouchPoint         = 2,
    EVaultNotifySettingType_BeginVaultPoint        = 3,
    EVaultNotifySettingType_EndVaultPoint          = 4,
    EVaultNotifySettingType_LandPoint              = 5,
    EVaultNotifySettingType_EndPoint               = 6,
    EVaultNotifySettingType_BreakPoint             = 7,
    EVaultNotifySettingType_HideWeapon             = 8,
    EVaultNotifySettingType_ShowWeapon             = 9,
    EVaultNotifySettingType_FallingPoint           = 10,
    EVaultNotifySettingType_BeforeBreakPoint       = 11,
    EVaultNotifySettingType_MAX                    = 12

};

// Enum  GPGameplay.EAnimNotifyStateIKBlend
enum class EAnimNotifyStateIKBlend : uint8_t
{
    None                                           = 0,
    ChangeClip                                     = 1,
    Vault                                          = 2,
    Max                                            = 3

};

// Enum  GPGameplay.EExplodeRagdollImpulseType
enum class EExplodeRagdollImpulseType : uint8_t
{
    None                                           = 0,
    Low                                            = 1,
    Medium                                         = 2,
    High                                           = 3,
    EExplodeRagdollImpulseType_MAX                 = 4

};

// Enum  GPGameplay.EDamageExplodeBlockCheckType
enum class EDamageExplodeBlockCheckType : uint8_t
{
    Low                                            = 0,
    High                                           = 1,
    EDamageExplodeBlockCheckType_MAX               = 2

};

// Enum  GPGameplay.EGPDamageFeature
enum class EGPDamageFeature : uint8_t
{
    None                                           = 0,
    SOL                                            = 1,
    EGPDamageFeature_MAX                           = 2

};

// Enum  GPGameplay.EGPDamageMode
enum class EGPDamageMode : uint8_t
{
    Default                                        = 0,
    GameMode01                                     = 1,
    GameMode02                                     = 2,
    GameMode03                                     = 3,
    GameMode04                                     = 4,
    EGPDamageMode_MAX                              = 5

};

// Enum  GPGameplay.EAttributeEffectMainTag
enum class EAttributeEffectMainTag : uint8_t
{
    Default                                        = 0,
    Damage                                         = 1,
    Buff                                           = 2,
    System                                         = 3,
    Equipment                                      = 4,
    Max                                            = 5

};

// Enum  GPGameplay.EAttributeEffectInstanceType
enum class EAttributeEffectInstanceType : uint8_t
{
    None                                           = 0,
    Damage                                         = 1,
    Buff                                           = 2,
    ItemHealth                                     = 3,
    EAttributeEffectInstanceType_MAX               = 4

};

// Enum  GPGameplay.EPlayerQuitMatchReason
enum class EPlayerQuitMatchReason : uint8_t
{
    ENone                                          = 0,
    EEndMatch                                      = 1,
    ESvrForceKick                                  = 2,
    EClientReqQuit                                 = 3,
    EPlayerQuitMatchReason_MAX                     = 4

};

// Enum  GPGameplay.EPlayerEndMatchReason
enum class EPlayerEndMatchReason : uint8_t
{
    EPlayerEndMatch_Success                        = 0,
    EPlayerEndMatch_Killed                         = 1,
    EPlayerEndMatch_TimeLimit                      = 2,
    EPlayerEndMatch_MAX                            = 3

};

// Enum  GPGameplay.EBulletHitActionType
enum class EBulletHitActionType : uint8_t
{
    None                                           = 0,
    Damage                                         = 1,
    Buff                                           = 2,
    Custom                                         = 3,
    EBulletHitActionType_MAX                       = 4

};

// Enum  GPGameplay.ECampType
enum class ECampType : uint8_t
{
    BF_DeltaCamp0                                  = 0,
    BF_DeltaCamp1                                  = 1,
    SOL_DeltaPMC                                   = 101,
    SOL_DarkTide                                   = 102,
    SOL_Hudson                                     = 103,
    Raid_DeltaPMC                                  = 104,
    Raid_DarkTide                                  = 105,
    Raid_Hudson                                    = 106,
    BF_Hudson                                      = 109,
    SafeHouse_Player                               = 110,
    SafeHouse_NPC                                  = 111,
    SafeHouse_RangeTarget                          = 112,
    Vehicle                                        = 112,
    Neutral                                        = 113,
    SOL_ContractPlayer                             = 5,
    SOL_BossTeam                                   = 107,
    SOL_ContractPlayer_DarkTide                    = 121,
    SOL_ContractPlayer_Hudson                      = 122,
    Max                                            = 255

};

// Enum  GPGameplay.EChainHookTargetType
enum class EChainHookTargetType : uint8_t
{
    Enemy                                          = 0,
    DeadBody                                       = 1,
    DeadBox                                        = 2,
    Other                                          = 3,
    None                                           = 4,
    EChainHookTargetType_MAX                       = 5

};

// Enum  GPGameplay.ECharacterSnatshotSubPose
enum class ECharacterSnatshotSubPose : uint8_t
{
    Center                                         = 0,
    Left                                           = 1,
    Right                                          = 2,
    Max                                            = 3

};

// Enum  GPGameplay.ECharacterSnatshotBasePose
enum class ECharacterSnatshotBasePose : uint8_t
{
    None                                           = 0,
    Stand                                          = 1,
    Crouch                                         = 2,
    Prone                                          = 3,
    InVehicle                                      = 4,
    InSceneWeapon                                  = 5,
    ImpendingDeath                                 = 6,
    Knockback                                      = 7,
    SlidingTackle                                  = 8,
    Vaulting                                       = 9,
    Climb                                          = 10,
    Zipline                                        = 11,
    BeingAssassinate                               = 12,
    ShieldHold                                     = 13,
    ShieldFlank                                    = 14,
    ShieldSprint                                   = 15,
    Dive                                           = 16,
    SwimmingSurfaceIdle                            = 17,
    SwimmingBackward                               = 18,
    SwimmingForward                                = 19,
    SwimmingAscendingBackward                      = 20,
    SwimmingDescendingForward                      = 21,
    RollMove                                       = 22,
    PassiveRopeMove                                = 23,
    PassiveMove                                    = 24,
    Max                                            = 25

};

// Enum  GPGameplay.EHaavkTurnType
enum class EHaavkTurnType : uint8_t
{
    LeftAndRight                                   = 0,
    Circle                                         = 1,
    EHaavkTurnType_MAX                             = 2

};

// Enum  GPGameplay.EDamageStateRecordType
enum class EDamageStateRecordType : uint8_t
{
    Default                                        = 0,
    Character                                      = 1,
    GeneralGun                                     = 2,
    Melee                                          = 3,
    Vehicle                                        = 4,
    Door                                           = 5,
    EDamageStateRecordType_MAX                     = 6

};

// Enum  GPGameplay.EDamageGameState
enum class EDamageGameState : uint8_t
{
    None                                           = 0,
    Prematch                                       = 1,
    InGame                                         = 2,
    EndGame                                        = 3,
    EDamageGameState_MAX                           = 4

};

// Enum  GPGameplay.EDamageUnitType
enum class EDamageUnitType : uint8_t
{
    Actor                                          = 0,
    Component                                      = 1,
    EDamageUnitType_MAX                            = 2

};

// Enum  GPGameplay.EDamageActorType
enum class EDamageActorType : uint8_t
{
    None                                           = 0,
    PlayerCharacter                                = 1,
    AICharacter                                    = 2,
    Vehicle                                        = 3,
    Weapon                                         = 4,
    World                                          = 5,
    BreakablePawn                                  = 6,
    ScenceWeaponPawn                               = 7,
    Others                                         = 8,
    EDamageActorType_MAX                           = 9

};

// Enum  GPGameplay.EDamageModifyType
enum class EDamageModifyType : uint8_t
{
    Add                                            = 0,
    Mult                                           = 1,
    Override                                       = 2,
    EDamageModifyType_MAX                          = 3

};

// Enum  GPGameplay.EGPDamageEnableType
enum class EGPDamageEnableType : uint8_t
{
    Default                                        = 0,
    Enable                                         = 1,
    Disable                                        = 2,
    EnableWithEnemy                                = 3,
    EGPDamageEnableType_MAX                        = 4

};

// Enum  GPGameplay.EDamageChannel
enum class EDamageChannel : uint8_t
{
    Default                                        = 0,
    HP                                             = 1,
    ArmorDamage                                    = 2,
    HealthDamage                                   = 3,
    Max                                            = 4

};

// Enum  GPGameplay.EWeaponFireValidateFaildReason
enum class EWeaponFireValidateFaildReason : uint8_t
{
    None                                           = 0,
    CharacterOwnerNull                             = 1,
    CharacterDied                                  = 2,
    CharacterImpendingDeath                        = 3,
    CharacterCantFire                              = 4,
    WeaponInactive                                 = 5,
    WeaponNotFiringState                           = 6,
    WeaponNoAmmo                                   = 7,
    FireIntervalError                              = 8,
    FireIdInvalid                                  = 9,
    FireTimeInvalid                                = 10,
    LogicFireTimeInvalid                           = 11,
    SkillForbidFire                                = 12,
    EWeaponFireValidateFaildReason_MAX             = 13

};

// Enum  GPGameplay.EDataTableConstrainType
enum class EDataTableConstrainType : uint8_t
{
    Unique                                         = 0,
    ForeignKey                                     = 1,
    EDataTableConstrainType_MAX                    = 2

};

// Enum  GPGameplay.ENetworkReplayStreamerType
enum class ENetworkReplayStreamerType : uint8_t
{
    StreamerType_Memery                            = 0,
    StreamerType_File                              = 1,
    StreamerType_HTTP                              = 2,
    StreamerType_File_ARS                          = 3,
    StreamerType_File_JSON                         = 4,
    StreamerType_MAX                               = 5

};

// Enum  GPGameplay.EEMPType
enum class EEMPType : uint8_t
{
    EMP                                            = 0,
    DataKnife                                      = 1,
    EEMPType_MAX                                   = 2

};

// Enum  GPGameplay.EFiringAnimMode
enum class EFiringAnimMode : uint8_t
{
    Single                                         = 0,
    Continue                                       = 1,
    EFiringAnimMode_MAX                            = 2

};

// Enum  GPGameplay.EFiringAnimBlendOutMode
enum class EFiringAnimBlendOutMode : uint8_t
{
    ForceEnd                                       = 0,
    ContinueAnim                                   = 1,
    BlendOut                                       = 2,
    EFiringAnimBlendOutMode_MAX                    = 3

};

// Enum  GPGameplay.EFiringAnimDim
enum class EFiringAnimDim : uint8_t
{
    Dim_Trans_Forward                              = 0,
    Dim_Trans_Right                                = 1,
    Dim_Trans_Up                                   = 2,
    Dim_Rot_Pitch                                  = 3,
    Dim_Rot_Yaw                                    = 4,
    Dim_Rot_Roll                                   = 5,
    Dim_Num                                        = 6,
    Dim_MAX                                        = 7

};

// Enum  GPGameplay.EDFMAbilityEndReason
enum class EDFMAbilityEndReason : uint8_t
{
    NormalEnd                                      = 0,
    UnNormalEnd                                    = 1,
    Die                                            = 2,
    RemoveFromCharacter                            = 3,
    CastFaild                                      = 4,
    PlayMontageFaild                               = 5,
    EDFMAbilityEndReason_MAX                       = 6

};

// Enum  GPGameplay.EDFMAbilityLogicType
enum class EDFMAbilityLogicType : uint8_t
{
    Default                                        = 0,
    EnterState                                     = 1,
    LeaveState                                     = 2,
    PlayMontage                                    = 3,
    PlayMontageInstance                            = 4,
    KeepActor                                      = 5,
    SpawnActor                                     = 6,
    Function                                       = 7,
    WeaponProjectileActor                          = 8,
    ProjectileActor                                = 9,
    Buff                                           = 10,
    LogicTypeMax                                   = 11,
    EDFMAbilityLogicType_MAX                       = 12

};

// Enum  GPGameplay.EAbilityMontagePlayerStage
enum class EAbilityMontagePlayerStage : uint8_t
{
    Init                                           = 0,
    Start                                          = 1,
    Loop                                           = 2,
    End                                            = 3,
    EAbilityMontagePlayerStage_MAX                 = 4

};

// Enum  GPGameplay.EAnimState
enum class EAnimState : uint8_t
{
    Stand                                          = 0,
    Crouch                                         = 1,
    Prone                                          = 2,
    Sprint                                         = 3,
    Jump                                           = 4,
    Dead                                           = 5,
    Vault                                          = 6,
    Zipline                                        = 7,
    Rescue                                         = 8,
    Throw                                          = 9,
    Reload                                         = 10,
    Medical                                        = 11,
    Moving                                         = 12,
    ImpendingDeath                                 = 13,
    Max                                            = 32

};

// Enum  GPGameplay.EAnimCrowdControlType
enum class EAnimCrowdControlType : uint8_t
{
    ElectricShock                                  = 0,
    EAnimCrowdControlType_MAX                      = 1

};

// Enum  GPGameplay.EAnimPassiveMoveType
enum class EAnimPassiveMoveType : uint8_t
{
    Pulling                                        = 0,
    Pulling_UnderWater                             = 1,
    EAnimPassiveMoveType_MAX                       = 2

};

// Enum  GPGameplay.EAnimKnockbackType
enum class EAnimKnockbackType : uint8_t
{
    Knockback                                      = 0,
    Knockback_UnderWater                           = 1,
    EAnimKnockbackType_MAX                         = 2

};

// Enum  GPGameplay.EAnimRescueType
enum class EAnimRescueType : uint8_t
{
    None                                           = 0,
    SolLandRescueStand                             = 1,
    SolLandBeRescueStand                           = 2,
    SolLandRescueCrouch                            = 3,
    SolLandBeRescueCrouch                          = 4,
    SolLandRescueProne                             = 5,
    SolLandBeRescueProne                           = 6,
    SolSwimRescueSurfaceWater                      = 7,
    SolSwimBeRescueSurfaceWater                    = 8,
    SolSwimRescueInWater                           = 9,
    SolSwimBeRescueInWater                         = 10,
    BatLandRescueStand                             = 11,
    BatLandBeRescueStand                           = 12,
    BatLandRescueCrouch                            = 13,
    BatLandBeRescueCrouch                          = 14,
    BatLandRescueProne                             = 15,
    BatLandBeRescueProne                           = 16,
    BatSwimRescueSurfaceWater                      = 17,
    BatSwimBeRescueSurfaceWater                    = 18,
    BatSwimRescueInWater                           = 19,
    BatSwimBeRescueInWater                         = 20,
    SolLandRescueCrouchDeath                       = 21,
    SolRescueLandNoPreciseStand                    = 22,
    SolRescueLandNoPreciseCrouch                   = 23,
    SolRescueLandNoPreciseProne                    = 24,
    BatRescueLandNoPreciseStand                    = 25,
    BatRescueLandNoPreciseCrouch                   = 26,
    BatRescueLandNoPreciseProne                    = 27,
    SolLandFastBeRescueCrouch                      = 28,
    BatLandFastBeRescueProne                       = 29,
    EAnimRescueType_MAX                            = 30

};

// Enum  GPGameplay.EAnimCarryBodyType
enum class EAnimCarryBodyType : uint8_t
{
    CarryCharacter                                 = 0,
    CarryBox                                       = 1,
    EAnimCarryBodyType_MAX                         = 2

};

// Enum  GPGameplay.EAnimApplySprayType
enum class EAnimApplySprayType : uint8_t
{
    ApplySpray                                     = 0,
    EAnimApplySprayType_MAX                        = 1

};

// Enum  GPGameplay.EAnimMarkingType
enum class EAnimMarkingType : uint8_t
{
    Marking                                        = 0,
    EAnimMarkingType_MAX                           = 1

};

// Enum  GPGameplay.EAnimFirefightingType
enum class EAnimFirefightingType : uint8_t
{
    Firefighting                                   = 0,
    ZoyaSwarms                                     = 1,
    Rope                                           = 2,
    BionicSpy                                      = 3,
    NetRemove                                      = 4,
    EAnimFirefightingType_MAX                      = 5

};

// Enum  GPGameplay.EAnimRaiseWatchType
enum class EAnimRaiseWatchType : uint8_t
{
    RaiseWatch                                     = 0,
    EAnimRaiseWatchType_MAX                        = 1

};

// Enum  GPGameplay.EAnimHitPart
enum class EAnimHitPart : uint8_t
{
    None                                           = 0,
    Head                                           = 1,
    UpperBody                                      = 2,
    LeftLeg                                        = 3,
    RightLeg                                       = 4,
    EAnimHitPart_MAX                               = 5

};

// Enum  GPGameplay.EAnimParachuteType
enum class EAnimParachuteType : uint8_t
{
    Parachute                                      = 0,
    Glide                                          = 1,
    EAnimParachuteType_MAX                         = 2

};

// Enum  GPGameplay.EAnimClimbLadderType
enum class EAnimClimbLadderType : uint8_t
{
    ClimbLadder                                    = 0,
    EAnimClimbLadderType_MAX                       = 1

};

// Enum  GPGameplay.EAnimBunkerType
enum class EAnimBunkerType : uint8_t
{
    NoWeapon                                       = 0,
    EAnimBunkerType_MAX                            = 1

};

// Enum  GPGameplay.EAnimTacticalActionType
enum class EAnimTacticalActionType : uint8_t
{
    TacticalAction                                 = 0,
    EAnimTacticalActionType_MAX                    = 1

};

// Enum  GPGameplay.EAnimVehicleSeatPos
enum class EAnimVehicleSeatPos : uint8_t
{
    Seat_FL                                        = 0,
    Seat_FR                                        = 1,
    Seat_BL                                        = 2,
    Seat_BR                                        = 3,
    Seat_BL02                                      = 4,
    Seat_BR02                                      = 5,
    Seat_BL03                                      = 6,
    Seat_BR03                                      = 7,
    Seat_MachineGun                                = 8,
    Seat_MAX                                       = 9

};

// Enum  GPGameplay.EAnimLoadPriority
enum class EAnimLoadPriority : uint8_t
{
    Low                                            = 0,
    Medium                                         = 50,
    High                                           = 100,
    SuperHigh                                      = 200,
    EAnimLoadPriority_MAX                          = 201

};

// Enum  GPGameplay.EGPEventToggleState
enum class EGPEventToggleState : uint8_t
{
    TURN_ON                                        = 6,
    TURN_OFF                                       = 7,
    TURN_MAX                                       = 8

};

// Enum  GPGameplay.EGPAnimOperationInterruptType
enum class EGPAnimOperationInterruptType : uint8_t
{
    Default                                        = 0,
    Interrupt_SwitchWeapon                         = 1,
    Interrupt_Reload                               = 2,
    EGPAnimOperationInterruptType_MAX              = 3

};

// Enum  GPGameplay.EGPAnimNotifyLogicalBreakType
enum class EGPAnimNotifyLogicalBreakType : uint8_t
{
    Default                                        = 0,
    LogicReload_Complete                           = 1,
    Reload_Ready                                   = 5,
    EventToggle_TurnOn                             = 6,
    EventToggle_TurnOff                            = 7,
    Fire_Break                                     = 8,
    Equip_Break                                    = 9,
    Fire_Break_End                                 = 10,
    Do_Fire                                        = 11,
    EnableSprint_ThrowableWeapon                   = 12,
    Show_PreviewLine                               = 13,
    Throwable_HideMesh                             = 14,
    Throwable_ShowMesh                             = 15,
    Throwable_Unlock                               = 16,
    LeftWeapon_EndLeftHold                         = 17,
    LeftWeapon_HideMesh                            = 18,
    LeftWeapon_ShowMesh                            = 19,
    PostFire_Break                                 = 20,
    CBow_SwitchToLeft                              = 21,
    EGPAnimNotifyLogicalBreakType_MAX              = 22

};

// Enum  GPGameplay.EUseLeftHandReason
enum class EUseLeftHandReason : uint8_t
{
    EUseLeftHandReason_OneHandedGesture            = 0,
    EUseLeftHandReason_ApplySpray                  = 1,
    EUseLeftHandReason_Marking                     = 2,
    EUseLeftHandReason_AbilityPlayMontageSystem    = 3,
    EUseLeftHandReason_LeftWeaponAnim              = 4,
    EUseLeftHandReason_ThrowableWeapon             = 5,
    EUseLeftHandReason_Helmet                      = 6,
    EUseLeftHandReason_MAX                         = 7

};

// Enum  GPGameplay.ERetargetConfig
enum class ERetargetConfig : uint8_t
{
    ERetargetConfig_Normal                         = 0,
    ERetargetConfig_FPP                            = 1,
    ERetargetConfig_MAX                            = 2

};

// Enum  GPGameplay.EWeaponLeanAimType
enum class EWeaponLeanAimType : uint8_t
{
    EWeapLeanAimType_Center                        = 0,
    EWeapLeanAimType_Left                          = 1,
    EWeapLeanAimType_Right                         = 2,
    EWeapLeanAimType_MAX                           = 3

};

// Enum  GPGameplay.ELocomotionTransitionType
enum class ELocomotionTransitionType : uint8_t
{
    LocomotionTransitionType_None                  = 0,
    LocomotionTransitionType_IdleToWalking         = 1,
    LocomotionTransitionType_IdleToRunning         = 2,
    LocomotionTransitionType_IdleToFastRunning     = 3,
    LocomotionTransitionType_RunningToFastRunning  = 4,
    LocomotionTransitionType_WalkingToIdle         = 5,
    LocomotionTransitionType_RunningToIdle         = 6,
    LocomotionTransitionType_FastRunningToIdle     = 7,
    LocomotionTransitionType_Pivot_Walking         = 8,
    LocomotionTransitionType_Pivot_Running         = 9,
    LocomotionTransitionType_Pivot_FastRunning     = 10,
    LocomotionTransitionType_MAX                   = 11

};

// Enum  GPGameplay.EAssasinateAnimType
enum class EAssasinateAnimType : uint8_t
{
    Stand                                          = 1,
    Impending                                      = 2,
    Prone                                          = 4,
    EAssasinateAnimType_MAX                        = 5

};

// Enum  GPGameplay.ESmallActionTrigger
enum class ESmallActionTrigger : uint8_t
{
    EStill2NotStill                                = 1,
    ENotStil2Still                                 = 2,
    EFiring2NotFiring                              = 4,
    EFasterMove2Walk                               = 8,
    EJumping2Land                                  = 16,
    EStand2Crouch                                  = 32,
    ECrouch2Stand                                  = 64,
    ESmallActionTrigger_MAX                        = 65

};

// Enum  GPGameplay.ESmallActionState
enum class ESmallActionState : uint8_t
{
    EStill                                         = 0,
    EHorizonRotate                                 = 1,
    EVerticalRotate                                = 2,
    EMove                                          = 3,
    EFiring                                        = 4,
    ENoFiring                                      = 5,
    EWalk                                          = 6,
    ERun                                           = 7,
    ESprint                                        = 8,
    EAiring                                        = 9,
    ELanding                                       = 10,
    EStand                                         = 11,
    ECrouch                                        = 12,
    EZooming                                       = 13,
    EMax                                           = 14,
    ESmallActionState_MAX                          = 15

};

// Enum  GPGameplay.ESpringStatusType
enum class ESpringStatusType : uint8_t
{
    ESpringStatus_Default                          = 0,
    ESpringStatus_Aim                              = 1,
    ESpringStatus_Crouch                           = 2,
    ESpringStatus_NumMax                           = 3,
    ESpringStatus_MAX                              = 4

};

// Enum  GPGameplay.EFPPCameraRotationCalcType
enum class EFPPCameraRotationCalcType : uint8_t
{
    EJointBoneAddValue                             = 0,
    EFPPCameraBoneAutoBlend                        = 1,
    EFPPCameraBone                                 = 2,
    EFPPCameraRotationCalcType_MAX                 = 3

};

// Enum  GPGameplay.EAnimEnvInteraction
enum class EAnimEnvInteraction : uint8_t
{
    EAnimEnv_None                                  = 0,
    EAnimEnv_Up                                    = 1,
    EAnimEnv_Down                                  = 2,
    EAnimEnv_CollisionL                            = 3,
    EAnimEnv_CollisionR                            = 4,
    EAnimEnv_MAX                                   = 5

};

// Enum  GPGameplay.EMotionGear
enum class EMotionGear : uint8_t
{
    EMotionGear_Walk                               = 0,
    EMotionGear_Run                                = 1,
    EMotionGear_Sprint                             = 2,
    EMotionGear_SuperSprint                        = 3,
    EMotionGear_MAX                                = 4

};

// Enum  GPGameplay.EAnimationSwimType
enum class EAnimationSwimType : uint8_t
{
    AnimSwimType_Surfacewater                      = 0,
    AnimSwimType_Underwater                        = 1,
    AnimSwimType_Descending                        = 2,
    AnimSwimType_Ascending                         = 3,
    AnimSwimType_MAX                               = 4

};

// Enum  GPGameplay.EAnimationPlayType
enum class EAnimationPlayType : uint8_t
{
    AnimPlayType_None                              = 0,
    AnimPlayType_FullBody                          = 1,
    AnimPlayType_FullBodyBeforeAO                  = 2,
    AnimPlayType_FullBodyWithIK                    = 3,
    AnimPlayType_FullBodyNoMoving                  = 4,
    AnimPlayType_FullBodyWhenProne                 = 5,
    AnimPlayType_UpperBody                         = 6,
    AnimPlayType_UpperBodyWithIK                   = 7,
    AnimPlayType_UpperBodyGroupAimWithIK           = 8,
    AnimPlayType_LowerBody                         = 9,
    AnimPlayType_FPPAnimSlot                       = 10,
    AnimPlayType_UpperBodyWithForceIdle            = 11,
    AnimPlayType_FullBodyTakeHit                   = 12,
    AnimPlayType_FullBodyDeath                     = 13,
    AnimPlayType_LeftArm                           = 14,
    AnimPlayType_LeftArmBeforeAO                   = 15,
    AnimPlayType_RightArm                          = 16,
    AnimPlayType_LeftRightArm                      = 17,
    AnimPlayType_LeftArmMirrorByRightArm           = 18,
    AnimPlayType_RightArmMirrorByLeftArm           = 19,
    AnimPlayType_MirrorAnimBlend                   = 20,
    AnimPlayType_TurnAnim                          = 21,
    AnimPlayType_DefaultFullBodyMovingUpperBody    = 22,
    AnimPlayType_DefaultFullBodyMovingUpperBodyWithIK = 23,
    AnimPlayType_FullBodyRescue                    = 24,
    AnimPlayType_InVehicle                         = 25,
    AnimPlayType_InVehicleBeforeDrive              = 26,
    AnimPlayType_MachineGun                        = 27,
    AnimPlayType_FullBodyCarryBody                 = 28,
    AnimPlayType_FullBodyAllOverride               = 29,
    AnimPlayType_UpperArms                         = 30,
    AnimPlayType_DefaultUpperBodyMovingUpperArms   = 31,
    AnimPlayType_LocomotionFullBodyRushWithIK      = 32,
    AnimPlayType_SwimmingUpperBodyMovingUpperArms  = 33,
    AnimPlayType_SwimmingUpperBodyMovingUpperArmsWithIK = 34,
    AnimPlayType_MAX                               = 35

};

// Enum  GPGameplay.EEquipmentPart
enum class EEquipmentPart : uint8_t
{
    None                                           = 0,
    TopOfHead                                      = 1,
    Neck                                           = 2,
    Ear                                            = 3,
    Eye                                            = 4,
    Jaw                                            = 5,
    Thorax                                         = 6,
    LeftArm                                        = 7,
    RightArm                                       = 8,
    LeftLeg                                        = 9,
    RightLeg                                       = 10,
    Max                                            = 11

};

// Enum  GPGameplay.ECharacterPart
enum class ECharacterPart : uint8_t
{
    None                                           = 0,
    Head                                           = 1,
    Thorax                                         = 2,
    Abdomen                                        = 3,
    RightArm                                       = 4,
    LeftArm                                        = 5,
    RightLeg                                       = 6,
    LeftLeg                                        = 7,
    FullBody                                       = 8,
    ECharacterPart_MAX                             = 9

};

// Enum  GPGameplay.EInstantGEType
enum class EInstantGEType : uint8_t
{
    None                                           = 0,
    InstantAddHP                                   = 1,
    FixFracture                                    = 2,
    FixBleeding                                    = 3,
    EInstantGEType_MAX                             = 4

};

// Enum  GPGameplay.EHeadEquipmentPartType
enum class EHeadEquipmentPartType : uint8_t
{
    HeadTop                                        = 0,
    Eye                                            = 1,
    Face                                           = 2,
    Ear                                            = 3,
    Max                                            = 4

};

// Enum  GPGameplay.EEquipmentType
enum class EEquipmentType : uint8_t
{
    None                                           = 0,
    Helmet                                         = 1,
    Headset                                        = 2,
    FaceMask                                       = 3,
    Armband                                        = 4,
    BreastPlate                                    = 5,
    Glasses                                        = 6,
    ChestHanging                                   = 7,
    Bag                                            = 8,
    SafeBox                                        = 9,
    Tool                                           = 10,
    Shoes                                          = 11,
    KeyChain                                       = 12,
    Max                                            = 13

};

// Enum  GPGameplay.EWeaponBuff
enum class EWeaponBuff : uint8_t
{
    None                                           = 0,
    Max                                            = 1

};

// Enum  GPGameplay.EFootstepStateType
enum class EFootstepStateType : uint8_t
{
    Default                                        = 0,
    Walk                                           = 1,
    Run                                            = 2,
    Sprint                                         = 3,
    CrouchMove                                     = 4,
    CrouchRun                                      = 5,
    ProneMove                                      = 6,
    ProneRun                                       = 7,
    EFootstepStateType_MAX                         = 8

};

// Enum  GPGameplay.EFakeFootstepReason
enum class EFakeFootstepReason : uint8_t
{
    LowAnimLOD                                     = 0,
    PVSCut                                         = 1,
    LossNotify                                     = 2,
    EFakeFootstepReason_MAX                        = 3

};

// Enum  GPGameplay.EFakeFootstepStatus
enum class EFakeFootstepStatus : uint8_t
{
    Simulating                                     = 0,
    InTransition                                   = 1,
    PendingRemove                                  = 2,
    EFakeFootstepStatus_MAX                        = 3

};

// Enum  GPGameplay.EAudioMovementMode
enum class EAudioMovementMode : uint8_t
{
    MOVE_None                                      = 0,
    MOVE_Walking                                   = 1,
    MOVE_NavWalking                                = 2,
    MOVE_Falling                                   = 3,
    MOVE_Swimming                                  = 4,
    MOVE_Flying                                    = 5,
    MOVE_Custom                                    = 6,
    MOVE_MAX                                       = 7

};

// Enum  GPGameplay.EAudioListenerMovementType
enum class EAudioListenerMovementType : uint8_t
{
    None                                           = 0,
    Crouch                                         = 1,
    CrouchSlientWalk                               = 2,
    Prone                                          = 3,
    Walk                                           = 4,
    SlientWalk                                     = 5,
    Sprint                                         = 6,
    EAudioListenerMovementType_MAX                 = 7

};

// Enum  GPGameplay.ESubtitleHudType
enum class ESubtitleHudType : uint8_t
{
    None                                           = 0,
    OnlyText                                       = 1,
    TextWithBlackBG                                = 2,
    ESubtitleHudType_MAX                           = 3

};

// Enum  GPGameplay.ESubtitlePriorityType
enum class ESubtitlePriorityType : uint8_t
{
    None                                           = 0,
    QuestNotice_P1                                 = 1,
    QuestNotice_P2                                 = 2,
    QuestNotice_P3                                 = 3,
    AIDialog_P1                                    = 4,
    AIDialog_P2                                    = 5,
    AIDialog_P3                                    = 6,
    ESubtitlePriorityType_MAX                      = 7

};

// Enum  GPGameplay.EBlackboardFields
enum class EBlackboardFields : uint32_t
{
    None                                           = 0,
    WeaponProxy                                    = 1,
    WeaponAnimData                                 = 2,
    WeaponZoomData                                 = 4,
    WeaponFuncZoom                                 = 8,
    WeaponFuncGunSway                              = 16,
    WeaponFuncOffset                               = 32,
    bIsZooming                                     = 64,
    CurrentWeaponState                             = 128,
    bIsFiring                                      = 256,
    bIsSwitchingWeapon                             = 512,
    bIsPrefiring                                   = 1024,
    bIsLeftWeaponFiring                            = 2048,
    bUndderFPP                                     = 4096,
    GPPlayer                                       = 8192,
    GPPlayerInputManager                           = 16384,
    PlayerCameraManager                            = 32768,
    SoundVisualizationComponent                    = 65536,
    GPPlayerState                                  = 131072,
    bIsInLegFracture                               = 262144,
    bIsInDoubleLegFracture                         = 524288,
    bIsInArmFracture                               = 1048576,
    bIsInBoss05Dizzy                               = 2097152,
    EBlackboardFields_MAX                          = 2097153

};

// Enum  GPGameplay.EGPCharacterCameraModeType
enum class EGPCharacterCameraModeType : uint8_t
{
    ECameraMode_None                               = 0,
    ECameraMode_FPP                                = 1,
    ECameraMode_TPP                                = 2,
    ECameraMode_MAX                                = 3

};

// Enum  GPGameplay.EGPCharacterCameraModeReason
enum class EGPCharacterCameraModeReason : uint8_t
{
    ECameraModeReason_VehicleLiveSpectating        = 0,
    ECameraModeReason_RebornEffect                 = 1,
    ECameraModeReason_Redeploy                     = 2,
    ECameraModeReason_Emote                        = 3,
    ECameraModeReason_GamePlay                     = 4,
    ECameraModeReason_UserXppChange                = 5,
    ECameraModeReason_Vehicle                      = 6,
    ECameraModeReason_GamePlayLow                  = 7,
    ECameraModeReason_MAX                          = 8

};

// Enum  GPGameplay.ECorrectControlActorReason
enum class ECorrectControlActorReason : uint8_t
{
    FailedToStartControl                           = 0,
    FailedToStopControl                            = 1,
    ECorrectControlActorReason_MAX                 = 2

};

// Enum  GPGameplay.ECharacterAudioGender
enum class ECharacterAudioGender : uint8_t
{
    Male                                           = 0,
    Female                                         = 1,
    ECharacterAudioGender_MAX                      = 2

};

// Enum  GPGameplay.ECharacterAudioListener
enum class ECharacterAudioListener : uint8_t
{
    NoNeeds                                        = 0,
    Myself                                         = 1,
    Teammate                                       = 2,
    CampmateButNotTeammate                         = 3,
    Enemy                                          = 4,
    ECharacterAudioListener_MAX                    = 5

};

// Enum  GPGameplay.ECharacterAudioPlayMode
enum class ECharacterAudioPlayMode : uint8_t
{
    OneShot                                        = 0,
    Loop                                           = 1,
    State                                          = 2,
    ECharacterAudioPlayMode_MAX                    = 3

};

// Enum  GPGameplay.ECharacterAudioType
enum class ECharacterAudioType : uint8_t
{
    Pending                                        = 0,
    Breath_Sprint                                  = 1,
    Breath_Tired                                   = 2,
    Breath_Recover                                 = 3,
    Breath_Dying                                   = 4,
    Breath_Injured_Heavy                           = 5,
    Breath_Injured_Light                           = 6,
    Breath_CloseMouth                              = 7,
    Reaction_Die                                   = 8,
    Reaction_Pain                                  = 9,
    Reaction_Bleeding                              = 10,
    Reaction_ArmBroken                             = 11,
    Reaction_LegBroken                             = 12,
    Reaction_BodyBroken                            = 13,
    Reaction_Yell                                  = 14,
    Reaction_Hit                                   = 15,
    Reaction_Healed                                = 16,
    State_Default                                  = 17,
    State_Injured                                  = 18,
    Ability_VO1                                    = 19,
    Ability_VO2                                    = 20,
    Ability_VO3                                    = 21,
    Ability_VO4                                    = 22,
    Ability_VO5                                    = 23,
    Ability_VO6                                    = 24,
    Ability_VO7                                    = 25,
    Ability_VO8                                    = 26,
    Ability_VO9                                    = 27,
    Ability_VO10                                   = 28,
    Ability_VO11                                   = 29,
    Ability_VO12                                   = 30,
    Ability_VO13                                   = 31,
    Ability_VO14                                   = 32,
    Ability_VO15                                   = 33,
    Ability_VO16                                   = 34,
    Ability_VO17                                   = 35,
    Ability_VO18                                   = 36,
    Ability_VO19                                   = 37,
    Ability_VO20                                   = 38,
    PassiveTrigger                                 = 39,
    UltimateSmokePropUse                           = 40,
    UltimateSmokePropFinished                      = 41,
    PropEliminate                                  = 42,
    PropAssist                                     = 43,
    UltimateFullyCharged                           = 44,
    UltimateUse                                    = 45,
    UltimateOngoing                                = 46,
    UltimateEliminate                              = 47,
    UltimateEliminateAssist                        = 48,
    UltimateCure                                   = 49,
    UltimateFullyCharged401                        = 50,
    UltimateUse401                                 = 51,
    UltimateOngoing401                             = 52,
    UltimateHit401                                 = 53,
    UltimateAssist401                              = 54,
    Begin_Throw_Throwables                         = 55,
    EnterSmoke_Cough                               = 56,
    Enemy_Explosive_Nearby                         = 57,
    CQB_FullyCharged                               = 58,
    CQB_UseSkill                                   = 59,
    CQB_Kill                                       = 60,
    CQB_KillAssist                                 = 61,
    PassiveTrigger_C201                            = 62,
    PropUse_C201ElectricBow                        = 63,
    PropHit_C201ElectricBow                        = 64,
    PropAssist_C201ElectricBow                     = 65,
    PropEliminate_C201ElectricBow                  = 66,
    UltimateFullyCharged_C201ProxSensorBow         = 67,
    UltimateUse_C201ProxSensorBow                  = 68,
    UltimateOngoing_C201ProxSensorBow              = 69,
    UltimateEliminate_C201ProxSensorBow            = 70,
    UltimateAssist_C201ProxSensorBow               = 71,
    UltimateHit_C201ProxSensorBow                  = 72,
    PropUse_C301Launcer                            = 73,
    PropHit_C301Launcer                            = 74,
    PropAssist_C301Launcer                         = 75,
    PropEliminate_C301Launcer                      = 76,
    Passive_Trigger_Throw                          = 77,
    Prop_Hit_Mine                                  = 78,
    Prop_Use_Mine                                  = 79,
    Prop_Eliminate_Mine                            = 80,
    Prop_UseSupportSmoke                           = 81,
    Prop_UseAssultSmoke                            = 82,
    Prop_StartHoldBreath                           = 83,
    Prop_EndHoldBreath                             = 84,
    Prop_StartUnHoldBreath                         = 85,
    NONE                                           = 86,
    NumMax                                         = 87,
    ECharacterAudioType_MAX                        = 88

};

// Enum  GPGameplay.EBuffRemovedReason
enum class EBuffRemovedReason : uint8_t
{
    ENormal                                        = 0,
    EDead                                          = 1,
    EBuffRemovedReason_MAX                         = 2

};

// Enum  GPGameplay.EGPCustomMovementType
enum class EGPCustomMovementType : uint8_t
{
    GPCustomMovementType_None                      = 0,
    GPCustomMovementType_Vaulting                  = 1,
    GPCustomMovementType_Climbing                  = 2,
    GPCustomMovementType_ClimbingLadder            = 3,
    GPCustomMovementType_SlidingTackle             = 4,
    GPCustomMovementType_Parachute                 = 5,
    GPCustomMovementType_Assassinate               = 6,
    GPCustomMovementType_Zipline                   = 7,
    GPCustomMovementType_PlayerParachute           = 8,
    GPCustomMovementType_Gliding                   = 9,
    GPCustomMovementType_Interactor                = 10,
    GPCustomMovementType_Rescue                    = 11,
    GPCustomMovementType_BeingRescue               = 12,
    GPCustomMovementType_TransitionToSequence      = 13,
    GPCustomMovementType_Rush                      = 14,
    GPCustomMovementType_KnockBack                 = 15,
    GPCustomMovementType_CrocodileBite             = 16,
    GPCustomMovementType_BeAssassinate             = 17,
    GPCustomMovementType_Dive                      = 18,
    GPCustomMovementType_PassiveMove               = 19,
    GPCustomMovementType_Roll                      = 20,
    GPCustomMovementType_RopeHanging               = 21,
    GPCustomMovementType_Idling                    = 22,
    GPCustomMovementType_MAX                       = 23

};

// Enum  GPGameplay.EGPCharacterHiddenReason
enum class EGPCharacterHiddenReason : uint8_t
{
    EGPCharacterHidden_WaitSOLStart                = 0,
    EGPCharacterHidden_SOLFinishGame               = 1,
    EGPCharacterHidden_MPFinishGame                = 2,
    EGPCharacterHidden_MPDeathViewOther            = 3,
    EGPCharacterHidden_Vehicle                     = 4,
    EGPCharacterHidden_VehicleCarryBody            = 5,
    EGPCharacterHidden_DeathShowDeadBox            = 6,
    EGPCharacterHidden_IsOfflineCharacter          = 7,
    EGPCharacterHidden_AntiPeekMode                = 8,
    EGPCharacterHidden_TearOff                     = 9,
    EGPCharacterHidden_MAX                         = 10

};

// Enum  GPGameplay.ECharacterQTEStateRight
enum class ECharacterQTEStateRight : uint8_t
{
    QTERight_None                                  = 0,
    QTERight_MineActivate                          = 1,
    QTERight_SelfCure                              = 2,
    QTERight_ReleaseRope                           = 4,
    QTERight_Rescue                                = 8,
    QTERight_Parachute                             = 16,
    QTERight_MAX                                   = 17

};

// Enum  GPGameplay.ECharacterQTEStateLeft
enum class ECharacterQTEStateLeft : uint8_t
{
    QTELeft_None                                   = 0,
    QTELeft_ReleaseRope                            = 1,
    QTELeft_MineRecycle                            = 2,
    QTELeft_Carry                                  = 4,
    QTELeft_MAX                                    = 5

};

// Enum  GPGameplay.EHeroResourceState
enum class EHeroResourceState : uint8_t
{
    AS_Init                                        = 0,
    AS_Invalid                                     = 1,
    AS_Loading                                     = 2,
    AS_Loaded                                      = 3,
    AS_MAX                                         = 4

};

// Enum  GPGameplay.ECollisionState
enum class ECollisionState : uint8_t
{
    None                                           = 0,
    Sol_DefaultSpawn                               = 1,
    Sol_ImpendingDeath                             = 2,
    Sol_CarryBody                                  = 3,
    Sol_BeAssassinate                              = 4,
    Sol_Dying                                      = 5,
    Sol_MatchOver                                  = 6,
    Breakthrough_DefaultSpawn                      = 7,
    Breakthrough_ImpendingDeath                    = 8,
    Breakthrough_CarryBody                         = 9,
    Breakthrough_BeAssassinate                     = 10,
    Breakthrough_Dying                             = 11,
    Breakthrough_MatchOver                         = 12,
    Prone_Default                                  = 13,
    Prone_Prone                                    = 14,
    Prone_ImpendingDeath_Sol                       = 15,
    Prone_ImpendingDeath_Breakthrough              = 16,
    Prone_BeCarry                                  = 17,
    Prone_BeAssassinate                            = 18,
    Prone_Dying                                    = 19,
    Prone_MatchOver                                = 20,
    ECollisionState_MAX                            = 21

};

// Enum  GPGameplay.EProcessInputCompReason
enum class EProcessInputCompReason : uint8_t
{
    EProcessInputReason_WatchingCCTV               = 1,
    EProcessInputReason_WeaponAssembler            = 2,
    EProcessInputReason_HALLDISPLAY                = 4,
    EProcessInputReason_3DSafeHouse                = 8,
    EProcessInputReason_Range                      = 16,
    EProcessInputReason_CollectionRoom             = 32,
    EProcessInputReason_MAX                        = 33

};

// Enum  GPGameplay.EAICharacterTag
enum class EAICharacterTag : uint8_t
{
    EAICharacterTag_None                           = 0,
    EAICharacterTag_Elite                          = 1,
    EAICharacterTag_Civilian                       = 2,
    EAICharacterTag_Sniper                         = 3,
    EAICharacterTag_Shield                         = 4,
    EAICharacterTag_HeavyArmor                     = 5,
    EAICharacterTag_Paratrooper                    = 6,
    EAICharacterTag_Melee                          = 7,
    EAICharacterTag_Firebat                        = 8,
    EAICharacterTag_RPG                            = 9,
    EAICharacterTag_Boss                           = 10,
    EAICharacterTag_BoyBand                        = 11,
    EAICharacterTag_Crocodile                      = 12,
    EAICharacterTag_NonHuman                       = 13,
    EAICharacterTag_HelicopterPilot                = 14,
    EAICharacterTag_InsuranceCompany               = 15,
    EAICharacterTag_Activity                       = 16,
    EAICharacterTag_Romytheus_Assault              = 17,
    EAICharacterTag_Romytheus_Shield               = 18,
    EAICharacterTag_MAX                            = 19

};

// Enum  GPGameplay.EStateInterruptReason
enum class EStateInterruptReason : uint8_t
{
    Lean                                           = 0,
    Sliding                                        = 1,
    NotStandPose                                   = 2,
    ForbidReasonMax                                = 3,
    EStateInterruptReason_MAX                      = 4

};

// Enum  GPGameplay.EOverrideMovementType
enum class EOverrideMovementType : uint8_t
{
    EOperateMovementType_NoMove                    = 0,
    EOperateMovementType_Walk                      = 1,
    EOperateMovementType_Run                       = 2,
    EOperateMovementType_Sprint                    = 3,
    EOperateMovementType_None                      = 4,
    EOperateMovementType_MAX                       = 5

};

// Enum  GPGameplay.EOperateMovementType
enum class EOperateMovementType : uint8_t
{
    EOperateMovementType_None                      = 0,
    EOperateMovementType_NoMove                    = 1,
    EOperateMovementType_NormalRun                 = 2,
    EOperateMovementType_NoMoveAndNoBasePoseSwitch = 3,
    EOperateMovementType_MAX                       = 4

};

// Enum  GPGameplay.EFSMForbidReason
enum class EFSMForbidReason : uint8_t
{
    EFR_Default                                    = 0,
    EFR_Sprint                                     = 1,
    EFR_Vault                                      = 2,
    EFR_Reload                                     = 3,
    EFR_Jump                                       = 4,
    EFR_ProneFire                                  = 5,
    EFR_FreeLook                                   = 6,
    EFR_ImpendingDeath                             = 7,
    EFR_Operate                                    = 8,
    EFR_Aim                                        = 9,
    EFR_QuickThrow                                 = 10,
    EFR_Prone                                      = 11,
    EFR_Fire                                       = 12,
    EFR_Sequence                                   = 13,
    EFR_Vehicle                                    = 14,
    EFR_Burden                                     = 15,
    EFR_Death                                      = 16,
    EFR_ClimbLadder                                = 17,
    EFR_WeaponState                                = 18,
    EFR_UseTelescope                               = 19,
    EFR_Monitor                                    = 20,
    EFR_RelaxIde                                   = 21,
    EFR_CutScene                                   = 22,
    EFR_BeHit                                      = 23,
    EFR_UseStarApp                                 = 24,
    EFR_SceneWeapon                                = 25,
    EFR_StaminaLow                                 = 26,
    EFR_OnFlyBase                                  = 27,
    EFR_Assassinate                                = 28,
    EFR_BeAssassinate                              = 29,
    EFR_UsingSkill                                 = 30,
    EFR_SearchItem                                 = 31,
    EFR_FallHigh                                   = 32,
    EFR_UseZipline                                 = 33,
    EFR_Parachute                                  = 34,
    EFR_SlidingTackle                              = 35,
    EFR_TutorialRotate                             = 36,
    EFR_TutorialMove                               = 37,
    EFR_TutorialShoot                              = 38,
    EFR_InSafeHouse                                = 39,
    EFR_OpenInteractUI                             = 40,
    EFR_RaiseWatch                                 = 41,
    EFR_PreViewActor                               = 42,
    EFR_FireModePlacement                          = 43,
    EFR_WeaponInspect                              = 44,
    EFR_HighValueItemInspect                       = 45,
    EFR_WeaponBipodDeploy                          = 46,
    EFR_BowArrow                                   = 47,
    EFR_SkillRTT                                   = 48,
    EFR_ClientPreStateRTT                          = 49,
    EFR_WaitingStart                               = 50,
    EFR_SeamlessShow                               = 51,
    EFR_Helmet                                     = 52,
    EFR_Firefighting                               = 53,
    EFR_ApplySpray                                 = 54,
    EFR_OneHandedGesture                           = 55,
    EFR_TwoHandedGesture                           = 56,
    EFR_Emote                                      = 57,
    EFR_UsingDoubleHandsSkill                      = 58,
    EFR_UsingRightHandSkill                        = 59,
    EFR_UsingLeftHandSkill                         = 60,
    EFR_UsingLegsSkill                             = 61,
    EFR_UsingSpecialSkill                          = 62,
    EFR_Knockback                                  = 63,
    EFR_WeaponPreFire                              = 64,
    EFR_WeaponFire                                 = 65,
    EFR_Rescue                                     = 66,
    EFR_RushMoveEnd                                = 67,
    EFR_UsingDoubleHandsSkillAction                = 68,
    EFR_UsingRightHandSkillAction                  = 69,
    EFR_UsingLeftHandSkillAction                   = 70,
    EFR_UsingLegsSkillAction                       = 71,
    EFR_UsingSpecialSkillAction                    = 72,
    EFR_OpenBag                                    = 73,
    EFR_Lean                                       = 74,
    EFR_VehicleLockCamera                          = 75,
    EFR_PlayingMedia                               = 76,
    EFR_Reborn                                     = 77,
    EFR_Dive                                       = 78,
    EFR_PassiveMove                                = 79,
    EFR_PrePassiveMove                             = 80,
    EFR_SkillFireRTT                               = 81,
    EFR_RangeFirstEquipAnim                        = 82,
    EFR_UsingActionSkill                           = 83,
    EFR_PostPassiveMove                            = 84,
    EFR_ProneSetFireCracker                        = 85,
    EFR_CrowdControl                               = 86,
    EFR_ControlDrone                               = 87,
    EFR_DramaFallingVolume                         = 88,
    EFR_Swim                                       = 89,
    EFR_SwimSprint                                 = 90,
    EFR_EyeUnderWater                              = 91,
    EFR_RollMove                                   = 92,
    EFR_JailBreak                                  = 93,
    EFR_EMP                                        = 94,
    EFR_SelfRescue                                 = 95,
    EFR_Net                                        = 96,
    EFR_RemoteRescue                               = 97,
    EFR_OnVehicleMoveBase                          = 98,
    EFR_UsingCustomSkill                           = 99,
    EFR_UsingCustom2Skill                          = 100,
    EFR_MatchEnd                                   = 101,
    ForbidReasonMAX                                = 102,
    EFSMForbidReason_MAX                           = 103

};

// Enum  GPGameplay.ECharacterStateMask
enum class ECharacterStateMask : uint8_t
{
    None                                           = 0,
    CanMove                                        = 1,
    CanRotate                                      = 2,
    CanCharacterRotate                             = 3,
    CanCrouch                                      = 4,
    CanProne                                       = 5,
    CanJump                                        = 6,
    CanVault                                       = 7,
    CanReload                                      = 8,
    CanAimOn                                       = 9,
    CanAimOff                                      = 10,
    CanSwitchWeapon                                = 11,
    CanFire                                        = 12,
    CanAutoChangeClip                              = 13,
    CanWeaponInspect                               = 14,
    CanHighValueItemInspect                        = 15,
    CanWeaponBolt                                  = 16,
    CanWeaponBipodDeploy                           = 17,
    CanSkillSwtichWeapon                           = 18,
    CanDiscardOrEquipWeapon                        = 19,
    CanUseMachineGun                               = 20,
    CanSwitchNormalWeapon                          = 21,
    CanSwitchTacticalEquip                         = 22,
    CanUseItem                                     = 23,
    CanOperate                                     = 24,
    DisableWhitelistOperate                        = 25,
    CanLooting                                     = 26,
    CanDetectInteractor                            = 27,
    CanDetectRescue                                = 28,
    CanUserChangeXPP                               = 29,
    CanSwitchHelmetMask                            = 30,
    PauseSwitchHelmetMask                          = 31,
    CanDrive                                       = 32,
    CanPlayTacticalAction                          = 33,
    CanClimbLadder                                 = 34,
    CanUseTelescope                                = 35,
    CanChangeWeaponMode                            = 36,
    CanShowInteractUI                              = 37,
    CanLean                                        = 38,
    CanBeHit                                       = 39,
    CanUseSkill                                    = 40,
    CanAssassinate                                 = 41,
    CanBeAssassinate                               = 42,
    CanCarrybody                                   = 43,
    CanParachute                                   = 44,
    CanSlidingTackle                               = 45,
    CanUseZipline                                  = 46,
    CanPlayMarkingAnim                             = 47,
    CanFirefighting                                = 48,
    CanApplySpray                                  = 49,
    CanPlayOneHandedGesture                        = 50,
    CanPlayTwoHandedGesture                        = 51,
    CanPlayEmote                                   = 52,
    CanDive                                        = 53,
    CanSuperSprint                                 = 54,
    CanNotBlockFriend                              = 55,
    CanStandUp                                     = 56,
    CanProneMove                                   = 57,
    CanProneStandUp                                = 58,
    CanSprint                                      = 59,
    CanSwimSprint                                  = 60,
    CanBeBreakByOtherSkill                         = 61,
    CanUseSpecialSkill                             = 62,
    CanUseLeftHandSkill                            = 63,
    CanUseRightHandSkill                           = 64,
    CanUseLegSkill                                 = 65,
    CanUseActionSkill                              = 66,
    CanSkillWeaponFire                             = 67,
    CanNormalWeaponFire                            = 68,
    CanReloadLogic                                 = 69,
    CanRaiseWatch                                  = 70,
    CanUseHelmet                                   = 71,
    CanAbilityListner                              = 72,
    CanSelfRescue                                  = 73,
    All                                            = 74,
    ECharacterStateMask_MAX                        = 75

};

// Enum  GPGameplay.EForbidMoveReason
enum class EForbidMoveReason : uint8_t
{
    VaultAndClimb                                  = 0,
    AbilityForbidMove                              = 1,
    InteractForbidMove                             = 2,
    InteractTrackerForbidMove                      = 3,
    HUDForbidMove                                  = 4,
    SettlementForbidMove                           = 5,
    FSM                                            = 6,
    TransitionMove                                 = 7,
    ForbidMoveReasonNum                            = 8,
    EForbidMoveReason_MAX                          = 9

};

// Enum  GPGameplay.EMovementFailureReason
enum class EMovementFailureReason : uint8_t
{
    MovementFailureReason_None                     = 0,
    MovementFailureReason_AlreadyInState           = 1,
    MovementFailureReason_NotSupport               = 2,
    MovementFailureReason_TooFrequent              = 3,
    MovementFailureReason_SimulatingPhysics        = 4,
    MovementFailureReason_Swimming                 = 5,
    MovementFailureReason_UsingItem                = 6,
    MovementFailureReason_InWeakStatus             = 7,
    MovementFailureReason_NotPassCollisionTest     = 8,
    MovementFailureReason_TouchWaterVolume         = 9,
    MovementFailureReason_IsInKeepPreFireState     = 10,
    MovementFailureReason_CanNotStandNow           = 11,
    MovementFailureReason_CanNotProneNow           = 12,
    MovementFailureReason_Falling                  = 13,
    MovementFailureReason_MAX                      = 14

};

// Enum  GPGameplay.EPlayerScoreReturnType
enum class EPlayerScoreReturnType : uint8_t
{
    PlayerScoreReturnType_None                     = 0,
    PlayerScoreReturnType_RebornFlag               = 1,
    PlayerScoreReturnType_Rescue                   = 2,
    PlayerScoreReturnType_DriveVehicle             = 3,
    PlayerScoreReturnType_TeamLastOneRedeploy      = 4,
    PlayerScoreReturnType_MAX                      = 5

};

// Enum  GPGameplay.EPlayerLeanType
enum class EPlayerLeanType : uint8_t
{
    PlayerLeanType_NotLean                         = 0,
    PlayerLeanType_LeftLean                        = 1,
    PlayerLeanType_RightLean                       = 2,
    PlayerLeanType_Toggle                          = 16,
    PlayerLeanType_MAX                             = 17

};

// Enum  GPGameplay.ESwimImmediateAudioType
enum class ESwimImmediateAudioType : uint8_t
{
    SwimImmediateAudioType_None                    = 0,
    SwimImmediateAudioType_Human                   = 1,
    SwimImmediateAudioType_Vehicle                 = 2,
    SwimImmediateAudioType_MAX                     = 3

};

// Enum  GPGameplay.ESwimStateAudioType
enum class ESwimStateAudioType : uint8_t
{
    SwimStateAudioType_None                        = 0,
    SwimStateAudioType_AboveWater                  = 1,
    SwimStateAudioType_BelowWater                  = 2,
    SwimStateAudioType_MAX                         = 3

};

// Enum  GPGameplay.EStaminaExclusiveChangeType
enum class EStaminaExclusiveChangeType : uint8_t
{
    EStaminaExclusiveChange_Normal                 = 0,
    EStaminaExclusiveChange_Sprint                 = 1,
    EStaminaExclusiveChange_StandRun               = 2,
    EStaminaExclusiveChange_SuperSprint            = 3,
    EStaminaExclusiveChange_SwimmingSprint         = 4,
    EStaminaExclusiveChange_MAX                    = 5

};

// Enum  GPGameplay.EStaminaIndependentChangeType
enum class EStaminaIndependentChangeType : uint8_t
{
    EStaminaIndependentChange_None                 = 0,
    EStaminaIndependentChange_Jump                 = 1,
    EStaminaIndependentChange_Vault_One            = 2,
    EStaminaIndependentChange_Vault_Two            = 3,
    EStaminaIndependentChange_Vault_Three          = 4,
    EStaminaIndependentChange_Vault_Four           = 5,
    EStaminaIndependentChange_SlideTackle          = 6,
    EStaminaIndependentChange_StandToProne         = 7,
    EStaminaIndependentChange_StandToCrouch        = 8,
    EStaminaIndependentChange_CrouchToStand        = 9,
    EStaminaIndependentChange_CrouchToProne        = 10,
    EStaminaIndependentChange_ProneToCrouch        = 11,
    EStaminaIndependentChange_ProneToStand         = 12,
    EStaminaIndependentChange_SkillAssaultAward    = 13,
    EStaminaIndependentChange_SkillAssaultStart    = 14,
    EStaminaIndependentChange_SkillBlastShieldNormalAttack = 15,
    EStaminaIndependentChange_SkillBlastShieldHeavyAttack = 16,
    EStaminaIndependentChange_Dive                 = 17,
    EStaminaIndependentChange_SprintPenalty        = 18,
    EStaminaIndependentChange_MAX                  = 19

};

// Enum  GPGameplay.ECampNum
enum class ECampNum : uint8_t
{
    ECamp_None                                     = 0,
    ECamp_Player                                   = 1,
    ECamp_PlayerEnemy                              = 2,
    ECamp_Custom1                                  = 3,
    ECamp_MAX                                      = 4

};

// Enum  GPGameplay.ECharacterGender
enum class ECharacterGender : uint8_t
{
    CharacterGender_Male                           = 0,
    CharacterGender_Female                         = 1,
    CharacterGender_MAX                            = 2

};

// Enum  GPGameplay.ECharacterDamagePartsName
enum class ECharacterDamagePartsName : uint8_t
{
    None                                           = 0,
    Leg                                            = 1,
    LegUpper                                       = 2,
    Arm                                            = 3,
    ArmUpper                                       = 4,
    Head                                           = 5,
    Thorx                                          = 6,
    ThorxUpper                                     = 7,
    ECharacterDamagePartsName_MAX                  = 8

};

// Enum  GPGameplay.ESetCharacterPositionAndRep2ClientReason
enum class ESetCharacterPositionAndRep2ClientReason : uint8_t
{
    ENone                                          = 0,
    ERedeploy                                      = 1,
    ERaidResetHasVechile                           = 2,
    EVolumeResetPosition                           = 3,
    EVolumeResetCharacterBasePose                  = 4,
    EMapHeightChanged                              = 5,
    ECharacterStuck                                = 6,
    EVaultClimbEndNotInSafe                        = 7,
    EZiplineCheck                                  = 8,
    EGetOffFromVehicleWithInheritVelocity          = 9,
    ESetCharacterPositionAndRep2ClientReason_MAX   = 10

};

// Enum  GPGameplay.ERedeployStateFuture
enum class ERedeployStateFuture : uint8_t
{
    Idle                                           = 0,
    Start                                          = 1,
    FallDown                                       = 2,
    TurnCameraToEnemy                              = 3,
    FovZoomOut                                     = 4,
    KillerMark                                     = 5,
    FovZoomIn                                      = 6,
    TurnCameraToSelf                               = 7,
    Rescue                                         = 8,
    Rising                                         = 9,
    HighView                                       = 10,
    WaitLoadCollision                              = 11,
    WaitPreMatch                                   = 12,
    Landing                                        = 13,
    RedeployEnd                                    = 14,
    ERedeployStateFuture_MAX                       = 15

};

// Enum  GPGameplay.ERushKillState
enum class ERushKillState : uint8_t
{
    Normal                                         = 0,
    Rush                                           = 1,
    Kill                                           = 2,
    Rush2                                          = 3,
    Kill2                                          = 4,
    ERushKillState_MAX                             = 5

};

// Enum  GPGameplay.ECharacterBaseState
enum class ECharacterBaseState : uint8_t
{
    NormalFight                                    = 0,
    SafeHouse                                      = 1,
    ECharacterBaseState_MAX                        = 2

};

// Enum  GPGameplay.ERescueNoPreciseType
enum class ERescueNoPreciseType : uint8_t
{
    None                                           = 0,
    NoMedicSwim                                    = 1,
    NoMedicLand                                    = 2,
    Medic                                          = 3,
    ERescueNoPreciseType_MAX                       = 4

};

// Enum  GPGameplay.EClientAdjustPositionExInfo
enum class EClientAdjustPositionExInfo : uint8_t
{
    None                                           = 0,
    WantToCrouch                                   = 1,
    WantToProne                                    = 2,
    WantToStand                                    = 3,
    EClientAdjustPositionExInfo_MAX                = 4

};

// Enum  GPGameplay.EVerifyClientMoveExFlag
enum class EVerifyClientMoveExFlag : uint32_t
{
    SuccessTrustAll                                = 0,
    NotVelocity                                    = 1,
    NotMoveMode                                    = 2,
    NotLocation                                    = 4,
    FailJumpCount                                  = 8,
    FailZAxis                                      = 16,
    FailMaxJumpHeight                              = 32,
    FailDistance                                   = 64,
    FailCustomMove                                 = 128,
    FailTrustScore                                 = 256,
    EVerifyClientMoveExFlag_MAX                    = 257

};

// Enum  GPGameplay.VerifyClientMoveResult
enum class VerifyClientMoveResult : uint8_t
{
    UseTrustScore                                  = 0,
    SuccessCustomMove                              = 1,
    SuccessOnMoveBase                              = 2,
    Fail                                           = 3,
    VerifyClientMoveResult_MAX                     = 4

};

// Enum  GPGameplay.EGPPlayerMoveMode
enum class EGPPlayerMoveMode : uint8_t
{
    None                                           = 0,
    StandStill                                     = 1,
    Walk                                           = 2,
    Run                                            = 3,
    Sprint                                         = 4,
    EGPPlayerMoveMode_MAX                          = 5

};

// Enum  GPGameplay.EGPMoveDebug
enum class EGPMoveDebug : uint8_t
{
    GPMoveDebug_None                               = 0,
    GPMoveDebug_Prone                              = 1,
    GPMoveDebug_Penetration                        = 2,
    GPMoveDebug_MoveAlong                          = 3,
    GPMoveDebug_ResetWalkingPosition               = 4,
    GPMoveDebug_DrawServerPhysicCheck              = 5,
    GPMoveDebug_SwimLog                            = 6,
    GPMoveDebug_MAX                                = 7

};

// Enum  GPGameplay.EGPMovementType
enum class EGPMovementType : uint8_t
{
    MovementType_None                              = 0,
    MovementType_Walk                              = 1,
    MovementType_Fall                              = 2,
    MovementType_Swim                              = 3,
    MovementType_Fly                               = 4,
    MovementType_Sprint                            = 5,
    MovementType_SilentWalk                        = 6,
    MovementType_HalfSquatWalk                     = 7,
    MovementType_MAX                               = 8

};

// Enum  GPGameplay.ECharacterSpecificVoiceType
enum class ECharacterSpecificVoiceType : uint8_t
{
    None                                           = 0,
    GameStart                                      = 1,
    Kill                                           = 2,
    Rescue                                         = 3,
    BeRescued                                      = 4,
    ECharacterSpecificVoiceType_MAX                = 5

};

// Enum  GPGameplay.EAbilityVehicleDestroyReason
enum class EAbilityVehicleDestroyReason : uint8_t
{
    Boom                                           = 0,
    EmptyHealth                                    = 1,
    OwnerDie                                       = 2,
    RetrieveItems                                  = 3,
    Power                                          = 4,
    EAbilityVehicleDestroyReason_MAX               = 5

};

// Enum  GPGameplay.EAudioEventType
enum class EAudioEventType : uint8_t
{
    None                                           = 0,
    StandToCrouch                                  = 1,
    StandToProne                                   = 2,
    CrouchToStand                                  = 3,
    CrouchToProne                                  = 4,
    ProneToStand                                   = 5,
    ProneToCrouch                                  = 6,
    ClimbLadderUp                                  = 7,
    EAudioEventType_MAX                            = 8

};

// Enum  GPGameplay.EGPAnimAssetType
enum class EGPAnimAssetType : uint8_t
{
    None                                           = 0,
    AssassinateStand                               = 1,
    BeAssassinateStand                             = 2,
    AssassinateProne                               = 3,
    BeAssassinateProne                             = 4,
    AssassinateImpendingDeath                      = 5,
    BeAssassinateImpendingDeath                    = 6,
    EGPAnimAssetType_MAX                           = 7

};

// Enum  GPGameplay.EAntiPeekModeValidationStrategy
enum class EAntiPeekModeValidationStrategy : uint8_t
{
    ValidationStrategy_Default                     = 0,
    ValidationStrategy_OnlyHead                    = 1,
    ValidationStrategy_MAX                         = 2

};

// Enum  GPGameplay.EAntiPeekModeReason
enum class EAntiPeekModeReason : uint8_t
{
    AntiPeekModeReason_Emote                       = 0,
    AntiPeekModeReason_Assassination               = 1,
    AntiPeekModeReason_MAX                         = 2

};

// Enum  GPGameplay.EAntiPeekModeCharacterPart
enum class EAntiPeekModeCharacterPart : uint8_t
{
    AntiPeekModeCharacterPart_Head                 = 0,
    AntiPeekModeCharacterPart_Spine                = 1,
    AntiPeekModeCharacterPart_LeftHand             = 2,
    AntiPeekModeCharacterPart_RightHand            = 3,
    AntiPeekModeCharacterPart_LeftFoot             = 4,
    AntiPeekModeCharacterPart_RightFoot            = 5,
    AntiPeekModeCharacterPart_MAX                  = 6

};

// Enum  GPGameplay.EAntiPeekModeCategory
enum class EAntiPeekModeCategory : uint8_t
{
    AntiPeekModeCategory_PC_SOL_Player             = 0,
    AntiPeekModeCategory_PC_SOL_AI                 = 1,
    AntiPeekModeCategory_PC_MP_Player              = 2,
    AntiPeekModeCategory_PC_MP_AI                  = 3,
    AntiPeekModeCategory_Mobile_SOL_Player         = 4,
    AntiPeekModeCategory_Mobile_SOL_AI             = 5,
    AntiPeekModeCategory_Mobile_MP_Player          = 6,
    AntiPeekModeCategory_Mobile_MP_AI              = 7,
    AntiPeekModeCategory_MAX                       = 8

};

// Enum  GPGameplay.EVoiceTriggerRule
enum class EVoiceTriggerRule : uint8_t
{
    DefaultInspect                                 = 0,
    EmptyInspect                                   = 1,
    MatchStart                                     = 2,
    Ace                                            = 3,
    Kill                                           = 4,
    EVoiceTriggerRule_MAX                          = 5

};

// Enum  GPGameplay.EKillType
enum class EKillType : uint8_t
{
    Player                                         = 0,
    AILab                                          = 1,
    RobotAI                                        = 2,
    AIBoss                                         = 3,
    EKillType_MAX                                  = 4

};

// Enum  GPGameplay.ECommercializationVoiceResourceType
enum class ECommercializationVoiceResourceType : uint8_t
{
    WeaponSkin                                     = 0,
    Pendant                                        = 1,
    ECommercializationVoiceResourceType_MAX        = 2

};

// Enum  GPGameplay.ECharacterState
enum class ECharacterState : uint8_t
{
    CharacterState_None                            = 0,
    CharacterState_Stand                           = 1,
    CharacterState_Crouch                          = 2,
    CharacterState_Prone                           = 3,
    CharacterState_SilentWalk                      = 4,
    CharacterState_Zipline                         = 5,
    CharacterState_Peek                            = 6,
    CharacterState_Jump                            = 7,
    CharacterState_Firing                          = 8,
    CharacterState_Zooming                         = 9,
    CharacterState_Reload                          = 10,
    CharacterState_SwitchWeapon                    = 11,
    CharacterState_Inspect                         = 12,
    CharacterState_Skill                           = 13,
    CharacterState_SprayPaint                      = 14,
    CharacterState_HandGesture                     = 15,
    CharacterState_LookWatch                       = 16,
    CharacterState_GetKill                         = 17,
    CharacterState_MAX                             = 18

};

// Enum  GPGameplay.EWatchMaterialRule
enum class EWatchMaterialRule : uint8_t
{
    WatchMaterialRule_Texture                      = 0,
    WatchMaterialRule_Time                         = 1,
    WatchMaterialRule_KillCount                    = 2,
    WatchMaterialRule_MAX                          = 3

};

// Enum  GPGameplay.EItemCondition
enum class EItemCondition : uint8_t
{
    ItemCondition_None                             = 0,
    ItemCondition_Empty                            = 1,
    ItemCondition_CannotUse                        = 2,
    ItemCondition_NoSpace                          = 3,
    ItemCondition_MAX                              = 4

};

// Enum  GPGameplay.EItemType
enum class EItemType : uint8_t
{
    None                                           = 0,
    Spray                                          = 1,
    Voice                                          = 2,
    OneHandedGesture                               = 3,
    TwoHandedGesture                               = 4,
    Emote                                          = 5,
    WeaponInspect                                  = 6,
    SkillInspect                                   = 7,
    Watch                                          = 8,
    HighValueItem                                  = 9,
    EItemType_MAX                                  = 10

};

// Enum  GPGameplay.EDestructAnimForwardType
enum class EDestructAnimForwardType : uint8_t
{
    Forward                                        = 0,
    Right                                          = 1,
    Up                                             = 2,
    NegativeForward                                = 3,
    NegativeRight                                  = 4,
    NegativeUp                                     = 5,
    EDestructAnimForwardType_MAX                   = 6

};

// Enum  GPGameplay.EDestructPriorityType
enum class EDestructPriorityType : uint8_t
{
    ENormalPriority                                = 0,
    EHighPriority                                  = 1,
    EDestructPriorityType_MAX                      = 2

};

// Enum  GPGameplay.EDestructPhysicsSimulateType
enum class EDestructPhysicsSimulateType : uint8_t
{
    EAnimNodePhysics                               = 0,
    EGobalPhysics                                  = 1,
    EAsyncPhysics                                  = 2,
    EDestructPhysicsSimulateType_MAX               = 3

};

// Enum  GPGameplay.EDestructPhysicsType
enum class EDestructPhysicsType : uint8_t
{
    ENoPhysics                                     = 0,
    ESimulateWithAnimationSequence                 = 1,
    ESimulateWithDelay                             = 2,
    ESimulateImmediateWithForce                    = 3,
    ESimulateImmediateWithForceInRadius            = 4,
    EDestructPhysicsType_MAX                       = 5

};

// Enum  GPGameplay.EDestructState
enum class EDestructState : uint8_t
{
    ENotDestructed                                 = 0,
    EDamaged                                       = 1,
    EDestroying                                    = 2,
    EDestructed                                    = 3,
    EDestructState_MAX                             = 4

};

// Enum  GPGameplay.EDestructLoadMode
enum class EDestructLoadMode : uint8_t
{
    AsyncLoadWhenTrigger                           = 0,
    AsyncLoadWhenBeginPlay                         = 1,
    SyncLoad                                       = 2,
    EDestructLoadMode_MAX                          = 3

};

// Enum  GPGameplay.EDiveState
enum class EDiveState : uint8_t
{
    DiveState_Undefine                             = 0,
    DiveState_InAir                                = 1,
    DiveState_Landed                               = 2,
    DiveState_MAX                                  = 3

};

// Enum  GPGameplay.EDroneMoveType
enum class EDroneMoveType : uint8_t
{
    SingleAxis                                     = 0,
    MultiAxis                                      = 1,
    EDroneMoveType_MAX                             = 2

};

// Enum  GPGameplay.EAIAdditiveBehavior
enum class EAIAdditiveBehavior : uint8_t
{
    None                                           = 0,
    AimTarget                                      = 1,
    GunShooting                                    = 2,
    ChangeClip                                     = 3,
    Speaking                                       = 4,
    SpotTurn                                       = 5,
    ProneRotator                                   = 6,
    AdditiveGunPos                                 = 7,
    MAX                                            = 8

};

// Enum  GPGameplay.EAILeisureMovementType
enum class EAILeisureMovementType : uint8_t
{
    DefualtType                                    = 0,
    SpecialType01                                  = 1,
    SpecialType02                                  = 2,
    TYPE_MAX                                       = 3,
    EAILeisureMovementType_MAX                     = 4

};

// Enum  GPGameplay.EGPCharacterMoveDirStateType
enum class EGPCharacterMoveDirStateType : uint8_t
{
    Forward                                        = 0,
    Backward                                       = 1,
    Horizontal                                     = 2,
    EGPCharacterMoveDirStateType_MAX               = 3

};

// Enum  GPGameplay.EGPCharacterInCoverPoseType
enum class EGPCharacterInCoverPoseType : uint8_t
{
    None                                           = 0,
    LeftLow                                        = 1,
    RightLow                                       = 2,
    EGPCharacterInCoverPoseType_MAX                = 3

};

// Enum  GPGameplay.EGPCharacterPoseStateType
enum class EGPCharacterPoseStateType : uint8_t
{
    Stand                                          = 0,
    Crouch                                         = 1,
    Prone                                          = 2,
    Sprint                                         = 3,
    Trott                                          = 4,
    EGPCharacterPoseStateType_MAX                  = 5

};

// Enum  GPGameplay.EGPCharacterAlertStateType
enum class EGPCharacterAlertStateType : uint8_t
{
    Normal                                         = 0,
    TrottMove                                      = 1,
    Sight                                          = 2,
    EGPCharacterAlertStateType_MAX                 = 3

};

// Enum  GPGameplay.EGPCharacterLeisureMoveType
enum class EGPCharacterLeisureMoveType : uint8_t
{
    LeisureMoveType0                               = 0,
    LeisureMoveType1                               = 1,
    LeisureMoveType2                               = 2,
    EGPCharacterLeisureMoveType_MAX                = 3

};

// Enum  GPGameplay.EGPAICharaLocomotionType
enum class EGPAICharaLocomotionType : uint8_t
{
    None                                           = 0,
    Leisure_Patrol                                 = 1,
    Alert_Trot                                     = 2,
    Alert_Walk                                     = 3,
    Alert_Crouch                                   = 4,
    Alert_InLeftCover                              = 5,
    Alert_InRightCover                             = 6,
    Alert_Sprint                                   = 7,
    Fight_Crouch                                   = 8,
    Fight_Walk                                     = 9,
    Fight_Run                                      = 10,
    Fight_Sprint                                   = 11,
    Fight_InCoverLeft                              = 12,
    Fight_InCoverRight                             = 13,
    EGPAICharaLocomotionType_MAX                   = 14

};

// Enum  GPGameplay.EGPAIMotionType
enum class EGPAIMotionType : uint8_t
{
    None                                           = 0,
    Walk                                           = 1,
    Run                                            = 2,
    Sprint                                         = 3,
    Crouch                                         = 4,
    Prone                                          = 5,
    Swim                                           = 6,
    EGPAIMotionType_MAX                            = 7

};

// Enum  GPGameplay.EFSMAudioEventType
enum class EFSMAudioEventType : uint8_t
{
    None                                           = 0,
    GAudio                                         = 1,
    Foot                                           = 2,
    LoopStart                                      = 3,
    LoopEnd                                        = 4,
    EFSMAudioEventType_MAX                         = 5

};

// Enum  GPGameplay.ECharacterGlobalEventDefine
enum class ECharacterGlobalEventDefine : uint8_t
{
    ECharacterGlobalEventD_None                    = 0,
    ECharacterGlobalEvent_ToHandingM2HB            = 1,
    ECharacterGlobalEvent_WTF                      = 2,
    ECharacterGlobalEventDefine_MAX                = 3

};

// Enum  GPGameplay.EGPFSMNetworkIdentityType
enum class EGPFSMNetworkIdentityType : uint8_t
{
    GPFSM_None                                     = 0,
    GPFSM_OnlyServer                               = 1,
    GPFSM_OnlyClient                               = 2,
    GPFSM_OnlyAutonomous                           = 3,
    GPFSM_OnlySimulate                             = 4,
    GPFSM_BothServerAndAutonomous                  = 5,
    GPFSM_BothClientAndServer                      = 6,
    GPFSM_MAX                                      = 7

};

// Enum  GPGameplay.EResetWalkingPositionType
enum class EResetWalkingPositionType : uint8_t
{
    None                                           = 0,
    PreCheckSuccess                                = 1,
    Success                                        = 2,
    Fail_CD                                        = 3,
    Fail_NotStuckInGeometry                        = 4,
    Fail_CheckFail                                 = 5,
    Fail_Disable                                   = 6,
    EResetWalkingPositionType_MAX                  = 7

};

// Enum  GPGameplay.EEndZiplineReason
enum class EEndZiplineReason : uint8_t
{
    Arrive                                         = 0,
    Collision                                      = 1,
    Jump                                           = 2,
    Cancel                                         = 3,
    None                                           = 4,
    EEndZiplineReason_MAX                          = 5

};

// Enum  GPGameplay.EBaseTLogDataType
enum class EBaseTLogDataType : uint8_t
{
    ENone                                          = 0,
    EServerBegin                                   = 1,
    EDamage                                        = 2,
    EBeDamaged                                     = 3,
    EKillInfo                                      = 4,
    EPropChange                                    = 5,
    EHPGained                                      = 6,
    EServerEnd                                     = 7,
    EClientBegin                                   = 8,
    EBigMapOperate                                 = 9,
    EClientEnd                                     = 10,
    EBaseTLogDataType_MAX                          = 11

};

// Enum  GPGameplay.ELastHitPosition
enum class ELastHitPosition : uint8_t
{
    Head                                           = 0,
    Chest                                          = 1,
    Stomach                                        = 2,
    LeftArm                                        = 3,
    RightArm                                       = 4,
    LeftLeg                                        = 5,
    RightLeg                                       = 6,
    None                                           = 99,
    ELastHitPosition_MAX                           = 100

};

// Enum  GPGameplay.ESpecialWeaponMatch
enum class ESpecialWeaponMatch : uint8_t
{
    None                                           = 0,
    Sniper                                         = 1,
    ColdArms                                       = 2,
    Richx3                                         = 3,
    Pistol                                         = 4,
    Shotgun                                        = 5,
    Drug                                           = 6,
    AbilityItem                                    = 7,
    ESpecialWeaponMatch_MAX                        = 8

};

// Enum  GPGameplay.EGameplayType
enum class EGameplayType : uint8_t
{
    EGameplayType_None                             = 0,
    EGameplayType_Normal                           = 1,
    EGameplayType_BFA                              = 2,
    EGameplayType_BTT                              = 3,
    EGameplayType_Max                              = 4

};

// Enum  GPGameplay.EGameTeamMemberCountType
enum class EGameTeamMemberCountType : uint8_t
{
    EGameTeamMemberCountType_None                  = 0,
    EGameTeamMemberCountType                       = 1,
    EGameTeamMemberCountType                       = 2,
    EGameTeamMemberCountType                       = 4,
    EGameTeamMemberCountType                       = 5,
    EGameRoomType_Max                              = 6,
    EGameTeamMemberCountType_MAX                   = 7

};

// Enum  GPGameplay.EGameRoomType
enum class EGameRoomType : uint8_t
{
    EGameRoomType_None                             = 0,
    EGameRoomType_Normal                           = 1,
    EGameRoomType_Rank                             = 2,
    EGameRoomType_Custom                           = 3,
    EGameRoomType_Max                              = 4

};

// Enum  GPGameplay.EGPSoftwareCursorType
enum class EGPSoftwareCursorType : uint8_t
{
    None                                           = 0,
    Default                                        = 1,
    DefaultMoving                                  = 2,
    Hand                                           = 3,
    HandPressed                                    = 4,
    GrabHand                                       = 5,
    CardinalCross                                  = 6,
    EGPSoftwareCursorType_MAX                      = 7

};

// Enum  GPGameplay.EHitEffectType
enum class EHitEffectType : uint8_t
{
    HitEffectType_None                             = 0,
    HitEffectType_Animation                        = 1,
    HitEffectType_Physx                            = 2,
    HitEffectType_MAX                              = 3

};

// Enum  GPGameplay.EHitDirection
enum class EHitDirection : uint8_t
{
    HitDirection_None                              = 0,
    HitDirection_Front                             = 1,
    HitDirection_Back                              = 2,
    HitDirection_Left                              = 3,
    HitDirection_Right                             = 4,
    HitDirection_MAX                               = 5

};

// Enum  GPGameplay.EGPHotFixActorType
enum class EGPHotFixActorType : uint8_t
{
    None                                           = 0,
    Add                                            = 1,
    Delete                                         = 2,
    Modify                                         = 3,
    EGPHotFixActorType_MAX                         = 4

};

// Enum  GPGameplay.EBagTabType
enum class EBagTabType : uint8_t
{
    EBagTab_Character                              = 0,
    EBagTab_Health                                 = 1,
    EBagTab_ScoreBoard                             = 2,
    EBagTab_MAX                                    = 3

};

// Enum  GPGameplay.EInputDisableReason
enum class EInputDisableReason : uint8_t
{
    HUD_EmptyWhiteListBlockAll                     = 0,
    HUD_NotInWhiteList                             = 1,
    HUD_InBlackList                                = 2,
    MainStage                                      = 3,
    PlayMode                                       = 4,
    Dynamic                                        = 5,
    EInputDisableReason_MAX                        = 6

};

// Enum  GPGameplay.EInputActionType
enum class EInputActionType : uint32_t
{
    EInputAction_None                              = 0,
    EInputAction_MoveForwardBtnDown                = 1,
    EInputAction_MoveForwardBtnUp                  = 2,
    EInputAction_MoveBackwardBtnDown               = 3,
    EInputAction_MoveBackwardBtnUp                 = 4,
    EInputAction_MoveLeftBtnDown                   = 5,
    EInputAction_MoveLeftBtnUp                     = 6,
    EInputAction_MoveRightBtnDown                  = 7,
    EInputAction_MoveRightBtnUp                    = 8,
    EInputAction_MoveUpBtnDown                     = 9,
    EInputAction_MoveUpBtnUp                       = 10,
    EInputAction_MoveDownBtnDown                   = 11,
    EInputAction_MoveDownBtnUp                     = 12,
    EInputAction_MoveRollLeftBtnDown               = 13,
    EInputAction_MoveRollLeftBtnUp                 = 14,
    EInputAction_MoveRollRightBtnDown              = 15,
    EInputAction_MoveRollRightBtnUp                = 16,
    EInputAction_AirThrottleUpBtnDown              = 17,
    EInputAction_AirThrottleUpBtnUp                = 18,
    EInputAction_AirThrottleDownBtnDown            = 19,
    EInputAction_AirThrottleDownBtnUp              = 20,
    EInputAction_AirRollLeftBtnDown                = 21,
    EInputAction_AirRollLeftBtnUp                  = 22,
    EInputAction_AirRollRightBtnDown               = 23,
    EInputAction_AirRollRightBtnUp                 = 24,
    EInputAction_AirPitchUpBtnDown                 = 25,
    EInputAction_AirPitchUpBtnUp                   = 26,
    EInputAction_AirPitchDownBtnDown               = 27,
    EInputAction_AirPitchDownBtnUp                 = 28,
    EInputAction_AirYawLeftBtnDown                 = 29,
    EInputAction_AirYawLeftBtnUp                   = 30,
    EInputAction_AirYawRightBtnDown                = 31,
    EInputAction_AirYawRightBtnUp                  = 32,
    EInputAction_HeliThrottleUpBtnDown             = 33,
    EInputAction_HeliThrottleUpBtnUp               = 34,
    EInputAction_HeliThrottleDownBtnDown           = 35,
    EInputAction_HeliThrottleDownBtnUp             = 36,
    EInputAction_HeliRollLeftBtnDown               = 37,
    EInputAction_HeliRollLeftBtnUp                 = 38,
    EInputAction_HeliRollRightBtnDown              = 39,
    EInputAction_HeliRollRightBtnUp                = 40,
    EInputAction_HeliPitchUpBtnDown                = 41,
    EInputAction_HeliPitchUpBtnUp                  = 42,
    EInputAction_HeliPitchDownBtnDown              = 43,
    EInputAction_HeliPitchDownBtnUp                = 44,
    EInputAction_HeliYawLeftBtnDown                = 45,
    EInputAction_HeliYawLeftBtnUp                  = 46,
    EInputAction_HeliYawRightBtnDown               = 47,
    EInputAction_HeliYawRightBtnUp                 = 48,
    EInputAction_JumpAndVaultBtnDown               = 49,
    EInputAction_JumpAndVaultBtnUp                 = 50,
    EInputAction_JumpBtnDown                       = 51,
    EInputAction_JumpBtnUp                         = 52,
    EInputAction_VaultBtnDown                      = 53,
    EInputAction_CrouchBtnDown                     = 54,
    EInputAction_CrouchBtnUp                       = 55,
    EInputAction_CrouchHoldBtnDown                 = 56,
    EInputAction_CrouchHoldBtnUp                   = 57,
    EInputAction_ProneAndDiveBtnDown               = 58,
    EInputAction_ProneBtnDown                      = 59,
    EInputAction_DiveBtnDown                       = 60,
    EInputAction_SwimUpBtnDown                     = 61,
    EInputAction_SwimUpBtnUp                       = 62,
    EInputAction_SwimDownBtnDown                   = 63,
    EInputAction_SwimDownBtnUp                     = 64,
    EInputAction_SprintBtnDown                     = 65,
    EInputAction_SprintBtnUp                       = 66,
    EInputAction_SilentWalkBtnDown                 = 67,
    EInputAction_SilentWalkBtnUp                   = 68,
    EInputAction_SuperSprintBtnDown                = 69,
    EInputAction_SuperSprintBtnUp                  = 70,
    EInputAction_PersistMoveBtnDown                = 71,
    EInputAction_PersistMoveBtnUp                  = 72,
    EInputAction_SprintKeyboardBtnDown             = 73,
    EInputAction_SprintKeyboardBtnUp               = 74,
    EInputAction_SilentWalkKeyboardBtnDown         = 75,
    EInputAction_SilentWalkKeyboardBtnUp           = 76,
    EInputAction_LeftPeekBtnDown                   = 77,
    EInputAction_LeftPeekBtnUp                     = 78,
    EInputAction_RightPeekBtnDown                  = 79,
    EInputAction_RightPeekBtnUp                    = 80,
    EInputAction_ParachuteOpenBtnDown              = 81,
    EInputAction_ParachuteCloseBtnDown             = 82,
    EInputAction_LeftFireBtnDown                   = 83,
    EInputAction_LeftFireBtnUp                     = 84,
    EInputAction_RightFireBtnDown                  = 85,
    EInputAction_RightFireBtnUp                    = 86,
    EInputAction_AimBtnDown                        = 87,
    EInputAction_AimBtnUp                          = 88,
    EInputAction_SideAimBtnDown                    = 89,
    EInputAction_SideAimBtnUp                      = 90,
    EInputAction_ChangeSightBtnDown                = 91,
    EInputAction_HoldBreathBtnDown                 = 92,
    EInputAction_HoldBreathBtnUp                   = 93,
    EInputAction_ReloadBtnDown                     = 94,
    EInputAction_ReloadBtnUp                       = 95,
    EInputAction_FastFireBtnDown                   = 96,
    EInputAction_FastFireBtnUp                     = 97,
    EInputAction_SwitchWeapon1BtnDown              = 98,
    EInputAction_SwitchWeapon2BtnDown              = 99,
    EInputAction_SwitchWeapon3BtnDown              = 100,
    EInputAction_SwitchWeapon4BtnDown              = 101,
    EInputAction_SwitchToPreWeaponBtnDown          = 102,
    EInputAction_SwitchToNextWeaponBtnDown         = 103,
    EInputAction_SwitchWeaponFireModeBtnDown       = 104,
    EInputAction_ChangeFOVBtnDown                  = 105,
    EInputAction_ChangeFovBtnUp                    = 106,
    EInputAction_SwitchTacticalEquipmentBtnDown    = 107,
    EInputAction_SwitchTacticalEquipmentBtnUp      = 108,
    EInputAction_PowerFlashOpenKeyboardBtnDown     = 109,
    EInputAction_RangeFinderBtnDown                = 110,
    EInputAction_NightVisionBtnDown                = 111,
    EInputAction_NightVisionBtnUp                  = 112,
    EInputAction_WeaponBipodDeployBtnDown          = 113,
    EInputAction_AbilityDetailBtnUp                = 114,
    EInputAction_AbilityDetailBtnDown              = 115,
    EInputAction_SkillButtonBtnDown                = 116,
    EInputAction_SkillButtonBtnUp                  = 117,
    EInputAction_AbilityItemBtnDown                = 118,
    EInputAction_AbilityItemBtnUp                  = 119,
    EInputAction_AbilityItemSecondBtnDown          = 120,
    EInputAction_AbilityItemSecondBtnUp            = 121,
    EInputAction_MedicalSyringeBtnDown             = 122,
    EInputAction_SkillCustom1BtnDown               = 123,
    EInputAction_SkillCustom1BtnUp                 = 124,
    EInputAction_BattleFieldPropSkillBtnDown       = 125,
    EInputAction_BattleFieldPropSkillBtnUp         = 126,
    EInputAction_SkillQTELeftBtnDown               = 127,
    EInputAction_SkillQTELeftBtnUp                 = 128,
    EInputAction_SkillQTERightBtnDown              = 129,
    EInputAction_SkillQTERightBtnUp                = 130,
    EInputAction_SkillInspectRouletteBtnDown       = 131,
    EInputAction_SkillInspectRouletteBtnUp         = 132,
    EInputAction_SkillInspectBtnDown               = 133,
    EInputAction_AbilityItem1InspectBtnDown        = 134,
    EInputAction_AbilityItem2InspectBtnDown        = 135,
    EInputAction_InteractBtnDown                   = 136,
    EInputAction_InteractBtnUp                     = 137,
    EInputAction_Interact2BtnDown                  = 138,
    EInputAction_Interact2BtnUp                    = 139,
    EInputAction_Interact3BtnDown                  = 140,
    EInputAction_Interact3BtnUp                    = 141,
    EInputAction_RescueBtnDown                     = 142,
    EInputAction_RescueBtnUp                       = 143,
    EInputAction_CarryBodyBtnDown                  = 144,
    EInputAction_DropCarryBodyBtnDown              = 145,
    EInputAction_ZiplineBtnDown                    = 146,
    EInputAction_AssassinateBtnDown                = 147,
    EInputAction_AssassinateBtnUp                  = 148,
    EInputAction_FirefightingBtnDown               = 149,
    EInputAction_FirefightingBtnUp                 = 150,
    EInputAction_PullOutArrowBtnDown               = 151,
    EInputAction_PullOutArrowBtnUp                 = 152,
    EInputAction_ButterRescueBtnDown               = 153,
    EInputAction_ButterRescueBtnUp                 = 154,
    EInputAction_ESCBtnDown                        = 155,
    EInputAction_OpenGameESCPanelBtnDown           = 156,
    EInputAction_LootingOpenBagBtnDown             = 157,
    EInputAction_LootingOpenBagBtnUp               = 158,
    EInputAction_LootingOpenHealthTabBtnDown       = 159,
    EInputAction_ToggleScoreboardBtnDown           = 160,
    EInputAction_ToggleScoreboardBtnUp             = 161,
    EInputAction_RequestRescueBtnDown              = 162,
    EInputAction_RequestRescueBtnUp                = 163,
    EInputAction_AbandonRescueBtnDown              = 164,
    EInputAction_AbandonRescueBtnUp                = 165,
    EInputAction_AbandonRescueInWaterBtnDown       = 166,
    EInputAction_AbandonRescueInWaterBtnUp         = 167,
    EInputAction_EquipmentRentalBtnDown            = 168,
    EInputAction_MiniMapScaleChangeBtnDown         = 169,
    EInputAction_CloseDeathDetailBtnDown           = 170,
    EInputAction_QuickResYesBtnDown                = 171,
    EInputAction_QuickResNoBtnDown                 = 172,
    EInputAction_OpenScoreBoardBtnDown             = 173,
    EInputAction_OpenScoreBoardBtnUp               = 174,
    EInputAction_ArtillerySupportBtnDown           = 175,
    EInputAction_ArtillerySupportBtnUp             = 176,
    EInputAction_RouletteMedBtnDown                = 177,
    EInputAction_RouletteMedBtnUp                  = 178,
    EInputAction_RouletteLeftBtnDown               = 179,
    EInputAction_UseCurrentRouletteItemBtnDown     = 180,
    EInputAction_CancelRouletteBtnDown             = 181,
    EInputAction_OpenTaskBtnDown                   = 182,
    EInputAction_CommanderImpeachBtnDown           = 183,
    EInputAction_TeamInfoDetailsBtnDown            = 184,
    EInputAction_OpenMapBtnDown                    = 185,
    EInputAction_ZoomUpBigMapScaleBtnDown          = 186,
    EInputAction_ZoomDownBigMapScaleBtnDown        = 187,
    EInputAction_MapLongPressSelectBtnDown         = 188,
    EInputAction_MapLongPressSelectBtnUp           = 189,
    EInputAction_SOLMapExitInfoShow                = 190,
    EInputAction_MapDigitalKey1BtnDown             = 191,
    EInputAction_MapDigitalKey2BtnDown             = 192,
    EInputAction_MapDigitalKey3BtnDown             = 193,
    EInputAction_MapDigitalKey4BtnDown             = 194,
    EInputAction_MapKeyUpBtnDown                   = 195,
    EInputAction_MapKeyDownBtnDown                 = 196,
    EInputAction_LocatePlayerBtnDown               = 197,
    EInputAction_ToggleLegendsBtnDown              = 198,
    EInputAction_WatchFightChangeTargetBtnDown     = 199,
    EInputAction_WatchFightExitBtnDown             = 200,
    EInputAction_WatchFightReportVoiceBtnDown      = 201,
    EInputAction_WatchFightReportBtnDown           = 202,
    EInputAction_WatchFightPlayerCardBtnDown       = 203,
    EInputAction_WatchFightDeathDetailInfoBtnDown  = 204,
    EInputAction_WatchKillCamReplayBtnDown         = 205,
    EInputAction_MarkingBtnDown                    = 206,
    EInputAction_MarkingBtnUp                      = 207,
    EInputAction_CommercializationBtnDown          = 208,
    EInputAction_CommercializationBtnUp            = 209,
    EInputAction_SwitchRoulette                    = 210,
    EInputAction_ToggleVoiceSpeakingBtnDown        = 211,
    EInputAction_KeepVoiceSpeakingBtnDown          = 212,
    EInputAction_KeepVoiceSpeakingBtnUp            = 213,
    EInputAction_MuteAllBtnDown                    = 214,
    EInputAction_ChangeVoiceChannelDown            = 215,
    EInputAction_RangeManageWeaponBtnDown          = 216,
    EInputAction_RangeToggleAnalysisPanelBtnDown   = 217,
    EInputAction_RangeRefreshAnalysisPanelBtnDown  = 218,
    EInputAction_RangeToggleAnalysisDetailedPanelBtnDown = 219,
    EInputAction_VehicleBoostBtnDown               = 220,
    EInputAction_VehicleBrakeBtnDown               = 221,
    EInputAction_VehicleBrakeBtnUp                 = 222,
    EInputAction_VehicleLockTurretBtnDown          = 223,
    EInputAction_VehicleLockTurretBtnUp            = 224,
    EInputAction_ChangeVehicleSeat1BtnDown         = 225,
    EInputAction_ChangeVehicleSeat2BtnDown         = 226,
    EInputAction_ChangeVehicleSeat3BtnDown         = 227,
    EInputAction_ChangeVehicleSeat4BtnDown         = 228,
    EInputAction_ChangeVehicleSeat5BtnDown         = 229,
    EInputAction_ChangeVehicleSeat6BtnDown         = 230,
    EInputAction_ChangeVehicleSeatToAvailable      = 231,
    EInputAction_FirstVehicleSkillBtnDown          = 232,
    EInputAction_FirstVehicleSkillBtnUp            = 233,
    EInputAction_SecondVehicleSkillBtnDown         = 234,
    EInputAction_SecondVehicleSkillBtnUp           = 235,
    EInputAction_ThirdVehicleSkillBtnDown          = 236,
    EInputAction_ThirdVehicleSkillBtnUp            = 237,
    EInputAction_FourthVehicleSkillBtnDown         = 238,
    EInputAction_FourthVehicleSkillBtnUp           = 239,
    EInputAction_SecondVehicleWeaponFireBtnDown    = 240,
    EInputAction_VehicleHeadOutBtnDown             = 241,
    EInputAction_VehicleTrumpetBtnDown             = 242,
    EInputAction_VehicleTrumpetBtnUp               = 243,
    EInputAction_VehicleSwitchXPPBtnDown           = 244,
    EInputAction_LeaveVehicleBtnDown               = 245,
    EInputAction_LockVehicleCameraBtnDown          = 246,
    EInputAction_LockVehicleCameraBtnUp            = 247,
    EInputAction_AirLockVehicleCameraBtnDown       = 248,
    EInputAction_AirLockVehicleCameraBtnUp         = 249,
    EInputAction_VehicleFireBtnDown                = 250,
    EInputAction_VehicleFireBtnUp                  = 251,
    EInputAction_VehicleAimBtnDown                 = 252,
    EInputAction_VehicleAimBtnUp                   = 253,
    EInputAction_JetAimBtnDown                     = 254,
    EInputAction_JetAimBtnUp                       = 255,
    EInputAction_AirVehicleBlanceAssistBtnDown     = 256,
    EInputAction_AirVehicleBlanceAssistBtnUp       = 257,
    EInputAction_SwitchVehicleWeapon1BtnDown       = 258,
    EInputAction_SwitchVehicleWeapon2BtnDown       = 259,
    EInputAction_SwitchScrollVehicleWeapon1BtnDown = 260,
    EInputAction_SwitchScrollVehicleWeapon2BtnDown = 261,
    EInputAction_VehicleMoveUpBtnDown              = 262,
    EInputAction_VehicleMoveUpBtnUp                = 263,
    EInputAction_VehicleMoveDownBtnDown            = 264,
    EInputAction_VehicleMoveDownBtnUp              = 265,
    EInputAction_VehicleSpeedupBtnDown             = 266,
    EInputAction_VehicleSpeedupBtnUp               = 267,
    EInputAction_JetDriveModeBtnDown               = 268,
    EInputAction_Exit3DSafeHouseBtnDown            = 269,
    EInputAction_ChangeXPPBtnDown                  = 270,
    EInputAction_HideHUDBtnDown                    = 271,
    EInputAction_ToggleWeaponDebugPanelBtnDown     = 272,
    EInputAction_GMToggleGhostWalk                 = 273,
    EInputAction_GMToggleFlyWalk                   = 274,
    EInputAction_GMAddSpeed100                     = 275,
    EInputAction_GMMinusSpeed100                   = 276,
    EInputAction_TPPRotateCameraBtnDown            = 277,
    EInputAction_TPPRotateCameraBtnUp              = 278,
    EInputAction_FreeLookaroundModeBtnDown         = 279,
    EInputAction_FreeLookaroundModeBtnUp           = 280,
    EInputAction_OBC_ShowHidePanelBtnDown          = 281,
    EInputAction_OBC_CatchMoveRoutePointBtnDown    = 282,
    EInputAction_OBC_GenerateMoveRouteBtnDown      = 283,
    EInputAction_OBC_ClearMoveRouteBtnDown         = 284,
    EInputAction_OBC_CatchFaceRoutePointBtnDown    = 285,
    EInputAction_OBC_GenerateFaceRouteBtnDown      = 286,
    EInputAction_OBC_ClearFaceRouteBtnDown         = 287,
    EInputAction_OBC_ShowHideRouteDebugViewBtnDown = 288,
    EInputAction_OBC_StartMoveCameraBtnDown        = 289,
    EInputAction_OBC_UpdateFocusPointBtnDown       = 290,
    EInputAction_OBC_LeftBtnClickBtnDown           = 291,
    EInputAction_OBC_RightBtnClickBtnDown          = 292,
    EInputAction_OBC_SwitchToFreeCameraBtnDown     = 293,
    EInputAction_OBC_PrevTeamBtnDown               = 294,
    EInputAction_OBC_NextTeamBtnDown               = 295,
    EInputAction_OBC_ShowDetailListBtnDown         = 296,
    EInputAction_OBC_ShowTeamInfoBtnDown           = 297,
    EInputAction_OBC_ShowOutLineEffectBtnDown      = 298,
    EInputAction_OBC_ShowPlayerMarkerBtnDown       = 299,
    EInputAction_OBC_CameraMoveSpeedAccelerateBtnDown = 300,
    EInputAction_OBC_CameraMoveSpeedDecelerateBtnDown = 301,
    EInputAction_OBC_ChangeCameraCollisionBtnDown  = 302,
    EInputAction_VehicleChangeXPPBtnDown           = 303,
    EInputAction_NumMax                            = 304,
    EInputAction_MAX                               = 305

};

// Enum  GPGameplay.EInputAxisType
enum class EInputAxisType : uint8_t
{
    EInputAxis_None                                = 0,
    EInputAxis_TurnAtRate                          = 1,
    EInputAxis_LookUpAtRate                        = 2,
    EInputAxis_MoveForward                         = 3,
    EInputAxis_MoveVehicleForward_Gamepad          = 4,
    EInputAxis_MoveVehicleBackward_Gamepad         = 5,
    EInputAxis_MoveRight                           = 6,
    EInputAxis_MoveUp                              = 7,
    EInputAxis_MoveRoll                            = 8,
    EInputAxis_AirThrottle                         = 9,
    EInputAxis_AirPitch                            = 10,
    EInputAxis_AirRoll                             = 11,
    EInputAxis_AirYaw                              = 12,
    EInputAxis_HeliThrottle                        = 13,
    EInputAxis_HeliPitch                           = 14,
    EInputAxis_HeliRoll                            = 15,
    EInputAxis_HeliYaw                             = 16,
    EInputAxis_RouletteOperationX                  = 17,
    EInputAxis_RouletteOperationY                  = 18,
    EInputAxis_SelectTacticalEquipX                = 19,
    EInputAxis_SelectTacticalEquipY                = 20,
    EInputAxis_NumMax                              = 21,
    EInputAxis_MAX                                 = 22

};

// Enum  GPGameplay.EDoorKeyType
enum class EDoorKeyType : uint8_t
{
    DoorKeyType_Normal                             = 0,
    DoorKeyType_ByLevel                            = 1,
    DoorKeyType_MAX                                = 2

};

// Enum  GPGameplay.EInteractorOptConditionType
enum class EInteractorOptConditionType : uint8_t
{
    OptCondition_None                              = 0,
    OptCondition_ConsumeItem                       = 1,
    OptCondition_MAX                               = 2

};

// Enum  GPGameplay.EInteractorOptSwitcherType
enum class EInteractorOptSwitcherType : uint8_t
{
    InteractorOptSwitcherType_None                 = 0,
    InteractorOptSwitcherType_Lock                 = 1,
    InteractorOptSwitcherType_OpenClose            = 2,
    InteractorOptSwitcherType_MAX                  = 3

};

// Enum  GPGameplay.EInteractorBlockCheckType
enum class EInteractorBlockCheckType : uint8_t
{
    InteractorBlockCheck_ForwardAndCheckBlock      = 0,
    InteractorBlockCheck_BackwardAndCheckBlock     = 1,
    InteractorBlockCheck_MAX                       = 2

};

// Enum  GPGameplay.EInteractorPriority
enum class EInteractorPriority : uint8_t
{
    InteractorPriority_Zipline                     = 0,
    InteractorPriority_PickupOwnBySelf             = 1,
    InteractorPriority_Delay                       = 2,
    InteractorPriority_Common                      = 3,
    InteractorPriority_PickupOwnByTeammate         = 4,
    InteractorPriority_MAX                         = 5

};

// Enum  GPGameplay.EInteractorHUDType
enum class EInteractorHUDType : uint8_t
{
    HUDType_None                                   = 0,
    HUDType_Common                                 = 1,
    HUDType_ContractNPC                            = 2,
    HUDType_MAX                                    = 3

};

// Enum  GPGameplay.EInteractorPanelLayout
enum class EInteractorPanelLayout : uint8_t
{
    InteractorPanelLayout_NULL                     = 0,
    InteractorPanelLayout_Default                  = 1,
    InteractorPanelLayout_Pickup                   = 2,
    InteractorPanelLayout_Container                = 3,
    InteractorPanelLayout_DeadBody                 = 4,
    InteractorPanelLayout_Door                     = 5,
    InteractorPanelLayout_Rescue                   = 6,
    InteractorPanelLayout_Vehicle                  = 7,
    InteractorPanelLayout_CarryBody                = 8,
    InteractorPanelLayout_SingleItemContainer      = 9,
    InteractorPanelLayout_PickupContainer          = 10,
    InteractorPanelLayout_MAX                      = 11

};

// Enum  GPGameplay.EKnockbackFromType
enum class EKnockbackFromType : uint8_t
{
    None                                           = 0,
    TigerCrouch                                    = 1,
    RankSkill_GuidMissle                           = 2,
    BlastShieldAttack                              = 3,
    EKnockbackFromType_MAX                         = 4

};

// Enum  GPGameplay.EKnockBackState
enum class EKnockBackState : uint8_t
{
    KnockBackState_Undefine                        = 0,
    KnockBackState_Fly                             = 1,
    KnockBackState_Fall                            = 2,
    KnockBackState_GetUp                           = 3,
    KnockBackState_MAX                             = 4

};

// Enum  GPGameplay.EGPMarkerColorType
enum class EGPMarkerColorType : uint8_t
{
    None                                           = 0,
    LocationMarkerEnemyColor                       = 1,
    EGPMarkerColorType_MAX                         = 2

};

// Enum  GPGameplay.EMarkingReceiver
enum class EMarkingReceiver : uint8_t
{
    None                                           = 0,
    SelfMarkingReceiver                            = 1,
    TeamMarkingReceiver                            = 2,
    CampMarkingReceiver                            = 3,
    TeamLeaderMarkingReceiver                      = 4,
    CommanderMarkingReceiver                       = 5,
    EMarkingReceiver_MAX                           = 6

};

// Enum  GPGameplay.ELowAmmoBubbleSourceType
enum class ELowAmmoBubbleSourceType : uint8_t
{
    None                                           = 0,
    AmmoPack                                       = 1,
    ELowAmmoBubbleSourceType_MAX                   = 2

};

// Enum  GPGameplay.ELowHealthBubbleSourceType
enum class ELowHealthBubbleSourceType : uint8_t
{
    None                                           = 0,
    HealthPack                                     = 1,
    ELowHealthBubbleSourceType_MAX                 = 2

};

// Enum  GPGameplay.EAutoShowBubbleSourceType
enum class EAutoShowBubbleSourceType : uint8_t
{
    None                                           = 0,
    SupportPack                                    = 1,
    SupportBox                                     = 2,
    MedicalGun                                     = 3,
    EAutoShowBubbleSourceType_MAX                  = 4

};

// Enum  GPGameplay.EMarkingChatType
enum class EMarkingChatType : uint8_t
{
    Default                                        = 0,
    Location_Normal                                = 1,
    Location_Enemy                                 = 2,
    Location_Attack                                = 3,
    Location_Defend                                = 4,
    Location_BeCareful                             = 5,
    Item_CommonItem                                = 6,
    Item_LootingItem                               = 7,
    Item_Container                                 = 8,
    Item_DyingTeammate                             = 9,
    Item_DeadBody                                  = 10,
    Item_Weapon                                    = 11,
    Item_EngineerSonicTrap                         = 12,
    Item_Vehicle                                   = 13,
    Item_TacticalEquip                             = 14,
    Item_PendingDeathCharacter                     = 15,
    Item_SectorAnchor                              = 16,
    Item_MandelBrickInteractor                     = 17,
    Item_MandelBrickDecipherDevice                 = 18,
    CancelMarking                                  = 19,
    ReplyRescue                                    = 20,
    Evacuation                                     = 21,
    SafeBox                                        = 22,
    MandelBrick                                    = 23,
    DecipherStation                                = 24,
    CallForHelp                                    = 25,
    COUNT                                          = 26,
    EMarkingChatType_MAX                           = 27

};

// Enum  GPGameplay.EMarkingItemType
enum class EMarkingItemType : uint8_t
{
    None                                           = 0,
    CommonItem                                     = 1,
    LootingItem                                    = 2,
    Container                                      = 3,
    DyingTeammate                                  = 4,
    DeadBody                                       = 5,
    Weapon                                         = 6,
    EngineerSonicTrap                              = 7,
    Vehicle                                        = 8,
    TacticalEquip                                  = 9,
    PendingDeathCharacter                          = 10,
    SectorAnchor                                   = 11,
    MandelBrickInteractor                          = 12,
    MandelBrickDecipherDevice                      = 13,
    COUNT                                          = 14,
    EMarkingItemType_MAX                           = 15

};

// Enum  GPGameplay.EMarkingLocationType
enum class EMarkingLocationType : uint8_t
{
    None                                           = 0,
    NormalLocation                                 = 1,
    Enemy                                          = 2,
    Attack                                         = 3,
    Defend                                         = 4,
    BeCareful                                      = 5,
    COUNT                                          = 6,
    EMarkingLocationType_MAX                       = 7

};

// Enum  GPGameplay.EGameMarkFeature
enum class EGameMarkFeature : uint8_t
{
    UpdateDistance                                 = 1,
    UpdateHasCoverBetween                          = 2,
    UpdateHasAimed                                 = 4,
    UpdateHasAimedByCircle                         = 8,
    UpdateScaleWithDistance                        = 16,
    EGameMarkFeature_MAX                           = 17

};

// Enum  GPGameplay.ETacticalMarkingType
enum class ETacticalMarkingType : uint8_t
{
    None                                           = 0,
    TacticalMarking_Attack                         = 1,
    TacticalMarking_Defense                        = 2,
    TacticalMarking_GoAheadThere                   = 3,
    TacticalMarking_VehicleGoAheadThere            = 4,
    TacticalMarking_AttentionEnemy                 = 5,
    TacticalMarking_AttentionVehicle               = 6,
    TacticalMarking_RequestHelp                    = 7,
    TacticalMarking_RequestRebornFlag              = 8,
    TacticalMarking_RequestAttention               = 9,
    TacticalMarking_RequestAttack                  = 10,
    ETacticalMarkingType_MAX                       = 11

};

// Enum  GPGameplay.EInteractorMarkerType
enum class EInteractorMarkerType : uint8_t
{
    None                                           = 0,
    Interactor_SceneAmmoBox                        = 1,
    Interactor_Fortification                       = 2,
    Interactor_AutoFortification_FixedWeaponAAMarker = 3,
    Interactor_AutoFortification_FixedWeaponMachineGunMarker = 4,
    Interactor_AutoFortification_FixedWeaponShoreMarker = 5,
    Interactor_EggPortalDoor                       = 6,
    Interactor_RecoveryMarker                      = 7,
    Interactor_AirVehicleRecoveryMarker            = 8,
    Interactor_EggGoldBirdNest                     = 9,
    EInteractorMarkerType_MAX                      = 10

};

// Enum  GPGameplay.EMarkingMarkerType
enum class EMarkingMarkerType : uint8_t
{
    None                                           = 0,
    PlayerMarker_Location                          = 1,
    PlayerMarker_Item                              = 2,
    EMarkingMarkerType_MAX                         = 3

};

// Enum  GPGameplay.EMapMarkerType
enum class EMapMarkerType : uint8_t
{
    None                                           = 0,
    MapMarkerNormal                                = 1,
    Chat_Normal                                    = 2,
    Chat_Item                                      = 3,
    MapMarkerPlayerExit                            = 4,
    MapMarkerPlayerExitTrigger                     = 5,
    MapMarkerDoor                                  = 6,
    MapMarkerQuest                                 = 7,
    MapMarkerPOI                                   = 8,
    MapMarkerShopStation                           = 9,
    MapMarkerHighValueBox                          = 10,
    MapMarkerContractQuest                         = 11,
    MapMarkerContractObjection                     = 12,
    MapMarkerWeaponBlueprintStation                = 13,
    MapMarkerSectorAnchor                          = 14,
    MapMarkerScouter                               = 15,
    MapMarkerIronGauze                             = 16,
    CommanderMarking                               = 17,
    EMapMarkerType_MAX                             = 18

};

// Enum  GPGameplay.EQuestMarkerMarkerType
enum class EQuestMarkerMarkerType : uint8_t
{
    None                                           = 0,
    Arrive                                         = 1,
    Destroy                                        = 2,
    Protect                                        = 3,
    ProtectWithHP                                  = 4,
    Arrive_Optional                                = 5,
    Destroy_Optional                               = 6,
    Protect_Optional                               = 7,
    ProtectWithHP_Optional                         = 8,
    NPCTalk                                        = 9,
    TargetTrack                                    = 10,
    NPCTrigger                                     = 11,
    RPGTrack                                       = 12,
    Vehicle                                        = 13,
    Hostage                                        = 14,
    MarkerNarrow                                   = 15,
    AmmoBox                                        = 16,
    EliteAI                                        = 17,
    InteractiveReading                             = 18,
    InteractGame                                   = 19,
    Raid_ValkyrieVehicle                           = 20,
    NPCTeamMate                                    = 21,
    SOLContractKill                                = 22,
    SOLContractArrive                              = 23,
    SOLContractInteract                            = 24,
    SOLContractManning                             = 25,
    SOLMissionKill                                 = 26,
    SOLMissionArrive                               = 27,
    SOLMissionInteract                             = 28,
    EQuestMarkerMarkerType_MAX                     = 29

};

// Enum  GPGameplay.ESOLGameModeMarkerType
enum class ESOLGameModeMarkerType : uint8_t
{
    None                                           = 0,
    DoorMarker                                     = 1,
    CountDownReleaseMarker                         = 2,
    C4BombMarker                                   = 3,
    JailBreakDeadBodyMarker                        = 4,
    ESOLGameModeMarkerType_MAX                     = 5

};

// Enum  GPGameplay.EBattleFieldGameModeMarkerType
enum class EBattleFieldGameModeMarkerType : uint8_t
{
    None                                           = 0,
    SectorAnchorMarker                             = 1,
    TransferMarker                                 = 2,
    SupportSkillMarker                             = 3,
    BattleFieldCampSectorMarker                    = 4,
    CaptureFlagAnchorMarker                        = 5,
    CaptureFlagMarker                              = 6,
    EBattleFieldGameModeMarkerType_MAX             = 7

};

// Enum  GPGameplay.ETacticalEquipmentMarkerType
enum class ETacticalEquipmentMarkerType : uint8_t
{
    None                                           = 0,
    CommonTacticalEquipmentMarker                  = 1,
    RebornFlagMarker                               = 2,
    VehicleRebornFlagMarker                        = 3,
    AmmoBoxMarker                                  = 4,
    SonicTrapMarker                                = 5,
    GunnerRobotMarker                              = 6,
    HealBoxMarker                                  = 7,
    ADSMarker                                      = 8,
    RecoveryMarker                                 = 9,
    DeadBodyAmmoBoxMarker                          = 10,
    ThrowBlocking                                  = 11,
    SceneAmmoBoxMarker                             = 12,
    SentryHive                                     = 13,
    IntelligentSmoke                               = 14,
    StingMissleMarker                              = 15,
    SupportWeaponMarker                            = 16,
    LaserPointerMarker                             = 17,
    LaserPointerReciverMarker                      = 18,
    Detector                                       = 19,
    RankSkillRebornFlagMarker                      = 20,
    SupportPackTargetMarker                        = 21,
    AutiTankMine                                   = 22,
    ClaymoreMine                                   = 23,
    BarbedWire                                     = 24,
    RopeRoot                                       = 25,
    BionicBirdMarker                               = 26,
    WireGuidedMarker                               = 27,
    ETacticalEquipmentMarkerType_MAX               = 28

};

// Enum  GPGameplay.EVehicleMarkerType
enum class EVehicleMarkerType : uint8_t
{
    None                                           = 0,
    CommonVehicleMarker                            = 1,
    OBCommonVehicleMarker                          = 2,
    EVehicleMarkerType_MAX                         = 3

};

// Enum  GPGameplay.ESceneWeaponMarkerType
enum class ESceneWeaponMarkerType : uint8_t
{
    None                                           = 0,
    CommonSceneWeaponMarker                        = 1,
    FixedWeaponAAMarker                            = 2,
    FixedWeaponMachineGunMarker                    = 3,
    FixedWeaponShoreMarker                         = 4,
    AutoFortification_FixedWeaponAAMarker          = 5,
    AutoFortification_FixedWeaponMachineGunMarker  = 6,
    AutoFortification_FixedWeaponShoreMarker       = 7,
    ESceneWeaponMarkerType_MAX                     = 8

};

// Enum  GPGameplay.EEnemyCharacterMarkerType
enum class EEnemyCharacterMarkerType : uint8_t
{
    None                                           = 0,
    RevealMarker                                   = 1,
    AIBaseMarker                                   = 2,
    AIWarnMarker                                   = 3,
    AimedEnemyPlayerMarker                         = 4,
    AimedAIMarker                                  = 5,
    EnemyEffectMarker                              = 6,
    FocusedEnemyMarker                             = 7,
    KillCamSelfMarker                              = 8,
    KnifeDroneLockEnemyMarker                      = 9,
    EEnemyCharacterMarkerType_MAX                  = 10

};

// Enum  GPGameplay.EFriendlyCharacterMarkerType
enum class EFriendlyCharacterMarkerType : uint8_t
{
    None                                           = 0,
    FriendlyMarker                                 = 1,
    ImpendingDeathMarker                           = 2,
    DeathMarker                                    = 3,
    OBFriendlyMarker                               = 4,
    OBImpendingDeathMarker                         = 5,
    OBDeathMarker                                  = 6,
    BattleFieldOBFriendlyMarker                    = 7,
    BattleFieldOBImpendingDeathMarker              = 8,
    BattleFieldOBDeathMarker                       = 9,
    OBAIMarker                                     = 10,
    EFriendlyCharacterMarkerType_MAX               = 11

};

// Enum  GPGameplay.EGPMarkerType
enum class EGPMarkerType : uint32_t
{
    None                                           = 0,
    FriendlyMarker                                 = 1,
    ImpendingDeathMarker                           = 2,
    DeathMarker                                    = 3,
    OBFriendlyMarker                               = 4,
    OBImpendingDeathMarker                         = 5,
    OBDeathMarker                                  = 6,
    BattleFieldOBFriendlyMarker                    = 7,
    BattleFieldOBImpendingDeathMarker              = 8,
    BattleFieldOBDeathMarker                       = 9,
    OBAIMarker                                     = 10,
    RevealMarker                                   = 257,
    AIBaseMarker                                   = 258,
    AIWarnMarker                                   = 259,
    AimedEnemyPlayerMarker                         = 260,
    AimedAIMarker                                  = 261,
    EnemyEffectMarker                              = 262,
    FocusedEnemyMarker                             = 263,
    KillCamSelfMarker                              = 264,
    KnifeDroneLockEnemyMarker                      = 265,
    CommonSceneWeaponMarker                        = 513,
    FixedWeaponAAMarker                            = 514,
    FixedWeaponMachineGunMarker                    = 515,
    FixedWeaponShoreMarker                         = 516,
    CommonVehicleMarker                            = 769,
    OBCommonVehicleMarker                          = 770,
    CommonTacticalEquipmentMarker                  = 1025,
    RebornFlagMarker                               = 1026,
    VehicleRebornFlagMarker                        = 1027,
    AmmoBoxMarker                                  = 1028,
    SonicTrapMarker                                = 1029,
    GunnerRobotMarker                              = 1030,
    HealBoxMarker                                  = 1031,
    ADSMarker                                      = 1032,
    RecoveryMarker                                 = 1033,
    DeadBodyAmmoBoxMarker                          = 1034,
    ThrowBlocking                                  = 1035,
    SceneAmmoBoxMarker                             = 1036,
    StingMissleMarker                              = 1037,
    SupportWeaponMarker                            = 1038,
    LaserPointerMarker                             = 1039,
    LaserPointerReciverMarker                      = 1040,
    Detector                                       = 1041,
    RankSkillRebornFlagMarker                      = 1042,
    SupportPackTargetMarker                        = 1043,
    AutiTankMine                                   = 1044,
    ClaymoreMine                                   = 1045,
    BarbedWire                                     = 1046,
    BionicBirdMarker                               = 1047,
    SectorAnchorMarker                             = 1281,
    TransferMarker                                 = 1282,
    SupportSkillMarker                             = 1283,
    BattleFieldCampSectorMarker                    = 1284,
    CaptureFlagAnchorMarker                        = 1285,
    CaptureFlagMarker                              = 1286,
    DoorMarker                                     = 1537,
    CountDownReleaseMarker                         = 1538,
    Arrive                                         = 1793,
    Destroy                                        = 1794,
    Protect                                        = 1795,
    ProtectWithHP                                  = 1796,
    Arrive_Optional                                = 1797,
    Destroy_Optional                               = 1798,
    Protect_Optional                               = 1799,
    ProtectWithHP_Optional                         = 1800,
    NPCTalk                                        = 1801,
    TargetTrack                                    = 1802,
    NPCTrigger                                     = 1803,
    RPGTrack                                       = 1804,
    Vehicle                                        = 1805,
    Hostage                                        = 1806,
    MarkerNarrow                                   = 1807,
    AmmoBox                                        = 1808,
    EliteAI                                        = 1809,
    InteractiveReading                             = 1810,
    InteractGame                                   = 1811,
    Raid_ValkyrieVehicle                           = 1812,
    NPCTeamMate                                    = 1813,
    SOLContractKill                                = 1814,
    SOLContractArrive                              = 1815,
    SOLContractInteract                            = 1816,
    SOLContractManning                             = 1817,
    SOLMissionKill                                 = 1818,
    SOLMissionArrive                               = 1819,
    SOLMissionInteract                             = 1820,
    MapMarkerNormal                                = 2049,
    Chat_Normal                                    = 2050,
    Chat_Item                                      = 2051,
    MapMarkerPlayerExit                            = 2052,
    MapMarkerPlayerExitTrigger                     = 2053,
    MapMarkerDoor                                  = 2054,
    MapMarkerQuest                                 = 2055,
    MapMarkerPOI                                   = 2056,
    MapMarkerShopStation                           = 2057,
    MapMarkerHighValueBox                          = 2058,
    MapMarkerContractQuest                         = 2059,
    MapMarkerContractObjection                     = 2060,
    MapMarkerWeaponBlueprintStation                = 2061,
    MapMarkerSectorAnchor                          = 2062,
    MapMarkerScouter                               = 2063,
    MapMarkerIronGauze                             = 2064,
    CommanderMarking                               = 2065,
    PlayerMarker_Location                          = 2305,
    PlayerMarker_Item                              = 2306,
    Interactor_SceneAmmoBox                        = 2561,
    Interactor_Fortification                       = 2562,
    TacticalMarking_Attack                         = 2817,
    TacticalMarking_Defense                        = 2818,
    TacticalMarking_GoAheadThere                   = 2819,
    TacticalMarking_VehicleGoAheadThere            = 2820,
    TacticalMarking_AttentionEnemy                 = 2821,
    TacticalMarking_AttentionVehicle               = 2822,
    TacticalMarking_RequestHelp                    = 2823,
    TacticalMarking_RequestRebornFlag              = 2824,
    TacticalMarking_RequestAttention               = 2825,
    TacticalMarking_RequestAttack                  = 2826,
    EGPMarkerType_MAX                              = 2827

};

// Enum  GPGameplay.EMarkerRefreshFrequencyLevel
enum class EMarkerRefreshFrequencyLevel : uint8_t
{
    EveryFrame                                     = 0,
    SuperHighFrequency                             = 1,
    HighFrequency                                  = 2,
    MidFrequency                                   = 3,
    LowFrequency                                   = 4,
    EMarkerRefreshFrequencyLevel_MAX               = 5

};

// Enum  GPGameplay.EGPMarkerViewStatus
enum class EGPMarkerViewStatus : uint8_t
{
    PendingCreate                                  = 0,
    Created                                        = 1,
    EGPMarkerViewStatus_MAX                        = 2

};

// Enum  GPGameplay.EGPMarkedActorStatus
enum class EGPMarkedActorStatus : uint8_t
{
    Normal                                         = 0,
    Clipped                                        = 1,
    Destroyed                                      = 2,
    EGPMarkedActorStatus_MAX                       = 3

};

// Enum  GPGameplay.EMarkerUIWigetType
enum class EMarkerUIWigetType : uint8_t
{
    None                                           = 0,
    DistanceText                                   = 1,
    NameText                                       = 2,
    Bar                                            = 4,
    Icon                                           = 8,
    All                                            = 15,
    EMarkerUIWigetType_MAX                         = 16

};

// Enum  GPGameplay.ERevealMarkerReason
enum class ERevealMarkerReason : uint8_t
{
    None                                           = 0,
    Resident                                       = 1,
    AimReveal                                      = 2,
    FireReveal                                     = 3,
    MarkingReveal                                  = 4,
    LockReveal                                     = 5,
    ERevealMarkerReason_MAX                        = 6

};

// Enum  GPGameplay.ECharacterMarkerState
enum class ECharacterMarkerState : uint8_t
{
    None                                           = 0,
    Alive                                          = 1,
    PendingDeath                                   = 2,
    FirstDeath                                     = 3,
    Death                                          = 4,
    ECharacterMarkerState_MAX                      = 5

};

// Enum  GPGameplay.EQuickChatMarkingItemType
enum class EQuickChatMarkingItemType : uint8_t
{
    None                                           = 0,
    ThankYou                                       = 1,
    NeedMedic                                      = 2,
    NeedRepair                                     = 3,
    NeedMunitions                                  = 4,
    NeedVehicle                                    = 5,
    EQuickChatMarkingItemType_MAX                  = 6

};

// Enum  GPGameplay.MarkType
enum class MarkType : uint8_t
{
    CHARACTER                                      = 0,
    MarkType_MAX                                   = 1

};

// Enum  GPGameplay.ENetworkNotifyPriority
enum class ENetworkNotifyPriority : uint8_t
{
    NetworkIdentityNotifyPriority_NoUse            = 0,
    NetworkIdentityNotifyPriority_Default          = 101,
    NetworkIdentityNotifyPriority_Blackboard       = 50,
    NetworkIdentityNotifyPriority_ActorRoot        = 100,
    NetworkIdentityNotifyPriority_First            = 110,
    NetworkIdentityNotifyPriority_Second           = 120,
    NetworkIdentityNotifyPriority_Third            = 130,
    NetworkIdentityNotifyPriority_Fourth           = 140,
    NetworkIdentityNotifyPriority_Fifth            = 150,
    NetworkIdentityNotifyPriority_Sixth            = 160,
    NetworkIdentityNotifyPriority_Seventh          = 170,
    NetworkIdentityNotifyPriority_Eighth           = 180,
    NetworkIdentityNotifyPriority_MAX              = 181

};

// Enum  GPGameplay.ENotifyTeammatesType
enum class ENotifyTeammatesType : uint8_t
{
    ENotify_None                                   = 0,
    ENotify_SkillReady                             = 1,
    ENotify_NumMax                                 = 2,
    ENotify_MAX                                    = 3

};

// Enum  GPGameplay.EOutLineScreenEffectStencil
enum class EOutLineScreenEffectStencil : uint8_t
{
    None                                           = 0,
    OutLineRed_3P                                  = 30,
    OutLineWhite                                   = 31,
    OutLineGreen                                   = 32,
    OutLineBlue                                    = 33,
    OutLineAI                                      = 34,
    OutLineRed_1P                                  = 35,
    OutLineLocking                                 = 36,
    OutLineLockComplete                            = 37,
    OutLineGreen_SupportEffect                     = 38,
    OutLineYellow_Low                              = 40,
    OutLineYellow_High                             = 41,
    OutLineGreen_OB                                = 42,
    OutLineRed_OB                                  = 43,
    OutLineOrange                                  = 44,
    EOutLineScreenEffectStencil_MAX                = 45

};

// Enum  GPGameplay.EAbilityItemOutLineType
enum class EAbilityItemOutLineType : uint8_t
{
    None                                           = 0,
    OnlyTeamate                                    = 1,
    AllCamp                                        = 2,
    EAbilityItemOutLineType_MAX                    = 3

};

// Enum  GPGameplay.EOutLineEffectType
enum class EOutLineEffectType : uint32_t
{
    OutLineType_None                               = 0,
    OutLineType_ProxSensor                         = 1,
    OutLineType_ArrowMark                          = 2,
    OutLineType_MedicGun                           = 4,
    OutLineType_MedicGunHit                        = 8,
    OutLineType_SupportEffect                      = 16,
    OutLineType_DyingLockEnemy                     = 32,
    OutLineType_Breakthrough_Defender              = 64,
    OutLineType_DyingShowTeammateCanRescueSelf     = 128,
    OutLineType_DyingShowCampMedicCanRescueSelf    = 256,
    OutLineType_Locking                            = 512,
    OutLineType_LockComplete                       = 1024,
    OutLineType_LockFire                           = 2048,
    OutLineType_OnlyMarker                         = 4096,
    OutLineType_SOL_OB_Teammate                    = 8192,
    OutLineType_SOL_OB_Enemy                       = 16384,
    OutLineType_SOL_OB_AI                          = 32768,
    OutLineType_SOL_OB_FreeCamera                  = 65536,
    OutLineType_Breakthrough_OB_Attacker           = 131072,
    OutLineType_OBorReplay                         = 262144,
    OutLineType_Replay_Self                        = 524288,
    OutLineType_Replay_Teammate                    = 1048576,
    OutLineType_Breakthrough_OB_Defender           = 2097152,
    OutLineType_SpiderSkill                        = 4194304,
    OutLineType_C103ButterPassiveSkill             = 8388608,
    OutLineType_MAX                                = 8388609

};

// Enum  GPGameplay.EPlayerParachutePhaseType
enum class EPlayerParachutePhaseType : uint8_t
{
    None                                           = 0,
    Parachute                                      = 1,
    Glide                                          = 2,
    EPlayerParachutePhaseType_MAX                  = 3

};

// Enum  GPGameplay.EParachutePhaseType
enum class EParachutePhaseType : uint8_t
{
    EParachutePhase_None                           = 0,
    EParachutePhase_Flying                         = 1,
    EParachutePhase_Landing                        = 2,
    EParachutePhase_MAX                            = 3

};

// Enum  GPGameplay.EPassiveMoveBodyType
enum class EPassiveMoveBodyType : uint8_t
{
    PassiveMoveBodyTypeStand                       = 0,
    PassiveMoveBodyTypeCrouch                      = 1,
    PassiveMoveBodyTypeProne                       = 2,
    EPassiveMoveBodyType_MAX                       = 3

};

// Enum  GPGameplay.EPassiveMoveLogicType
enum class EPassiveMoveLogicType : uint8_t
{
    PassiveMoveLogic_Default                       = 0,
    PassiveMoveLogic_Rope                          = 1,
    PassiveMoveLogic_MAX                           = 2

};

// Enum  GPGameplay.EPassiveMoveType
enum class EPassiveMoveType : uint8_t
{
    PassiveMove_None                               = 0,
    PassiveMove_Target                             = 1,
    PassiveMove_Path                               = 2,
    PassiveMove_MAX                                = 3

};

// Enum  GPGameplay.EGPPathFollowStatus
enum class EGPPathFollowStatus : uint8_t
{
    Init                                           = 0,
    Play                                           = 1,
    Pause                                          = 2,
    Stop                                           = 3,
    EGPPathFollowStatus_MAX                        = 4

};

// Enum  GPGameplay.ECameraModifier
enum class ECameraModifier : uint8_t
{
    ECM_Default                                    = 0,
    ECM_Reborn                                     = 1,
    ECM_Redeploy                                   = 2,
    ECM_GunSway                                    = 3,
    ECM_AssaultSpeedUp                             = 4,
    ECM_Fire                                       = 5,
    ECM_Bleeding                                   = 6,
    ECM_Sprint                                     = 7,
    ECM_CameraShake                                = 8,
    ECM_FPPFocusActor                              = 9,
    ECM_AssaultShock                               = 10,
    ECM_BeHit                                      = 11,
    ECM_WeaponRecoil                               = 12,
    ECM_InVehicle                                  = 13,
    ECM_ProneImpact                                = 14,
    ECM_FPPCameraOperate                           = 15,
    ECM_JoggleCamera                               = 16,
    ECM_ExplosionBeHit                             = 17,
    ECM_ViewRotateSpeedLimit                       = 18,
    ECM_AssaultSpeedUpMobile                       = 19,
    ECM_AISpecialHit                               = 20,
    ECM_FOVEffect                                  = 21,
    ECM_MAX                                        = 22

};

// Enum  GPGameplay.EDefaultFOVRenderReason
enum class EDefaultFOVRenderReason : uint8_t
{
    EDFRR_Default                                  = 0,
    EDFRR_MachiGun                                 = 1,
    EDFRR_DriveCar                                 = 2,
    EDFRR_ClimbLadder                              = 3,
    EDFRR_Telescope                                = 4,
    EDFRR_StarApp                                  = 5,
    EDFRR_GetRopeDown                              = 6,
    EDFRR_Parachute                                = 7,
    EDFRR_Interact                                 = 8,
    EDFRR_CrocodileBite                            = 9,
    EDFRR_Max                                      = 10

};

// Enum  GPGameplay.EPOVModifyOption
enum class EPOVModifyOption : uint8_t
{
    DoNotModify                                    = 0,
    DefaultValue                                   = 1,
    SetValue                                       = 2,
    EPOVModifyOption_MAX                           = 3

};

// Enum  GPGameplay.ECameraRotationType
enum class ECameraRotationType : uint8_t
{
    CameraRot_Final                                = 0,
    CameraRot_WeaponTrace                          = 1,
    CameraRot_MAX                                  = 2

};

// Enum  GPGameplay.EFovAdjustMode
enum class EFovAdjustMode : uint8_t
{
    FovMode_FixY                                   = 0,
    FovMode_FixX                                   = 1,
    FovMode_FixShortSide                           = 2,
    FovMode_FixLongSide                            = 3,
    FovMode_MAX                                    = 4

};

// Enum  GPGameplay.ECameraSmoothDirection
enum class ECameraSmoothDirection : uint8_t
{
    CameraSmoothDirection_None                     = 0,
    CameraSmoothDirection_OnlyZ                    = 1,
    CameraSmoothDirection_Full                     = 2,
    CameraSmoothDirection_MAX                      = 3

};

// Enum  GPGameplay.ECameraSmoothType
enum class ECameraSmoothType : uint8_t
{
    CameraSmoothType_None                          = 0,
    CameraSmoothType_Crouch                        = 1,
    CameraSmoothType_Prone                         = 2,
    CameraSmoothType_QuickCrouch                   = 3,
    CameraSmoothType_Parachute                     = 4,
    CameraSmoothType_Climb                         = 5,
    CameraSmoothType_MAX                           = 6

};

// Enum  GPGameplay.EGPMGameSceneType
enum class EGPMGameSceneType : uint8_t
{
    None                                           = 0,
    FireShoot                                      = 1,
    KillPlayer                                     = 2,
    GetHighValueItem                               = 3,
    KillBoss                                       = 4,
    SOLSettlement                                  = 5,
    MPVictory                                      = 6,
    EGPMGameSceneType_MAX                          = 7

};

// Enum  GPGameplay.EPlayerMarkerScreenPosType
enum class EPlayerMarkerScreenPosType : uint8_t
{
    OnAim                                          = 0,
    Inner                                          = 1,
    Middle                                         = 2,
    Outer                                          = 3,
    EPlayerMarkerScreenPosType_MAX                 = 4

};

// Enum  GPGameplay.EPlayerPVSConnectionVisibleReason
enum class EPlayerPVSConnectionVisibleReason : uint8_t
{
    None                                           = 0,
    EPlayerPVSConnectionVisible_OutlineEffect      = 1,
    EPlayerPVSConnectionVisible_Tracing            = 2,
    EPlayerPVSConnectionVisibleReason_MAX          = 3

};

// Enum  GPGameplay.EBattleFieldForcesType
enum class EBattleFieldForcesType : uint8_t
{
    None                                           = 0,
    Forces_Haavk                                   = 1,
    Forces_GTI                                     = 2,
    EBattleFieldForcesType_MAX                     = 3

};

// Enum  GPGameplay.EPlayerState
enum class EPlayerState : uint8_t
{
    PlayerState_NONE                               = 0,
    PlayerState_Normal                             = 1,
    PlayerState_Airplane                           = 2,
    PlayerState_Air                                = 3,
    PlayerState_Drive                              = 4,
    PlayerState_Weak                               = 5,
    PlayerState_OffLine                            = 6,
    PlayerState_Dead                               = 7,
    PlayerState_Spectating                         = 8,
    PlayerState_MAX                                = 9

};

// Enum  GPGameplay.EPlayerGender
enum class EPlayerGender : uint8_t
{
    PlayerGender_None                              = 0,
    PlayerGender_Male                              = 1,
    PlayerGender_Female                            = 2,
    PlayerGender_Unknow                            = 3,
    PlayerGender_Hide                              = 4,
    PlayerGender_Max                               = 5

};

// Enum  GPGameplay.ECharacterQTEState4
enum class ECharacterQTEState4 : uint8_t
{
    QTEState_None                                  = 0,
    QTEState_FastMelee                             = 1,
    QTEState_Assassinate                           = 2,
    QTEState_MAX                                   = 3

};

// Enum  GPGameplay.EHitPartType
enum class EHitPartType : uint8_t
{
    Body                                           = 0,
    Head                                           = 1,
    LeftShoulder                                   = 2,
    RightShoulder                                  = 3,
    LeftLeg                                        = 4,
    RightLeg                                       = 5,
    EHitPartType_MAX                               = 6

};

// Enum  GPGameplay.ERagdollStopReason
enum class ERagdollStopReason : uint8_t
{
    ReplicateStop                                  = 0,
    ClearRagdoll                                   = 1,
    DropBodyCheck                                  = 2,
    TickCheck                                      = 3,
    MovableBase                                    = 4,
    FallbackOverTime                               = 5,
    BeginOverlap                                   = 6,
    CheckHipsVerticalDist                          = 7,
    HipsStable                                     = 8,
    ClientPreStop                                  = 9,
    OverTime                                       = 10,
    ClientRPC                                      = 11,
    ERagdollStopReason_MAX                         = 12

};

// Enum  GPGameplay.ERagdollAnimType
enum class ERagdollAnimType : uint8_t
{
    NormalDeath                                    = 0,
    DropBody                                       = 1,
    ToImpendingDeath                               = 2,
    VehicleKill                                    = 3,
    ERagdollAnimType_MAX                           = 4

};

// Enum  GPGameplay.ERagdollConstraintAnimType
enum class ERagdollConstraintAnimType : uint8_t
{
    Blend                                          = 0,
    Fixed                                          = 1,
    ERagdollConstraintAnimType_MAX                 = 2

};

// Enum  GPGameplay.EGPAIDeathWeaponType
enum class EGPAIDeathWeaponType : uint8_t
{
    None                                           = 0,
    Medium                                         = 1,
    Heavy                                          = 2,
    EGPAIDeathWeaponType_MAX                       = 3

};

// Enum  GPGameplay.EWeaponDeathType
enum class EWeaponDeathType : uint8_t
{
    None                                           = 0,
    Medium                                         = 1,
    Heavy                                          = 2,
    EWeaponDeathType_MAX                           = 3

};

// Enum  GPGameplay.ERushFromType
enum class ERushFromType : uint8_t
{
    Skill                                          = 0,
    BlastShield                                    = 1,
    ERushFromType_MAX                              = 2

};

// Enum  GPGameplay.ESHMoveMode
enum class ESHMoveMode : uint8_t
{
    Stand                                          = 0,
    Crouch                                         = 1,
    Prone                                          = 2,
    Sprint                                         = 3,
    SilentWalk                                     = 4,
    InAir                                          = 5,
    ESHMoveMode_MAX                                = 6

};

// Enum  GPGameplay.EFSHForbidReason
enum class EFSHForbidReason : uint8_t
{
    EFR_Default                                    = 0,
    EFR_Sprint                                     = 1,
    EFR_Jump                                       = 2,
    EFR_Prone                                      = 3,
    ForbidReasonMAX                                = 4,
    EFSHForbidReason_MAX                           = 5

};

// Enum  GPGameplay.ESHMovementState
enum class ESHMovementState : uint8_t
{
    None                                           = 0,
    Grounded                                       = 1,
    InAir                                          = 2,
    ESHMovementState_MAX                           = 3

};

// Enum  GPGameplay.ESHPlayerMoveMode
enum class ESHPlayerMoveMode : uint8_t
{
    None                                           = 0,
    StandStill                                     = 1,
    Walk                                           = 2,
    Run                                            = 3,
    Sprint                                         = 4,
    ESHPlayerMoveMode_MAX                          = 5

};

// Enum  GPGameplay.EGPHudDataType
enum class EGPHudDataType : uint8_t
{
    None                                           = 0,
    LocAndRot                                      = 1,
    TeamCharacterHealth                            = 2,
    VehicleInfo                                    = 3,
    SceneWeaponInfo                                = 4,
    EGPHudDataType_MAX                             = 5

};

// Enum  GPGameplay.EGPSceneActorType
enum class EGPSceneActorType : uint8_t
{
    SA_NONE                                        = 0,
    SA_Character                                   = 1,
    SA_Vehicle                                     = 2,
    SA_SceneWeapon                                 = 3,
    SA_MAX                                         = 4

};

// Enum  GPGameplay.EGPSceneActorStateType
enum class EGPSceneActorStateType : uint8_t
{
    E_BeginPlay                                    = 0,
    E_EndPlay                                      = 1,
    E_Relevancy                                    = 2,
    E_MAX                                          = 3

};

// Enum  GPGameplay.EGPHudDataUpdateFrequency
enum class EGPHudDataUpdateFrequency : uint8_t
{
    Freeze                                         = 0,
    LowFrequency                                   = 1,
    MidFrequency                                   = 2,
    HighFrequency                                  = 3,
    EGPHudDataUpdateFrequency_MAX                  = 4

};

// Enum  GPGameplay.ECustomPrimitiveDataFloatDefine
enum class ECustomPrimitiveDataFloatDefine : uint8_t
{
    CPD_BaseColorFator                             = 0,
    CPD_EmissiveFator                              = 1,
    CPD_DistanceOffset                             = 2,
    CPD_Blank3                                     = 3,
    CPD_MAX                                        = 4

};

// Enum  GPGameplay.ESkeletalMeshAnimUROActorType
enum class ESkeletalMeshAnimUROActorType : uint8_t
{
    Normal                                         = 0,
    Player                                         = 1,
    AI                                             = 2,
    Weapon                                         = 3,
    Equipment                                      = 4,
    Breakable                                      = 5,
    ESkeletalMeshAnimUROActorType_MAX              = 6

};

// Enum  GPGameplay.EDataFlowType
enum class EDataFlowType : uint8_t
{
    None                                           = 0,
    BeDamaged                                      = 1,
    BeHealed                                       = 2,
    BeKnocked                                      = 3,
    MoveState                                      = 4,
    BeBuffed                                       = 5,
    BeRemoveBuffed                                 = 6,
    BeDetect                                       = 7,
    Move                                           = 8,
    Sprint                                         = 9,
    Squat                                          = 10,
    Jump                                           = 11,
    EDataFlowType_MAX                              = 12

};

// Enum  GPGameplay.ESkillConflictResolveType
enum class ESkillConflictResolveType : uint8_t
{
    Accept                                         = 0,
    Refuse                                         = 1,
    Break                                          = 2,
    OnlyBreak                                      = 3,
    OnlyUsingBreak                                 = 4,
    ConflictMax                                    = 5,
    ESkillConflictResolveType_MAX                  = 6

};

// Enum  GPGameplay.EAbiltyTemplateAttachMeshMode
enum class EAbiltyTemplateAttachMeshMode : uint8_t
{
    ATTACH_ALL                                     = 0,
    ATTACH_FPP                                     = 1,
    ATTACH_TPP                                     = 2,
    ATTACH_MAX                                     = 3

};

// Enum  GPGameplay.EAbilitySpawnState
enum class EAbilitySpawnState : uint8_t
{
    Init                                           = 0,
    Request                                        = 1,
    Done                                           = 2,
    Removed                                        = 3,
    EAbilitySpawnState_MAX                         = 4

};

// Enum  GPGameplay.EAbilityTriggerType
enum class EAbilityTriggerType : uint8_t
{
    None                                           = 0,
    Then                                           = 1,
    Trigger                                        = 2,
    UnTrigger                                      = 3,
    CallEvent                                      = 4,
    Custom                                         = 5,
    EAbilityTriggerType_MAX                        = 6

};

// Enum  GPGameplay.ESkillExcuteState
enum class ESkillExcuteState : uint8_t
{
    EnterState                                     = 1,
    LeaveState                                     = 2,
    InvalidLeaveState                              = 4,
    ESkillExcuteState_MAX                          = 5

};

// Enum  GPGameplay.EAbilityEnterFlag
enum class EAbilityEnterFlag : uint8_t
{
    CanNotPlay                                     = 0,
    CanPlay                                        = 1,
    NotifyServerEnter                              = 2,
    EAbilityEnterFlag_MAX                          = 3

};

// Enum  GPGameplay.EAbilityStateFlag
enum class EAbilityStateFlag : uint8_t
{
    RepExcute                                      = 0,
    PredictExcute                                  = 1,
    PredictLocalExcute                             = 2,
    PredictLocalExcuteAll                          = 3,
    EAbilityStateFlag_MAX                          = 4

};

// Enum  GPGameplay.ENodeCantPlay
enum class ENodeCantPlay : uint8_t
{
    NoSkillState                                   = 0,
    CharacterDie                                   = 1,
    ENodeCantPlay_MAX                              = 2

};

// Enum  GPGameplay.EAbilityNodeExcuteType
enum class EAbilityNodeExcuteType : uint8_t
{
    Both                                           = 0,
    Server                                         = 1,
    Client                                         = 2,
    Client1P                                       = 3,
    Client3P                                       = 4,
    ServerAndClient1P                              = 5,
    BothCantPlay                                   = 6,
    EAbilityNodeExcuteType_MAX                     = 7

};

// Enum  GPGameplay.ECharacterSkillType
enum class ECharacterSkillType : uint8_t
{
    None                                           = 0,
    SkillType1                                     = 1,
    SkillType2                                     = 2,
    SkillType3                                     = 3,
    SkillType4                                     = 4,
    ECharacterSkillType_MAX                        = 5

};

// Enum  GPGameplay.ELoadResourceType
enum class ELoadResourceType : uint8_t
{
    NONE                                           = 0,
    Server                                         = 1,
    Client1P                                       = 2,
    Client3P                                       = 4,
    Server_Client1P                                = 3,
    Server_Client1P_Client3P                       = 7,
    ELoadResourceType_MAX                          = 8

};

// Enum  GPGameplay.EAbilitySpawnType
enum class EAbilitySpawnType : uint8_t
{
    NONE                                           = 0,
    Server                                         = 1,
    Client1P                                       = 2,
    Client3P                                       = 4,
    EAbilitySpawnType_MAX                          = 5

};

// Enum  GPGameplay.ESkillWeaponSwitchType
enum class ESkillWeaponSwitchType : uint8_t
{
    Default                                        = 0,
    Quiet                                          = 1,
    Instant                                        = 2,
    GetWeaponQuiet                                 = 3,
    PutWeaponQuiet                                 = 4,
    GetWeaponFast                                  = 5,
    PutWeaponFast                                  = 6,
    GetAndPutWeaponFast                            = 7,
    PutQuietAndGetWeaponFast                       = 8,
    ESkillWeaponSwitchType_MAX                     = 9

};

// Enum  GPGameplay.ESkillStateType
enum class ESkillStateType : uint8_t
{
    DoubleHandsSkill                               = 1,
    LeftHandSkill                                  = 2,
    RightHandSkill                                 = 3,
    LegsSkill                                      = 4,
    SpecialSkill                                   = 5,
    ActionSkill                                    = 6,
    CustomSkill                                    = 7,
    Custom2Skill                                   = 8,
    SkillState_MAX                                 = 9,
    ESkillStateType_MAX                            = 10

};

// Enum  GPGameplay.ESkillBehaviorPreFilterState
enum class ESkillBehaviorPreFilterState : uint8_t
{
    ESkillBehavior_Failed                          = 0,
    ESkillBehavior_FailedWithTips                  = 1,
    ESkillBehavior_Successed                       = 2,
    ESkillBehavior_MAX                             = 3

};

// Enum  GPGameplay.ESkillNumType
enum class ESkillNumType : uint8_t
{
    UT_Normal                                      = 0,
    UT_Item                                        = 1,
    UT_NoShow                                      = 2,
    UT_MAX                                         = 3

};

// Enum  GPGameplay.ESkillUsingType
enum class ESkillUsingType : uint8_t
{
    UT_Normal                                      = 0,
    UT_Normal_Charging                             = 1,
    UT_Select                                      = 2,
    UT_Rocking                                     = 3,
    UT_Disable_Charging                            = 4,
    UT_Activate                                    = 5,
    UT_Disable_UseCD                               = 6,
    UT_Disable_EMP                                 = 7,
    UT_Disable_NoCharging                          = 8,
    UT_Disable_NoTarget                            = 9,
    UT_MAX                                         = 10

};

// Enum  GPGameplay.ESkillItemUsingType
enum class ESkillItemUsingType : uint8_t
{
    UT_Normal                                      = 0,
    UT_Selected                                    = 1,
    UT_Activate                                    = 2,
    UT_Disable                                     = 3,
    UT_NormalUsing                                 = 4,
    UT_MAX                                         = 5

};

// Enum  GPGameplay.ESkillButtonState
enum class ESkillButtonState : uint8_t
{
    ESB_Normal                                     = 0,
    ESB_Cancel                                     = 1,
    ESB_Activate                                   = 2,
    ESB_Disable                                    = 3,
    ESB_Slot1                                      = 4,
    ESB_Slot2                                      = 5,
    ESB_Fire                                       = 6,
    ESB_MAX                                        = 7

};

// Enum  GPGameplay.ECharacterSkillAbilityMask
enum class ECharacterSkillAbilityMask : uint8_t
{
    None                                           = 0,
    CanMove                                        = 1,
    CanRotate                                      = 2,
    CanCharacterRotate                             = 3,
    CanCrouch                                      = 4,
    CanProne                                       = 5,
    CanJump                                        = 6,
    CanVault                                       = 7,
    CanReload                                      = 8,
    CanAimOn                                       = 9,
    CanUseItem                                     = 10,
    CanOperate                                     = 11,
    CanLooting                                     = 12,
    CanDetectInteractor                            = 13,
    CanDetectRescue                                = 14,
    CanUserChangeXPP                               = 15,
    CanDiscardOrEquipWeapon                        = 16,
    CanSwitchHelmetMask                            = 17,
    PauseSwitchHelmetMask                          = 18,
    CanFire                                        = 19,
    CanDrive                                       = 20,
    CanPlayTacticalAction                          = 21,
    CanClimbLadder                                 = 22,
    CanUseTelescope                                = 23,
    CanChangeWeaponMode                            = 24,
    CanShowInteractUI                              = 25,
    CanLean                                        = 26,
    CanBeHit                                       = 27,
    CanUseSkill                                    = 28,
    CanAssassinate                                 = 29,
    CanCarrybody                                   = 30,
    CanParachute                                   = 31,
    CanSlidingTackle                               = 32,
    CanUseZipline                                  = 33,
    CanAutoChangeClip                              = 34,
    CanWeaponInspect                               = 35,
    CanHighValueItemInspect                        = 36,
    CanWeaponBipodDeploy                           = 37,
    CanNotBlockFriend                              = 38,
    CanStandUp                                     = 39,
    CanProneMove                                   = 40,
    CanProneStandUp                                = 41,
    CanSkillSwtichWeapon                           = 42,
    CanWeaponBolt                                  = 43,
    CanZoom                                        = 44,
    CanSwitchWeapon                                = 45,
    CanPlayMarkingAnim                             = 46,
    CanFirefighting                                = 47,
    CanApplySpray                                  = 48,
    CanPlayOneHandedGesture                        = 49,
    CanPlayTwoHandedGesture                        = 50,
    CanSprint                                      = 51,
    CanBeBreakByOtherSkill                         = 52,
    All                                            = 53,
    ECharacterSkillAbilityMask_MAX                 = 54

};

// Enum  GPGameplay.EFlowDataType
enum class EFlowDataType : uint8_t
{
    None                                           = 0,
    Props                                          = 1,
    ActiveSKill                                    = 2,
    Passive                                        = 3,
    EFlowDataType_MAX                              = 4

};

// Enum  GPGameplay.ESkillLogicType
enum class ESkillLogicType : uint8_t
{
    None                                           = 0,
    Assault                                        = 1,
    Support                                        = 2,
    Scout                                          = 3,
    Engineer                                       = 4,
    Support101_SkillSmoke                          = 5,
    Support101_ItemSmoke                           = 6,
    Support101_Gun                                 = 7,
    Item                                           = 8,
    TestAbility                                    = 9,
    RecycleMine                                    = 10,
    ActivaMine                                     = 11,
    ESkillLogicType_MAX                            = 12

};

// Enum  GPGameplay.ESkillActorEvent
enum class ESkillActorEvent : uint8_t
{
    Idle                                           = 0,
    Fire                                           = 1,
    BeginEquipWeapon                               = 2,
    EndEquipWeapon                                 = 3,
    WeaponChanged                                  = 4,
    ESkillActorEvent_MAX                           = 5

};

// Enum  GPGameplay.ESkillDragMode
enum class ESkillDragMode : uint8_t
{
    None                                           = 0,
    ESkillDragMode_MAX                             = 1

};

// Enum  GPGameplay.ESkillKeyStatus
enum class ESkillKeyStatus : uint8_t
{
    SKILL_STATUS_UNKNOW                            = 0,
    SKILL_STATUS_READY                             = 1,
    SKILL_STATUS_PRECAST                           = 2,
    SKILL_STATUS_CASTING                           = 3,
    SKILL_STATUS_AFTERCAST                         = 4,
    SKILL_STATUS_FINISH                            = 5,
    SKILL_STATUS_COOLING                           = 6,
    SKILL_STATUS_CHARGING                          = 7,
    SKILL_STATUS_PREPARING                         = 8,
    SKILL_STATUS_MAX                               = 9

};

// Enum  GPGameplay.ESkillRecycleType
enum class ESkillRecycleType : uint8_t
{
    None                                           = 0,
    SuppressionMine                                = 1,
    AntiTankMine                                   = 2,
    ClaymoreMine                                   = 3,
    SentryHive                                     = 4,
    IntelligentSmoke                               = 5,
    ESkillRecycleType_MAX                          = 6

};

// Enum  GPGameplay.ESkillInterruptReason
enum class ESkillInterruptReason : uint8_t
{
    None                                           = 0,
    InWater                                        = 1,
    ESkillInterruptReason_MAX                      = 2

};

// Enum  GPGameplay.ESkillUIState
enum class ESkillUIState : uint8_t
{
    UIState_Undefine                               = 0,
    UIState_Ready                                  = 1,
    UIState_Using                                  = 2,
    UIState_CDing                                  = 3,
    UIState_Disable                                = 4,
    UIState_Forbit                                 = 5,
    UIState_StateDisable                           = 6,
    UIState_Score                                  = 7,
    UIState_CampNum                                = 8,
    UIState_UseNoReady                             = 9,
    UIState_TemplateNoReady                        = 10,
    UIState_OtherSkill                             = 11,
    UIState_Blocked                                = 12,
    UIState_SwitchWeapon                           = 13,
    UIState_ZoomWeapon                             = 14,
    UIState_NoSkill                                = 15,
    UIState_NoCharacter                            = 16,
    UIState_TakeDamgeBreak                         = 17,
    UIState_FireBreak                              = 18,
    UIState_TeamNum                                = 19,
    UIState_Sector                                 = 20,
    UIState_LieDownForbidSmoke                     = 21,
    UIState_UnderWater                             = 22,
    UIState_OnWater                                = 23,
    UIState_AirDropVehicle                         = 24,
    UIState_LimitUse                               = 25,
    UIState_NoTarget                               = 26,
    UIState_MAX                                    = 27

};

// Enum  GPGameplay.EThreatShapeType
enum class EThreatShapeType : uint8_t
{
    Sphere                                         = 0,
    Box                                            = 1,
    EThreatShapeType_MAX                           = 2

};

// Enum  GPGameplay.EThreatMarkerType
enum class EThreatMarkerType : uint8_t
{
    Origin                                         = 0,
    Screen                                         = 1,
    EThreatMarkerType_MAX                          = 2

};

// Enum  GPGameplay.EThreatCampType
enum class EThreatCampType : uint8_t
{
    Self                                           = 0,
    SameTeam                                       = 1,
    SameCamp                                       = 2,
    Enemy                                          = 3,
    EThreatCampType_MAX                            = 4

};

// Enum  GPGameplay.ESlideBreakType
enum class ESlideBreakType : uint8_t
{
    None                                           = 0,
    SlideBreak_Jump                                = 1,
    SlideBreak_Crouch                              = 2,
    ESlideBreakType_MAX                            = 3

};

// Enum  GPGameplay.ECharingSlotState
enum class ECharingSlotState : uint8_t
{
    Normal                                         = 0,
    Counting                                       = 1,
    Pause                                          = 2,
    Disable                                        = 3,
    ECharingSlotState_MAX                          = 4

};

// Enum  GPGameplay.ESoundVisualizationVerticalType
enum class ESoundVisualizationVerticalType : uint8_t
{
    Upper                                          = 0,
    Middle                                         = 1,
    Lower                                          = 2,
    ESoundVisualizationVerticalType_MAX            = 3

};

// Enum  GPGameplay.EMovementRelatedSpringArmState
enum class EMovementRelatedSpringArmState : uint8_t
{
    ESpringArmState_None                           = 0,
    ESpringArmState_Default                        = 1,
    ESpringArmState_Crouch                         = 2,
    ESpringArmState_Prone                          = 3,
    ESpringArmState_Swim                           = 4,
    ESpringArmState_Vault                          = 5,
    ESpringArmState_SlidingTackle                  = 6,
    ESpringArmState_Parachute                      = 7,
    ESpringArmState_FPP                            = 8,
    ESpringArmState_TPPToFPP                       = 9,
    ESpringArmState_BeCarryBySomeOne               = 10,
    ESpringArmState_LeftLeanPeek                   = 11,
    ESpringArmState_RightLeanPeek                  = 12,
    ESpringArmState_NPCTalk                        = 13,
    ESpringArmState_Error                          = 14,
    ESpringArmState_Emote                          = 15,
    ESpringArmState_MAX                            = 16

};

// Enum  GPGameplay.EVoiceOverTriggerType
enum class EVoiceOverTriggerType : uint8_t
{
    None                                           = 0,
    OverlapTrigger                                 = 1,
    InteractTrigger                                = 2,
    EVoiceOverTriggerType_MAX                      = 3

};

// Enum  GPGameplay.ETacticalActionType
enum class ETacticalActionType : uint8_t
{
    None                                           = 0,
    RESPECT                                        = 1,
    WINGCHUN                                       = 2,
    ROCKPAPERSCISSORS                              = 3,
    ETacticalActionType_MAX                        = 4

};

// Enum  GPGameplay.EVaultEndMoveType
enum class EVaultEndMoveType : uint8_t
{
    EVaultEndMove_Walking                          = 0,
    EVaultEndMove_Falling                          = 1,
    EVaultEndMove_MAX                              = 2

};

// Enum  GPGameplay.EVaultAnimType
enum class EVaultAnimType : uint8_t
{
    EVaultAnim_None                                = 0,
    EVA_StepOn                                     = 1,
    EVA_Vault                                      = 2,
    EVA_Climb                                      = 3,
    EVA_ClimbSwim                                  = 4,
    EVaultAnimType_MAX                             = 5

};

// Enum  GPGameplay.EObstacleHeightType
enum class EObstacleHeightType : uint8_t
{
    EObstacleHeight_None                           = 0,
    EObstacleHeight                                = 1,
    EObstacleHeight                                = 2,
    EObstacleHeight                                = 3,
    EObstacleHeight                                = 4,
    EObstacleHeight_Max                            = 5

};

// Enum  GPGameplay.EClimbVaultFailedReason
enum class EClimbVaultFailedReason : uint8_t
{
    EChoice_None                                   = 0,
    TouchAngle                                     = 1,
    ObstacleHeight                                 = 2,
    ApexPoint                                      = 3,
    ObstacleAbruptSlope                            = 4,
    ObstacleWidth                                  = 5,
    CollideOverHead                                = 6,
    EClimbVaultFailedReason_MAX                    = 7

};

// Enum  GPGameplay.EClimbVaultChoice
enum class EClimbVaultChoice : uint8_t
{
    EChoice_None                                   = 0,
    EChoice_Climb                                  = 1,
    EChoice_Vault                                  = 2,
    EChoice_MAX                                    = 3

};

// Enum  GPGameplay.EClimbLadderFixTransformType
enum class EClimbLadderFixTransformType : uint8_t
{
    EClimbLadderFix_DownStart                      = 0,
    EClimbLadderFix_DownEnd                        = 1,
    EClimbLadderFix_TopStart                       = 2,
    EClimbLadderFix_TopEnd                         = 3,
    EClimbLadderFix_Nearly                         = 4,
    EClimbLadderFix_MAX                            = 5

};

// Enum  GPGameplay.EClimbLadderCheckType
enum class EClimbLadderCheckType : uint8_t
{
    EClimbLadderCheck_None                         = 0,
    EClimbLadderCheck_DownEnter                    = 1,
    EClimbLadderCheck_DownExit                     = 2,
    EClimbLadderCheck_TopEnter                     = 3,
    EClimbLadderCheck_TopExit                      = 4,
    EClimbLadderCheck_JumpEnter                    = 5,
    EClimbLadderCheck_JumpExit                     = 6,
    EClimbLadderCheck_Cancel                       = 7,
    EClimbLadderCheck_MAX                          = 8

};

// Enum  GPGameplay.EVehicleSpawnMethod
enum class EVehicleSpawnMethod : uint8_t
{
    EVSM_None                                      = 0,
    EVSM_AirDrop                                   = 1,
    EVSM_Deployment                                = 2,
    EVSM_MAX                                       = 3

};

// Enum  GPGameplay.EVehicleExtraPartType
enum class EVehicleExtraPartType : uint8_t
{
    NONE                                           = 0,
    WEAPON                                         = 1,
    SKILL                                          = 2,
    SKIN                                           = 3,
    EVehicleExtraPartType_MAX                      = 4

};

// Enum  GPGameplay.EVehicleResetType
enum class EVehicleResetType : uint8_t
{
    NONE                                           = 0,
    STATUS                                         = 1,
    PHYSICS                                        = 2,
    AI                                             = 4,
    PASSENGERS                                     = 8,
    ALL                                            = 15,
    EVehicleResetType_MAX                          = 16

};

// Enum  GPGameplay.EAnimVehicleSeatType
enum class EAnimVehicleSeatType : uint8_t
{
    Sitting                                        = 0,
    Stand                                          = 1,
    EAnimVehicleSeatType_MAX                       = 2

};

// Enum  GPGameplay.EWeaponStage
enum class EWeaponStage : uint8_t
{
    Dormancy                                       = 0,
    DeActive                                       = 1,
    Active                                         = 2,
    EWeaponStage_MAX                               = 3

};

// Enum  GPGameplay.EWeaponInputOwner
enum class EWeaponInputOwner : uint8_t
{
    None                                           = 0,
    Left                                           = 1,
    Right                                          = 2,
    EWeaponInputOwner_MAX                          = 3

};

// Enum  GPGameplay.EZiplineHudStatus
enum class EZiplineHudStatus : uint8_t
{
    None                                           = 0,
    Hidden                                         = 1,
    DisplayGetOn                                   = 2,
    DisplayGetOff                                  = 3,
    EZiplineHudStatus_MAX                          = 4

};

// Enum  GPGameplay.EExplicitDisableReason
enum class EExplicitDisableReason : uint8_t
{
    CarrayBody                                     = 0,
    ClimbLadder                                    = 1,
    PassiveMove                                    = 2,
    ResuceAction                                   = 3,
    ResucePrecise                                  = 4,
    Vehicle                                        = 5,
    VehicleControl                                 = 6,
    Helicopter                                     = 7,
    RagDoll                                        = 8,
    Rope                                           = 9,
    Assassinate                                    = 10,
    Movement                                       = 11,
    Max                                            = 12

};

// Enum  GPGameplay.EIntCharacterSnap
enum class EIntCharacterSnap : uint8_t
{
    None                                           = 0,
    SnapToLatest                                   = 1,
    EIntCharacterSnap_MAX                          = 2

};

// Enum  GPGameplay.EScopeZoomType
enum class EScopeZoomType : uint8_t
{
    ScopeZoomTypeDefault                           = 0,
    ScopeZoomTypeSideAiming                        = 1,
    ScopeZoomTypeMax                               = 2,
    EScopeZoomType_MAX                             = 3

};

// Enum  GPGameplay.ELowRepPriorityActorType
enum class ELowRepPriorityActorType : uint8_t
{
    None                                           = 0,
    GameState                                      = 1,
    Camp0DataActor                                 = 2,
    Camp1DataActor                                 = 3,
    ELowRepPriorityActorType_MAX                   = 4

};

// Enum  GPGameplay.EMaterialSequencerPlayerPlayStatus
enum class EMaterialSequencerPlayerPlayStatus : uint8_t
{
    None                                           = 0,
    Playing                                        = 1,
    EMaterialSequencerPlayerPlayStatus_MAX         = 2

};

// Enum  GPGameplay.EMaterialSequencerNotifyType
enum class EMaterialSequencerNotifyType : uint8_t
{
    None                                           = 0,
    Name                                           = 1,
    EMaterialSequencerNotifyType_MAX               = 2

};

// Enum  GPGameplay.EMaterialSequenceParamsType
enum class EMaterialSequenceParamsType : uint8_t
{
    Float                                          = 0,
    LinearColor                                    = 1,
    Vector                                         = 2,
    EMaterialSequenceParamsType_MAX                = 3

};

// Enum  GPGameplay.EWeaponAdapterItemType
enum class EWeaponAdapterItemType : uint8_t
{
    NONE                                           = 0,
    Foregrip                                       = 1,
    Handguard                                      = 2,
    Receiver                                       = 3,
    PistolGrip                                     = 4,
    Stock                                          = 5,
    GunBarral                                      = 6,
    TacticalDevices                                = 7,
    EWeaponAdapterItemType_MAX                     = 8

};

// Enum  GPGameplay.EWeaponAdapterHandIKPoseType
enum class EWeaponAdapterHandIKPoseType : uint8_t
{
    NONE                                           = 0,
    FPP                                            = 1,
    TPP                                            = 2,
    FPPWithWidget                                  = 3,
    TPPWithWidget                                  = 4,
    FPPNear                                        = 5,
    FPPFar                                         = 6,
    FPPNearWithWidget                              = 7,
    FPPFarWithWidget                               = 8,
    FPP_R                                          = 9,
    TPP_R                                          = 10,
    EWeaponAdapterHandIKPoseType_MAX               = 11

};

// Enum  GPGameplay.EMagazineAnimType
enum class EMagazineAnimType : uint8_t
{
    Normal                                         = 0,
    Long                                           = 1,
    Drum                                           = 2,
    Special                                        = 3,
    EMagazineAnimType_MAX                          = 4

};

// Enum  GPGameplay.EMagazineType
enum class EMagazineType : uint8_t
{
    NONE                                           = 0,
    NormalMagazine                                 = 1,
    CLMagazine                                     = 2,
    EMagazineType_MAX                              = 3

};

// Enum  GPGameplay.ETextureType
enum class ETextureType : uint8_t
{
    NONE                                           = 0,
    BaseColorMap                                   = 1,
    MACMap                                         = 2,
    NRMap                                          = 3,
    ETextureType_MAX                               = 4

};

// Enum  GPGameplay.EWeaponPartAnimFunctionIKType
enum class EWeaponPartAnimFunctionIKType : uint8_t
{
    NONE                                           = 0,
    LeftIK                                         = 1,
    RightIK                                        = 2,
    EWeaponPartAnimFunctionIKType_MAX              = 3

};

// Enum  GPGameplay.EWeaponPartAnimFunctionType
enum class EWeaponPartAnimFunctionType : uint8_t
{
    NONE                                           = 0,
    IK_LeftHand                                    = 1,
    Anim_MagBulletChain                            = 2,
    Anim_BipodUpDown                               = 3,
    Anim_Overide                                   = 4,
    Anim_Sco                                       = 5,
    Anim_TransparentMag                            = 6,
    EWeaponPartAnimFunctionType_MAX                = 7

};

// Enum  GPGameplay.EWeaponPartFunctionType
enum class EWeaponPartFunctionType : uint8_t
{
    NONE                                           = 0,
    StaticAttributeModify                          = 2,
    StaticAttributeReplace                         = 3,
    StaticArrayAttributeModify                     = 4,
    EWeaponPartFunctionType_MAX                    = 5

};

// Enum  GPGameplay.EWeaponPartFunctionDynamicType
enum class EWeaponPartFunctionDynamicType : uint8_t
{
    NONE                                           = 0,
    AlwaysEffective                                = 1,
    TacticalEffective                              = 2,
    EWeaponPartFunctionDynamicType_MAX             = 3

};

// Enum  GPGameplay.EModularWeaponDescCompare
enum class EModularWeaponDescCompare : uint8_t
{
    None                                           = 0,
    Adapter                                        = 1,
    ExtraModel                                     = 2,
    Skin                                           = 4,
    Pendant                                        = 8,
    SolutionCompare                                = 1,
    AllCompare                                     = 15,
    EModularWeaponDescCompare_MAX                  = 16

};

// Enum  GPGameplay.EModularPartNodeFlagState
enum class EModularPartNodeFlagState : uint8_t
{
    Default                                        = 0,
    Simulate                                       = 1,
    RelationSimulate                               = 2,
    RelationVirutalSimulate                        = 4,
    EModularPartNodeFlagState_MAX                  = 5

};

// Enum  GPGameplay.EModularWeaponBuildStage
enum class EModularWeaponBuildStage : uint8_t
{
    None                                           = 0,
    WaitLoadDynamicPartsAsset                      = 1,
    DynamicPartsAssetLoading                       = 2,
    DynamicPartsAssetLoadFinished                  = 3,
    ModularBuild                                   = 4,
    EModularWeaponBuildStage_MAX                   = 5

};

// Enum  GPGameplay.EModularWeaponMergeStage
enum class EModularWeaponMergeStage : uint8_t
{
    None                                           = 0,
    WaitLoadAllPartsAsset                          = 1,
    AllPartsAssetLoading                           = 2,
    AllPartsAssetLoadFnished                       = 3,
    MeshMerge                                      = 4,
    EModularWeaponMergeStage_MAX                   = 5

};

// Enum  GPGameplay.EMysticalWeaponMaterialParamType
enum class EMysticalWeaponMaterialParamType : uint8_t
{
    None                                           = 0,
    Scalar                                         = 1,
    Vector                                         = 2,
    Color                                          = 3,
    Texture                                        = 4,
    EMysticalWeaponMaterialParamType_MAX           = 5

};

// Enum  GPGameplay.ETuneSliderType
enum class ETuneSliderType : uint8_t
{
    Continue                                       = 0,
    Discrete                                       = 1,
    ETuneSliderType_MAX                            = 2

};

// Enum  GPGameplay.ETuneMeshType
enum class ETuneMeshType : uint8_t
{
    None                                           = 0,
    Position                                       = 1,
    Rotation                                       = 2,
    ETuneMeshType_MAX                              = 3

};

// Enum  GPGameplay.EWeaponVoidPartsModelConditionType
enum class EWeaponVoidPartsModelConditionType : uint8_t
{
    None                                           = 0,
    Socket                                         = 1,
    AdapterType                                    = 2,
    ItemId                                         = 3,
    EWeaponVoidPartsModelConditionType_MAX         = 4

};

// Enum  GPGameplay.EWeaponPartMeshType
enum class EWeaponPartMeshType : uint8_t
{
    Mesh1p                                         = 0,
    Mesh3P                                         = 1,
    MeshUI                                         = 2,
    EWeaponPartMeshType_MAX                        = 3

};

// Enum  GPGameplay.FPartAddtionRuleType
enum class FPartAddtionRuleType : uint8_t
{
    None                                           = 0,
    Addtive                                        = 1,
    Replace                                        = 2,
    FPartAddtionRuleType_MAX                       = 3

};

// Enum  GPGameplay.EMaterialParameterType
enum class EMaterialParameterType : uint8_t
{
    Vector                                         = 0,
    Scalar                                         = 1,
    Texture                                        = 2,
    EMaterialParameterType_MAX                     = 3

};

// Enum  GPGameplay.EApperanceModifyType
enum class EApperanceModifyType : uint8_t
{
    None                                           = 0,
    AppendModel                                    = 1,
    EApperanceModifyType_MAX                       = 2

};

// Enum  GPGameplay.EWeaponExtraModelConditionType
enum class EWeaponExtraModelConditionType : uint8_t
{
    None                                           = 0,
    Socket                                         = 1,
    AdapterType                                    = 2,
    ItemId                                         = 3,
    EWeaponExtraModelConditionType_MAX             = 4

};

// Enum  GPGameplay.EWeaponExtraModelVisibility
enum class EWeaponExtraModelVisibility : uint8_t
{
    Visible                                        = 0,
    Hidden                                         = 1,
    EWeaponExtraModelVisibility_MAX                = 2

};

// Enum  GPGameplay.EFxFuntionType
enum class EFxFuntionType : uint8_t
{
    ReplaceMuzzleFlashFx                           = 0,
    ReplaceShellDropFx                             = 1,
    ReplaceMuzzleTrailFx                           = 2,
    ReplaceRealBulletTrailFx                       = 3,
    ReplaceVirtualBulletTrailFx                    = 4,
    ReplaceBulletTrailFx                           = 5,
    ReplaceHitFx                                   = 6,
    ReplaceMuzzleLightLevel                        = 7,
    AddMuzzleLightLevel                            = 8,
    EFxFuntionType_MAX                             = 9

};

// Enum  GPGameplay.EAssemblerAudioType
enum class EAssemblerAudioType : uint8_t
{
    None                                           = 0,
    Receiver                                       = 1,
    GunBarral                                      = 2,
    PistolGrip                                     = 3,
    Stock                                          = 4,
    Handguard                                      = 5,
    Sight                                          = 11,
    Magazine                                       = 12,
    Muzzle                                         = 13,
    Foregrip                                       = 14,
    Underbarrel                                    = 15,
    TacticalDevices                                = 16,
    Bipod                                          = 17,
    ForSight                                       = 18,
    RearSight                                      = 19,
    SightBase                                      = 21,
    Ammo                                           = 99,
    Pop_Gun                                        = 201,
    Select_Gun                                     = 202,
    EAssemblerAudioType_MAX                        = 203

};

// Enum  GPGameplay.ERule_Opt
enum class ERule_Opt : uint8_t
{
    And                                            = 0,
    Or                                             = 1,
    ERule_MAX                                      = 2

};

// Enum  GPGameplay.EAnimItemOverrideRuleType
enum class EAnimItemOverrideRuleType : uint8_t
{
    E_WeaponIDRule                                 = 0,
    E_PartIDRule                                   = 1,
    E_SkinRule                                     = 2,
    E_HasPartType                                  = 3,
    E_MAX                                          = 4

};

// Enum  GPGameplay.EForbidLeftHandIKType
enum class EForbidLeftHandIKType : uint8_t
{
    EOutReachDistance                              = 0,
    EHaveAdapterInSocket                           = 1,
    EAttachInSocket                                = 2,
    EForbidLeftHandIKType_MAX                      = 3

};

// Enum  GPGameplay.EAimDownSightsState
enum class EAimDownSightsState : uint8_t
{
    InVisible                                      = 0,
    Special_Pose                                   = 1,
    Constant                                       = 2,
    EAimDownSightsState_MAX                        = 3

};

// Enum  GPGameplay.EPartFunctionTag
enum class EPartFunctionTag : uint8_t
{
    NONE                                           = 0,
    SupportSideAiming                              = 1,
    All                                            = 255,
    EPartFunctionTag_MAX                           = 256

};

// Enum  GPGameplay.EAssemblerCameraType
enum class EAssemblerCameraType : uint8_t
{
    LOCK                                           = 0,
    ROTATE_ROOT                                    = 1,
    ROTATE_ARROUND                                 = 2,
    AUTO_ROTATE                                    = 3,
    EAssemblerCameraType_MAX                       = 4

};

// Enum  GPGameplay.EAssemblerCamPoint
enum class EAssemblerCamPoint : uint8_t
{
    POINT_DEFAULT                                  = 0,
    POINT_GUN_SELECTED                             = 1,
    POINT_GUN_DISPLAY                              = 2,
    POINT_MUZZLE                                   = 3,
    POINT_BARREL                                   = 4,
    POINT_HANDGUARD                                = 5,
    POINT_SIGHT                                    = 6,
    POINT_MAGAZINE                                 = 7,
    POINT_GRIP                                     = 8,
    POINT_STOCK                                    = 9,
    POINT_UP_RAIL                                  = 10,
    POINT_DOWN_RAIL                                = 11,
    POINT_LEFT_RAIL                                = 12,
    POINT_RIGHT_RAIL                               = 13,
    POINT_BIPOD                                    = 14,
    POINT_GUN_PRESET                               = 15,
    POINT_SPECIAL                                  = 16,
    POINT_CONNECTOR                                = 17,
    POINT_CHEEKPAD                                 = 18,
    POINT_PISTOLGRIP_PATCH                         = 19,
    POINT_SCO_SECONDARY                            = 20,
    POINT_HANU_POINT                               = 21,
    POINT_HAND_POINT                               = 22,
    POINT_HANL_POINT                               = 23,
    POINT_HANR_POINT                               = 24,
    POINT_BARBIP_POINT                             = 25,
    POINT_HANKIT_POINT                             = 26,
    POINT_STOKIT_POINT                             = 27,
    POINT_BARKIT_POINT                             = 28,
    POINT_SCOU_POINT                               = 29,
    POINT_RISER_POINT                              = 30,
    POINT_FOR_POINT                                = 31,
    POINT_COMMON_POINT                             = 32,
    POINT_GRIPBASS_POINT                           = 33,
    POINT_MAGBASS_POINT                            = 34,
    POINT_FLASHKILL_POINT                          = 35,
    POINT_HANDGUARDU_POINT                         = 36,
    POINT_GAS_POINT                                = 37,
    POINT_HAMMER_POINT                             = 38,
    POINT_TRIGGER_POINT                            = 39,
    POINT_HYDRASCO_POINT                           = 50,
    POINT_SHIELD_POINT                             = 51,
    POINT_BOLT_POINT                               = 52,
    POINT_GISG2_POINT                              = 53,
    POINT_HANDLE_POINT                             = 54,
    POINT_BOWSTRING_POINT                          = 55,
    POINT_BOWGRIP_POINT                            = 56,
    POINT_BOWLIMB_POINT                            = 57,
    POINT_BOWSCOPE_POINT                           = 58,
    POINT_ARROWREST_POINT                          = 59,
    POINT_STABILIZER_POINT                         = 60,
    POINT_BOWRELEASE_POINT                         = 61,
    POINT_LEVER_POINT                              = 62,
    POINT_SHWLLHOLDER_POINT                        = 63,
    POINT_PENDANT_POINT                            = 90,
    POINT_GUN_SOLUTION                             = 100,
    POINT_GUN_SOL_INSPECTOR                        = 200,
    POINT_GUN_DISPLAY_FEATURE1                     = 201,
    POINT_GUN_SKIN_DEFAULT                         = 202,
    POINT_GUN_FINETUNE                             = 203,
    POINT_GUN_UPGRADE                              = 204,
    NONE                                           = 205,
    EAssemblerCamPoint_MAX                         = 206

};

// Enum  GPGameplay.EPerkEffectAdditiveLogic
enum class EPerkEffectAdditiveLogic : uint8_t
{
    None                                           = 0,
    DurationAndCD                                  = 1,
    TriggerIcon                                    = 2,
    Max                                            = 3

};

// Enum  GPGameplay.EPerkEffectTriggerCond
enum class EPerkEffectTriggerCond : uint8_t
{
    None                                           = 0,
    LowHealth                                      = 1,
    Max                                            = 2

};

// Enum  GPGameplay.EPerkSharedEffectType
enum class EPerkSharedEffectType : uint8_t
{
    None                                           = 0,
    ZoyaSOL                                        = 1,
    ZoyaBreakThrough                               = 2,
    Max                                            = 3

};

// Enum  GPGameplay.EPerkSharedEffectSource
enum class EPerkSharedEffectSource : uint8_t
{
    None                                           = 0,
    Zoya                                           = 1,
    Max                                            = 2

};

// Enum  GPGameplay.EPerkSpecialEffectType
enum class EPerkSpecialEffectType : uint8_t
{
    None                                           = 0,
    StaminaNotLose                                 = 1,
    SuperDash                                      = 2,
    ExSkillCoolDownReduce                          = 3,
    ArmdedForceItem1SkillCoolDownReduce            = 4,
    ArmdedForceItem2SkillCoolDownReduce            = 5,
    AimingAdverseResistance                        = 6,
    CrouchOrSilentWalkSpeedUp                      = 7,
    CureBodyWhenRescueSucceed                      = 8,
    Max                                            = 9

};

// Enum  GPGameplay.EPerkEffectType
enum class EPerkEffectType : uint8_t
{
    AddBuff                                        = 0,
    AddSkill                                       = 1,
    TriggerSpecialEffect                           = 2,
    Max                                            = 3

};

// Enum  GPGameplay.EBuffEntityTriggerIconType
enum class EBuffEntityTriggerIconType : uint8_t
{
    None                                           = 0,
    EXSkillCooling                                 = 1,
    BattleFieldPropSkill1Cooling                   = 2,
    BattleFieldPropSkill2Cooling                   = 3,
    CrouchOrSilentWalk                             = 4,
    Max                                            = 5

};

// Enum  GPGameplay.EQuickAccessSideMenuActionType
enum class EQuickAccessSideMenuActionType : uint8_t
{
    Button                                         = 0,
    StringOneParamInput                            = 1,
    StringTwoParamInput                            = 2,
    StringThreeParamInput                          = 3,
    ConsoleVar                                     = 4,
    EQuickAccessSideMenuActionType_MAX             = 5

};

// Enum  GPGameplay.EScopeLocationType
enum class EScopeLocationType : uint8_t
{
    Undefined                                      = 0,
    Main                                           = 1,
    Top                                            = 2,
    Side                                           = 3,
    Sloping                                        = 4,
    EScopeLocationType_MAX                         = 5

};

// Enum  GPGameplay.EShadowTransferType
enum class EShadowTransferType : uint8_t
{
    FromLeft                                       = 0,
    FromRight                                      = 1,
    EShadowTransferType_MAX                        = 2

};

// Enum  GPGameplay.EScopeCompositeType
enum class EScopeCompositeType : uint8_t
{
    CompositeUpDown                                = 0,
    CompositeLeftRight                             = 1,
    CompositeFrontBack                             = 2,
    EScopeCompositeType_MAX                        = 3

};

// Enum  GPGameplay.ECrosshairType
enum class ECrosshairType : uint8_t
{
    Crosshair_None                                 = 0,
    Crosshair_Holo                                 = 1,
    Crosshair_RedDot                               = 2,
    Crosshair_MAX                                  = 3

};

// Enum  GPGameplay.ESoftState
enum class ESoftState : uint8_t
{
    Custom                                         = 0,
    EFiring                                        = 1,
    EReload                                        = 2,
    ESoftState_MAX                                 = 3

};

// Enum  GPGameplay.EAbilityEntitySysteType
enum class EAbilityEntitySysteType : uint8_t
{
    Ability                                        = 0,
    SysteTypeMax                                   = 1,
    EAbilityEntitySysteType_MAX                    = 2

};

// Enum  GPGameplay.ESupportType
enum class ESupportType : uint8_t
{
    HealthPack                                     = 0,
    ArmorPack                                      = 1,
    ESupportType_MAX                               = 2

};

// Enum  GPGameplay.ESwitchWeaponOperation
enum class ESwitchWeaponOperation : uint8_t
{
    OP_Start                                       = 0,
    OP_ActivatePending                             = 1,
    OP_Cancel                                      = 2,
    OP_MAX                                         = 3

};

// Enum  GPGameplay.EClassRepNodeMapping
enum class EClassRepNodeMapping : uint8_t
{
    NotRouted                                      = 0,
    RelevantAllConnections                         = 1,
    RelevantToTeam                                 = 2,
    RelevantToClientProxy                          = 3,
    RelevantToJailBreakDeadBody                    = 4,
    Spatialize_Static                              = 5,
    Spatialize_Dynamic                             = 6,
    Spatialize_Dormancy                            = 7,
    RelevantToEggGoldenNest                        = 8,
    EClassRepNodeMapping_MAX                       = 9

};

// Enum  GPGameplay.EVehiclePartType
enum class EVehiclePartType : uint8_t
{
    NONE                                           = 0,
    BODY                                           = 1,
    ENGINE_MAX                                     = 2,
    WEAPON                                         = 3,
    LEFT_TRACK                                     = 4,
    RIGHT_TRACK                                    = 5,
    ANTI_EXPLOSION_ARMOR                           = 6,
    VEHICLE_PART_TYPE_MAX                          = 7,
    EVehiclePartType_MAX                           = 8

};

// Enum  GPGameplay.EWeaponAdapterType
enum class EWeaponAdapterType : uint8_t
{
    Receiver                                       = 1,
    GunBarral                                      = 2,
    PistolGrip                                     = 3,
    Stock                                          = 4,
    Handguard                                      = 5,
    Sight                                          = 11,
    Magazine                                       = 12,
    Muzzle                                         = 13,
    Foregrip                                       = 14,
    Underbarrel                                    = 15,
    TacticalDevices                                = 16,
    Bipod                                          = 17,
    ForSight                                       = 18,
    RearSight                                      = 19,
    SightBase                                      = 21,
    Special                                        = 20,
    Silencer                                       = 200,
    EWeaponAdapterType_MAX                         = 201

};

// Enum  GPGameplay.EBurnningPotState
enum class EBurnningPotState : uint8_t
{
    StateIdle                                      = 0,
    StateFiring                                    = 1,
    StateCutting                                   = 2,
    StateDeactive                                  = 3,
    EBurnningPotState_MAX                          = 4

};

// Enum  GPGameplay.EWeaponAmmoLogicType
enum class EWeaponAmmoLogicType : uint8_t
{
    None                                           = 0,
    CommonAmmo                                     = 1,
    ItemAmmo                                       = 2,
    EWeaponAmmoLogicType_MAX                       = 3

};

// Enum  GPGameplay.EAddAmmoFailReason
enum class EAddAmmoFailReason : uint8_t
{
    None                                           = 0,
    NoProperWeapon                                 = 1,
    FullCarriedAmmo                                = 2,
    CanNotAddAmmo                                  = 3,
    NotSupportedAmmoType                           = 4,
    EAddAmmoFailReason_MAX                         = 5

};

// Enum  GPGameplay.ECharacterLeftArmAnimType
enum class ECharacterLeftArmAnimType : uint8_t
{
    None                                           = 0,
    Scene                                          = 1,
    Weapon                                         = 2,
    ECharacterLeftArmAnimType_MAX                  = 3

};

// Enum  GPGameplay.EWeaponAnimDirectItemType
enum class EWeaponAnimDirectItemType : uint8_t
{
    None                                           = 0,
    FPPMoveF                                       = 1,
    FPPMoveFR                                      = 2,
    FPPMoveFL                                      = 3,
    FPPMoveB                                       = 4,
    FPPMoveBR                                      = 5,
    FPPMoveBL                                      = 6,
    FPPMoveL                                       = 7,
    FPPMoveR                                       = 8,
    TPPMoveF                                       = 9,
    TPPMoveFR                                      = 10,
    TPPMoveFL                                      = 11,
    TPPMoveB                                       = 12,
    TPPMoveBR                                      = 13,
    TPPMoveBL                                      = 14,
    TPPMoveL                                       = 15,
    TPPMoveR                                       = 16,
    EWeaponAnimDirectItemType_MAX                  = 17

};

// Enum  GPGameplay.EWeaponAnimItemType
enum class EWeaponAnimItemType : uint8_t
{
    None                                           = 0,
    FPPDef                                         = 1,
    FPPStand                                       = 2,
    FPPCrouch                                      = 3,
    FPPProne                                       = 4,
    FPPFracture                                    = 5,
    FPPImpendingDeath                              = 6,
    FPPSwim                                        = 7,
    TPPDef                                         = 8,
    TPPStand                                       = 9,
    TPPCrouch                                      = 10,
    TPPProne                                       = 11,
    TPPFracture                                    = 12,
    TPPImpendingDeath                              = 13,
    TPPSwim                                        = 14,
    TPPUnderwaterSwim                              = 15,
    TPPUnderFPPStand                               = 16,
    TPPUnderFPPCrouch                              = 17,
    TPPUnderFPPProne                               = 18,
    TPPUnderFPPFracture                            = 19,
    TPPUnderFPPImpendingDeath                      = 20,
    TPPUnderFPPSwim                                = 21,
    TPPUnderFPPUnderwaterSwim                      = 22,
    EWeaponAnimItemType_MAX                        = 23

};

// Enum  GPGameplay.EWeaponAnimXPPType
enum class EWeaponAnimXPPType : uint8_t
{
    None                                           = 0,
    Both                                           = 1,
    FPP                                            = 2,
    TPPor3P                                        = 3,
    EWeaponAnimXPPType_MAX                         = 4

};

// Enum  GPGameplay.ERuntimeOverrideAnimDatType
enum class ERuntimeOverrideAnimDatType : uint8_t
{
    None                                           = 0,
    WeaponAnimBasePos                              = 1,
    WeaponAnimBS                                   = 2,
    WeaponAnimOperaction                           = 3,
    Max                                            = 4

};

// Enum  GPGameplay.EWeaponAnimDataTableType
enum class EWeaponAnimDataTableType : uint8_t
{
    None                                           = 0,
    WeaponAnimBasePos                              = 1,
    WeaponAnimOperaction                           = 2,
    SpecialWeaponAnim                              = 3,
    AiAnimPosTable                                 = 4,
    InWeaponAnimMax                                = 5,
    WeaponPartAnim                                 = 6,
    CharacterLeftArm                               = 7,
    HallCharacterAnim                              = 8,
    HallWeaponPartAnim                             = 9,
    Max                                            = 10

};

// Enum  GPGameplay.ERequestAnimType
enum class ERequestAnimType : uint8_t
{
    EWeaponAnim                                    = 0,
    EItemAnim                                      = 1,
    EBasicAnim                                     = 2,
    ERequestAnimType_MAX                           = 3

};

// Enum  GPGameplay.EGunSwayType
enum class EGunSwayType : uint8_t
{
    Common                                         = 0,
    Vehicle                                        = 1,
    EGunSwayType_MAX                               = 2

};

// Enum  GPGameplay.EWeaponEffectType
enum class EWeaponEffectType : uint8_t
{
    None                                           = 0,
    MuzzleFlash                                    = 1,
    ShellDrop                                      = 2,
    MuzzleTrail                                    = 3,
    BulletTrail                                    = 4,
    ModelFx                                        = 5,
    OverHeatTrail                                  = 6,
    EWeaponEffectType_MAX                          = 7

};

// Enum  GPGameplay.EWeaponDisplayMode
enum class EWeaponDisplayMode : uint8_t
{
    None                                           = 0,
    FirstPerson                                    = 1,
    ThirdPerson                                    = 2,
    ThirdPersonOther                               = 3,
    EWeaponDisplayMode_MAX                         = 4

};

// Enum  GPGameplay.EWeaponHiddenTag
enum class EWeaponHiddenTag : uint8_t
{
    OwnerHidden                                    = 0,
    CarringBody                                    = 1,
    PreciseOperate                                 = 2,
    Redeploy                                       = 3,
    Helicopter                                     = 4,
    Vehicle                                        = 5,
    VaultAndClimb                                  = 6,
    RescuePrecise                                  = 7,
    Assassinate                                    = 8,
    Ability                                        = 9,
    Parachute                                      = 10,
    Interactive                                    = 11,
    ExitCutScene                                   = 12,
    RaiseWatch                                     = 13,
    BeCarryBody                                    = 14,
    LOD                                            = 15,
    BeAssassinate                                  = 16,
    ImpendingDeath                                 = 17,
    ClimbLadder                                    = 18,
    UseItem                                        = 19,
    Perform                                        = 20,
    Firefighting                                   = 21,
    InteractivePutWeapon                           = 22,
    ShieldAttachBack                               = 23,
    AnimAttachBack                                 = 24,
    CrowdControl                                   = 25,
    SwimSprint                                     = 26,
    HighValueItemInspect                           = 27,
    RopePassiveMove                                = 28,
    RollMove                                       = 29,
    DramaFalling                                   = 30,
    DoubleHandAbility                              = 31,
    LeftHandAbility                                = 32,
    RightHandAbility                               = 33,
    LegAbility                                     = 34,
    SpecialAbility                                 = 35,
    ActionAbility                                  = 36,
    CustomAbility                                  = 37,
    Custom2Ability                                 = 38,
    TagMax                                         = 39,
    EWeaponHiddenTag_MAX                           = 40

};

// Enum  GPGameplay.EWeaponAttributeValueType
enum class EWeaponAttributeValueType : uint8_t
{
    Normal                                         = 0,
    Percentage                                     = 1,
    EWeaponAttributeValueType_MAX                  = 2

};

// Enum  GPGameplay.EAttributeBetterDeterminer
enum class EAttributeBetterDeterminer : uint8_t
{
    None                                           = 0,
    Max                                            = 1,
    Min                                            = 2

};

// Enum  GPGameplay.ELimitFormulateType
enum class ELimitFormulateType : uint8_t
{
    None                                           = 0,
    MULT_A_Min                                     = 1,
    MULT_A_Max                                     = 2,
    Final_Min                                      = 3,
    Final_Max                                      = 4,
    ELimitFormulateType_MAX                        = 5

};

// Enum  GPGameplay.EWeaponAttackTriggerMode
enum class EWeaponAttackTriggerMode : uint8_t
{
    OnHit                                          = 0,
    OnExplode                                      = 1,
    Custom                                         = 2,
    EWeaponAttackTriggerMode_MAX                   = 3

};

// Enum  GPGameplay.EWeaponBoolPropertyType
enum class EWeaponBoolPropertyType : uint8_t
{
    None                                           = 0,
    IsBipodDown                                    = 1,
    IsPowerFlashOn                                 = 2,
    IsTacticalEquipUOn                             = 3,
    IsTacticalEquipU1On                            = 4,
    IsTacticalEquipU2On                            = 5,
    IsTacticalEquipROn                             = 6,
    IsTacticalEquipR1On                            = 7,
    IsTacticalEquipR2On                            = 8,
    IsTacticalEquipDOn                             = 9,
    IsTacticalEquipD1On                            = 10,
    IsTacticalEquipD2On                            = 11,
    IsTacticalEquipLOn                             = 12,
    IsTacticalEquipL1On                            = 13,
    IsTacticalEquipL2On                            = 14,
    Max                                            = 15

};

// Enum  GPGameplay.EVehicleLockType
enum class EVehicleLockType : uint8_t
{
    NONE                                           = 0,
    Terrestrial                                    = 1,
    Aerial                                         = 2,
    All                                            = 255,
    EVehicleLockType_MAX                           = 256

};

// Enum  GPGameplay.EWeaponGunKickTriggerType
enum class EWeaponGunKickTriggerType : uint8_t
{
    EveryFire                                      = 0,
    FirstFireKeep                                  = 1,
    FirstFireLoop                                  = 2,
    EWeaponGunKickTriggerType_MAX                  = 3

};

// Enum  GPGameplay.EWeaponFireShakeWaveform
enum class EWeaponFireShakeWaveform : uint8_t
{
    CosWave                                        = 0,
    SinWave                                        = 1,
    PerlinNoise                                    = 2,
    Curve                                          = 3,
    CosWaveE                                       = 4,
    SinWaveE                                       = 5,
    EWeaponFireShakeWaveform_MAX                   = 6

};

// Enum  GPGameplay.EWeaponFireShakeType
enum class EWeaponFireShakeType : uint8_t
{
    FireBegin                                      = 0,
    FireLoop                                       = 1,
    FireAlways                                     = 2,
    FireRecoil                                     = 3,
    EWeaponFireShakeType_MAX                       = 4

};

// Enum  GPGameplay.EWeaponOpenSightOnFireMode
enum class EWeaponOpenSightOnFireMode : uint8_t
{
    None                                           = 0,
    OpenSightMode_SemiAutomatic                    = 1,
    OpenSightMode_Automatic                        = 2,
    OpenSightMode_Sniper                           = 3,
    OpenSightMode_Missile                          = 4,
    EWeaponOpenSightOnFireMode_MAX                 = 5

};

// Enum  GPGameplay.EWeaponFireWithSightRealseConfigMode
enum class EWeaponFireWithSightRealseConfigMode : uint8_t
{
    None                                           = 0,
    StopFire_CloseSight                            = 1,
    OpenFire_Sight                                 = 2,
    EWeaponFireWithSightRealseConfigMode_MAX       = 3

};

// Enum  GPGameplay.EWeaponFireWithSightPressConfigMode
enum class EWeaponFireWithSightPressConfigMode : uint8_t
{
    None                                           = 0,
    OpenSightWithFire                              = 1,
    OpenSight                                      = 2,
    EWeaponFireWithSightPressConfigMode_MAX        = 3

};

// Enum  GPGameplay.EWeaponInputAutoFireMode
enum class EWeaponInputAutoFireMode : uint8_t
{
    None                                           = 0,
    Single                                         = 1,
    Auto                                           = 2,
    EWeaponInputAutoFireMode_MAX                   = 3

};

// Enum  GPGameplay.EWeaponInputRightActionMode
enum class EWeaponInputRightActionMode : uint8_t
{
    None                                           = 0,
    Follow_FireWithSightOpenConfig                 = 1,
    Follow_FireConfig                              = 2,
    EWeaponInputRightActionMode_MAX                = 3

};

// Enum  GPGameplay.EWeaponAdditiveAnimTriggerType
enum class EWeaponAdditiveAnimTriggerType : uint8_t
{
    None                                           = 0,
    Always                                         = 1,
    EveryFire                                      = 2,
    WhileFireOnce                                  = 3,
    WhileFireLoop                                  = 4,
    EndFire                                        = 5,
    EWeaponAdditiveAnimTriggerType_MAX             = 6

};

// Enum  GPGameplay.EHitEventType_FX
enum class EHitEventType_FX : uint8_t
{
    None                                           = 0,
    KillWithHead                                   = 1,
    KillWithBody                                   = 2,
    HitWithHead                                    = 3,
    HitWithBody                                    = 4,
    HitWithArmor                                   = 5,
    EHitEventType_MAX                              = 6

};

// Enum  GPGameplay.ETrailInWaterMode
enum class ETrailInWaterMode : uint8_t
{
    ETrailMoveSelf                                 = 1,
    ETrailAttachtoBullet                           = 2,
    ETrailInWaterMode_MAX                          = 3

};

// Enum  GPGameplay.EProjectileFlyMode
enum class EProjectileFlyMode : uint8_t
{
    FlyMode_PhysicSimulate                         = 0,
    FlyMode_HitScan                                = 1,
    FlyMode_HitScanDelay                           = 2,
    FlyMode_MAX                                    = 3

};

// Enum  GPGameplay.EDamageAttenBlendMode
enum class EDamageAttenBlendMode : uint8_t
{
    BlendMode_Dest                                 = 0,
    BlendMode_LinearLerp                           = 1,
    BlendMode_MAX                                  = 2

};

// Enum  GPGameplay.ECrosshairScaleMode
enum class ECrosshairScaleMode : uint8_t
{
    ScaleGap                                       = 0,
    ScaleAll                                       = 1,
    ScaleOverride                                  = 2,
    ECrosshairScaleMode_MAX                        = 3

};

// Enum  GPGameplay.EWeaponDataRecoilType
enum class EWeaponDataRecoilType : uint8_t
{
    WeaponRecoil_DFM                               = 0,
    WeaponRecoil_Polynomial                        = 1,
    WeaponRecoil_VelocityModel                     = 2,
    WeaponRecoil_MAX                               = 3

};

// Enum  GPGameplay.EExplosionType
enum class EExplosionType : uint8_t
{
    None                                           = 0,
    Weapon_Grenade                                 = 1,
    Weapon_RPG                                     = 2,
    Weapon_C4                                      = 3,
    Weapon_Missile                                 = 4,
    WeaponMelee_Hurt                               = 5,
    Weapon_3Grenade                                = 6,
    Vehicle_ArmedPickup                            = 7,
    Vehicle_Motor                                  = 8,
    Vehicle_TutuCar                                = 9,
    Vehicle_UNTrunk                                = 10,
    Vehicle_DarkTideJeep                           = 11,
    Vehicle_CargoTrunk                             = 12,
    Vehicle_Drone                                  = 13,
    Tank_Projectile                                = 14,
    FixedTrackRocket                               = 15,
    Other_Shell                                    = 16,
    Other_RocketRecycling                          = 17,
    Type_Large                                     = 18,
    Type_Mid                                       = 19,
    Type_Small                                     = 20,
    Weapon_Point                                   = 21,
    RankSkill_GuidedMissle                         = 22,
    Other_Debug                                    = 23,
    Max                                            = 24

};

// Enum  GPGameplay.EMainAttributeFunctionCurvingType
enum class EMainAttributeFunctionCurvingType : uint8_t
{
    NONE                                           = 0,
    DeltaMapping                                   = 1,
    DeltaMappingThenScale                          = 2,
    AbsoluteMapping                                = 3,
    AbsoluteMappingThenScale                       = 4,
    EMainAttributeFunctionCurvingType_MAX          = 5

};

// Enum  GPGameplay.EWeaponDataModifierPeriod
enum class EWeaponDataModifierPeriod : uint8_t
{
    GAME_MODE                                      = 0,
    PARTS                                          = 1,
    PART_TUNE                                      = 2,
    Max                                            = 3

};

// Enum  GPGameplay.EWeaponDataArrayModifierType
enum class EWeaponDataArrayModifierType : uint8_t
{
    None                                           = 0,
    Add                                            = 1,
    Rem                                            = 2,
    Max                                            = 3

};

// Enum  GPGameplay.EWeaponDataReplaceType
enum class EWeaponDataReplaceType : uint8_t
{
    None                                           = 0,
    Final                                          = 1,
    Initial                                        = 2,
    Max                                            = 3

};

// Enum  GPGameplay.EWeaponDataModifierType
enum class EWeaponDataModifierType : uint8_t
{
    None                                           = 0,
    Addend                                         = 1,
    Mult_A                                         = 2,
    Mult_B                                         = 3,
    Mult_C                                         = 4,
    Max                                            = 5

};

// Enum  GPGameplay.EScopeLenMatState
enum class EScopeLenMatState : uint8_t
{
    Close                                          = 0,
    Switch                                         = 1,
    Open                                           = 2,
    EMP                                            = 3,
    EScopeLenMatState_MAX                          = 4

};

// Enum  GPGameplay.WeaponInspectType
enum class WeaponInspectType : uint8_t
{
    WeaponInspectType_Default                      = 0,
    WeaponInspectType_Empty                        = 1,
    WeaponInspectType_Finally                      = 2,
    WeaponInspectType_FirstEmpty                   = 3,
    WeaponInspectType_MAX                          = 4

};

// Enum  GPGameplay.ETieWeaponState
enum class ETieWeaponState : uint8_t
{
    E_Idle                                         = 0,
    E_Vacant                                       = 1,
    E_Using                                        = 2,
    E_Broken                                       = 3,
    E_Destory                                      = 4,
    E_MAX                                          = 5

};

// Enum  GPGameplay.ESceneWeaponType
enum class ESceneWeaponType : uint8_t
{
    E_None                                         = 0,
    E_MachineGun                                   = 1,
    E_FixedWeaponAA                                = 2,
    E_FixedWEaponShore                             = 3,
    E_GiantTowerGuidedRocket                       = 4,
    E_GiantTowerWeaponAA                           = 5,
    E_HumveeCracked                                = 6,
    E_HawkMachineGun                               = 7,
    E_BunkerMachineGun                             = 8,
    E_MAX                                          = 9

};

// Enum  GPGameplay.ESceneHealthState
enum class ESceneHealthState : uint8_t
{
    None                                           = 0,
    E_Normal                                       = 1,
    E_Impaired                                     = 2,
    E_Destory                                      = 3,
    E_Constructable                                = 4,
    ESceneHealthState_MAX                          = 5

};

// Enum  GPGameplay.ECrossHairBindMode
enum class ECrossHairBindMode : uint8_t
{
    BindToFireLocation                             = 0,
    BindToFrontSight                               = 1,
    BindToScreenCenter                             = 2,
    ECrossHairBindMode_MAX                         = 3

};

// Enum  GPGameplay.EWeaponOffsetType
enum class EWeaponOffsetType : uint8_t
{
    WeaponZoomOffset_Rotation                      = 0,
    WeaponZoomOffset                               = 1,
    WeaponDisplayOffset                            = 2,
    WeaponAdditiveAnim                             = 3,
    WeaponAdditiveAnim_FiringAnim                  = 4,
    WeaponCameraShakeRoll                          = 5,
    WeaponGunKick                                  = 6,
    WeaponGunSway                                  = 7,
    WeaponOwnerHitShake                            = 8,
    WeaponGunKick2                                 = 9,
    WeaponOffsetFinal                              = 10,
    EWeaponOffsetType_MAX                          = 11

};

// Enum  GPGameplay.EZoomAlignmentMode
enum class EZoomAlignmentMode : uint8_t
{
    TransformAlignment                             = 0,
    TranslationAlignment                           = 1,
    DisableAlignment                               = 2,
    EZoomAlignmentMode_MAX                         = 3

};

// Enum  GPGameplay.EEquipmentPartDamageType
enum class EEquipmentPartDamageType : uint8_t
{
    Default                                        = 0,
    Fix                                            = 1,
    EEquipmentPartDamageType_MAX                   = 2

};

// Enum  GPGameplay.EWeaponHandAnimType
enum class EWeaponHandAnimType : uint8_t
{
    None                                           = 0,
    LeftHandType                                   = 1,
    RightHandType                                  = 2,
    BothHandsType                                  = 3,
    EWeaponHandAnimType_MAX                        = 4

};

// Enum  GPGameplay.EWeaponFireCrosshairStyle
enum class EWeaponFireCrosshairStyle : uint8_t
{
    CrosshairNormal                                = 0,
    EWeaponFireCrosshairStyle_MAX                  = 1

};

// Enum  GPGameplay.ECharacterLogicPoseType
enum class ECharacterLogicPoseType : uint8_t
{
    None                                           = 0,
    StandPose                                      = 1,
    CrouchPose                                     = 2,
    PronePose                                      = 3,
    ECharacterLogicPoseType_MAX                    = 4

};

// Enum  GPGameplay.EChracterPoseType
enum class EChracterPoseType : uint8_t
{
    None                                           = 0,
    Stand                                          = 1,
    Crouch                                         = 2,
    Prone                                          = 3,
    Jump                                           = 4,
    Run                                            = 5,
    Fly                                            = 6,
    Sprint                                         = 7,
    Fracture                                       = 8,
    ImpendingDeath                                 = 9,
    Swim                                           = 10,
    UnderwaterSwim                                 = 11,
    SlidingTackle                                  = 12,
    Rescue                                         = 13,
    Dive                                           = 14,
    EChracterPoseType_MAX                          = 15

};

// Enum  GPGameplay.EHandIKType
enum class EHandIKType : uint8_t
{
    HandIKType_None                                = 0,
    HandIKType_Primary                             = 1,
    HandIKType_Submachine                          = 2,
    HandIKType_Pistol                              = 3,
    HandIKType_SpecialLongWeapon                   = 4,
    HandIKType_Max                                 = 5

};

// Enum  GPGameplay.ETurn8AngleType
enum class ETurn8AngleType : uint8_t
{
    None                                           = 0,
    Angle_Turn                                     = 1,
    Angle_TurnLeft                                 = 2,
    Angle_TurnLeft                                 = 3,
    Angle_TurnLeft                                 = 4,
    Angle_TurnLeft                                 = 5,
    Angle_TurnRight                                = 6,
    Angle_TurnRight                                = 7,
    Angle_TurnRight                                = 8,
    Max                                            = 9

};

// Enum  GPGameplay.EEightDirectionType
enum class EEightDirectionType : uint8_t
{
    None                                           = 0,
    Direction_F                                    = 1,
    Direction_FR                                   = 2,
    Direction_FL                                   = 3,
    Direction_B                                    = 4,
    Direction_BR                                   = 5,
    Direction_BL                                   = 6,
    Direction_L                                    = 7,
    Direction_R                                    = 8,
    Max                                            = 9

};

// Enum  GPGameplay.EAnimationSpecialUseType
enum class EAnimationSpecialUseType : uint8_t
{
    None                                           = 0,
    TPPAnim_UnderFPP                               = 6,
    EAnimationSpecialUseType_MAX                   = 7

};

// Enum  GPGameplay.ERecoilPeriod
enum class ERecoilPeriod : uint8_t
{
    Sleep                                          = 0,
    Recoil                                         = 1,
    RecoverPause                                   = 2,
    Recover                                        = 3,
    ERecoilPeriod_MAX                              = 4

};

// Enum  GPGameplay.EWeaponSpreadModifierType
enum class EWeaponSpreadModifierType : uint8_t
{
    CentralLimitTheorem                            = 0,
    SimpleRandom                                   = 1,
    EWeaponSpreadModifierType_MAX                  = 2

};

// Enum  GPGameplay.EDistributionInSpreadType
enum class EDistributionInSpreadType : uint8_t
{
    UniformDistribution                            = 0,
    CutCakeDistribution                            = 1,
    CustomDistribution                             = 2,
    EDistributionInSpreadType_MAX                  = 3

};

// Enum  GPGameplay.EWeaponSpreadAreaType
enum class EWeaponSpreadAreaType : uint8_t
{
    Oval                                           = 0,
    EWeaponSpreadAreaType_MAX                      = 1

};

// Enum  GPGameplay.EWeaponAdditiveGetAnimResultType
enum class EWeaponAdditiveGetAnimResultType : uint8_t
{
    RotateSpine                                    = 0,
    RotateByCenter                                 = 1,
    RotateByHoldPoint                              = 2,
    AddtiveLeftHand                                = 3,
    EWeaponAdditiveGetAnimResultType_MAX           = 4

};

// Enum  GPGameplay.EWeaponAntiCheatType
enum class EWeaponAntiCheatType : uint8_t
{
    None                                           = 0,
    Time                                           = 1,
    SwitchWeapon                                   = 2,
    Ammo                                           = 3,
    FireSpread                                     = 4,
    FireRecoil                                     = 5,
    ChangeClip                                     = 101,
    Chamber                                        = 102,
    Equipping                                      = 103,
    Firing                                         = 104,
    OtherState                                     = 200,
    EWeaponAntiCheatType_MAX                       = 201

};

// Enum  GPGameplay.EBulletShowReason
enum class EBulletShowReason : uint8_t
{
    None                                           = 0,
    ChangeClip                                     = 1,
    Inspect                                        = 2,
    Equip                                          = 3,
    Chamber                                        = 4,
    EBulletShowReason_MAX                          = 5

};

// Enum  GPGameplay.EShakerRuntimeRecoilSimulatorStage
enum class EShakerRuntimeRecoilSimulatorStage : uint8_t
{
    None                                           = 0,
    StartFire                                      = 1,
    FireRebound                                    = 2,
    Recover                                        = 3,
    EShakerRuntimeRecoilSimulatorStage_MAX         = 4

};

// Enum  GPGameplay.EZoomInParamType
enum class EZoomInParamType : uint8_t
{
    Default                                        = 0,
    Sight                                          = 1,
    Scope                                          = 2,
    Debug                                          = 3,
    Max                                            = 4

};

// Enum  GPGameplay.EGPCameraSwayMode
enum class EGPCameraSwayMode : uint8_t
{
    EGPCameraSwayMode_AimWalk                      = 0,
    EGPCameraSwayMode_Walk                         = 1,
    EGPCameraSwayMode_Run                          = 2,
    EGPCameraSwayMode_MAX                          = 3

};

// Enum  GPGameplay.EMeleeFireMode
enum class EMeleeFireMode : uint8_t
{
    Auto                                           = 0,
    Single                                         = 1,
    EMeleeFireMode_MAX                             = 2

};

// Enum  GPGameplay.EWeaponObjectMatchLevel
enum class EWeaponObjectMatchLevel : uint8_t
{
    MatchAll                                       = 0,
    MatchWeaponId                                  = 1,
    MatchWeaponType                                = 2,
    AlwaysMatch                                    = 3,
    Similarity                                     = 4,
    EWeaponObjectMatchLevel_MAX                    = 5

};

// Enum  GPGameplay.EProcedureAnimBoneType
enum class EProcedureAnimBoneType : uint8_t
{
    ScopeCenter                                    = 0,
    WeaponRoot                                     = 1,
    Camera                                         = 2,
    FrontSight                                     = 3,
    Custom                                         = 4,
    EProcedureAnimBoneType_MAX                     = 5

};

// Enum  GPGameplay.EWeaponFeatureChangeReason
enum class EWeaponFeatureChangeReason : uint8_t
{
    Undefined                                      = 0,
    CharacterLODFeatureLevelEnter                  = 1,
    CharacterLODFeatureExitFeature                 = 2,
    CharacterSimulationLODSystemPost               = 3,
    CharacterSignificanceEvaluateSystemApplyResult = 4,
    CharacterVehicleControlActionRefresh           = 5,
    WeapRepCompBeginPlay                           = 6,
    WeapRepCompOnCharacterOwnerStartObserved       = 7,
    OnWeaponFeatureDebugChanged                    = 8,
    RefreshVehicleWeaponLod                        = 9,
    EWeaponFeatureChangeReason_MAX                 = 10

};

// Enum  GPGameplay.EWeaponSkin_TexasPoker_Number
enum class EWeaponSkin_TexasPoker_Number : uint8_t
{
    Number_Two                                     = 0,
    Number_Three                                   = 1,
    Number_Four                                    = 2,
    Number_Five                                    = 3,
    Number_Six                                     = 4,
    Number_Seven                                   = 5,
    Number_Eight                                   = 6,
    Number_Nine                                    = 7,
    Number_Ten                                     = 8,
    Number_Jack                                    = 9,
    Number_Queen                                   = 10,
    Number_King                                    = 11,
    Number_Ace                                     = 12,
    Number_MAX                                     = 13

};

// Enum  GPGameplay.EWeaponSkin_TexasPoker_Pattern
enum class EWeaponSkin_TexasPoker_Pattern : uint8_t
{
    Spade                                          = 0,
    Heart                                          = 1,
    Diamond                                        = 2,
    Club                                           = 3,
    EWeaponSkin_TexasPoker_MAX                     = 4

};

// Enum  GPGameplay.EMysticalSkinParamMaterialValueType
enum class EMysticalSkinParamMaterialValueType : uint8_t
{
    Float                                          = 0,
    Texture                                        = 1,
    Color                                          = 2,
    EMysticalSkinParamMaterialValueType_MAX        = 3

};

// Enum  GPGameplay.EMysticalSkinParamValueType
enum class EMysticalSkinParamValueType : uint8_t
{
    Constant                                       = 0,
    Random                                         = 1,
    Random01                                       = 2,
    EMysticalSkinParamValueType_MAX                = 3

};

// Enum  GPGameplay.EWeaponSkinRareType
enum class EWeaponSkinRareType : uint8_t
{
    Normal                                         = 0,
    Rare                                           = 1,
    VeryRare                                       = 2,
    EWeaponSkinRareType_MAX                        = 3

};

// Enum  GPGameplay.ESkinMergeLevel
enum class ESkinMergeLevel : uint8_t
{
    None                                           = 0,
    ForceUse3PMaterial                             = 1,
    EmptySkin                                      = 2,
    ESkinMergeLevel_MAX                            = 3

};

// Enum  GPGameplay.ESkinEffectTriggerEventType
enum class ESkinEffectTriggerEventType : uint8_t
{
    None                                           = 0,
    PlayMaterialAnim                               = 1,
    ESkinEffectTriggerEventType_MAX                = 2

};

// Enum  GPGameplay.EWeaponSkinLogicMode
enum class EWeaponSkinLogicMode : uint8_t
{
    None                                           = 0,
    GameBoy2000                                    = 1,
    TexasPoker                                     = 2,
    WeatherForecast                                = 3,
    EWeaponSkinLogicMode_MAX                       = 4

};

// Enum  GPGameplay.EWeaponSkinRenderMode
enum class EWeaponSkinRenderMode : uint8_t
{
    None                                           = 0,
    Dye                                            = 1,
    EWeaponSkinRenderMode_MAX                      = 2

};

// Enum  GPGameplay.EWeaponModifyState
enum class EWeaponModifyState : uint8_t
{
    None                                           = 0,
    LoadMystical                                   = 1,
    LoadAssets                                     = 2,
    Done                                           = 3,
    EWeaponModifyState_MAX                         = 4

};

// Enum  GPGameplay.EAbilityThrowableStickyType
enum class EAbilityThrowableStickyType : uint8_t
{
    None                                           = 0,
    All                                            = 1,
    OnlyVehicle                                    = 2,
    OnlyDFMChar                                    = 3,
    EAbilityThrowableStickyType_MAX                = 4

};

// Enum  GPGameplay.EWeaponThrowableType
enum class EWeaponThrowableType : uint8_t
{
    None                                           = 0,
    EWeaponThrowableType_MAX                       = 1

};

// Enum  GPGlobalDefines.ELootingShare
enum class ELootingShare : uint8_t
{
    Close                                          = 0,
    TeamShare                                      = 1,
    WholeTeamShare                                 = 2,
    ELootingShare_MAX                              = 3

};

// Enum  GPGlobalDefines.ESensitivityType
enum class ESensitivityType : uint8_t
{
    Normal                                         = 0,
    Fire                                           = 1,
    ESensitivityType_MAX                           = 2

};

// Enum  GPGlobalDefines.ESensitivityMode
enum class ESensitivityMode : uint8_t
{
    FixedSpeed                                     = 0,
    SpeedAcc                                       = 1,
    ESensitivityMode_MAX                           = 2

};

// Enum  GPGlobalDefines.EAudioMasteringPCType
enum class EAudioMasteringPCType : uint8_t
{
    HomeCinema                                     = 0,
    Headphones                                     = 1,
    NightMode                                      = 2,
    Max                                            = 3

};

// Enum  GPGlobalDefines.EAudioPresetPCType
enum class EAudioPresetPCType : uint8_t
{
    Loudspeaker                                    = 0,
    EarphoneStereo                                 = 1,
    EarphoneDolbyAtmos                             = 2,
    Max                                            = 3

};

// Enum  GPGlobalDefines.ELODLevel
enum class ELODLevel : uint8_t
{
    Low                                            = 0,
    Medium                                         = 1,
    High                                           = 2,
    Superhigh                                      = 3,
    ELODLevel_MAX                                  = 4

};

// Enum  GPGlobalDefines.EVehicleAimAssistMode
enum class EVehicleAimAssistMode : uint8_t
{
    AllOpen                                        = 0,
    AllClose                                       = 1,
    Custom                                         = 2,
    EVehicleAimAssistMode_MAX                      = 3

};

// Enum  GPGlobalDefines.ESecondWeaponFireBtn
enum class ESecondWeaponFireBtn : uint8_t
{
    Close                                          = 0,
    ChangeWeapon                                   = 1,
    Fire                                           = 2,
    ESecondWeaponFireBtn_MAX                       = 3

};

// Enum  GPGlobalDefines.EVehicleCannonLockMode
enum class EVehicleCannonLockMode : uint8_t
{
    Close                                          = 0,
    Click                                          = 1,
    Press                                          = 2,
    EVehicleCannonLockMode_MAX                     = 3

};

// Enum  GPGlobalDefines.ERollCameraMode
enum class ERollCameraMode : uint8_t
{
    Click                                          = 0,
    Mixed                                          = 1,
    ERollCameraMode_MAX                            = 2

};

// Enum  GPGlobalDefines.EDriveAngle
enum class EDriveAngle : uint8_t
{
    Follow                                         = 0,
    Free                                           = 1,
    EDriveAngle_MAX                                = 2

};

// Enum  GPGlobalDefines.EWeaponVehicleMode
enum class EWeaponVehicleMode : uint8_t
{
    JoyStick                                       = 0,
    Button                                         = 1,
    EWeaponVehicleMode_MAX                         = 2

};

// Enum  GPGlobalDefines.EVehicleMode
enum class EVehicleMode : uint8_t
{
    Button                                         = 0,
    Glider                                         = 1,
    JoyStick                                       = 2,
    EVehicleMode_MAX                               = 3

};

// Enum  GPGlobalDefines.ESuperSprintControlMode
enum class ESuperSprintControlMode : uint8_t
{
    LeftStick                                      = 0,
    Button                                         = 1,
    ESuperSprintControlMode_MAX                    = 2

};

// Enum  GPGlobalDefines.EMoveRunMode
enum class EMoveRunMode : uint8_t
{
    LeftMoveRightFix                               = 0,
    LeftMoveRightFollow                            = 1,
    LeftFixRightFix                                = 2,
    EMoveRunMode_MAX                               = 3

};

// Enum  GPGlobalDefines.EJumpSplitMode
enum class EJumpSplitMode : uint8_t
{
    Close                                          = 0,
    BtnClick                                       = 1,
    Slide                                          = 2,
    EJumpSplitMode_MAX                             = 3

};

// Enum  GPGlobalDefines.ESensitivityChangeMode
enum class ESensitivityChangeMode : uint8_t
{
    StartAim                                       = 0,
    AfterOpenScope                                 = 1,
    Transitional                                   = 2,
    ESensitivityChangeMode_MAX                     = 3

};

// Enum  GPGlobalDefines.EFunctionBtnRotationMode
enum class EFunctionBtnRotationMode : uint8_t
{
    AllOpen                                        = 0,
    AllClose                                       = 1,
    Custom                                         = 2,
    EFunctionBtnRotationMode_MAX                   = 3

};

// Enum  GPGlobalDefines.ERightFireMode
enum class ERightFireMode : uint8_t
{
    Follow                                         = 0,
    Fixed                                          = 1,
    ERightFireMode_MAX                             = 2

};

// Enum  GPGlobalDefines.ELeftJoystickMode
enum class ELeftJoystickMode : uint8_t
{
    Follow                                         = 0,
    Fixed                                          = 1,
    ELeftJoystickMode_MAX                          = 2

};

// Enum  GPGlobalDefines.EKeyLayoutType
enum class EKeyLayoutType : uint8_t
{
    Layout                                         = 0,
    Layout                                         = 1,
    Layout                                         = 2,
    Layout_MAX                                     = 3

};

// Enum  GPGlobalDefines.EThrowMode
enum class EThrowMode : uint8_t
{
    Default                                        = 0,
    IdleToThrow                                    = 1,
    DirectThrow                                    = 2,
    EThrowMode_MAX                                 = 3

};

// Enum  GPGlobalDefines.EFireBreakReload
enum class EFireBreakReload : uint8_t
{
    Close                                          = 0,
    BreakReload                                    = 1,
    FireBreakReload                                = 2,
    MixReload                                      = 3,
    EFireBreakReload_MAX                           = 4

};

// Enum  GPGlobalDefines.EGyroScopeOpenMode
enum class EGyroScopeOpenMode : uint8_t
{
    AlwaysOpen                                     = 0,
    Close                                          = 1,
    OpenWhenAim                                    = 2,
    EGyroScopeOpenMode_MAX                         = 3

};

// Enum  GPGlobalDefines.ESilentWalkInputMode
enum class ESilentWalkInputMode : uint8_t
{
    Close                                          = 0,
    ButtonToggle                                   = 1,
    RouletteToggle                                 = 2,
    Blend                                          = 3,
    ESilentWalkInputMode_MAX                       = 4

};

// Enum  GPGlobalDefines.EAutoCrossMode
enum class EAutoCrossMode : uint8_t
{
    Close                                          = 0,
    LowObstacle                                    = 1,
    HighObstacle                                   = 2,
    EAutoCrossMode_MAX                             = 3

};

// Enum  GPGlobalDefines.EScopeBreathMode
enum class EScopeBreathMode : uint8_t
{
    AllOpen                                        = 0,
    AllClose                                       = 1,
    Custom                                         = 2,
    EScopeBreathMode_MAX                           = 3

};

// Enum  GPGlobalDefines.EQuickScopeOpenMode
enum class EQuickScopeOpenMode : uint8_t
{
    AllOpen                                        = 0,
    AllClose                                       = 1,
    Custom                                         = 2,
    EQuickScopeOpenMode_MAX                        = 3

};

// Enum  GPGlobalDefines.EScopeOpenMode
enum class EScopeOpenMode : uint8_t
{
    Click                                          = 0,
    Hold                                           = 1,
    Mix                                            = 2,
    EScopeOpenMode_MAX                             = 3

};

// Enum  GPGlobalDefines.EFireMode
enum class EFireMode : uint8_t
{
    Press                                          = 0,
    Release                                        = 1,
    EFireMode_MAX                                  = 2

};

// Enum  GPGlobalDefines.EHitEffectColor
enum class EHitEffectColor : uint8_t
{
    Default                                        = 0,
    Color1                                         = 1,
    Color2                                         = 2,
    Color3                                         = 3,
    Color4                                         = 4,
    Color5                                         = 5,
    Color6                                         = 6,
    EHitEffectColor_MAX                            = 7

};

// Enum  GPGlobalDefines.EVehicleSensitivityMode
enum class EVehicleSensitivityMode : uint8_t
{
    NONE                                           = 0,
    Vehicle_Driver_FPP                             = 1,
    Vehicle_Driver_TPP                             = 2,
    Vehicle_Weapon_Passenger_FPP                   = 3,
    Vehicle_Weapon_Passenger_TPP                   = 4,
    Helicopter_Driver_FPP                          = 5,
    Helicopter_Driver_TPP                          = 6,
    EVehicleSensitivityMode_MAX                    = 7

};

// Enum  GPGlobalDefines.EGamepadSensitivityPresetType
enum class EGamepadSensitivityPresetType : uint8_t
{
    Custom                                         = 0,
    Slow                                           = 1,
    Middle                                         = 2,
    Fast                                           = 3,
    EGamepadSensitivityPresetType_MAX              = 4

};

// Enum  GPGlobalDefines.ESideAimingControlMode
enum class ESideAimingControlMode : uint8_t
{
    MixWithAim                                     = 0,
    SeparateSame                                   = 1,
    SeparateDiff                                   = 2,
    ESideAimingControlMode_MAX                     = 3

};

// Enum  GPGlobalDefines.ESensitivityModeHD
enum class ESensitivityModeHD : uint8_t
{
    MDVOnly                                        = 0,
    MDVXADS                                        = 1,
    ZoomratedMDV                                   = 2,
    ADSOnly                                        = 3,
    ESensitivityModeHD_MAX                         = 4

};

// Enum  GPGlobalDefines.EAirCraftScopeMode
enum class EAirCraftScopeMode : uint8_t
{
    Follow                                         = 0,
    Seperate                                       = 1,
    EAirCraftScopeMode_MAX                         = 2

};

// Enum  GPGlobalDefines.ELootSharing
enum class ELootSharing : uint8_t
{
    Close                                          = 0,
    SmallTeamShare                                 = 1,
    WholeTeamShare                                 = 2,
    ELootSharing_MAX                               = 3

};

// Enum  GPGlobalDefines.EInputDeadZoneType
enum class EInputDeadZoneType : uint8_t
{
    Invalid                                        = 0,
    BaseOutermostSensitivity                       = 1,
    ADSOutermostSensitivity                        = 2,
    EInputDeadZoneType_MAX                         = 3

};

// Enum  GPGlobalDefines.EGamepadSensitivityCurveType
enum class EGamepadSensitivityCurveType : uint8_t
{
    SlowToFast                                     = 0,
    Linear                                         = 1,
    FastToSlow                                     = 2,
    EGamepadSensitivityCurveType_MAX               = 3

};

// Enum  GPGlobalDefines.EMouseSensitivityMode
enum class EMouseSensitivityMode : uint8_t
{
    ENormalWeapon                                  = 0,
    EVehicleDriveWeapon                            = 1,
    EHelicopterDriveWeapon                         = 2,
    EVehicleWeapon                                 = 3,
    EJet                                           = 4,
    EMouseSensitivityMode_MAX                      = 5

};

// Enum  GPGlobalDefines.ESystemSettingApplyMode
enum class ESystemSettingApplyMode : uint8_t
{
    Immediate                                      = 0,
    ManullyConfirm                                 = 1,
    Restart                                        = 2,
    OutOfGame                                      = 3,
    ESystemSettingApplyMode_MAX                    = 4

};

// Enum  GPGlobalDefines.ESystemSettingInputTypeHD
enum class ESystemSettingInputTypeHD : uint8_t
{
    None                                           = 0,
    Switcher                                       = 1,
    FloatValue                                     = 2,
    IntValue                                       = 3,
    DropDown                                       = 4,
    DynamicDropDown                                = 5,
    Volume                                         = 6,
    Reserve1                                       = 7,
    Reserve2                                       = 8,
    Reserve3                                       = 9,
    Reserve4                                       = 10,
    Reserve5                                       = 11,
    Reserve6                                       = 12,
    Reserve7                                       = 13,
    Reserve8                                       = 14,
    Custom                                         = 15,
    ESystemSettingInputTypeHD_MAX                  = 16

};

// Enum  GPGlobalDefines.ESystemSettingDescTemplateHD
enum class ESystemSettingDescTemplateHD : uint8_t
{
    None                                           = 0,
    Simple                                         = 1,
    DropDown                                       = 2,
    KeySettingItem                                 = 3,
    Reserve3                                       = 4,
    Reserve4                                       = 5,
    Reserve5                                       = 6,
    Reserve6                                       = 7,
    Reserve7                                       = 8,
    Reserve8                                       = 9,
    Custom                                         = 10,
    ESystemSettingDescTemplateHD_MAX               = 11

};

// Enum  GPGlobalDefines.EInt
enum class EInt : uint8_t
{
    Zero                                           = 0,
    One                                            = 1,
    Two                                            = 2,
    Three                                          = 3,
    Four                                           = 4,
    Five                                           = 5,
    Six                                            = 6,
    Seven                                          = 7,
    Eight                                          = 8,
    Nine                                           = 9,
    Ten                                            = 10,
    Eleven                                         = 11,
    Twelve                                         = 12,
    EInt_MAX                                       = 13

};

// Enum  GPGlobalDefines.ECharacterType
enum class ECharacterType : uint8_t
{
    ENone                                          = 0,
    ECharacter                                     = 1,
    EAlarmTower                                    = 2,
    ECharacterType_MAX                             = 3

};

// Enum  GPGlobalDefines.EDynamicUObjectRootType
enum class EDynamicUObjectRootType : uint8_t
{
    Gameplay                                       = 0,
    Persistent                                     = 1,
    ClientSeamless                                 = 2,
    EDynamicUObjectRootType_MAX                    = 3

};

// Enum  GPGlobalDefines.ESeamlessFlag
enum class ESeamlessFlag : uint8_t
{
    SF_AutoDestroy                                 = 0,
    SF_NeedDestroyAfterSeamless                    = 1,
    SF_KeepInAllStage                              = 2,
    SF_MAX                                         = 3

};

// Enum  GPGlobalDefines.ESeamlessStage
enum class ESeamlessStage : uint8_t
{
    Stage_None                                     = 0,
    Stage_ClientOnly                               = 1,
    Stage_DedicatedServer                          = 2,
    Stage_Standalone                               = 3,
    Stage_MAX                                      = 4

};

// Enum  GPGlobalDefines.EHeroMeshType
enum class EHeroMeshType : uint8_t
{
    None                                           = 0,
    Fpp                                            = 1,
    Tpp                                            = 2,
    UI                                             = 3,
    EHeroMeshType_MAX                              = 4

};

// Enum  GPGlobalDefines.EDFMGamePlaySubMode
enum class EDFMGamePlaySubMode : uint8_t
{
    None                                           = 0,
    GamePlaySubMode_TacticalConquest               = 1,
    GamePlaySubMode_CaptureFlag                    = 2,
    GamePlaySubMode_Arena                          = 3,
    GamePlaySubMode_Commander                      = 4,
    GamePlaySubMode_TacticalConquest_Evolution     = 5,
    GamePlaySubMode_AirGround                      = 6,
    EDFMGamePlaySubMode_MAX                        = 7

};

// Enum  GPGlobalDefines.ESoundTypeIcon
enum class ESoundTypeIcon : uint8_t
{
    ESTI_None                                      = 0,
    ESTI_Ability                                   = 1,
    ESTI_Medicine                                  = 2,
    ESTI_Swim                                      = 3,
    ESTI_MAX                                       = 4

};

// Enum  GPGlobalDefines.ENumberIncreaseType
enum class ENumberIncreaseType : uint8_t
{
    Linear                                         = 0,
    Sqrt                                           = 1,
    CustomedCurve                                  = 2,
    RandomThenSteadyFromTail                       = 3,
    ENumberIncreaseType_MAX                        = 4

};

// Enum  GPGlobalDefines.EMarkerEdgeTrackType
enum class EMarkerEdgeTrackType : uint8_t
{
    None                                           = 0,
    TrackWhenOutEdge                               = 1,
    TrackWhenOutScreen                             = 2,
    EMarkerEdgeTrackType_MAX                       = 3

};

// Enum  GPGlobalDefines.EMarkerEdgeType
enum class EMarkerEdgeType : uint8_t
{
    None                                           = 0,
    MobileCustomCircle                             = 1,
    HDCustomScreenEdge                             = 2,
    CenterSmallCircle                              = 3,
    BigEllipse                                     = 4,
    HDScreenEdge                                   = 5,
    EMarkerEdgeType_MAX                            = 6

};

// Enum  GPGlobalDefines.ENZLogLevel
enum class ENZLogLevel : uint8_t
{
    LogLevel_Log                                   = 0,
    LogLevel_Warning                               = 1,
    LogLevel_Error                                 = 2,
    LogLevel_Fatal                                 = 3,
    LogLevel_MAX                                   = 4

};

// Enum  GPGlobalDefines.ETurnInfo
enum class ETurnInfo : uint8_t
{
    TurnInfo_None                                  = 0,
    TurnInfo_Left                                  = 1,
    TurnInfo_Right                                 = 2,
    TurnInfo_MAX                                   = 3

};

// Enum  GPGlobalDefines.EWeaponHand
enum class EWeaponHand : uint8_t
{
    HAND_Right                                     = 0,
    HAND_Left                                      = 1,
    HAND_Center                                    = 2,
    HAND_Hidden                                    = 3,
    HAND_MAX                                       = 4

};

// Enum  GPGlobalDefines.EInputMode
enum class EInputMode : uint8_t
{
    EIM_None                                       = 0,
    EIM_GameOnly                                   = 1,
    EIM_GameAndUI                                  = 2,
    EIM_UIOnly                                     = 3,
    EIM_MAX                                        = 4

};

// Enum  GPGlobalDefines.EClientSyncCustomData
enum class EClientSyncCustomData : uint8_t
{
    ENone                                          = 0,
    EDoorData                                      = 1,
    EClientSyncCustomData_MAX                      = 2

};

// Enum  GPGlobalDefines.EGPTriggerAuth
enum class EGPTriggerAuth : uint8_t
{
    Unkown                                         = 0,
    ClientOnly                                     = 1,
    Authority                                      = 2,
    EGPTriggerAuth_MAX                             = 3

};

// Enum  GPGlobalDefines.EGPTriggerMode
enum class EGPTriggerMode : uint8_t
{
    AnyAny                                         = 0,
    Player1                                        = 1,
    Player2                                        = 2,
    Player3                                        = 3,
    Player4                                        = 4,
    PlayerAny                                      = 5,
    VehicleAny                                     = 6,
    EnemyAny                                       = 7,
    SpecialActor                                   = 8,
    LevelEnvEvent                                  = 9,
    Custom                                         = 255,
    EGPTriggerMode_MAX                             = 256

};

// Enum  GPGlobalDefines.EVehicleAbilityType
enum class EVehicleAbilityType : uint8_t
{
    EVAT_DefaultTrue                               = 0,
    EVAT_DefaultFalse                              = 1,
    EVAT_USESkillCommon                            = 2,
    EVAT_BeDamageCommon                            = 3,
    ESVT_BeScan                                    = 4,
    ESVT_ExtraFireNotLeanout                       = 5,
    EVAT_BattleFieldSkill                          = 6,
    ESVT_BePassiveMove                             = 7,
    ESVT_ForbidBePassiveMove                       = 8,
    ESVT_NumMax                                    = 9,
    EVehicleAbilityType_MAX                        = 10

};

// Enum  GPGlobalDefines.EGPVehicleDamageType
enum class EGPVehicleDamageType : uint8_t
{
    Default                                        = 0,
    LightDamage                                    = 1,
    HeavyDamage                                    = 2,
    EGPVehicleDamageType_MAX                       = 3

};

// Enum  GPGlobalDefines.EGPVehicleArmorType
enum class EGPVehicleArmorType : uint8_t
{
    Default                                        = 0,
    Light                                          = 1,
    LightMiddle                                    = 2,
    Middle                                         = 3,
    Heavy                                          = 4,
    Raid                                           = 5,
    RaidTankBoss                                   = 6,
    LittleBird                                     = 7,
    SOLHelicopter                                  = 8,
    FSV                                            = 9,
    GTQ35                                          = 10,
    AgainstBoat_SOL                                = 11,
    MotorBoat_SOL                                  = 12,
    F35                                            = 13,
    SceneWeapon                                    = 14,
    Num                                            = 15,
    EGPVehicleArmorType_MAX                        = 16

};

// Enum  GPGlobalDefines.EVehicleSeatType
enum class EVehicleSeatType : uint8_t
{
    None                                           = 0,
    MachineGun                                     = 1,
    Drive                                          = 2,
    Ride                                           = 3,
    EVehicleSeatType_MAX                           = 4

};

// Enum  GPGlobalDefines.ECustomVehicleType
enum class ECustomVehicleType : uint8_t
{
    None                                           = 0,
    CustomAirVehicle                               = 1,
    CustomGroundVehicle                            = 2,
    ECustomVehicleType_MAX                         = 3

};

// Enum  GPGlobalDefines.EVehicleDeployType
enum class EVehicleDeployType : uint8_t
{
    None                                           = 0,
    LightVehicle                                   = 10,
    ArmoredVehicle                                 = 20,
    LightArmor                                     = 30,
    HeavyVehicle                                   = 40,
    AirTransport                                   = 50,
    AttackHelicopter                               = 60,
    Fighter                                        = 70,
    EVehicleDeployType_MAX                         = 71

};

// Enum  GPGlobalDefines.EAnimVehicleType
enum class EAnimVehicleType : uint8_t
{
    BaseCar                                        = 0,
    UNTruck                                        = 1,
    TutuCar                                        = 2,
    Jeep                                           = 3,
    Valkyrie                                       = 4,
    Boat                                           = 5,
    MilitaryJeep                                   = 6,
    Tank                                           = 7,
    Helicopter                                     = 8,
    Infantry                                       = 9,
    SPAAG                                          = 10,
    ATV                                            = 11,
    ORV                                            = 12,
    Humvee                                         = 13,
    ArmedPickup                                    = 14,
    OldCity_ArmoredCar                             = 15,
    OldCity_BossTank                               = 16,
    Wheel_Tank                                     = 17,
    Bird_Helicopter                                = 18,
    Jet                                            = 19,
    GTQ35                                          = 20,
    MotorBoat                                      = 21,
    NoVehicle                                      = 255,
    EAnimVehicleType_MAX                           = 256

};

// Enum  GPGlobalDefines.EDFMVehicleClassType
enum class EDFMVehicleClassType : uint8_t
{
    VehicleType_None                               = 0,
    VehicleClassType_Ground                        = 1,
    VehicleClassType_Water                         = 2,
    VehicleClassType_Sky                           = 3,
    EDFMVehicleClassType_MAX                       = 4

};

// Enum  GPGlobalDefines.ECollectionItemType
enum class ECollectionItemType : uint8_t
{
    None                                           = 0,
    DailyNecessities                               = 1,
    ToolAndMaterial                                = 2,
    Electronic                                     = 3,
    Other                                          = 4,
    Key                                            = 5,
    MedKit                                         = 6,
    Intelligence                                   = 7,
    Valuable                                       = 8,
    Narrative                                      = 9,
    TreasureMap                                    = 10,
    Archive                                        = 11,
    ECollectionItemType_MAX                        = 12

};

// Enum  GPGlobalDefines.EVehicleAimAssistType
enum class EVehicleAimAssistType : uint8_t
{
    None                                           = 0,
    GroundVehicle                                  = 1,
    Helicopter                                     = 2,
    Jet                                            = 3,
    Gunner                                         = 4,
    EVehicleAimAssistType_MAX                      = 5

};

// Enum  GPGlobalDefines.EWeaponExtraModelType
enum class EWeaponExtraModelType : uint8_t
{
    None                                           = 0,
    ForSight                                       = 1,
    RearSight                                      = 2,
    Handle                                         = 3,
    Cheek                                          = 4,
    Rail                                           = 5,
    MagWell                                        = 6,
    Rgrip                                          = 7,
    Muzzle                                         = 8,
    Shield                                         = 20,
    Adapter                                        = 22,
    Gas                                            = 23,
    Pad                                            = 24,
    Patch                                          = 26,
    RailCover                                      = 32,
    Fgrip                                          = 33,
    Skin                                           = 99,
    EWeaponExtraModelType_MAX                      = 100

};

// Enum  GPGlobalDefines.EGadgetItemSubType
enum class EGadgetItemSubType : uint8_t
{
    None                                           = 0,
    AmmoBox                                        = 1,
    EGadgetItemSubType_MAX                         = 2

};

// Enum  GPGlobalDefines.EEquipmentItemType
enum class EEquipmentItemType : uint8_t
{
    HELMET                                         = 1,
    BreastPlate                                    = 5,
    ChestHanging                                   = 7,
    Bag                                            = 8,
    SafeBox                                        = 9,
    KeyChain                                       = 12,
    EEquipmentItemType_MAX                         = 13

};

// Enum  GPGlobalDefines.EItemMainType
enum class EItemMainType : uint8_t
{
    ItemMainType_None                              = 0,
    ItemMainType_Weapon                            = 10,
    ItemMainType_Equip                             = 11,
    ItemMainType_WeaponExtraModel                  = 12,
    ItemMainType_Adapter                           = 13,
    ItemMainType_Medicine                          = 14,
    ItemMainType_Collection                        = 15,
    ItemMainType_Sundry                            = 16,
    ItemMainType_Box                               = 17,
    ItemMainType_WeaponStruct                      = 18,
    ItemMainType_Food                              = 19,
    ItemMainType_WeaponThrowable                   = 21,
    ItemMainType_Perk                              = 22,
    ItemMainType_GadgetItem                        = 24,
    ItemMainType_ItemSkill                         = 25,
    ItemMainType_WeaponSkin                        = 28,
    ItemMainType_Fashion                           = 30,
    ItemMainType_PoorWeapon                        = 31,
    ItemMainType_Ammo                              = 37,
    ItemMainType_Commercialize                     = 38,
    ItemMainType_Vehicle                           = 39,
    ItemMainType_VehicleAdapter                    = 40,
    ItemMainType_VehicleSkin                       = 41,
    ItemMainType_Hero                              = 88,
    ItemMainType_MAX                               = 89

};

// Enum  GPGlobalDefines.ESightTelescopeType
enum class ESightTelescopeType : uint8_t
{
    NoGlass                                        = 0,
    RedSpot                                        = 1,
    MechinicalAim                                  = 2,
    VSS                                            = 3,
    Scale                                          = 4,
    Scale                                          = 5,
    Scale                                          = 6,
    Scale                                          = 7,
    Scale                                          = 8,
    Scale                                          = 9,
    Max                                            = 10

};

// Enum  GPGlobalDefines.EScreenAdaptorMode
enum class EScreenAdaptorMode : uint8_t
{
    Corner                                         = 0,
    RoundCorner                                    = 1,
    EScreenAdaptorMode_MAX                         = 2

};

// Enum  GPGlobalDefines.EPlayerGuideStage
enum class EPlayerGuideStage : uint8_t
{
    FirstLogin                                     = 0,
    TrainingMatch                                  = 1,
    WormUpMatch                                    = 2,
    GuideStageEnd                                  = 3,
    EPlayerGuideStage_MAX                          = 4

};

// Enum  GPGlobalDefines.EBeginerLevel
enum class EBeginerLevel : uint8_t
{
    None                                           = 0,
    Beginer                                        = 1,
    Regular                                        = 2,
    Master                                         = 3,
    EBeginerLevel_MAX                              = 4

};

// Enum  GPGlobalDefines.EHandleMode
enum class EHandleMode : uint8_t
{
    Mode                                           = 0,
    Mode                                           = 1,
    Mode                                           = 2,
    Mode_MAX                                       = 3

};

// Enum  GPGlobalDefines.ERightHandFireMode
enum class ERightHandFireMode : uint8_t
{
    Fixed                                          = 0,
    Follow                                         = 1,
    Closed                                         = 2,
    ERightHandFireMode_MAX                         = 3

};

// Enum  GPGlobalDefines.EHudSubMode
enum class EHudSubMode : uint8_t
{
    Mode                                           = 0,
    Mode                                           = 1,
    Mode                                           = 2,
    Mode                                           = 3,
    Mode_MAX                                       = 4

};

// Enum  GPGlobalDefines.EHudMode
enum class EHudMode : uint8_t
{
    Mode                                           = 0,
    Mode                                           = 1,
    Mode                                           = 2,
    Mode_MAX                                       = 3

};

// Enum  GPGlobalDefines.EMedicineSort
enum class EMedicineSort : uint8_t
{
    Mode                                           = 0,
    Mode                                           = 1,
    Mode                                           = 2,
    Mode_MAX                                       = 3

};

// Enum  GPGlobalDefines.EOperationMode
enum class EOperationMode : uint8_t
{
    Mode                                           = 0,
    Mode                                           = 1,
    Mode                                           = 2,
    Mode                                           = 3,
    Mode_MAX                                       = 4

};

// Enum  GPGlobalDefines.EGyroMode
enum class EGyroMode : uint8_t
{
    Closed                                         = 0,
    Always                                         = 1,
    WhenAim                                        = 2,
    EGyroMode_MAX                                  = 3

};

// Enum  GPGlobalDefines.EAimMethod
enum class EAimMethod : uint8_t
{
    Click                                          = 0,
    Pressing                                       = 1,
    EAimMethod_MAX                                 = 2

};

// Enum  GPGlobalDefines.ESideShootMethod
enum class ESideShootMethod : uint8_t
{
    Click                                          = 0,
    Pressing                                       = 1,
    ESideShootMethod_MAX                           = 2

};

// Enum  GPGlobalDefines.ESideShootMode
enum class ESideShootMode : uint8_t
{
    Closed                                         = 0,
    Always                                         = 1,
    WhenAim                                        = 2,
    ESideShootMode_MAX                             = 3

};

// Enum  GPGlobalDefines.ELeftHandFireMode
enum class ELeftHandFireMode : uint8_t
{
    Closed                                         = 0,
    Always                                         = 1,
    WhenAim                                        = 2,
    ELeftHandFireMode_MAX                          = 3

};

// Enum  GPGlobalDefines.ESwitchOnOff
enum class ESwitchOnOff : uint8_t
{
    Unknown                                        = -1,
    Off                                            = 0,
    On                                             = 1,
    ESwitchOnOff_MAX                               = 2

};

// Enum  GPGlobalDefines.ERotationMethodType
enum class ERotationMethodType : uint8_t
{
    ERotationMethodType_NZM                        = 0,
    ERotationMethodType_DFMCommon                  = 1,
    ERotationMethodType_DFMDistanceAcceleration    = 2,
    ERotationMethodType_DFMSpeedAcceleration       = 3,
    ERotationMethodType_DFMBlend                   = 4,
    ERotationMethodType_MAX                        = 5

};

// Enum  GPGlobalDefines.ERotationSensitivityCatagoryType
enum class ERotationSensitivityCatagoryType : uint8_t
{
    ERotationMethodType_Low                        = 0,
    ERotationMethodType_Middle                     = 1,
    ERotationMethodType_High                       = 2,
    ERotationMethodType_MAX                        = 3

};

// Enum  GPGlobalDefines.EVehicleAssistAimConfigGroup
enum class EVehicleAssistAimConfigGroup : uint8_t
{
    EVAACG_Default                                 = 0,
    EVAACG_Helicopter                              = 1,
    EVAACG_Jet                                     = 2,
    EVAACG_MAX                                     = 3

};

// Enum  GPPhysics.EBuoyancyTriangleState
enum class EBuoyancyTriangleState : uint8_t
{
    AllUnderWater                                  = 0,
    PartiallyUnderWater                            = 1,
    AboveWater                                     = 2,
    Stranded                                       = 3,
    Disabled                                       = 127,
    EBuoyancyTriangleState_MAX                     = 128

};

// Enum  GPPhysics.EDampingForceType
enum class EDampingForceType : uint8_t
{
    SimpleDampingForce                             = 0,
    ComplexDampingForce                            = 1,
    EDampingForceType_MAX                          = 2

};

// Enum  GPResource.EFXResourceCompPriority
enum class EFXResourceCompPriority : uint8_t
{
    EPriority_Low                                  = 0,
    EPriority_Mid                                  = 1,
    EPriority_High                                 = 2,
    EPriority_Max                                  = 3

};

// Enum  GPResource.EDFRumbleDecoratorType
enum class EDFRumbleDecoratorType : uint8_t
{
    Invalid                                        = 0,
    Normal                                         = 1,
    Silencer                                       = 2,
    EDFRumbleDecoratorType_MAX                     = 3

};

// Enum  GPResource.EDFRumbleType
enum class EDFRumbleType : uint8_t
{
    Invalid                                        = 0,
    Default                                        = 1,
    Fire                                           = 2,
    Harmed                                         = 3,
    Explode                                        = 4,
    Environment                                    = 5,
    EDFRumbleType_MAX                              = 6

};

// Enum  GPResource.EEmoteSpaceCheckBoxType
enum class EEmoteSpaceCheckBoxType : uint8_t
{
    Big                                            = 0,
    Medium                                         = 1,
    Small                                          = 2,
    EEmoteSpaceCheckBoxType_MAX                    = 3

};

// Enum  GPResource.ECommercializationAnimationSlot
enum class ECommercializationAnimationSlot : uint8_t
{
    LeftArm                                        = 0,
    LeftArmBeforeAO                                = 1,
    UpperBody                                      = 2,
    UpperBodyWithIK                                = 3,
    FullBody                                       = 4,
    ECommercializationAnimationSlot_MAX            = 5

};

// Enum  GPResource.ECommercializationItemUseOption
enum class ECommercializationItemUseOption : uint8_t
{
    GestureItem                                    = 0,
    SkillMesh                                      = 1,
    EmoteItem                                      = 2,
    ECommercializationItemUseOption_MAX            = 3

};

// Enum  GPResource.ECommercializationAttachableMesh
enum class ECommercializationAttachableMesh : uint8_t
{
    CharacterMesh                                  = 0,
    SkillMesh                                      = 1,
    ECommercializationAttachableMesh_MAX           = 2

};

// Enum  GPResource.ECommercializationResourceType
enum class ECommercializationResourceType : uint8_t
{
    None                                           = 0,
    Spray                                          = 1,
    Voice                                          = 2,
    OneHandedGesture                               = 3,
    TwoHandedGesture                               = 4,
    Emote                                          = 5,
    ECommercializationResourceType_MAX             = 6

};

// Enum  GPResource.ECommercializationResourceRarity
enum class ECommercializationResourceRarity : uint8_t
{
    None                                           = 0,
    Common                                         = 1,
    Rare                                           = 2,
    Epic                                           = 3,
    Legendary                                      = 4,
    Prestige                                       = 5,
    ECommercializationResourceRarity_MAX           = 6

};

// Enum  GPResource.EMediaDownloadType
enum class EMediaDownloadType : uint8_t
{
    EMDT_DefaultPackage                            = 0,
    EMDT_PufferDownload                            = 1,
    EMDT_Web                                       = 2,
    EMDT_PC_Web                                    = 3,
    EMDT_Both_Web                                  = 4,
    EMDT_MAX                                       = 5

};

// Enum  GPResource.ECraterSizeType
enum class ECraterSizeType : uint8_t
{
    ZeroSize                                       = 0,
    FlatSmallSize                                  = 1,
    FlatMiddleSize                                 = 2,
    FlatBigSize                                    = 3,
    MicroSize                                      = 4,
    SmallSize                                      = 5,
    MiddleSize                                     = 6,
    BigSize                                        = 7,
    HugeSize                                       = 8,
    ECraterSizeType_MAX                            = 9

};

// Enum  GPResource.EUIAudioPreloadState
enum class EUIAudioPreloadState : uint8_t
{
    EUAPS_Default                                  = 0,
    EUAPS_SOLLobby                                 = 1,
    EUAPS_MPLobby                                  = 2,
    EUAPS_MP                                       = 4,
    EUAPS_SOL                                      = 8,
    EUAPS_Raid                                     = 16,
    EUAPS_BHD                                      = 32,
    EUAPS_ModeHall                                 = 64,
    EUAPS_MAX                                      = 65

};

// Enum  GPResource.EFXAudioStopType
enum class EFXAudioStopType : uint8_t
{
    None                                           = 0,
    FXDeactivate                                   = 1,
    FXRecycleToPool                                = 2,
    Normal                                         = 3,
    Never                                          = 4,
    EFXAudioStopType_MAX                           = 5

};

// Enum  GPResource.EResourceFXType
enum class EResourceFXType : uint8_t
{
    OTHER                                          = 0,
    MUZZLEFLASH                                    = 1,
    EXPLODE                                        = 2,
    IMPACT                                         = 3,
    TRIAL                                          = 4,
    SKILL                                          = 5,
    MUZZLETRAIL                                    = 6,
    SHELLDROP                                      = 7,
    VEHICLE                                        = 8,
    DESTRUCTIBLE                                   = 9,
    GAMEMODE                                       = 10,
    WEAPONPARTS                                    = 11,
    IMPORTANTTRAIL                                 = 12,
    EResourceFXType_MAX                            = 13

};

// Enum  GPSettings.EMainFlowState
enum class EMainFlowState : uint8_t
{
    Default                                        = 0,
    Lobby                                          = 1,
    Loading                                        = 2,
    SafeHouse                                      = 3,
    InGame                                         = 4,
    LobbyBHD                                       = 5,
    EMainFlowState_MAX                             = 6

};

// Enum  GPSettings.EGPDriverCompatibilityHandleMethod
enum class EGPDriverCompatibilityHandleMethod : uint8_t
{
    Warning                                        = 0,
    Block                                          = 1,
    EGPDriverCompatibilityHandleMethod_MAX         = 2

};

// Enum  GPSettings.EGPDriverCompatibilityVendorTypeHD
enum class EGPDriverCompatibilityVendorTypeHD : uint8_t
{
    None                                           = 0,
    Nvidia                                         = 1,
    AMD                                            = 2,
    Intel                                          = 4,
    EGPDriverCompatibilityVendorTypeHD_MAX         = 5

};

// Enum  GPSettings.EGPDriverCompatibilityConditionTypeHD
enum class EGPDriverCompatibilityConditionTypeHD : uint8_t
{
    None                                           = 0,
    Whitelist                                      = 1,
    Blacklist                                      = 2,
    EGPDriverCompatibilityConditionTypeHD_MAX      = 3

};

// Enum  GPSettings.EGPDriverCompatibilityConditionOpHD
enum class EGPDriverCompatibilityConditionOpHD : uint8_t
{
    None                                           = 0,
    G                                              = 1,
    GE                                             = 2,
    L                                              = 3,
    LE                                             = 4,
    E                                              = 5,
    EGPDriverCompatibilityConditionOpHD_MAX        = 6

};

// Enum  GPSettings.EGPUDriverSectionTypeHD
enum class EGPUDriverSectionTypeHD : uint8_t
{
    None                                           = 0,
    WDDMVersion                                    = 1,
    DXVersion                                      = 2,
    BaseAndBuild                                   = 3,
    FullVersion                                    = 4,
    FullVersionV2                                  = 5,
    DriverDate                                     = 6,
    EGPUDriverSectionTypeHD_MAX                    = 7

};

// Enum  GPSettings.EHardwareTypeHD
enum class EHardwareTypeHD : uint8_t
{
    None                                           = 0,
    CPU                                            = 1,
    GPU                                            = 2,
    MEM                                            = 3,
    EHardwareTypeHD_MAX                            = 4

};

// Enum  GPSettings.EGraphicsQualityLevelHD
enum class EGraphicsQualityLevelHD : uint8_t
{
    None                                           = 0,
    INVALIDMEM                                     = 1,
    INVALIDCPU                                     = 2,
    INVALIDGPU                                     = 3,
    BELOW                                          = 4,
    LOW                                            = 5,
    MID                                            = 6,
    HIGH                                           = 7,
    EPIC                                           = 8,
    WILD                                           = 9,
    EGraphicsQualityLevelHD_MAX                    = 10

};

// Enum  GPSettings.EGPUVendorHD
enum class EGPUVendorHD : uint8_t
{
    Other                                          = 0,
    Nvidia                                         = 1,
    AMD                                            = 2,
    Intel                                          = 3,
    EGPUVendorHD_MAX                               = 4

};

// Enum  GPUserInterface.EButtonState
enum class EButtonState : uint8_t
{
    Activated                                      = 0,
    FocusReceived                                  = 1,
    Hovered                                        = 2,
    Pressed                                        = 3,
    Deactivated                                    = 4,
    DeFocusReceived                                = 5,
    DeHovered                                      = 6,
    DePressed                                      = 7,
    Disabled                                       = 8,
    EButtonState_MAX                               = 9

};

// Enum  GPUserInterface.ECheckButtonState
enum class ECheckButtonState : uint8_t
{
    Checked                                        = 0,
    CheckedFocusReceived                           = 1,
    CheckedHovered                                 = 2,
    CheckedPressed                                 = 3,
    Unchecked                                      = 4,
    UncheckedFocusReceived                         = 5,
    UncheckedHovered                               = 6,
    UncheckedPressed                               = 7,
    Disabled                                       = 8,
    ECheckButtonState_MAX                          = 9

};

// Enum  GPUserInterface.EFilterStateType
enum class EFilterStateType : uint8_t
{
    NoOrder                                        = 0,
    InOrder                                        = 1,
    DeOrder                                        = 2,
    EFilterStateType_MAX                           = 3

};

// Enum  GPUserInterface.ECarouselV2ScrollDirection
enum class ECarouselV2ScrollDirection : uint8_t
{
    Carousel_Left                                  = 0,
    Carousel_Right                                 = 1,
    Carousel_MAX                                   = 2

};

// Enum  GPUserInterface.ECarouselV2Curve
enum class ECarouselV2Curve : uint8_t
{
    Const                                          = 0,
    Linear                                         = 1,
    Quad                                           = 2,
    EaseInOutQuad                                  = 3,
    Cubic                                          = 4,
    ECarouselV2Curve_MAX                           = 5

};

// Enum  GPUserInterface.ETipsTriggerReason
enum class ETipsTriggerReason : uint8_t
{
    Hover                                          = 0,
    Click                                          = 1,
    ClickBlankSpace                                = 2,
    Manually                                       = 3,
    OnClose                                        = 4,
    ParentHidden                                   = 5,
    ETipsTriggerReason_MAX                         = 6

};

// Enum  GPUserInterface.ETipsConstrainMode
enum class ETipsConstrainMode : uint8_t
{
    Free                                           = 0,
    ConstrainInViewport                            = 1,
    ConstrainInTipsRoot                            = 2,
    ConstrainInWidgetByPath                        = 3,
    ConstrainInGivenWidget                         = 4,
    ETipsConstrainMode_MAX                         = 5

};

// Enum  GPUserInterface.ETipsTriggerEventMode
enum class ETipsTriggerEventMode : uint8_t
{
    BindNearestParent                              = 0,
    BindWidgetByPath                               = 1,
    Custom                                         = 3,
    ETipsTriggerEventMode_MAX                      = 4

};

// Enum  GPUserInterface.ETipsDirection
enum class ETipsDirection : uint8_t
{
    Left                                           = 0,
    Top                                            = 1,
    Right                                          = 2,
    Bottom                                         = 3,
    ETipsDirection_MAX                             = 4

};

// Enum  GPUserInterface.ETipsAnchorSpace
enum class ETipsAnchorSpace : uint8_t
{
    Relative                                       = 0,
    SurroundingParent                              = 1,
    SurroundingByPath                              = 2,
    ETipsAnchorSpace_MAX                           = 3

};

// Enum  GPUserInterface.ETipsAttachMode
enum class ETipsAttachMode : uint8_t
{
    Static                                         = 0,
    Mouse                                          = 1,
    ETipsAttachMode_MAX                            = 2

};

// Enum  GPUserInterface.EDFButtonPresetStyleType
enum class EDFButtonPresetStyleType : uint8_t
{
    Custom                                         = 0,
    ThemeV1                                        = 1,
    ThemeV2                                        = 2,
    ThemeV3                                        = 3,
    ThemeV4                                        = 4,
    DynamicTheme                                   = 5,
    EDFButtonPresetStyleType_MAX                   = 6

};

// Enum  GPUserInterface.EButtonHoverAnimType
enum class EButtonHoverAnimType : uint8_t
{
    Parallel                                       = 0,
    Sequential                                     = 1,
    EButtonHoverAnimType_MAX                       = 2

};

// Enum  GPUserInterface.EDFCheckButtonPresetStyleType
enum class EDFCheckButtonPresetStyleType : uint8_t
{
    Custom                                         = 0,
    ThemeV1                                        = 1,
    ThemeV2                                        = 2,
    ThemeV3                                        = 3,
    ThemeV4                                        = 4,
    DynamicTheme                                   = 5,
    EDFCheckButtonPresetStyleType_MAX              = 6

};

// Enum  GPUserInterface.ECheckButtonHoverAnimType
enum class ECheckButtonHoverAnimType : uint8_t
{
    Parallel                                       = 0,
    Sequential                                     = 1,
    ECheckButtonHoverAnimType_MAX                  = 2

};

// Enum  GPUserInterface.EDFCommonPopWindowStyleType
enum class EDFCommonPopWindowStyleType : uint8_t
{
    Custom                                         = 0,
    ThemeV1                                        = 1,
    ThemeV2                                        = 2,
    DynamicTheme                                   = 3,
    EDFCommonPopWindowStyleType_MAX                = 4

};

// Enum  GPUserInterface.ETextChecked
enum class ETextChecked : uint8_t
{
    Unchecked                                      = 0,
    Checked                                        = 1,
    ETextChecked_MAX                               = 2

};

// Enum  GPUserInterface.EDFDefaultScrollBoxType
enum class EDFDefaultScrollBoxType : uint8_t
{
    None                                           = 0,
    Shared                                         = 1,
    EDFDefaultScrollBoxType_MAX                    = 2

};

// Enum  GPUserInterface.EDFDefaultScrollBarType
enum class EDFDefaultScrollBarType : uint8_t
{
    None                                           = 0,
    Shared                                         = 1,
    Shared2                                        = 2,
    Shared3                                        = 3,
    Shared4                                        = 4,
    EDFDefaultScrollBarType_MAX                    = 5

};

// Enum  GPUserInterface.EDropDownSelection
enum class EDropDownSelection : uint8_t
{
    Single                                         = 0,
    Multiple                                       = 1,
    EDropDownSelection_MAX                         = 2

};

// Enum  GPUserInterface.ETabType
enum class ETabType : uint8_t
{
    HorizontalTab                                  = 0,
    VerticalTab                                    = 1,
    Other                                          = 2,
    ETabType_MAX                                   = 3

};

// Enum  GPUserInterface.ESizeSetting
enum class ESizeSetting : uint8_t
{
    TabWidth                                       = 0,
    TabHeight                                      = 1,
    OptionWidth                                    = 2,
    OptionHeight                                   = 3,
    Other                                          = 4,
    ESizeSetting_MAX                               = 5

};

// Enum  GPUserInterface.ESizeMode
enum class ESizeMode : uint8_t
{
    TabSize                                        = 0,
    OptionSize                                     = 1,
    ESizeMode_MAX                                  = 2

};

// Enum  GPUserInterface.ETabLevel
enum class ETabLevel : uint8_t
{
    PrimaryTab                                     = 0,
    SecondaryTab                                   = 1,
    ETabLevel_MAX                                  = 2

};

// Enum  GPUserInterface.ESliderCyclePosition
enum class ESliderCyclePosition : uint8_t
{
    ZeroPercent                                    = 0,
    FiftyPercent                                   = 1,
    HundredPercent                                 = 2,
    Num                                            = 3,
    Invalid                                        = 4,
    ESliderCyclePosition_MAX                       = 5

};

// Enum  GPUserInterface.EFlowAnimType
enum class EFlowAnimType : uint8_t
{
    Normal                                         = 0,
    Weak                                           = 1,
    Custom                                         = 2,
    EFlowAnimType_MAX                              = 3

};

// Enum  GPUserInterface.EWorkingState
enum class EWorkingState : uint8_t
{
    Terminal                                       = 0,
    Initing                                        = 1,
    Idle                                           = 2,
    Working                                        = 3,
    EWorkingState_MAX                              = 4

};

// Enum  GPUserInterface.EDFWidgetStyleType
enum class EDFWidgetStyleType : uint8_t
{
    None                                           = 0,
    CommonButton                                   = 1,
    CommonCheckButton                              = 2,
    CommonPopWindow                                = 3,
    EDFWidgetStyleType_MAX                         = 4

};

// Enum  GPUserInterface.EBackgroundStretchType
enum class EBackgroundStretchType : uint8_t
{
    None                                           = 0,
    ScaleToFill                                    = 1,
    ScaleToFit                                     = 2,
    EBackgroundStretchType_MAX                     = 3

};

// Enum  UMG.EWidgetAnimationEvent
enum class EWidgetAnimationEvent : uint8_t
{
    Started                                        = 0,
    Finished                                       = 1,
    EWidgetAnimationEvent_MAX                      = 2

};

// Enum  Engine.EInputEvent
enum class EInputEvent : uint8_t
{
    IE_Pressed                                     = 0,
    IE_Released                                    = 1,
    IE_Repeat                                      = 2,
    IE_DoubleClick                                 = 3,
    IE_Axis                                        = 4,
    IE_MAX                                         = 5

};

// Enum  UMG.EUMGSequencePlayMode
enum class EUMGSequencePlayMode : uint8_t
{
    Forward                                        = 0,
    Reverse                                        = 1,
    PingPong                                       = 2,
    EUMGSequencePlayMode_MAX                       = 3

};

// Enum  UMG.EWidgetTickFrequency
enum class EWidgetTickFrequency : uint8_t
{
    Never                                          = 0,
    Auto                                           = 1,
    EWidgetTickFrequency_MAX                       = 2

};

// Enum  GPUserInterfaceCore.EUIState
enum class EUIState : uint8_t
{
    Init                                           = 0,
    Open                                           = 1,
    ShowBegin                                      = 2,
    Show                                           = 3,
    HideBegin                                      = 4,
    Hide                                           = 5,
    CloseBegin                                     = 6,
    Close                                          = 7,
    Mute                                           = 8,
    Release                                        = 9,
    EUIState_MAX                                   = 10

};

// Enum  SlateCore.EFocusCause
enum class EFocusCause : uint8_t
{
    Mouse                                          = 0,
    Navigation                                     = 1,
    SetDirectly                                    = 2,
    Cleared                                        = 3,
    OtherWidgetLostFocus                           = 4,
    WindowActivate                                 = 5,
    EFocusCause_MAX                                = 6

};

// Enum  GPUserInterfaceCore.EGPUIFocusEffectType
enum class EGPUIFocusEffectType : uint8_t
{
    None                                           = 0,
    SeparatedFocusEffect                           = 1,
    ShareHoverEffect                               = 2,
    EGPUIFocusEffectType_MAX                       = 3

};

// Enum  GPUserInterfaceCore.EViewDragMode
enum class EViewDragMode : uint8_t
{
    Normal                                         = 0,
    ValidateAngle                                  = 1,
    InverseValidateAngle                           = 2,
    EViewDragMode_MAX                              = 3

};

// Enum  GPUserInterfaceCore.ETriggerDragLogic
enum class ETriggerDragLogic : uint8_t
{
    DistanceCheck                                  = 0,
    DragPointSample                                = 1,
    ETriggerDragLogic_MAX                          = 2

};

// Enum  GPUserInterfaceCore.ELuaUIBaseViewWantedInputMode
enum class ELuaUIBaseViewWantedInputMode : uint8_t
{
    None                                           = 0,
    GameOnly                                       = 1,
    UIOnly                                         = 2,
    GameAndUI                                      = 3,
    ELuaUIBaseViewWantedInputMode_MAX              = 4

};

// Enum  GPUserInterfaceCore.EGPUINavigationGroupType
enum class EGPUINavigationGroupType : uint8_t
{
    None                                           = 0,
    Stack                                          = 1,
    DefaultFocus                                   = 2,
    StackAndDefaultFocus                           = 3,
    EGPUINavigationGroupType_MAX                   = 4

};

// Enum  GPUserInterfaceCore.EGPUIAnalogStick
enum class EGPUIAnalogStick : uint8_t
{
    Left                                           = 0,
    Right                                          = 1,
    Max                                            = 2

};

// Enum  GPUserInterfaceCore.EGPUINavScrollingCondition
enum class EGPUINavScrollingCondition : uint8_t
{
    None                                           = 0,
    Default                                        = 1,
    EGPUINavScrollingCondition_MAX                 = 2

};

// Enum  GPUserInterfaceCore.EGPUINavWidgetFocusedAction
enum class EGPUINavWidgetFocusedAction : uint8_t
{
    Default                                        = 0,
    Click                                          = 1,
    EGPUINavWidgetFocusedAction_MAX                = 2

};

// Enum  GPUserInterfaceCore.EGPAnalogCursorInputMappingType
enum class EGPAnalogCursorInputMappingType : uint8_t
{
    SlowToFast                                     = 0,
    Linear                                         = 1,
    FastToSlow                                     = 2,
    EGPAnalogCursorInputMappingType_MAX            = 3

};

// Enum  GPUserInterfaceCore.EGPAnalogCursorAccelerationType
enum class EGPAnalogCursorAccelerationType : uint8_t
{
    SlowToFast                                     = 0,
    Linear                                         = 1,
    FastToSlow                                     = 2,
    EGPAnalogCursorAccelerationType_MAX            = 3

};

// Enum  GPUserInterfaceCore.EGPUINavDirection
enum class EGPUINavDirection : uint8_t
{
    Invalid                                        = 0,
    Next                                           = 1,
    Previous                                       = 2,
    EGPUINavDirection_MAX                          = 3

};

// Enum  GPUserInterfaceCore.EGPUINavHittestFallbackType
enum class EGPUINavHittestFallbackType : uint8_t
{
    Horizental                                     = 0,
    Vertical                                       = 1,
    Max                                            = 2

};

// Enum  GPUserInterfaceCore.EGPUINavGroupBestDefaultType
enum class EGPUINavGroupBestDefaultType : uint8_t
{
    Default                                        = 0,
    TopLeft                                        = 1,
    EGPUINavGroupBestDefaultType_MAX               = 2

};

// Enum  GPUserInterfaceCore.EGPUINavGroupTransSimpleStrategy
enum class EGPUINavGroupTransSimpleStrategy : uint8_t
{
    Default                                        = 0,
    Hittest                                        = 1,
    Distance                                       = 2,
    LastFocused                                    = 4,
    HittestOrDistance                              = 3,
    LastFocusedOrHittestOrDistance                 = 7,
    EGPUINavGroupTransSimpleStrategy_MAX           = 8

};

// Enum  GPUserInterfaceCore.EGPUINavigationDistanceType
enum class EGPUINavigationDistanceType : uint8_t
{
    None                                           = 0,
    Horizontal                                     = 1,
    Vertical                                       = 2,
    Euclidean                                      = 3,
    EGPUINavigationDistanceType_MAX                = 4

};

// Enum  GPUserInterfaceCore.EDynamicNavConfigPriority
enum class EDynamicNavConfigPriority : uint8_t
{
    UI_Stack                                       = 0,
    UI_Pop                                         = 1,
    UI_MAX                                         = 2

};

// Enum  GPUserInterfaceCore.EGPUINavigationSimulateMouseDragState
enum class EGPUINavigationSimulateMouseDragState : uint8_t
{
    Stop                                           = 0,
    Start                                          = 1,
    OnDraging                                      = 2,
    EGPUINavigationSimulateMouseDragState_MAX      = 3

};

// Enum  GPUserInterfaceCore.EGPUINavigationSimulateMouseKeyType
enum class EGPUINavigationSimulateMouseKeyType : uint8_t
{
    LMB                                            = 0,
    CMB                                            = 1,
    RMB                                            = 2,
    EGPUINavigationSimulateMouseKeyType_MAX        = 3

};

// Enum  GPUserInterfaceCore.EGPUINavigationEventType
enum class EGPUINavigationEventType : uint8_t
{
    Left                                           = 0,
    Right                                          = 1,
    Up                                             = 2,
    Down                                           = 3,
    Next                                           = 4,
    Previous                                       = 5,
    AnalogVertical                                 = 6,
    AnalogHorizontal                               = 7,
    Accept                                         = 8,
    Back                                           = 9,
    EGPUINavigationEventType_MAX                   = 10

};

// Enum  GPUserInterfaceCore.EGPFreeAnalogCursorKeyType
enum class EGPFreeAnalogCursorKeyType : uint8_t
{
    Enable                                         = 0,
    Disable                                        = 1,
    Ignore                                         = 2,
    EGPFreeAnalogCursorKeyType_MAX                 = 3

};

// Enum  GPUserInterfaceCore.EGPUINavigationDynamicConfigType
enum class EGPUINavigationDynamicConfigType : uint8_t
{
    Override                                       = 0,
    Coexist                                        = 1,
    EGPUINavigationDynamicConfigType_MAX           = 2

};

// Enum  GPUserInterfaceCore.EBackRootType
enum class EBackRootType : uint8_t
{
    None                                           = 0,
    Image                                          = 1,
    Media                                          = 2,
    CustomBP                                       = 3,
    EBackRootType_MAX                              = 4

};

// Enum  GPUserInterfaceCore.ELuaUILayer
enum class ELuaUILayer : uint8_t
{
    Sub                                            = 0,
    HUD                                            = 10,
    HUD_ScreenEffect                               = 11,
    HUD_Mark                                       = 12,
    HUD_Common                                     = 13,
    HUD_Hint                                       = 14,
    HUD_Feedback                                   = 15,
    HUD_Touch                                      = 16,
    HUD_Popup                                      = 17,
    HUD_LargePopup                                 = 18,
    BackRoot                                       = 21,
    Scene                                          = 22,
    Root                                           = 23,
    Stack                                          = 24,
    Top                                            = 25,
    Loading                                        = 26,
    Pop                                            = 27,
    Tip                                            = 28,
    Mask                                           = 29,
    Admin                                          = 30,
    Watermark                                      = 31,
    ELuaUILayer_MAX                                = 32

};

// Enum  LiteSequence.EParticleKeyType
enum class EParticleKeyType : uint8_t
{
    Activate                                       = 0,
    Deactivate                                     = 1,
    Trigger                                        = 2,
    EParticleKeyType_MAX                           = 3

};

// Enum  LiteSequence.ELiteSequencePlayerStatus
enum class ELiteSequencePlayerStatus : uint8_t
{
    Stopped                                        = 0,
    Playing                                        = 1,
    Paused                                         = 2,
    MAX                                            = 3

};

// Enum  LiteSequence.ELiteSequencePlayDirection
enum class ELiteSequencePlayDirection : uint8_t
{
    Forwards                                       = 0,
    Backwards                                      = 1,
    ELiteSequencePlayDirection_MAX                 = 2

};

// Enum  LiteSequence.ELiteSequenceEvaluationType
enum class ELiteSequenceEvaluationType : uint8_t
{
    FrameLocked                                    = 0,
    WithSubFrames                                  = 1,
    ELiteSequenceEvaluationType_MAX                = 2

};

// Enum  LiteSequence.EUpdateCursorMethod
enum class EUpdateCursorMethod : uint8_t
{
    Play                                           = 0,
    Jump                                           = 1,
    Scrub                                          = 2,
    EUpdateCursorMethod_MAX                        = 3

};

// Enum  LiteSequence.EAnimSequenceState
enum class EAnimSequenceState : uint8_t
{
    Start                                          = 0,
    Pause                                          = 1,
    Resume                                         = 2,
    Stop                                           = 3,
    EAnimSequenceState_MAX                         = 4

};

// Enum  DFMAbility.EBionicSpyCastResult
enum class EBionicSpyCastResult : uint8_t
{
    Success                                        = 0,
    NoTarget                                       = 1,
    TargetDead                                     = 2,
    TargetEscaped                                  = 3,
    OtherError                                     = 4,
    Discovered                                     = 5,
    EBionicSpyCastResult_MAX                       = 6

};

// Enum  DFMAbility.ETouchWaterSurfaceEvent
enum class ETouchWaterSurfaceEvent : uint8_t
{
    None                                           = 0,
    EnterWaterSurface                              = 1,
    LeaveWaterSurface                              = 2,
    ETouchWaterSurfaceEvent_MAX                    = 3

};

// Enum  DFMAbility.EWaterState
enum class EWaterState : uint8_t
{
    OnGround                                       = 0,
    UnderWater                                     = 1,
    AboveWater                                     = 2,
    EWaterState_MAX                                = 3

};

// Enum  DFMAbility.EWaterEffectTriggerType
enum class EWaterEffectTriggerType : uint8_t
{
    None                                           = 0,
    EnterWaterSurface                              = 1,
    LeaveWaterSurface                              = 2,
    UnderWater                                     = 3,
    AboveWater                                     = 4,
    Max                                            = 5

};

// Enum  DFMAbility.EArtilleryShellDropMethod
enum class EArtilleryShellDropMethod : uint8_t
{
    RANDOM                                         = 0,
    ORDER                                          = 1,
    EArtilleryShellDropMethod_MAX                  = 2

};

// Enum  DFMAbility.EChainHookCheckEndType
enum class EChainHookCheckEndType : uint8_t
{
    None                                           = 0,
    ActorLocation                                  = 1,
    HitLocation                                    = 2,
    ClientBindLocation                             = 3,
    PawnViewLocation                               = 4,
    EChainHookCheckEndType_MAX                     = 5

};

// Enum  DFMAbility.EChainHookCheckStartType
enum class EChainHookCheckStartType : uint8_t
{
    None                                           = 0,
    ActorLocation                                  = 1,
    PawnViewLocation                               = 2,
    GrenadeStartLocation                           = 3,
    WeaponSocket                                   = 4,
    EChainHookCheckStartType_MAX                   = 5

};

// Enum  DFMAbility.EBattleFieldPropType
enum class EBattleFieldPropType : uint8_t
{
    None                                           = 0,
    ADS                                            = 1,
    RebornFlag                                     = 2,
    Bunker                                         = 3,
    MedicalBox                                     = 4,
    AmmoBox                                        = 5,
    AntiTankMine                                   = 6,
    ClayMoreMine                                   = 7,
    FlameThrowerArea                               = 8,
    ElectricShock                                  = 9,
    EBattleFieldPropType_MAX                       = 10

};

// Enum  DFMAbility.EAbilityDetectorTriggerType
enum class EAbilityDetectorTriggerType : uint8_t
{
    None                                           = 0,
    Recycle                                        = 1,
    ManualActive                                   = 2,
    Both                                           = 3,
    EAbilityDetectorTriggerType_MAX                = 4

};

// Enum  DFMAbility.EDiffuseAreaCellCheckState
enum class EDiffuseAreaCellCheckState : uint8_t
{
    Default                                        = 0,
    PassTrace                                      = 1,
    Failed                                         = 2,
    Success                                        = 3,
    EDiffuseAreaCellCheckState_MAX                 = 4

};

// Enum  DFMAbility.EDiffuseAreaCellDiffuseType
enum class EDiffuseAreaCellDiffuseType : uint8_t
{
    Default                                        = 0,
    X                                              = 1,
    Nx                                             = 2,
    Y                                              = 3,
    Ny                                             = 4,
    EDiffuseAreaCellDiffuseType_MAX                = 5

};

// Enum  DFMAbility.EDiffuseAreaType
enum class EDiffuseAreaType : uint8_t
{
    None                                           = 0,
    Incendiary                                     = 1,
    BarbedWire                                     = 2,
    EDiffuseAreaType_MAX                           = 3

};

// Enum  DFMAbility.EAbilityLevelActorType
enum class EAbilityLevelActorType : uint8_t
{
    ENone                                          = 0,
    EADS                                           = 1,
    ERebornFlag                                    = 2,
    EBunker                                        = 3,
    EAbilityLevelActorType_MAX                     = 4

};

// Enum  DFMAbility.EVehicleBehaviorForbit
enum class EVehicleBehaviorForbit : uint8_t
{
    None                                           = 0,
    Move                                           = 1,
    Jump                                           = 2,
    Boom                                           = 4,
    TurnRate                                       = 8,
    LookUpTurnRate                                 = 16,
    EVehicleBehaviorForbit_MAX                     = 17

};

// Enum  DFMAbility.EDFMAbilityCastFailedReason
enum class EDFMAbilityCastFailedReason : uint8_t
{
    inCooldown                                     = 0,
    StateFailed                                    = 1,
    Disable                                        = 2,
    Forbit                                         = 3,
    CampNum                                        = 4,
    Score                                          = 5,
    TeamNum                                        = 6,
    Sector                                         = 7,
    EDFMAbilityCastFailedReason_MAX                = 8

};

// Enum  DFMAbility.EAbilitySmokeActorDetectionStage
enum class EAbilitySmokeActorDetectionStage : uint8_t
{
    DetectionStage_None                            = 0,
    DetectionStage_Course                          = 1,
    DetectionStage_Voxel                           = 2,
    DetectionStage_MAX                             = 3

};

// Enum  DFMAbility.ESmokeWallUASStage
enum class ESmokeWallUASStage : uint8_t
{
    UASStage_None                                  = 0,
    UASStage_Equip                                 = 1,
    UASStage_Idle                                  = 2,
    UASStage_Fly                                   = 3,
    UASStage_MAX                                   = 4

};

// Enum  DFMAbility.EVehicleBoss04FireMode
enum class EVehicleBoss04FireMode : uint8_t
{
    Default                                        = 0,
    MachineGun                                     = 1,
    StingerMissile                                 = 2,
    EVehicleBoss04FireMode_MAX                     = 3

};

// Enum  DFMAbility.EVehicleBoss04WeaponType
enum class EVehicleBoss04WeaponType : uint8_t
{
    None                                           = 0,
    MachineGun                                     = 1,
    StingerMissle                                  = 2,
    EVehicleBoss04WeaponType_MAX                   = 3

};

// Enum  DFMAbility.EAudioRoleType
enum class EAudioRoleType : uint8_t
{
    ET_ALL                                         = 0,
    EE_1P                                          = 1,
    EE_3P                                          = 2,
    EAudioRoleType_MAX                             = 3

};

// Enum  DFMAbility.ERopeTriggerType
enum class ERopeTriggerType : uint8_t
{
    RopeToggle                                     = 0,
    RopeStart                                      = 1,
    RopeEnd                                        = 2,
    RopeBeginEnd                                   = 3,
    RopeNoBeginToEnd                               = 4,
    RopeMove                                       = 5,
    RopeRescue                                     = 6,
    RopeClearRescue                                = 7,
    RopeLeaveHanging                               = 8,
    RopeRecordPressMove                            = 9,
    RopeRecordHitMove                              = 10,
    ClearRope                                      = 11,
    ERopeTriggerType_MAX                           = 12

};

// Enum  DFMAbility.EAbilitySwithWeaponType
enum class EAbilitySwithWeaponType : uint8_t
{
    DefaultWeapon                                  = 0,
    MainWeapon                                     = 1,
    MeleeWeapon                                    = 2,
    EmptyHand                                      = 3,
    LastUsedWeapon                                 = 4,
    NextWeapon                                     = 5,
    PreWeapon                                      = 6,
    PositionWeapon                                 = 7,
    AnyWeapon                                      = 8,
    LastThenAnyUsedWeapon                          = 9,
    LastUsedWeaponOrEmpty                          = 10,
    SkillWeapon                                    = 11,
    SkillEnd                                       = 12,
    EAbilitySwithWeaponType_MAX                    = 13

};

// Enum  DFMAbility.ERebornFlagType
enum class ERebornFlagType : uint8_t
{
    EAbility                                       = 0,
    EVehicle                                       = 1,
    ERankSkill                                     = 2,
    ERebornFlagType_MAX                            = 3

};

// Enum  DFMAbility.ESpiderAttackMode
enum class ESpiderAttackMode : uint8_t
{
    SpiderAttackMode_Projectile                    = 0,
    SpiderAttackMode_Explode                       = 1,
    SpiderAttackMode_MAX                           = 2

};

// Enum  DFMAbility.ESpiderState
enum class ESpiderState : uint8_t
{
    SpiderState_Sleep                              = 0,
    SpiderState_Awake                              = 1,
    SpiderState_Detect                             = 2,
    SpiderState_Follow                             = 3,
    SpiderState_ReadyAttack                        = 4,
    SpiderState_Attack                             = 5,
    SpiderState_ReadyDestroyed                     = 6,
    SpiderState_Max                                = 7

};

// Enum  DFMAbility.ESpiderMoveMode
enum class ESpiderMoveMode : uint8_t
{
    MOVE_None                                      = 0,
    MOVE_Walking                                   = 1,
    MOVE_Falling                                   = 2,
    MOVE_Climbing                                  = 3,
    MOVE_MAX                                       = 4

};

// Enum  DFMAbility.ESpiderControlMode
enum class ESpiderControlMode : uint8_t
{
    None                                           = 0,
    Server                                         = 1,
    ClientSimulate                                 = 2,
    ESpiderControlMode_MAX                         = 3

};

// Enum  DFMAbility.FThreatDetectionCheckResult
enum class FThreatDetectionCheckResult : uint8_t
{
    BaseCheckFailed                                = 0,
    BlockCheckFailed                               = 1,
    Pass                                           = 2,
    FThreatDetectionCheckResult_MAX                = 3

};

// Enum  DFMAbility.EThrowBlockingPartState
enum class EThrowBlockingPartState : uint8_t
{
    Initial                                        = 0,
    Spawn                                          = 1,
    Normal                                         = 2,
    Damaged                                        = 3,
    Destroyed                                      = 4,
    EThrowBlockingPartState_MAX                    = 5

};

// Enum  DFMAbility.EThrowBlockingExpansionType
enum class EThrowBlockingExpansionType : uint8_t
{
    FullyExpanded                                  = 0,
    OnGround                                       = 1,
    OnWall                                         = 2,
    EThrowBlockingExpansionType_MAX                = 3

};

// Enum  DFMAudio.FCharacterAudioState
enum class FCharacterAudioState : uint8_t
{
    EState_1P                                      = 0,
    EState_3P                                      = 1,
    EState_TEAMATE_3P                              = 2,
    EState_ENEMY_3P                                = 3,
    EState_AIM_1P                                  = 4,
    EState_AIM_3P                                  = 5,
    EState_MAX                                     = 6

};

// Enum  DFMAudio.EDFMAudioAniNotifyType
enum class EDFMAudioAniNotifyType : uint8_t
{
    EANI_CHANGLE_CLIP                              = 0,
    EANI_CHANGLE                                   = 1,
    EANI_CHANGLE                                   = 2,
    EANI_CHANGLE                                   = 3,
    EANI_CHANGLE                                   = 4,
    EANI_CHANGLE                                   = 5,
    EANI_CHANGLE                                   = 6,
    EANI_CHANGLE                                   = 7,
    EANI_CHANGLE                                   = 8,
    EANI_CHANGLE                                   = 9,
    EANI_CHANGLE                                   = 10,
    EANI_CHANGLE                                   = 11,
    EANI_CHANGLE                                   = 12,
    EANI_CHANGLE                                   = 13,
    EANI_CHANGLE                                   = 14,
    EANI_CHANGLE                                   = 15,
    EANI_CHANGLE                                   = 16,
    EANI_CHANGLE                                   = 17,
    EANI_CHANGLE                                   = 18,
    EANI_CHANGLE                                   = 19,
    EANI_CHANGLE                                   = 20,
    EANI_CHANGLE                                   = 21,
    EANI_CHANGLE                                   = 22,
    EANI_CHANGLE                                   = 23,
    EANI_CHANGLE                                   = 24,
    EANI_CHANGLE                                   = 25,
    EANI_CHANGLE                                   = 26,
    EANI_CHANGLE                                   = 27,
    EANI_CHANGLE                                   = 28,
    EANI_CHANGLE                                   = 29,
    EANI_CHANGLE                                   = 30,
    EANI_CHANGLE                                   = 31,
    EANI_CHANGLE                                   = 32,
    EANI_CHANGLE                                   = 33,
    EANI_CHANGLE                                   = 34,
    EANI_CHANGLE                                   = 35,
    EANI_CHANGLE                                   = 36,
    EANI_CHANGLE                                   = 37,
    EANI_CHANGLE                                   = 38,
    EANI_CHANGLE                                   = 39,
    EANI_CHANGLE                                   = 40,
    EANI_CHANGLE                                   = 41,
    EANI_CHANGLE                                   = 42,
    EANI_CHANGLE                                   = 43,
    EANI_CHANGLE                                   = 44,
    EANI_CHANGLE                                   = 45,
    EANI_CHANGLE                                   = 46,
    EANI_CHANGLE                                   = 47,
    EANI_CHANGLE                                   = 48,
    EANI_CHANGLE                                   = 49,
    EANI_CHANGLE                                   = 50,
    EANI_CHANGLE                                   = 51,
    EANI_CHANGLE                                   = 52,
    EANI_CHANGLE                                   = 53,
    EANI_CHANGLE_MAX                               = 54

};

// Enum  DFMAudio.EUIAudioEvent
enum class EUIAudioEvent : uint8_t
{
    NONE                                           = 0,
    EBGM_GlobalInit                                = 1,
    EBGM_Login                                     = 2,
    EBGM_Lobby                                     = 3,
    EBGM_NONE                                      = 4,
    EUI_ClickNormal                                = 5,
    EUI_ItemSearchWhite                            = 6,
    EUI_ItemSearchBlue                             = 7,
    EUI_ItemSearchPurple                           = 8,
    EUI_ItemSearchOrange                           = 9,
    EUI_MoveInContainer                            = 10,
    EUI_MoveAcrossContainer                        = 11,
    EUI_MoveIntoSafeBox                            = 12,
    EUI_CommonItemClick                            = 13,
    EUI_Drop_Ammo                                  = 14,
    EUI_Drop_Consumable                            = 15,
    EUI_Drop_Equipment                             = 16,
    EUI_Drop_Weapon                                = 17,
    EUI_Drop_Common                                = 18,
    EUI_Login_Vedio_Sound                          = 19,
    EUI_Lobby_Vedio_Sound                          = 20,
    EUI_ModeHall_Vedio_Sound                       = 21,
    EUIAudioEvent_MAX                              = 22

};

// Enum  DFMAudio.EWeapon3PFireType
enum class EWeapon3PFireType : uint8_t
{
    ENone                                          = 0,
    ENear                                          = 1,
    EMedium                                        = 2,
    EFar                                           = 3,
    EDist                                          = 4,
    EWeapon3PFireType_MAX                          = 5

};

// Enum  DFMAudio.EAudioArea
enum class EAudioArea : uint8_t
{
    EClsInView                                     = 0,
    EClsOutView                                    = 1,
    EFarInView                                     = 2,
    EFarOutView                                    = 3,
    ETeamMateInView                                = 4,
    ETeamMateOutView                               = 5,
    EAudioArea_MAX                                 = 6

};

// Enum  DFMAudio.EBulletFlyTraceDistance
enum class EBulletFlyTraceDistance : uint8_t
{
    ENear                                          = 0,
    EMedium                                        = 1,
    EFar                                           = 2,
    EOutOfRange                                    = 3,
    EBulletFlyTraceDistance_MAX                    = 4

};

// Enum  DFMAudio.FWeaponAudioMode
enum class FWeaponAudioMode : uint8_t
{
    EWeapMode_None                                 = 0,
    EWeapMode_1P                                   = 1,
    EWeapMode_3P                                   = 2,
    EWeapMode_MAX                                  = 3

};

// Enum  DFMFoliage.EFoliageCollisionName
enum class EFoliageCollisionName : uint8_t
{
    FoliageCollisionName_None                      = 0,
    FoliageCollisionName_AI                        = 1,
    FoliageCollisionName_Sound                     = 2,
    FoliageCollisionType_Max                       = 3,
    EFoliageCollisionName_MAX                      = 4

};

// Enum  DFMFoliage.EFoliageCollisionType
enum class EFoliageCollisionType : uint8_t
{
    FoliageCollisionType_BoundBox                  = 0,
    FoliageCollisionType_Voxel                     = 1,
    FoliageCollisionType_Max                       = 2

};

// Enum  DFMGameChat.EChatType
enum class EChatType : uint8_t
{
    DSChatAll                                      = 0,
    DSChatTeam                                     = 1,
    DSChatAppointment                              = 2,
    DSChatCamp                                     = 3,
    DSChatMPELection                               = 4,
    EChatType_MAX                                  = 5

};

// Enum  DFMGameplay.EScoreName
enum class EScoreName : uint8_t
{
    ENone                                          = 0,
    ENormalKill                                    = 1,
    ENormalAssist                                  = 2,
    EHeadKill                                      = 3,
    EFarGunKill                                    = 4,
    EFarHeadKill                                   = 5,
    EContinueKill                                  = 6,
    EBreakEnemyContinueKill                        = 7,
    EKillEnemyPilot                                = 8,
    EReboot                                        = 9,
    EDefendCapPointKill                            = 10,
    ECapturing                                     = 11,
    ECaptured                                      = 12,
    ECapturedByCamp                                = 13,
    ECaptured2Neutral                              = 14,
    ECaptureProgress                               = 15,
    ECapturedSector                                = 16,
    EStickToTheGoal                                = 17,
    ERetreat                                       = 18,
    ERescue                                        = 19,
    ERescueTeam                                    = 20,
    EAid                                           = 21,
    ERevenge                                       = 22,
    ESquadRevenge                                  = 23,
    EAbility_RebotRescue                           = 25,
    EVehicle_DriverAssist                          = 26,
    EVehicle_PassengerAssist                       = 27,
    EVehicle_Redeploy                              = 28,
    EVehicle_KillCharacter                         = 29,
    EVehicle_AttackVehicle                         = 30,
    EVehicle_DestroyVehicle                        = 31,
    ESceneWeapon_KillCharacter                     = 32,
    EHitPlayerCharacter                            = 33,
    EPositionSupportSkillHit                       = 34,
    EPositionSupportSkillKill                      = 35,
    ERedeployOnPlayer                              = 36,
    EReDeployOnLastMan                             = 37,
    SupportGunCureTeammate                         = 38,
    SupportGunHead                                 = 39,
    SupportSmokeCreate                             = 40,
    SupportSelfCure                                = 41,
    SupportSmokeCureTeammate                       = 42,
    SupportEffectApply                             = 43,
    KillSupportEffectEnermy                        = 44,
    HelpKillSupportEffectEnermy                    = 45,
    ProxSensorMark                                 = 46,
    RebornFlag                                     = 47,
    MarkAssist                                     = 48,
    BreakProxSensor                                = 49,
    BreakRebornFlag                                = 50,
    BreakAmmoBox                                   = 51,
    PenetratingSniperKill                          = 52,
    PenetratingSniperShot                          = 53,
    WeaponKillCharacter                            = 54,
    WeaponDestroyVehicle                           = 55,
    WeaponHitVehicle                               = 56,
    EngineerSonicTrapTrigger                       = 57,
    EAssistKill                                    = 58,
    ENormalKnockDown                               = 59,
    EHeadKnockDown                                 = 60,
    EAssistKnockDown                               = 61,
    EVehicle_HeavyDamage                           = 62,
    EVehicle_PartCannoDamage                       = 63,
    EVehicle_PartTrackDamage                       = 64,
    EVehicle_PartEngineDamage                      = 65,
    EGunner_Attack                                 = 66,
    EGunner_Defend                                 = 67,
    EGunner_Resonate                               = 68,
    EGunner_ResonateMine                           = 69,
    ERepairCamp                                    = 70,
    ERepairTeam                                    = 71,
    ERepairVehicleAssist                           = 72,
    ERepairSceneWeaponAssist                       = 73,
    EFireSuppressionAssistCamp                     = 74,
    EFireSuppressionAssistTeam                     = 75,
    ERequestCompleted                              = 76,
    EMarkEnemy                                     = 77,
    ESmokeAssist                                   = 78,
    ECampMarkAssist                                = 79,
    EAddAmmo                                       = 80,
    ElectricArrowHit                               = 81,
    ElectricArrowKill                              = 82,
    ElectricArrowDestroyVehicle                    = 83,
    ProxSensorArrowMark                            = 84,
    ProxSensorArrowAssist                          = 85,
    ArrowHit                                       = 86,
    ArrowKill                                      = 87,
    GrenadeAssist                                  = 88,
    GrenadeDestroyVehicle                          = 89,
    CatTracingEnemy                                = 90,
    CatTracingEnemyAssist                          = 91,
    CatTracingEnemyKill                            = 92,
    FlashDroneHitEnemy                             = 93,
    FlashDroneAssist                               = 94,
    DataKnifeKill                                  = 95,
    DataKnifeMarkKill                              = 96,
    DataKnifeAssist                                = 97,
    C301LauncherKill                               = 98,
    C301LauncherDestroyVehicle                     = 99,
    C301SuperSprintKill                            = 100,
    C301SuperSprintAssist                          = 101,
    C301SmokeAssist                                = 102,
    C301SmokeRescue                                = 103,
    C201SupportWeaponHit                           = 104,
    C201ColorSmokeBuff                             = 105,
    C201HealthEffect                               = 106,
    C401MineKill                                   = 107,
    C401MineActivated                              = 108,
    C302KnockBack                                  = 109,
    C302KnockBackBeKill                            = 110,
    C302C4Assist                                   = 111,
    EMPHitEnemy                                    = 112,
    EMPHitVehicle                                  = 113,
    ThrowBlockingRadialDamage                      = 114,
    IncendiaryKill                                 = 115,
    IncendiaryAssist                               = 116,
    EKillHighThreatTarget                          = 117,
    EKillHighThreatTargetAssist                    = 118,
    EHighThreatTargetClear                         = 119,
    EBattleFieldOrdersConcentratedFireCompleted    = 120,
    DataKnifeEMP                                   = 121,
    EKillVehicleAssist                             = 122,
    EKillDrone                                     = 123,
    C102BlindingSmokeScore                         = 124,
    C102BlindingSmokeKill                          = 125,
    C102BlindingSmokeAssist                        = 126,
    C102AdrenalineKill                             = 127,
    C102AdrenalineAssist                           = 128,
    LaserPointerLocked                             = 129,
    LaserPointerAssist                             = 130,
    BreakAbilityLevelActor                         = 131,
    UseRebornFlag                                  = 132,
    UseVehicleRebornFlag                           = 133,
    UseRankSkillRebornFlag                         = 134,
    ADSBlock                                       = 135,
    SupportPack                                    = 136,
    ZoyaSwarmsHit                                  = 137,
    ZoyaSwarmsAssist                               = 138,
    ZoyaSwarmsKill                                 = 139,
    EAttackerHoldingTheLine                        = 140,
    EDefenderHoldingTheLine                        = 141,
    EPlayerCaptureProgressInYourSmoke              = 142,
    EAttackerInFightBack                           = 143,
    EDefenderInFightBack                           = 144,
    ERealDistanceFarGunKill                        = 145,
    ERealDistanceFarHeadKill                       = 146,
    ClayforeKill                                   = 147,
    AntiTankKill                                   = 148,
    ChristmasAmmoBoxInteraction                    = 149,
    ERebornFlagEarn                                = 150,
    ERescueEarn                                    = 151,
    EDriveVehicleEarn                              = 152,
    ETeamLastOneRedeployEarn                       = 153,
    EVehicle_AttackVehicleExtra                    = 154,
    ECaptureToDial                                 = 155,
    EMPHitBattleFieldItemProp                      = 156,
    SectorSmokeAssist                              = 157,
    SectorSmokeRescue                              = 158,
    SectorSmokeCaptureProgress                     = 159,
    ESectorArtilerrateSkillHit                     = 160,
    ESectorArtilerrateSkillKill                    = 161,
    EGuidedMissleSkillHit                          = 162,
    EGuidedMissleSkillKill                         = 163,
    FlameThrowerHit                                = 164,
    FlameThrowerKill                               = 165,
    FlameThrowerAssist                             = 166,
    HighExplosiveKill                              = 167,
    HighExplosiveAssist                            = 168,
    ECaptureFlag                                   = 169,
    EPickUpFlag                                    = 170,
    ETransportFlag                                 = 171,
    EConvoyFlag                                    = 172,
    ESelfCaptureFlagSuccess                        = 173,
    ECampCaptureFlagSuccess                        = 174,
    EConvoyCaptureFlagSuccess                      = 175,
    EGuardFlagSuccess                              = 176,
    EKillPlayerOfHoldingFlag                       = 177,
    EKillPlayerWhenGuard                           = 178,
    EKillPlayerWhenConvoy                          = 179,
    EBuildFortificationOnce                        = 180,
    EBuildFortificationFull                        = 181,
    EBrokenFortification_BreakableItem             = 182,
    EBrokenFortification_FixedWeapon               = 183,
    EBuildFortificationAssist                      = 184,
    EBuildFortificationSceneWeaponAssist           = 185,
    EBuildSatellitedishSuccess                     = 186,
    EBuildAllSatellitedishSuccess                  = 187,
    EEncouragementForInferiorCamp0                 = 188,
    EEncouragementForInferiorCamp1                 = 189,
    EBlastShieldBlockBulletDamage                  = 190,
    EBlastShieldBlockExplosionDamage               = 191,
    EBlastShieldCaptureProgressExtraScore          = 192,
    EBlastShieldAssist                             = 193,
    ERebornFlagEarn_Ability                        = 194,
    ERebornFlagEarn_Vehicle                        = 195,
    ERebornFlagEarn_RankSkill                      = 196,
    EKillCommander                                 = 197,
    ERescueCommander                               = 198,
    EKillLastOneInTeam                             = 199,
    ESilenceZoneKill                               = 200,
    ESilenceZoneAssist                             = 201,
    EKnifeDroneKill                                = 202,
    EKnifeDroneAssist                              = 203,
    EC303FlashScore                                = 204,
    EC303FlashAssist                               = 205,
    EClaymoreAssist                                = 206,
    ECommandKillHighThreatTarget                   = 208,
    ECommandKillHighThreatTargetAssist             = 209,
    ECommandHighThreatTargetClear                  = 210,
    ECommandHighThreatTargetCompleted              = 211,
    EKilledWithNightVision                         = 212,
    RushKillFirst                                  = 213,
    RushKills                                      = 214,
    ECommandConcentratedFireCompleted              = 215,
    ECommandCompleteConcentratedFire               = 216,
    ESilenceZoneDefense                            = 217,
    EKillWithDestroyedBuilding                     = 218,
    EArknightsAmmoBoxScopeContinuesAddPoints       = 219,
    EChaseScore                                    = 220,
    ESelfRescue                                    = 221,
    EElectricShockScore                            = 222,
    ERopeFight                                     = 223,
    EStartRope                                     = 224,
    ERollKill                                      = 225,
    OldDengSpyHit                                  = 226,
    OldDengSpyMark                                 = 227,
    OldDengSpyMarkAssist                           = 228,
    OldDengBaseMark                                = 229,
    OldDengBaseMarkAssist                          = 230,
    OldDengEMPAssist                               = 231,
    EScoreName_MAX                                 = 232

};

// Enum  DFMGameplay.ECharacterPartHealthState
enum class ECharacterPartHealthState : uint8_t
{
    Fine                                           = 0,
    Hurt                                           = 1,
    Broken                                         = 2,
    ECharacterPartHealthState_MAX                  = 3

};

// Enum  Engine.ENetRole
enum class ENetRole : uint8_t
{
    ROLE_None                                      = 0,
    ROLE_SimulatedProxy                            = 1,
    ROLE_AutonomousProxy                           = 2,
    ROLE_Authority                                 = 3,
    ROLE_MAX                                       = 4

};

// Enum  Engine.EAttachLocation
enum class EAttachLocation : uint8_t
{
    KeepRelativeOffset                             = 0,
    KeepWorldPosition                              = 1,
    SnapToTarget                                   = 2,
    SnapToTargetIncludingScale                     = 3,
    EAttachLocation_MAX                            = 4

};

// Enum  Engine.EAttachmentRule
enum class EAttachmentRule : uint8_t
{
    KeepRelative                                   = 0,
    KeepWorld                                      = 1,
    SnapToTarget                                   = 2,
    EAttachmentRule_MAX                            = 3

};

// Enum  Engine.EDetachmentRule
enum class EDetachmentRule : uint8_t
{
    KeepRelative                                   = 0,
    KeepWorld                                      = 1,
    EDetachmentRule_MAX                            = 2

};

// Enum  Engine.ENetDormancy
enum class ENetDormancy : uint8_t
{
    DORM_Never                                     = 0,
    DORM_Awake                                     = 1,
    DORM_DormantAll                                = 2,
    DORM_DormantPartial                            = 3,
    DORM_Initial                                   = 4,
    DORM_DormantAll_KeelChannel                    = 5,
    DORM_MAX                                       = 6

};

// Enum  Engine.EAutoReceiveInput
enum class EAutoReceiveInput : uint8_t
{
    Disabled                                       = 0,
    Player0                                        = 1,
    Player1                                        = 2,
    Player2                                        = 3,
    Player3                                        = 4,
    Player4                                        = 5,
    Player5                                        = 6,
    Player6                                        = 7,
    Player7                                        = 8,
    EAutoReceiveInput_MAX                          = 9

};

// Enum  Engine.ESpawnActorCollisionHandlingMethod
enum class ESpawnActorCollisionHandlingMethod : uint8_t
{
    Undefined                                      = 0,
    AlwaysSpawn                                    = 1,
    AdjustIfPossibleButAlwaysSpawn                 = 2,
    AdjustIfPossibleButDontSpawnIfColliding        = 3,
    DontSpawnIfColliding                           = 4,
    ESpawnActorCollisionHandlingMethod_MAX         = 5

};

// Enum  Engine.ERotatorQuantization
enum class ERotatorQuantization : uint8_t
{
    ByteComponents                                 = 0,
    ShortComponents                                = 1,
    ERotatorQuantization_MAX                       = 2

};

// Enum  Engine.EVectorQuantization
enum class EVectorQuantization : uint8_t
{
    RoundWholeNumber                               = 0,
    RoundOneDecimal                                = 1,
    RoundTwoDecimals                               = 2,
    EVectorQuantization_MAX                        = 3

};

// Enum  Engine.EActorUpdateOverlapsMethod
enum class EActorUpdateOverlapsMethod : uint8_t
{
    UseConfigDefault                               = 0,
    AlwaysUpdate                                   = 1,
    OnlyUpdateMovable                              = 2,
    NeverUpdate                                    = 3,
    EActorUpdateOverlapsMethod_MAX                 = 4

};

// Enum  Engine.EAutoPossessAI
enum class EAutoPossessAI : uint8_t
{
    Disabled                                       = 0,
    PlacedInWorld                                  = 1,
    Spawned                                        = 2,
    PlacedInWorldOrSpawned                         = 3,
    EAutoPossessAI_MAX                             = 4

};

// Enum  DFMGameplay.EPawnState
enum class EPawnState : uint8_t
{
    ENormal                                        = 0,
    EDamaged                                       = 1,
    EDead                                          = 2,
    EPawnState_MAX                                 = 3

};

// Enum  DFMGameplay.EBreakableTriggerMode
enum class EBreakableTriggerMode : uint8_t
{
    NoTrigger                                      = 0,
    Default                                        = 1,
    CollisionOverlap                               = 2,
    CollisionHit                                   = 3,
    CollisionHitAndDamage                          = 4,
    CustomDamage                                   = 5,
    CustomCollision                                = 6,
    CustomCollisionDamage                          = 7,
    EBreakableTriggerMode_MAX                      = 8

};

// Enum  DFMGameplay.EBreakableDebrisLoadMode
enum class EBreakableDebrisLoadMode : uint8_t
{
    AsyncLoadWhenTrigger                           = 0,
    AsyncLoadWhenBeginPlay                         = 1,
    SyncLoad                                       = 2,
    EBreakableDebrisLoadMode_MAX                   = 3

};

// Enum  DFMGameplay.EBreakableMeshDisappearMode
enum class EBreakableMeshDisappearMode : uint8_t
{
    DoNotThing                                     = 0,
    DisappearAll                                   = 1,
    DisappearSome                                  = 2,
    DebrisLeft                                     = 3,
    EBreakableMeshDisappearMode_MAX                = 4

};

// Enum  DFMGlobalDefines.EHoverNodeEffetApplyType
enum class EHoverNodeEffetApplyType : uint8_t
{
    BindableParent                                 = 0,
    DirectParent                                   = 1,
    WidgetPath                                     = 2,
    EHoverNodeEffetApplyType_MAX                   = 3

};

// Enum  DFMGlobalDefines.ECommonHoverStyleMode
enum class ECommonHoverStyleMode : uint8_t
{
    Visibility                                     = 0,
    Animation                                      = 1,
    ECommonHoverStyleMode_MAX                      = 2

};

// Enum  DFMGlobalDefines.ECommonHoverExtMode
enum class ECommonHoverExtMode : uint8_t
{
    HoverOnly                                      = 0,
    HoverAndClick                                  = 1,
    ECommonHoverExtMode_MAX                        = 2

};

// Enum  DFMGlobalDefines.EIconState
enum class EIconState : uint8_t
{
    None                                           = 0,
    Loading                                        = 1,
    Loaded                                         = 2,
    EIconState_MAX                                 = 3

};

// Enum  DFMGlobalDefines.ESOLUIColorType
enum class ESOLUIColorType : uint8_t
{
    None                                           = 0,
    OpenEvacuationPoint                            = 1,
    DiscardedEvacuationPoint                       = 2,
    UntriggeredEventEvacuationPoint                = 3,
    HighValue                                      = 4,
    Boss                                           = 5,
    QuestAndContract                               = 6,
    SecondaryInfo                                  = 7,
    RandomEvacuationPoint                          = 8,
    POIProduct                                     = 9,
    DeadBody                                       = 10,
    BossCircle                                     = 11,
    Sign                                           = 12,
    TeammateSign                                   = 13,
    Raid_ArriveOrInteract                          = 14,
    Raid_KillOrDestroy                             = 15,
    Raid_Protect                                   = 16,
    Raid_AmmoBox                                   = 17,
    Raid_RPG                                       = 18,
    Raid_ValkyrieVehicle                           = 19,
    EventEvacuationNotOpen                         = 20,
    PlayerStart                                    = 21,
    SupportPoint                                   = 22,
    HighValue2                                     = 23,
    Zipline                                        = 24,
    Helicopter                                     = 25,
    QuestIsSeasonActivity                          = 26,
    PakMachineActive                               = 27,
    PakMachineInActive                             = 28,
    Adjutant                                       = 29,
    CountDownReleaseTriggerActive                  = 30,
    CountDownReleaseTriggerInActive                = 31,
    Commander_SameCamp                             = 32,
    Commander_Enemy                                = 33,
    ExitCircle                                     = 34,
    SkillFixedWeaponWhiteModel                     = 35,
    ESOLUIColorType_MAX                            = 36

};

// Enum  DFMGlobalDefines.ESOLUIIconType
enum class ESOLUIIconType : uint8_t
{
    None                                           = 0,
    FixedEvacuationPoint                           = 1,
    RandomEvacuationPoint                          = 2,
    EventEvacuationPoint_Train                     = 3,
    EventEvacuationPoint_Rocket                    = 4,
    EventEvacuationPoint_Dam                       = 5,
    EventInteractor                                = 6,
    WeaponBlueprint                                = 7,
    HighValueBox                                   = 8,
    Boss                                           = 9,
    Contract                                       = 10,
    ShopStation                                    = 11,
    UnlockPoint                                    = 12,
    ContractObjection                              = 13,
    KillPoint                                      = 14,
    Sign                                           = 15,
    POIProductMix                                  = 16,
    TeammateSign                                   = 17,
    Raid_ArriveOrInteract                          = 18,
    Raid_KillOrDestroy                             = 19,
    Raid_Protect                                   = 20,
    Raid_AmmoBox                                   = 21,
    Raid_RPG                                       = 22,
    Raid_ValkyrieVehicle                           = 23,
    Quest                                          = 24,
    EventEvacuationPoint_TrainNot                  = 25,
    EventEvacuationPoint_RocketNot                 = 26,
    EventEvacuationPoint_DamNot                    = 27,
    EventEvacuationPoint_OtherNot                  = 28,
    CountDown                                      = 29,
    EvacuationPoint_Payment_Open                   = 30,
    EvacuationPoint_Payment_NotOpen                = 31,
    EvacuationPoint_Together_Open                  = 32,
    EvacuationPoint_Together_NotOpen               = 33,
    Ability_CQB                                    = 34,
    Ability_Medic                                  = 35,
    Ability_Gunner                                 = 36,
    Ability_Sniper                                 = 37,
    Ability_SuppressionMine                        = 38,
    Ability_CruiseMissile                          = 39,
    WeaponBlueprintStation                         = 40,
    PlayerStart                                    = 41,
    Money                                          = 42,
    SupportPoint                                   = 43,
    WeaponBlueprintSendOut                         = 44,
    WeaponBlueprintNoCopy                          = 45,
    AlivePoint                                     = 46,
    PlayerDir                                      = 47,
    Defence                                        = 48,
    Attack                                         = 49,
    ProbeLight                                     = 50,
    HighValueBox2                                  = 51,
    Zipline                                        = 52,
    AIKillPoint                                    = 53,
    HighValueContract                              = 54,
    Scouter                                        = 55,
    IronGauze                                      = 56,
    SelectedFrame                                  = 57,
    TeamMateIndex0                                 = 58,
    TeamMateIndex1                                 = 59,
    TeamMateIndex2                                 = 60,
    Ability_Robot                                  = 61,
    Ability_RebornFlag                             = 62,
    Vehicle_RebornFlag                             = 63,
    RankSkill_RebornFlag                           = 64,
    Ability_ADS                                    = 65,
    PlayerDeathBG                                  = 66,
    VehicleSupplyStation                           = 67,
    Helicopter                                     = 68,
    PakMachine                                     = 69,
    Adjutant                                       = 70,
    CountDownReleaseTrigger                        = 71,
    FireRocketPC                                   = 72,
    WeaponBlueprint_Arena                          = 73,
    Commander                                      = 74,
    AttackHere                                     = 75,
    DefendHere                                     = 76,
    GoHere                                         = 77,
    VehicleGoHere                                  = 78,
    BewareEnemyInfantry                            = 79,
    BewareEnemyVehicle                             = 80,
    ProbeLight_Commander                           = 81,
    PipLineExit_Triggered                          = 82,
    PipLineExit_UnTriggered                        = 83,
    MiniGamePC                                     = 84,
    PlunderContract                                = 85,
    BoatExit                                       = 86,
    BoatExitClosed                                 = 87,
    ExitCircle                                     = 88,
    Hook                                           = 89,
    CoastalDefenseArtilleryIcon                    = 90,
    AntiAircraftGunsIcon                           = 91,
    BunkerIcon                                     = 92,
    ESOLUIIconType_MAX                             = 93

};

// Enum  DFMGlobalDefines.EHighValueBoxType
enum class EHighValueBoxType : uint8_t
{
    Default                                        = 0,
    BoxWithIntroEvent                              = 1,
    BoxWithOutIntroEvent                           = 2,
    EHighValueBoxType_MAX                          = 3

};

// Enum  Engine.ECollisionChannel
enum class ECollisionChannel : uint8_t
{
    ECC_WorldStatic                                = 0,
    ECC_WorldDynamic                               = 1,
    ECC_Pawn                                       = 2,
    ECC_Visibility                                 = 3,
    ECC_Camera                                     = 4,
    ECC_PhysicsBody                                = 5,
    ECC_Vehicle                                    = 6,
    ECC_Destructible                               = 7,
    ECC_EngineTraceChannel1                        = 8,
    ECC_EngineTraceChannel2                        = 9,
    ECC_EngineTraceChannel3                        = 10,
    ECC_EngineTraceChannel4                        = 11,
    ECC_EngineTraceChannel5                        = 12,
    ECC_EngineTraceChannel6                        = 13,
    ECC_GameTraceChannel1                          = 14,
    ECC_GameTraceChannel2                          = 15,
    ECC_GameTraceChannel3                          = 16,
    ECC_GameTraceChannel4                          = 17,
    ECC_GameTraceChannel5                          = 18,
    ECC_GameTraceChannel6                          = 19,
    ECC_GameTraceChannel7                          = 20,
    ECC_GameTraceChannel8                          = 21,
    ECC_GameTraceChannel9                          = 22,
    ECC_GameTraceChannel10                         = 23,
    ECC_GameTraceChannel11                         = 24,
    ECC_GameTraceChannel12                         = 25,
    ECC_GameTraceChannel13                         = 26,
    ECC_GameTraceChannel14                         = 27,
    ECC_GameTraceChannel15                         = 28,
    ECC_GameTraceChannel16                         = 29,
    ECC_GameTraceChannel17                         = 30,
    ECC_GameTraceChannel18                         = 31,
    ECC_OverlapAll_Deprecated                      = 32,
    ECC_MAX                                        = 33

};

// Enum  DFMGameplay.EPickupSourceType
enum class EPickupSourceType : uint8_t
{
    EPickupSourceType_Default                      = 0,
    EPickupSourceType_BodyBox                      = 1,
    EPickupSourceType_Discard                      = 2,
    EPickupSourceType_NormalBox                    = 3,
    EPickupSourceType_MAX                          = 4

};

// Enum  DFMGlobalDefines.EArchiveAscription
enum class EArchiveAscription : uint8_t
{
    EArchiveAscription_None                        = 0,
    EArchiveAscription_Player                      = 1,
    EArchiveAscription_AI                          = 2,
    EArchiveAscription_Boss                        = 3,
    EArchiveAscription_MAX                         = 4

};

// Enum  DFMGlobalDefines.EItemState
enum class EItemState : uint8_t
{
    ItemState_None                                 = 0,
    ItemState_Active                               = 1,
    ItemState_PreUsing                             = 2,
    ItemState_Consume                              = 3,
    ItemState_Using                                = 4,
    ItemState_ToDestroy                            = 5,
    ItemState_MAX                                  = 6

};

// Enum  DFMGameplay.EItemInfoUpdatedReason
enum class EItemInfoUpdatedReason : uint8_t
{
    None                                           = 0,
    ItemState                                      = 1,
    ItemCount                                      = 2,
    Location                                       = 3,
    Durability                                     = 4,
    DurabilityLimit                                = 5,
    ArmorHealth                                    = 6,
    ArmorHealthMax                                 = 7,
    WeaponDesc                                     = 8,
    SearchState                                    = 9,
    UsingOwner                                     = 10,
    ExtraRecord                                    = 11,
    OwnerPlayerId                                  = 12,
    EItemInfoUpdatedReason_MAX                     = 13

};

// Enum  DFMGlobalDefines.EAttachPosition
enum class EAttachPosition : uint32_t
{
    Attach_None                                    = 0,
    Attach_EquipmentStart                          = 100,
    Attach_Helmet                                  = 101,
    Attach_Headset                                 = 102,
    Attach_ArmedForceBaseProp                      = 103,
    Attach_Armband                                 = 104,
    Attach_BreastPlate                             = 105,
    Attach_Glasses                                 = 106,
    Attach_ChestHanging                            = 107,
    Attach_Bag                                     = 108,
    Attach_SafeBox                                 = 109,
    Attach_Shoe                                    = 110,
    Attach_MainWeaponLeft                          = 111,
    Attach_MainWeaponRight                         = 112,
    Attach_MeleeWeapon                             = 113,
    Attach_PistolWeapon                            = 114,
    Attach_SecondaryWeapon                         = 1111,
    Attach_ArmedForceProp1                         = 115,
    Attach_KeyChain                                = 116,
    Attach_ArmedForceProp2                         = 117,
    Attach_Character                               = 118,
    Attach_DogTag                                  = 119,
    PVEMainWeaponLeft                              = 120,
    PVEMainWeaponRight                             = 121,
    Medical                                        = 122,
    Archive                                        = 123,
    Attach_SceneWeapon                             = 124,
    Attach_ClassMeleeEquipment                     = 125,
    Attach_ClassThrowableEquipment                 = 126,
    Attach_ClassConsumable                         = 127,
    Attach_PVEWeapon                               = 128,
    Attach_MissionMeleeEquipment                   = 129,
    Attach_BulletLeft                              = 131,
    Attach_BulletRight                             = 132,
    Attach_SkillWeaponSpecial                      = 133,
    Attach_SkillWeaponUltimate                     = 134,
    Attach_SkillWeaponActive                       = 135,
    Attach_SkillWeaponSupport                      = 136,
    Attach_SkillWeaponBattleFieldPropSkill         = 137,
    Attach_SkillWeaponCustom2                      = 138,
    Attach_SkillWeaponCustom3                      = 139,
    Attach_MP_Begin                                = 140,
    Attach_MP_ArmedForceBaseProp                   = 141,
    Attach_MP_ArmedForceTDMProp                    = 142,
    Attach_MP_MainWeapon                           = 143,
    Attach_MP_SecondaryWeapon                      = 144,
    Attach_MP_MeleeWeapon                          = 145,
    Attach_MP_ArmedForceProp1                      = 146,
    Attach_MP_ArmedForceProp2                      = 147,
    Attach_MP_End                                  = 148,
    Attach_EquipmentEnd                            = 150,
    Attach_Fashion                                 = 200,
    Attach_AllNearby                               = 301,
    Attach_PickupBox                               = 302,
    Attach_LootTmp                                 = 303,
    Attach_TmpPerk                                 = 304,
    Attach_DeadbodyLootBox                         = 305,
    Attach_AbilityVehicle                          = 306,
    Attach_ContainerStart                          = 100000,
    Attach_ChestHangingContainer                   = 107001,
    Attach_BagContainer                            = 108001,
    Attach_SafeBoxContainer                        = 109001,
    Attach_KeyChainContainer                       = 116001,
    Attach_ArchiveContainer                        = 123001,
    Attach_Pocket                                  = 199997,
    Attach_BagSpaceContainer                       = 199998,
    Attach_ContainerEnd                            = 199999,
    Attach_CarrayItem                              = 200001,
    Attach_Temp                                    = 77777,
    Attach_TempContainer                           = 77777001,
    Attach_Temp_FortificationHammer                = 77777002,
    Attach_JailBreak_EmptyHand                     = 77777003,
    Attach_PVE_RPG                                 = 99999999,
    EAttachPosition_MAX                            = 100000000

};

// Enum  DFMGameplay.EMatchOverReason
enum class EMatchOverReason : uint8_t
{
    Escaped                                        = 0,
    Dead                                           = 1,
    TimeOver                                       = 2,
    Quit                                           = 3,
    GiveUp                                         = 4,
    Complete                                       = 5,
    Fail                                           = 6,
    MatchEnd                                       = 7,
    EMatchOverReason_MAX                           = 8

};

// Enum  DFMGlobalDefines.EPickupContainerLootAudioType
enum class EPickupContainerLootAudioType : uint8_t
{
    Common                                         = 0,
    Glass                                          = 1,
    Cloth                                          = 2,
    Weapon                                         = 3,
    Metal                                          = 4,
    Device                                         = 5,
    EPickupContainerLootAudioType_MAX              = 6

};

// Enum  DFMGameplay.EPickupBoxType
enum class EPickupBoxType : uint8_t
{
    EPickupBoxType_Default                         = 0,
    EPickupBoxType_WeaponBox                       = 1,
    EPickupBoxType_ArmorBox                        = 2,
    EPickupBoxType_SundriesBox                     = 3,
    EPickupBoxType_Stronghold                      = 4,
    EPickupBoxType_MAX                             = 5

};

// Enum  DFMGlobalDefines.EInGameBattleClassType
enum class EInGameBattleClassType : uint8_t
{
    BattleClassBegin                               = 0,
    CQB                                            = 1,
    Medic                                          = 2,
    Gunner                                         = 3,
    Sniper                                         = 4,
    BattleClassMax                                 = 99,
    EInGameBattleClassType_MAX                     = 100

};

// Enum  DFMGameplay.EDeadBodySkeletalMeshType
enum class EDeadBodySkeletalMeshType : uint8_t
{
    None                                           = 0,
    Player                                         = 1,
    DarkTide_Normal                                = 2,
    Hudson_Normal                                  = 3,
    DarkTide_Elite                                 = 4,
    Hudson_Elite                                   = 5,
    DarkTide_Boss                                  = 6,
    Hudson_Boss                                    = 7,
    InsuranceCompany                               = 8,
    EDeadBodySkeletalMeshType_MAX                  = 9

};

// Enum  AIModule.EPathFollowingResult
enum class EPathFollowingResult : uint8_t
{
    Success                                        = 0,
    Blocked                                        = 1,
    OffPath                                        = 2,
    Aborted                                        = 3,
    Skipped_DEPRECATED                             = 4,
    Invalid                                        = 5,
    EPathFollowingResult_MAX                       = 6

};

// Enum  AIModule.EEnvQueryStatus
enum class EEnvQueryStatus : uint8_t
{
    Processing                                     = 0,
    Success                                        = 1,
    Failed                                         = 2,
    Aborted                                        = 3,
    OwnerLost                                      = 4,
    MissingParam                                   = 5,
    EEnvQueryStatus_MAX                            = 6

};

// Enum  DFMGameplay.EMotionSegmentType
enum class EMotionSegmentType : uint8_t
{
    Normal                                         = 0,
    FilterByTags                                   = 1,
    TraversalAction                                = 2,
    EMotionSegmentType_MAX                         = 3

};

// Enum  Engine.EAnimLinkMethod
enum class EAnimLinkMethod : uint8_t
{
    Absolute                                       = 0,
    Relative                                       = 1,
    Proportional                                   = 2,
    EAnimLinkMethod_MAX                            = 3

};

// Enum  Engine.ENotifyFilterType
enum class ENotifyFilterType : uint8_t
{
    NoFiltering                                    = 0,
    LOD                                            = 1,
    AnimLOD                                        = 2,
    ENotifyFilterType_MAX                          = 3

};

// Enum  Engine.EMontageNotifyTickType
enum class EMontageNotifyTickType : uint8_t
{
    Queued                                         = 0,
    BranchingPoint                                 = 1,
    EMontageNotifyTickType_MAX                     = 2

};

// Enum  DFMGameplay.EAIMsgType
enum class EAIMsgType : uint8_t
{
    None                                           = 0,
    Alert                                          = 1,
    Fight                                          = 2,
    Vision                                         = 3,
    CancelVision                                   = 4,
    FightCancelVision                              = 5,
    EAIMsgType_MAX                                 = 6

};

// Enum  DFMGlobalDefines.EMapSignType
enum class EMapSignType : uint8_t
{
    None                                           = 0,
    Normal                                         = 1,
    Chat_Normal                                    = 2,
    Chat_Item                                      = 3,
    PlayerExit                                     = 4,
    PlayerExitTrigger                              = 5,
    Door                                           = 6,
    Quest                                          = 7,
    POI                                            = 8,
    ShopStation                                    = 9,
    HighValueBox                                   = 10,
    ContractQuest                                  = 11,
    ContractObjection                              = 12,
    WeaponBlueprintStation                         = 13,
    SectorAnchor                                   = 14,
    FlagAnchor                                     = 15,
    BattleFlag                                     = 16,
    Scouter                                        = 17,
    IronGauze                                      = 18,
    PakMachine                                     = 19,
    CountDownReleaseTrigger                        = 20,
    ExitTriggerMiniGame                            = 21,
    Count                                          = 22,
    EMapSignType_MAX                               = 23

};

// Enum  DFMGameplay.EDialogType
enum class EDialogType : uint8_t
{
    EDT_None                                       = 0,
    EDT_Wireless                                   = 1,
    EDT_MAX                                        = 2

};

// Enum  DFMGameplay.EAIGroupPatrolJobBossEncounterState
enum class EAIGroupPatrolJobBossEncounterState : uint8_t
{
    None                                           = 0,
    MoveToFirstAssemble                            = 1,
    PreMoveDrama                                   = 2,
    Moving                                         = 3,
    ReachEnding                                    = 4,
    PreFinishDrama                                 = 5,
    JobFinish                                      = 6,
    EAIGroupPatrolJobBossEncounterState_MAX        = 7

};

// Enum  DFMGameplay.EAIDirection
enum class EAIDirection : uint8_t
{
    Forwards                                       = 0,
    Sideways                                       = 1,
    EAIDirection_MAX                               = 2

};

// Enum  DFMGameplay.EAISpeed
enum class EAISpeed : uint8_t
{
    Idle                                           = 0,
    Walk                                           = 1,
    Run                                            = 2,
    Sprint                                         = 3,
    EAISpeed_MAX                                   = 4

};

// Enum  DFMGameplay.EKeyActionLogic
enum class EKeyActionLogic : uint8_t
{
    None                                           = 0,
    Switch                                         = 1,
    Hold                                           = 2,
    EKeyActionLogic_MAX                            = 3

};

// Enum  DFMGameplay.EKeyIconType
enum class EKeyIconType : uint8_t
{
    Normal                                         = 0,
    SemiTranslucent                                = 1,
    EKeyIconType_MAX                               = 2

};

// Enum  DFMGameplay.EFunctionBusinessLogic
enum class EFunctionBusinessLogic : uint8_t
{
    None                                           = 0,
    ThrownDefault                                  = 1,
    ThrownInHand                                   = 2,
    ThrownQuick                                    = 3,
    InputSwitch                                    = 4,
    InputHold                                      = 5,
    InputMix                                       = 6,
    EFunctionBusinessLogic_MAX                     = 7

};

// Enum  DFMGameplay.EKeyFunctionBindType
enum class EKeyFunctionBindType : uint8_t
{
    None                                           = 0,
    FixedBind                                      = 1,
    OptionalBind                                   = 2,
    ModifiableBind                                 = 3,
    EKeyFunctionBindType_MAX                       = 4

};

// Enum  DFMGameplay.EAchievementType
enum class EAchievementType : uint8_t
{
    AchievementType_TotalKill                      = 1,
    AchievementType_KillBoss                       = 2,
    AchievementType_GainPropertyValue              = 3,
    AchievementType_MAX                            = 4

};

// Enum  DFMGameplay.ESOLIntroEventState
enum class ESOLIntroEventState : uint8_t
{
    None                                           = 0,
    IntroEventOccur                                = 1,
    IntroEventNotOccur                             = 2,
    ESOLIntroEventState_MAX                        = 3

};

// Enum  DFMGameplay.ESOLEventState
enum class ESOLEventState : uint8_t
{
    None                                           = 0,
    IntroEventOccur                                = 1,
    IntroEventNotOccur                             = 2,
    MandelBrickOccur                               = 3,
    MandelBrickNotOccur                            = 4,
    BenchmarkActionOccur                           = 5,
    BenchmarkActionNotOccur                        = 6,
    SpecialWeatherOccur                            = 7,
    SpecialWeatherNotOccur                         = 8,
    CustomEventOccur                               = 9,
    CustomEventNotOccur                            = 10,
    OtherDynamicLevel                              = 11,
    ESOLEventState_MAX                             = 12

};

// Enum  Engine.ERichCurveExtrapolation
enum class ERichCurveExtrapolation : uint8_t
{
    RCCE_Cycle                                     = 0,
    RCCE_CycleWithOffset                           = 1,
    RCCE_Oscillate                                 = 2,
    RCCE_Linear                                    = 3,
    RCCE_Constant                                  = 4,
    RCCE_None                                      = 5,
    RCCE_MAX                                       = 6

};

// Enum  Engine.ERichCurveTangentWeightMode
enum class ERichCurveTangentWeightMode : uint8_t
{
    RCTWM_WeightedNone                             = 0,
    RCTWM_WeightedArrive                           = 1,
    RCTWM_WeightedLeave                            = 2,
    RCTWM_WeightedBoth                             = 3,
    RCTWM_MAX                                      = 4

};

// Enum  Engine.ERichCurveTangentMode
enum class ERichCurveTangentMode : uint8_t
{
    RCTM_Auto                                      = 0,
    RCTM_User                                      = 1,
    RCTM_Break                                     = 2,
    RCTM_None                                      = 3,
    RCTM_MAX                                       = 4

};

// Enum  Engine.ERichCurveInterpMode
enum class ERichCurveInterpMode : uint8_t
{
    RCIM_Linear                                    = 0,
    RCIM_Constant                                  = 1,
    RCIM_Cubic                                     = 2,
    RCIM_None                                      = 3,
    RCIM_MAX                                       = 4

};

// Enum  DFMGameplay.ESOLWeatherPerformType
enum class ESOLWeatherPerformType : uint8_t
{
    None                                           = 0,
    LoadLevel                                      = 1,
    TOD                                            = 2,
    Flame                                          = 3,
    DenseSmoke                                     = 4,
    ESOLWeatherPerformType_MAX                     = 5

};

// Enum  DFMGameplay.ESOLWeatherType
enum class ESOLWeatherType : uint8_t
{
    Normal                                         = 0,
    MountainFlame                                  = 1,
    ESOLWeatherType_MAX                            = 2

};

// Enum  DFMGameplay.ESOLEventType
enum class ESOLEventType : uint8_t
{
    None                                           = 0,
    Intro_DroneCrash                               = 1,
    Intro_KuroshioConvoy                           = 2,
    Intro_RocketRecycle                            = 3,
    Exit_Rocket                                    = 4,
    Exit_Sluice                                    = 5,
    Exit_Train                                     = 6,
    Major_Paratrooper                              = 7,
    Major_WeaponPlunder                            = 8,
    ESOLEventType_MAX                              = 9

};

// Enum  DFMGameplay.EBlueprintPlunderUIState
enum class EBlueprintPlunderUIState : uint8_t
{
    None                                           = 0,
    BeAppeared                                     = 1,
    BeingWanted_Self                               = 2,
    BeingWanted_Teammate                           = 3,
    BeingWanted_Enemy                              = 4,
    Deciphering_Self                               = 5,
    Deciphering_Teammate                           = 6,
    Deciphering_Enemy                              = 7,
    Deciphering_EnemyCapture                       = 8,
    WaitingRecycle_Self                            = 9,
    WaitingRecycle_Teammate                        = 10,
    WaitingRecycle_TeammateCopied                  = 11,
    WaitingRecycle_Enemy                           = 12,
    BeTakenOut_Self                                = 13,
    BeTakenOut_Teammate                            = 14,
    BeTakenOut_Enemy                               = 15,
    IrregularExit                                  = 16,
    EBlueprintPlunderUIState_MAX                   = 17

};

// Enum  DFMGameplay.EDangerLevelType
enum class EDangerLevelType : uint8_t
{
    None                                           = 0,
    DangerLevel0                                   = 1,
    DangerLevel1                                   = 2,
    DangerLevel2                                   = 3,
    DangerLevel3                                   = 4,
    EDangerLevelType_MAX                           = 5

};

// Enum  DFMGameplay.EBlueprintPlunderState
enum class EBlueprintPlunderState : uint8_t
{
    None                                           = 0,
    BeAppeared                                     = 1,
    BeingWanted                                    = 2,
    Deciphering                                    = 3,
    WaitingRecycle                                 = 4,
    BeTakenOut                                     = 5,
    IrregularExit                                  = 6,
    EBlueprintPlunderState_MAX                     = 7

};

// Enum  DFMGameplay.ESOLEventBannerType
enum class ESOLEventBannerType : uint8_t
{
    Normal                                         = 0,
    HighValue                                      = 1,
    Exit                                           = 2,
    Gray                                           = 3,
    VictoryPoint                                   = 4,
    ESOLEventBannerType_MAX                        = 5

};

// Enum  DFMGameplay.ESOLEventProgressType
enum class ESOLEventProgressType : uint8_t
{
    Normal                                         = 0,
    ESOLEventProgressType_MAX                      = 1

};

// Enum  DFMGameplay.ESOLCommonCountdownType
enum class ESOLCommonCountdownType : uint8_t
{
    None                                           = 0,
    Gray                                           = 1,
    Red                                            = 2,
    Green                                          = 3,
    Yellow                                         = 4,
    ESOLCommonCountdownType_MAX                    = 5

};

// Enum  DFMGameplay.EDialogJumpType
enum class EDialogJumpType : uint8_t
{
    EDHT_Dialog                                    = 0,
    EDHT_Group                                     = 1,
    EDHT_OpenUI                                    = 2,
    EDHT_Quit                                      = 3,
    EDHT_CallLuaFunction                           = 4,
    EDHT_MAX                                       = 5

};

// Enum  DFMGlobalDefines.EFastEquipResult
enum class EFastEquipResult : uint8_t
{
    EFastEquipResult_Success                       = 0,
    EFastEquipResult_UnknownError                  = 1,
    EFastEquipResult_NotEngouhSpace                = 2,
    EFastEquipResult_NotEngouhSpaceAndDropItem     = 3,
    EFastEquipResult_CantFastEquip                 = 4,
    EFastEquipResult_NotAllowedWhenReloading       = 5,
    EFastEquipResult_MAX                           = 6

};

// Enum  DFMGameplay.EItemMoveExtraInfo
enum class EItemMoveExtraInfo : uint8_t
{
    None                                           = 0,
    TriggerContainerReplaceFailBackup              = 1,
    EItemMoveExtraInfo_MAX                         = 2

};

// Enum  DFMGameplay.EItemMoveResult
enum class EItemMoveResult : uint8_t
{
    EItemMoveResult_None                           = 0,
    EItemMoveResult_Success                        = 1,
    EItemMoveResult_PerkEquipSuccess               = 2,
    EItemMoveResult_SourceItemNotFound             = 3,
    EItemMoveResult_SpaceNotFound                  = 4,
    EItemMoveResult_UnknownError                   = 5,
    EItemMoveResult_EquipConflict                  = 6,
    EItemMoveResult_OutOfLootDistance              = 7,
    EItemMoveResult_NoEnoughSpace                  = 8,
    EItemMoveResult_RefContainerItemsNoEnoughSpace = 9,
    EItemMoveResult_MergeBindItemWithUnbindItem    = 10,
    EItemMoveResult_SourceObjNotLootable           = 11,
    EItemMoveResult_TargetObjNotLootable           = 12,
    EItemMoveResult_SourceObjNotInteractingWithPlayer = 13,
    EItemMoveResult_TargetObjNotInteractingWithPlayer = 14,
    EItemMoveResult_ArchiveObjNotAllowLoot         = 15,
    EItemMoveResult_SpaceNotValidForVehicle        = 16,
    EItemMoveResult_ItemIsUsing                    = 17,
    EItemMoveResult_ItemBelongsToOtherPlayer       = 18,
    EItemMoveResult_SelfContainerNotAllow          = 19,
    EItemMoveResult_MoveKeyChainNotAllow           = 20,
    EItemMoveResult_WeaponAndAmmoNotMatch          = 21,
    EItemMoveResult_SameLocationMove               = 22,
    EItemMoveResult_MoveBagNoEnoughSpace           = 23,
    EITemMoveResult_ItemNotInOriginSpace           = 24,
    EITemMoveResult_GuideItemInvalidMove           = 25,
    EItemMoveResult_SlotNotMovableInGame           = 26,
    EItemMoveResult_OperateWeaponNotAllow          = 27,
    EItemMoveResult_ItemNotSearched                = 28,
    EItemMoveResult_CharacterExitStateInvalid      = 29,
    EItemMoveResult_InteractCheckFail              = 30,
    EItemMoveResult_SourceLootObjNotExist          = 31,
    EItemMoveResult_JailBreakFobidden              = 32,
    EItemMoveResult_FobiddenInCollectionRoom       = 33,
    EItemMoveResult_MAX                            = 34

};

// Enum  DFMGameplay.ERepUseItemState
enum class ERepUseItemState : uint8_t
{
    None                                           = 0,
    PreUse                                         = 1,
    Holding                                        = 2,
    Using                                          = 3,
    AfterUse                                       = 4,
    Finish                                         = 5,
    ERepUseItemState_MAX                           = 6

};

// Enum  DFMGlobalDefines.EItemChangeType
enum class EItemChangeType : uint8_t
{
    Delete                                         = 0,
    Add                                            = 1,
    Modified                                       = 2,
    EItemChangeType_MAX                            = 3

};

// Enum  DFMGameplay.ERebornActorType
enum class ERebornActorType : uint8_t
{
    Character                                      = 0,
    Vehicle                                        = 1,
    RedeployPoint                                  = 2,
    CapturePoint                                   = 3,
    RebornFlag                                     = 4,
    RebornArea                                     = 5,
    RebornTower3                                   = 6,
    ERebornActorType_MAX                           = 7

};

// Enum  DFMGameplay.ERebornType
enum class ERebornType : uint8_t
{
    RebornToActor                                  = 0,
    RebornToActorId                                = 1,
    RebornToTransForm                              = 2,
    RebornToPlayerStart                            = 3,
    ERebornType_MAX                                = 4

};

// Enum  DFMGameplay.EBreakthroughBroadcastMarkerType
enum class EBreakthroughBroadcastMarkerType : uint8_t
{
    ENone                                          = 0,
    ESector                                        = 1,
    EVehicle                                       = 2,
    EBreakthroughBroadcastMarkerType_MAX           = 3

};

// Enum  DFMGlobalDefines.EGuideStage
enum class EGuideStage : uint8_t
{
    LootingItem                                    = 31,
    LootingAI                                      = 32,
    ShootModeTips1                                 = 43,
    ShootModeTips2                                 = 44,
    SettingShootMode                               = 45,
    EGuideStage_MAX                                = 46

};

// Enum  DFMGameplay.EConquestTopBarScoreType
enum class EConquestTopBarScoreType : uint8_t
{
    None                                           = 0,
    OccupiedScore                                  = 1,
    KillScore                                      = 2,
    SectorScore                                    = 3,
    EConquestTopBarScoreType_MAX                   = 4

};

// Enum  DFMGameplay.ESbItemOperType
enum class ESbItemOperType : uint8_t
{
    None                                           = 0,
    Reporting                                      = 1,
    Reported                                       = 2,
    Friending                                      = 3,
    Friended                                       = 4,
    ThumbUping                                     = 5,
    ThumbUped                                      = 6,
    ThumbUpedEachOther                             = 7,
    ESbItemOperType_MAX                            = 8

};

// Enum  DFMGameplay.EBuffDetectorUpdateDataType
enum class EBuffDetectorUpdateDataType : uint8_t
{
    Medic                                          = 0,
    BionicSpy                                      = 1,
    EBuffDetectorUpdateDataType_MAX                = 2

};

// Enum  DFMGameplay.ETransportFlagResult
enum class ETransportFlagResult : uint8_t
{
    None                                           = 0,
    Success                                        = 1,
    Overtime                                       = 2,
    FailureToContestAnchor                         = 3,
    FailureDueToGameOver                           = 4,
    ETransportFlagResult_MAX                       = 5

};

// Enum  DFMGameplay.EAnimSwitcher_State
enum class EAnimSwitcher_State : uint8_t
{
    Closed                                         = 0,
    Opened                                         = 1,
    Closing                                        = 2,
    Opening                                        = 3,
    Max                                            = 4

};

// Enum  DFMGameplay.EInteractorIronGauzeState
enum class EInteractorIronGauzeState : uint8_t
{
    IronGauze_Normal                               = 0,
    IronGauze_Cutting                              = 1,
    IronGauze_Cutted                               = 2,
    IronGauze_Kicked                               = 3,
    IronGauze_MAX                                  = 4

};

// Enum  DFMGameplay.EEndInteractionType
enum class EEndInteractionType : uint8_t
{
    EIT_Default                                    = 0,
    EIT_Interrupt                                  = 1,
    EIT_Reentry                                    = 2,
    EIT_Destruct                                   = 3,
    EIT_MAX                                        = 4

};

// Enum  DFMGameplay.EMusicPlayerStateType
enum class EMusicPlayerStateType : uint8_t
{
    EMusicPlayerStateType_None                     = 0,
    EMusicPlayerStateType_Play                     = 1,
    EMusicPlayerStateType_Pause                    = 2,
    EMusicPlayerStateType_MAX                      = 3

};

// Enum  DFMGameplay.EExitStageType
enum class EExitStageType : uint8_t
{
    NotActive                                      = 0,
    WaitingAwake                                   = 1,
    Awake                                          = 2,
    ResetCoolDown                                  = 3,
    Close                                          = 4,
    EExitStageType_MAX                             = 5

};

// Enum  DFMGameplay.ERaidSettlementType
enum class ERaidSettlementType : uint8_t
{
    RaidSettlementSuccess                          = 0,
    RaidSettlementFail                             = 1,
    ERaidSettlementType_MAX                        = 2

};

// Enum  DFMGamepadInput.EDFMInputMappingTableType
enum class EDFMInputMappingTableType : uint8_t
{
    BaseInput                                      = 0,
    AimingInput                                    = 1,
    VehicleBaseInput                               = 2,
    VehicleInput                                   = 3,
    HelicopterInput                                = 4,
    JetInput                                       = 5,
    WatchFightInput                                = 6,
    MapInput                                       = 7,
    DynamicInput                                   = 8,
    EDFMInputMappingTableType_MAX                  = 9

};

// Enum  DFMGameHud.EDFMWidgetEventType
enum class EDFMWidgetEventType : uint8_t
{
    None                                           = 0,
    UISystemSetting_Close                          = 1,
    UISystemSetting_Logout                         = 2,
    UISystemSetting_QuitMatch                      = 3,
    UISystemSetting_QuitGame                       = 4,
    Common_LastMsgID                               = 5,
    EDFMWidgetEventType_MAX                        = 6

};

// Enum  DFMGameplay.EBroadcastTeamInfoType
enum class EBroadcastTeamInfoType : uint8_t
{
    NearDead                                       = 0,
    Rescue                                         = 1,
    EBroadcastTeamInfoType_MAX                     = 2

};

// Enum  DFMGameplay.EBroadcastGameInfoType
enum class EBroadcastGameInfoType : uint8_t
{
    PlayerEnterZone                                = 0,
    PlayerLoadMapFinishEnterGame                   = 1,
    PlayerEscape                                   = 2,
    ExistPointAwake                                = 3,
    ExistPointClose                                = 4,
    EBroadcastGameInfoType_MAX                     = 5

};

// Enum  DFMGameplay.EGameBrocastType
enum class EGameBrocastType : uint8_t
{
    KillInfo                                       = 0,
    GameInfo                                       = 1,
    TeamInfo                                       = 2,
    GamePlayerInfo                                 = 3,
    AntiCheatDetectionInfo                         = 4,
    EGameBrocastType_MAX                           = 5

};

// Enum  DFMGameplay.EGameBrocastChannel
enum class EGameBrocastChannel : uint8_t
{
    Local                                          = 0,
    Global                                         = 1,
    Team                                           = 2,
    Zone                                           = 3,
    EGameBrocastChannel_MAX                        = 4

};

// Enum  DFMGameHud.EAmmoUpdateType
enum class EAmmoUpdateType : uint8_t
{
    FirstGun                                       = 0,
    SecondGun                                      = 1,
    AbilityItem                                    = 2,
    PVE                                            = 3,
    None                                           = 4,
    EAmmoUpdateType_MAX                            = 5

};

// Enum  SlateCore.EButtonClickMethod
enum class EButtonClickMethod : uint8_t
{
    DownAndUp                                      = 0,
    MouseDown                                      = 1,
    MouseUp                                        = 2,
    PreciseClick                                   = 3,
    EButtonClickMethod_MAX                         = 4

};

// Enum  SlateCore.EButtonPressMethod
enum class EButtonPressMethod : uint8_t
{
    DownAndUp                                      = 0,
    ButtonPress                                    = 1,
    ButtonRelease                                  = 2,
    EButtonPressMethod_MAX                         = 3

};

// Enum  SlateCore.EButtonTouchMethod
enum class EButtonTouchMethod : uint8_t
{
    DownAndUp                                      = 0,
    Down                                           = 1,
    PreciseTap                                     = 2,
    EButtonTouchMethod_MAX                         = 3

};

// Enum  DFMGameplay.ESOLQuestState
enum class ESOLQuestState : uint8_t
{
    ESOLQuestState_Locked                          = 0,
    ESOLQuestState_Unread                          = 1,
    ESOLQuestState_Unaccepted                      = 2,
    ESOLQuestState_Accepted                        = 3,
    ESOLQuestState_Failed                          = 4,
    ESOLQuestState_Paused                          = 5,
    ESOLQuestState_Completed                       = 6,
    ESOLQuestState_Rewarded                        = 7,
    ESOLQuestState_MAX                             = 8

};

// Enum  DFMGlobalDefines.EGoalType
enum class EGoalType : uint8_t
{
    None                                           = 0,
    Submit                                         = 1,
    LootPrice                                      = 2,
    CollectItem                                    = 3,
    Escape                                         = 4,
    DefeatEnemy                                    = 5,
    UpgradeSafehouseDeviceLevel_Lobby              = 6,
    UseSafehouseDeviceProduceProp_Lobby            = 7,
    GoToLocation                                   = 8,
    Delivery                                       = 9,
    DSRoomChallange_Lobby                          = 10,
    SubmitWeapon_Lobby                             = 11,
    Interact                                       = 12,
    MatchEvent                                     = 13,
    WorldQuestObjective_Lobby                      = 14,
    PlayerCG_Lobby                                 = 15,
    EscapeWithItem                                 = 16,
    UseItem                                        = 17,
    AttributeModify                                = 18,
    InGameLootAction                               = 19,
    MallBuy_Lobby                                  = 20,
    ReputationLevel_Lobby                          = 21,
    MandelBrick                                    = 22,
    LootOpenBox                                    = 23,
    KeepActionTime                                 = 24,
    QA                                             = 25,
    AuctionBuyProps_Lobby                          = 26,
    AuctionSellProps_Lobby                         = 27,
    SpecificExpertIntoDS_Lobby                     = 28,
    ObjectiveRepair_Lobby                          = 29,
    EquipSpecExtensionBox_Lobby                    = 30,
    EquipBodyProps_Lobby                           = 31,
    EscapeWithMates_Lobby                          = 32,
    UseSkill                                       = 33,
    Contract                                       = 34,
    BehaviorScore                                  = 35,
    CarryBodyDoSomething                           = 36,
    Damage                                         = 37,
    Assist                                         = 38,
    UseRankSkill                                   = 39,
    Movement                                       = 40,
    BeenAtLocation                                 = 41,
    LootingItem                                    = 42,
    MPOccupySector                                 = 43,
    AmmoSupply                                     = 44,
    TimeLimitGoal                                  = 45,
    UseRebornFlag                                  = 46,
    CharcterChecking                               = 47,
    Rescue                                         = 48,
    VOFinish                                       = 51,
    VehicleAmmoSupply                              = 52,
    AmmoSupplyOnMap                                = 53,
    BeHurt                                         = 54,
    DestroyVehicle_NoLocking                       = 56,
    Activity_Lobby_Start                           = 100,
    MPWinning_Looby                                = 101,
    TotalSurvivalTime_Looby                        = 102,
    AddXFriends_Looby                              = 103,
    PlayWith_Looby                                 = 104,
    PraiseXPlayers_Looby                           = 105,
    SubmitProp_Looby                               = 106,
    AuctionSell_Looby                              = 107,
    SellProp_Looby                                 = 108,
    Login_Looby                                    = 109,
    TotalPlayTime_Looby                            = 110,
    LoginStreak_Looby                              = 111,
    MatchStart_Looby                               = 112,
    MatchEnd_Looby                                 = 113,
    TotalOnlineTime_Looby                          = 114,
    CompleteContract_Looby                         = 115,
    Escape_Looby                                   = 116,
    MatchStartWithGroup_Looby                      = 117,
    EGoalType_MAX                                  = 118

};

// Enum  DFMGameplay.ESOLQuestObjectionState
enum class ESOLQuestObjectionState : uint8_t
{
    InActive                                       = 0,
    Active                                         = 1,
    Complete                                       = 2,
    Failed                                         = 3,
    InitialComplete                                = 4,
    InActive_Condition                             = 5,
    ESOLQuestObjectionState_MAX                    = 6

};

// Enum  DFMGameHud.EWeaponTipsType
enum class EWeaponTipsType : uint8_t
{
    None                                           = 0,
    AmmoTipEmpty                                   = 1,
    StingerNoTarget                                = 2,
    AmmoTipLow                                     = 3,
    EWeaponTipsType_MAX                            = 4

};

// Enum  DFMGameHud.EAmmoTipState
enum class EAmmoTipState : uint8_t
{
    None                                           = 0,
    Low                                            = 1,
    Empty                                          = 2,
    EAmmoTipState_MAX                              = 3

};

// Enum  DFMGameHud.EAnimDebugType
enum class EAnimDebugType : uint8_t
{
    None                                           = 0,
    Anim                                           = 1,
    EAnimDebugType_MAX                             = 2

};

// Enum  DFMGameHud.EBattlefieldPlayerDeathType
enum class EBattlefieldPlayerDeathType : uint8_t
{
    NONE                                           = 0,
    TeamMate                                       = 1,
    SameCamp                                       = 2,
    EBattlefieldPlayerDeathType_MAX                = 3

};

// Enum  DFMGameHud.EBionicSpyHudSwitchState
enum class EBionicSpyHudSwitchState : uint8_t
{
    None                                           = 0,
    Loading                                        = 1,
    LoadFinish                                     = 2,
    BlackFinish                                    = 3,
    EBionicSpyHudSwitchState_MAX                   = 4

};

// Enum  DFMGameHud.EWeaponIconType
enum class EWeaponIconType : uint8_t
{
    None                                           = 0,
    Default                                        = 1,
    Gun                                            = 2,
    Melee                                          = 3,
    Throw                                          = 4,
    Vehicles                                       = 5,
    FallingDown                                    = 6,
    EWeaponIconType_MAX                            = 7

};

// Enum  DFMGameHud.EBroadcastNameColorType
enum class EBroadcastNameColorType : uint8_t
{
    None                                           = 0,
    Self                                           = 1,
    Team                                           = 2,
    Enemy                                          = 3,
    Game                                           = 4,
    BattleField_Self                               = 5,
    BattleField_Team                               = 6,
    BattleField_Camp                               = 7,
    BattleField_Enemy                              = 8,
    ObserverModeTeamColor                          = 9,
    EBroadcastNameColorType_MAX                    = 10

};

// Enum  DFMGameHud.EBroadcastKillIconType
enum class EBroadcastKillIconType : uint8_t
{
    None                                           = 0,
    KnockDown                                      = 1,
    HeadShotAndKnockDown                           = 2,
    HeadShot                                       = 3,
    PenetrationKill                                = 4,
    EBroadcastKillIconType_MAX                     = 5

};

// Enum  DFMGameHud.EKillInfoMemberType
enum class EKillInfoMemberType : uint8_t
{
    None                                           = 0,
    All                                            = 1,
    NormalAI                                       = 2,
    SpecialAI                                      = 3,
    AllPlayer                                      = 4,
    CampMember                                     = 5,
    TeamMember                                     = 6,
    Self                                           = 7,
    EKillInfoMemberType_MAX                        = 8

};

// Enum  DFMGameHud.ECommonIconMapZOrder
enum class ECommonIconMapZOrder : uint8_t
{
    Detector                                       = 19,
    Enemy                                          = 19,
    EnemyBeKilled                                  = 19,
    ECommonIconMapZOrder_MAX                       = 20

};

// Enum  DFMGameHud.ECommonIconMapMarkerType
enum class ECommonIconMapMarkerType : uint8_t
{
    None                                           = 0,
    Enemy                                          = 1,
    EnemyBeKilled                                  = 2,
    Detector                                       = 3,
    EnemySpotted                                   = 4,
    ECommonIconMapMarkerType_MAX                   = 5

};

// Enum  DFMGameHud.EDFRouletteActivateType
enum class EDFRouletteActivateType : uint8_t
{
    EImmediately                                   = 0,
    ELongPressed                                   = 1,
    EPressedMove                                   = 2,
    EPlaceHolder1                                  = 4,
    EPlaceHolder2                                  = 8,
    EDFRouletteActivateType_MAX                    = 9

};

// Enum  DFMGameHud.ETipsActionPriority
enum class ETipsActionPriority : uint8_t
{
    Default                                        = 1,
    ReleaseRope                                    = 2,
    AbilitySkill                                   = 3,
    DropCarryBody                                  = 4,
    NetRemove                                      = 5,
    ZoyaSwarms                                     = 6,
    Firefighting                                   = 7,
    PullOutArrow                                   = 8,
    Assassinate                                    = 9,
    CarryBody                                      = 10,
    ETipsActionPriority_MAX                        = 11

};

// Enum  DFMGameHud.EActionTipsAnimType
enum class EActionTipsAnimType : uint8_t
{
    OpenParachuteWarning                           = 0,
    EActionTipsAnimType_Count                      = 1,
    EActionTipsAnimType_MAX                        = 2

};

// Enum  DFMGameHud.EPlayerStatePC
enum class EPlayerStatePC : uint8_t
{
    Normal                                         = 0,
    Dying                                          = 1,
    BeingRescue                                    = 2,
    DeadWaitingRevive                              = 3,
    BeingRevive                                    = 4,
    Escaped                                        = 5,
    DeadCompletely                                 = 6,
    QuitGame                                       = 7,
    MaxCount                                       = 8,
    EPlayerStatePC_MAX                             = 9

};

// Enum  DFMGameHud.EMainKeyType
enum class EMainKeyType : uint8_t
{
    Keyboard                                       = 0,
    MouseButton                                    = 1,
    MouseWheel                                     = 2,
    MouseAxis                                      = 3,
    Invalid                                        = 10,
    EMainKeyType_MAX                               = 11

};

// Enum  DFMGameHud.ETestEmitterAudioType
enum class ETestEmitterAudioType : uint8_t
{
    DEFAULT                                        = 0,
    FOOTSTEP_RUN                                   = 1,
    FOOTSTEP_WALK                                  = 2,
    FOOTSTEP_SPRINT                                = 3,
    WEAPON_AK                                      = 4,
    WEAPON_AK_SUP                                  = 5,
    ETestEmitterAudioType_MAX                      = 6

};

// Enum  DFMGameHud.ETestEmitterMoveMode
enum class ETestEmitterMoveMode : uint8_t
{
    Static                                         = 0,
    Circular                                       = 1,
    ETestEmitterMoveMode_MAX                       = 2

};

// Enum  DFMGameHud.ETestEmitterPlayMode
enum class ETestEmitterPlayMode : uint8_t
{
    Loop                                           = 0,
    PlayOnce                                       = 1,
    ETestEmitterPlayMode_MAX                       = 2

};

// Enum  DFMGameHud.EButtonViewState
enum class EButtonViewState : uint8_t
{
    ButtonViewState_None                           = 0,
    ButtonViewState_Normal                         = 1,
    ButtonViewState_Activated                      = 2,
    ButtonViewState_Forbidden                      = 3,
    ButtonViewState_Cooldown                       = 4,
    ButtonViewState_MAX                            = 5

};

// Enum  DFMGameHud.ECountDownColorType
enum class ECountDownColorType : uint8_t
{
    None                                           = 0,
    White                                          = 1,
    Red                                            = 2,
    Green                                          = 3,
    ECountDownColorType_MAX                        = 4

};

// Enum  DFMGameHud.ECrosshairFeedbackPlaceType
enum class ECrosshairFeedbackPlaceType : uint8_t
{
    ScreenCenter                                   = 0,
    FrontSight                                     = 1,
    ECrosshairFeedbackPlaceType_MAX                = 2

};

// Enum  DFMGameHud.EFeedbackAnimType
enum class EFeedbackAnimType : uint8_t
{
    NONE                                           = 0,
    HitHead                                        = 1,
    HitBody                                        = 2,
    KilledWithHead                                 = 3,
    KilledWithBody                                 = 4,
    HitVehicle                                     = 5,
    KillVehicle                                    = 6,
    HitADS                                         = 7,
    HitSkillActor                                  = 8,
    EFeedbackAnimType_MAX                          = 9

};

// Enum  DFMGameHud.ECrosshairFeedbackTypes
enum class ECrosshairFeedbackTypes : uint8_t
{
    CrosshairFeedback_Damage                       = 0,
    CrosshairFeedback_Kill                         = 1,
    CrosshairFeedback_Shock                        = 2,
    CrosshairFeedback_Vehicle                      = 3,
    CrosshairFeedback_Ability                      = 4,
    CrosshairFeedback_MAX                          = 5

};

// Enum  DFMGameHud.ECurveKind
enum class ECurveKind : uint8_t
{
    None                                           = 0,
    Up                                             = 1,
    Down                                           = 2,
    ECurveKind_MAX                                 = 3

};

// Enum  DFMGameHud.EFeedbackTipsAnimType
enum class EFeedbackTipsAnimType : uint8_t
{
    None                                           = 0,
    KnockDown                                      = 1,
    HitArmor                                       = 2,
    HitArmorAndDamageHp                            = 3,
    HitArmorBroken                                 = 4,
    HitHelmet                                      = 5,
    HitHelmetAndDamageHp                           = 6,
    HitHelmetBroken                                = 7,
    HitSkillActor                                  = 8,
    BreakShieldGlass                               = 9,
    CounterProjectile                              = 10,
    C304Invincible                                 = 11,
    EFeedbackTipsAnimType_MAX                      = 12

};

// Enum  DFMGameHud.EHudModuleType
enum class EHudModuleType : uint8_t
{
    None                                           = 0,
    Redeploy                                       = 1,
    EHudModuleType_MAX                             = 2

};

// Enum  DFMGameHud.EProgressType
enum class EProgressType : uint8_t
{
    Cutting                                        = 0,
    Repairing                                      = 1,
    EProgressType_MAX                              = 2

};

// Enum  DFMGameHud.EWhiteDotAnimaStatus
enum class EWhiteDotAnimaStatus : uint8_t
{
    Small                                          = 0,
    Small2Medium                                   = 1,
    Medium                                         = 2,
    Medium2Small                                   = 3,
    Medium2Tiny                                    = 4,
    Tiny                                           = 5,
    Tiny2Medium                                    = 6,
    LootFailed2Medium                              = 7,
    EWhiteDotAnimaStatus_MAX                       = 8

};

// Enum  DFMGameHud.EBowControlType
enum class EBowControlType : uint8_t
{
    Bow                                            = 0,
    ThrowBlocking                                  = 1,
    BlastShieldHeavyAttack                         = 2,
    ToggleSkillWeaponExtraFunc                     = 3,
    EBowControlType_MAX                            = 4

};

// Enum  DFMGameHud.CarryBodyButtonViewType
enum class CarryBodyButtonViewType : uint32_t
{
    None                                           = 0,
    DropBody                                       = 1,
    DropBox                                        = 2,
    PullOutArrow                                   = 4,
    NetRemove                                      = 8,
    Firefighting                                   = 16,
    ZoyaSwarms                                     = 32,
    BionicSpy                                      = 64,
    CarryBody                                      = 128,
    CarryBox                                       = 256,
    CarryBodyButtonViewType_MAX                    = 257

};

// Enum  DFMGameHud.EFireIconType
enum class EFireIconType : uint8_t
{
    Normal                                         = 0,
    Throw                                          = 1,
    MeleeNotEmptyHand                              = 2,
    EFireIconType_MAX                              = 3

};

// Enum  DFMGameHud.EHelmetImageType
enum class EHelmetImageType : uint8_t
{
    Surface                                        = 0,
    Damage                                         = 1,
    Border                                         = 2,
    EHelmetImageType_MAX                           = 3

};

// Enum  DFMGameHud.EDFMScopeBtnType
enum class EDFMScopeBtnType : uint8_t
{
    EZoomRate                                      = 0,
    EIconWithArrow                                 = 1,
    EIconWithoutArrow                              = 2,
    EDFMScopeBtnType_MAX                           = 3

};

// Enum  DFMGameHud.EExpandableButtonType
enum class EExpandableButtonType : uint8_t
{
    None                                           = 0,
    ThrowableWeapon                                = 1,
    MedicalItem                                    = 2,
    EExpandableButtonType_MAX                      = 3

};

// Enum  DFMGameHud.ETypeState
enum class ETypeState : uint8_t
{
    None                                           = 0,
    NotActive                                      = 1,
    Active                                         = 2,
    ETypeState_MAX                                 = 3

};

// Enum  DFMGameHud.EAnimPlayConfig
enum class EAnimPlayConfig : uint8_t
{
    HighConfig                                     = 0,
    LowConfig                                      = 1,
    EAnimPlayConfig_MAX                            = 2

};

// Enum  DFMGameHud.ECurActiveWeaponType
enum class ECurActiveWeaponType : uint8_t
{
    EmptyHand                                      = 0,
    Gun                                            = 1,
    AbilityItem                                    = 2,
    PVEWeapon                                      = 3,
    MeleeWeapon                                    = 4,
    ThrowableWeapon                                = 5,
    ECurActiveWeaponType_MAX                       = 6

};

// Enum  DFMGameHud.ECancelRescueMySelfType
enum class ECancelRescueMySelfType : uint8_t
{
    None                                           = 0,
    Normal                                         = 1,
    SpeedUp                                        = 2,
    ECancelRescueMySelfType_MAX                    = 3

};

// Enum  DFMGameHud.EVoiceChannelType
enum class EVoiceChannelType : uint8_t
{
    None                                           = 0,
    TeamOutOfGame                                  = 1,
    TeamInGame                                     = 2,
    CampInGame                                     = 3,
    EVoiceChannelType_MAX                          = 4

};

// Enum  DFMGameHud.EMarkerState
enum class EMarkerState : uint8_t
{
    Init                                           = 0,
    Translucent                                    = 1,
    Opaque                                         = 2,
    Flicker                                        = 3,
    Sticky                                         = 4,
    EMarkerState_MAX                               = 5

};

// Enum  DFMGameHud.ESTipsCommonButtonAnimType
enum class ESTipsCommonButtonAnimType : uint8_t
{
    UT_None                                        = 0,
    UT_InLoop                                      = 1,
    UT_InOnce                                      = 2,
    UT_MAX                                         = 3

};

// Enum  DFMGameHud.EWeakNetWorkWaitFunctionID
enum class EWeakNetWorkWaitFunctionID : uint8_t
{
    None                                           = 0,
    EPreload                                       = 1,
    ERequestRedeploy                               = 2,
    ERequestWeaponStore                            = 3,
    ERequestVehicleModificationRules               = 4,
    ERequestUnlockedVehicleAndPartIDs              = 5,
    ERequestSwitchVehiclePart                      = 6,
    EWeakNetWorkWaitFunctionID_MAX                 = 7

};

// Enum  DFMGameHud.EPlayerMarkerType
enum class EPlayerMarkerType : uint8_t
{
    Permanent                                      = 0,
    PermanentAndCovered                            = 1,
    Aimed                                          = 2,
    AimedAndCovered                                = 3,
    ScoutMarkPermanent                             = 4,
    ScoutMarkPermanentAndCovered                   = 5,
    EPlayerMarkerType_MAX                          = 6

};

// Enum  DFMGameHud.EExitHudType
enum class EExitHudType : uint8_t
{
    NONE                                           = 0,
    ESCAPING                                       = 1,
    UNOPEN                                         = 2,
    EExitHudType_MAX                               = 3

};

// Enum  DFMGameHud.EFootprintSearchTargetState
enum class EFootprintSearchTargetState : uint8_t
{
    None                                           = 0,
    Active                                         = 1,
    Dead                                           = 2,
    Exit                                           = 3,
    EFootprintSearchTargetState_MAX                = 4

};

// Enum  DFMGameHud.EFootprintSearchState
enum class EFootprintSearchState : uint8_t
{
    None                                           = 0,
    Enemy                                          = 1,
    Footprint                                      = 2,
    PickupContainer                                = 3,
    EFootprintSearchState_MAX                      = 4

};

// Enum  DFMGameHud.ELoadingDestination
enum class ELoadingDestination : uint8_t
{
    ELD_NONE                                       = 0,
    ELD_Login                                      = 1,
    ELD_MainHall                                   = 2,
    ELD_BattlefieldHall                            = 3,
    ELD_SOLHall                                    = 4,
    ELD_SOLGame                                    = 5,
    ELD_MPGame                                     = 6,
    ELD_RaidGame                                   = 7,
    ELD_MAX                                        = 8

};

// Enum  DFMGameHud.EKillTipWidgetType
enum class EKillTipWidgetType : uint8_t
{
    ETipWidgetType_Kill                            = 0,
    ETipWidgetType_HeadShot                        = 1,
    ETipwidgetType_KillStreak                      = 2,
    EKillTipWidgetType_MAX                         = 3

};

// Enum  DFMGameHud.EKillTipsShowType
enum class EKillTipsShowType : uint8_t
{
    HeadShot                                       = 0,
    MultiKill                                      = 1,
    EKillTipsShowType_MAX                          = 2

};

// Enum  DFMGameHud.ERippleType
enum class ERippleType : uint8_t
{
    None                                           = 0,
    TrackingLoc                                    = 1,
    ERippleType_MAX                                = 2

};

// Enum  DFMGameHud.ESoundWaveSourceType
enum class ESoundWaveSourceType : uint8_t
{
    SilentWalk                                     = 0,
    Run                                            = 1,
    Sprint                                         = 2,
    Gun                                            = 3,
    GunWithSilencer                                = 4,
    ESoundWaveSourceType_MAX                       = 5

};

// Enum  DFMGameHud.EBodyPartType
enum class EBodyPartType : uint8_t
{
    Head                                           = 0,
    Throax                                         = 1,
    LeftArm                                        = 2,
    RightArm                                       = 3,
    LeftLeg                                        = 4,
    RightLeg                                       = 5,
    EBodyPartType_MAX                              = 6

};

// Enum  DFMGameHud.EMiniMapTipsType
enum class EMiniMapTipsType : uint8_t
{
    None                                           = 0,
    Hide                                           = 1,
    Sneaking                                       = 2,
    Alert                                          = 3,
    Fight                                          = 4,
    EMiniMapTipsType_MAX                           = 5

};

// Enum  DFMGameHud.EImpendingDeathMarkerType
enum class EImpendingDeathMarkerType : uint8_t
{
    None                                           = 0,
    SOL_ImpendingDeath                             = 1,
    SOL_FirstDeath                                 = 2,
    SOL_Death                                      = 3,
    BT_SameTeamImpendingDeath                      = 4,
    BT_SameCampImpendingDeath                      = 5,
    EImpendingDeathMarkerType_MAX                  = 6

};

// Enum  DFMGameHud.EPlayerReviveButtonState
enum class EPlayerReviveButtonState : uint8_t
{
    None                                           = 0,
    White                                          = 1,
    Green                                          = 2,
    Red                                            = 3,
    Forbidden                                      = 4,
    EPlayerReviveButtonState_MAX                   = 5

};

// Enum  DFMGameHud.ECancelRescueType
enum class ECancelRescueType : uint8_t
{
    None                                           = 0,
    Normal                                         = 1,
    SpeedUp                                        = 2,
    ECancelRescueType_MAX                          = 3

};

// Enum  DFMGameHud.ECharacterSoundInfoType
enum class ECharacterSoundInfoType : uint8_t
{
    NoSound                                        = 0,
    Sprint                                         = 1,
    SilentWalk                                     = 2,
    CrouchRun                                      = 3,
    ProneRun                                       = 4,
    StandRun                                       = 5,
    Gun                                            = 6,
    ECharacterSoundInfoType_MAX                    = 7

};

// Enum  DFMGameHud.ERaidLiveTabType
enum class ERaidLiveTabType : uint8_t
{
    None                                           = 0,
    DataBoard                                      = 1,
    Advantages                                     = 2,
    ERaidLiveTabType_MAX                           = 3

};

// Enum  DFMGameHud.ERankSkillUIStyle
enum class ERankSkillUIStyle : uint8_t
{
    E_None                                         = 0,
    E_Ready                                        = 1,
    E_NoReady                                      = 2,
    E_ReadySelected                                = 3,
    E_NoReadySelected                              = 4,
    E_MAX                                          = 5

};

// Enum  DFMGameHud.EMatchTimeState
enum class EMatchTimeState : uint8_t
{
    EMatchTimeState_Normal                         = 0,
    EMatchTimeState_Urgent                         = 1,
    EMatchTimeState_MAX                            = 2

};

// Enum  DFMGameHud.ERouletteActionType
enum class ERouletteActionType : uint8_t
{
    RA_None                                        = 0,
    RA_FlashLight                                  = 1,
    RA_OperateLaser                                = 2,
    RA_OperateMask                                 = 3,
    RA_OperateTool                                 = 4,
    RA_PlayEmote                                   = 5,
    RA_OperateBipod                                = 6,
    RA_WeaponInspect                               = 7,
    RA_MAX                                         = 8

};

// Enum  DFMGameHud.EShopType
enum class EShopType : uint8_t
{
    EWeaponShop                                    = 0,
    EAmmorShop                                     = 1,
    EPropShop                                      = 2,
    EShopType_MAX                                  = 3

};

// Enum  DFMGameHud.ESOLSidePanelType
enum class ESOLSidePanelType : uint8_t
{
    None                                           = 0,
    Quest                                          = 1,
    Wish                                           = 2,
    Contract                                       = 3,
    SeasonQuest                                    = 4,
    SeamlessMapNoContract                          = 5,
    ESOLSidePanelType_MAX                          = 6

};

// Enum  DFMGameHud.ESOLMapInfoSwitchType
enum class ESOLMapInfoSwitchType : uint8_t
{
    None                                           = 0,
    Boss                                           = 1,
    POI                                            = 2,
    SupplyStation                                  = 3,
    UnlockPoint                                    = 4,
    ESOLMapInfoSwitchType_MAX                      = 5

};

// Enum  DFMGameHud.EEvacuateBtnType
enum class EEvacuateBtnType : uint8_t
{
    Exit                                           = 0,
    Trigger                                        = 1,
    EEvacuateBtnType_MAX                           = 2

};

// Enum  DFMGameHud.ESOLLiveTabType
enum class ESOLLiveTabType : uint8_t
{
    None                                           = 0,
    Exit                                           = 1,
    Quest                                          = 2,
    Resource                                       = 3,
    Key                                            = 4,
    Wish                                           = 5,
    ESOLLiveTabType_MAX                            = 6

};

// Enum  DFMGameHud.EQuestPlayerExitState
enum class EQuestPlayerExitState : uint8_t
{
    None                                           = 0,
    Exist                                          = 1,
    NoExist                                        = 2,
    NoActive                                       = 3,
    EQuestPlayerExitState_MAX                      = 4

};

// Enum  DFMGameHud.ESOLEvacuationEventHUDViewState
enum class ESOLEvacuationEventHUDViewState : uint8_t
{
    Inactive                                       = 0,
    Start                                          = 1,
    Waiting                                        = 2,
    Ready                                          = 3,
    Finish                                         = 4,
    ESOLEvacuationEventHUDViewState_MAX            = 5

};

// Enum  DFMGameHud.EProgressTipsState
enum class EProgressTipsState : uint8_t
{
    None                                           = 0,
    Normal                                         = 1,
    CannotCopy                                     = 2,
    NotCopy                                        = 3,
    Copied                                         = 4,
    EProgressTipsState_MAX                         = 5

};

// Enum  DFMGameHud.ESOLTimelineTipHUDViewState
enum class ESOLTimelineTipHUDViewState : uint8_t
{
    Ready                                          = 0,
    Inactive                                       = 1,
    NoticeBegin                                    = 2,
    NoticeEnd                                      = 3,
    EventBegin                                     = 4,
    EventEnd                                       = 5,
    ESOLTimelineTipHUDViewState_MAX                = 6

};

// Enum  DFMGameHud.FDebugCommandLineType
enum class FDebugCommandLineType : uint8_t
{
    Toggle                                         = 0,
    Attribute                                      = 1,
    AttributeInput                                 = 2,
    FDebugCommandLineType_MAX                      = 3

};

// Enum  DFMGameHud.EWeaponDebugType
enum class EWeaponDebugType : uint8_t
{
    None                                           = 0,
    Base                                           = 1,
    Recoil                                         = 2,
    AssistedAiming                                 = 3,
    Anim                                           = 4,
    Effect                                         = 5,
    Audio                                          = 6,
    Setting                                        = 7,
    Modular                                        = 8,
    Spread                                         = 9,
    DataModifier                                   = 10,
    AttributeDisplay                               = 11,
    Damage                                         = 12,
    AttributeDetailDisplay                         = 13,
    HotReflashDisplay                              = 14,
    PreViewTimeLine                                = 15,
    UI                                             = 16,
    Spawn                                          = 17,
    Mesh                                           = 18,
    EWeaponDebugType_MAX                           = 19

};

// Enum  Engine.TextureGroup
enum class TextureGroup : uint8_t
{
    TEXTUREGROUP_World                             = 0,
    TEXTUREGROUP_WorldNormalMap                    = 1,
    TEXTUREGROUP_WorldSpecular                     = 2,
    TEXTUREGROUP_Character                         = 3,
    TEXTUREGROUP_CharacterNormalMap                = 4,
    TEXTUREGROUP_CharacterSpecular                 = 5,
    TEXTUREGROUP_Weapon                            = 6,
    TEXTUREGROUP_WeaponNormalMap                   = 7,
    TEXTUREGROUP_WeaponSpecular                    = 8,
    TEXTUREGROUP_Vehicle                           = 9,
    TEXTUREGROUP_VehicleNormalMap                  = 10,
    TEXTUREGROUP_VehicleSpecular                   = 11,
    TEXTUREGROUP_Cinematic                         = 12,
    TEXTUREGROUP_Effects                           = 13,
    TEXTUREGROUP_EffectsNotFiltered                = 14,
    TEXTUREGROUP_Skybox                            = 15,
    TEXTUREGROUP_UI                                = 16,
    TEXTUREGROUP_Lightmap                          = 17,
    TEXTUREGROUP_RenderTarget                      = 18,
    TEXTUREGROUP_MobileFlattened                   = 19,
    TEXTUREGROUP_ProcBuilding_Face                 = 20,
    TEXTUREGROUP_ProcBuilding_LightMap             = 21,
    TEXTUREGROUP_Shadowmap                         = 22,
    TEXTUREGROUP_ColorLookupTable                  = 23,
    TEXTUREGROUP_Terrain_Heightmap                 = 24,
    TEXTUREGROUP_Terrain_Weightmap                 = 25,
    TEXTUREGROUP_Bokeh                             = 26,
    TEXTUREGROUP_IESLightProfile                   = 27,
    TEXTUREGROUP_Pixels2D                          = 28,
    TEXTUREGROUP_HierarchicalLOD                   = 29,
    TEXTUREGROUP_Impostor                          = 30,
    TEXTUREGROUP_ImpostorNormalDepth               = 31,
    TEXTUREGROUP_8BitData                          = 32,
    TEXTUREGROUP_16BitData                         = 33,
    TEXTUREGROUP_WorldAniso                        = 34,
    TEXTUREGROUP_WorldNoSmallPak                   = 35,
    TEXTUREGROUP_Grass                             = 36,
    TEXTUREGROUP_Tree                              = 37,
    TEXTUREGROUP_Building                          = 38,
    TEXTUREGROUP_Stone                             = 39,
    TEXTUREGROUP_Prop                              = 40,
    TEXTUREGROUP_Decal                             = 41,
    TEXTUREGROUP_Project01                         = 42,
    TEXTUREGROUP_Project02                         = 43,
    TEXTUREGROUP_Project03                         = 44,
    TEXTUREGROUP_Project04                         = 45,
    TEXTUREGROUP_Project05                         = 46,
    TEXTUREGROUP_Project06                         = 47,
    TEXTUREGROUP_Project07                         = 48,
    TEXTUREGROUP_Project08                         = 49,
    TEXTUREGROUP_Project09                         = 50,
    TEXTUREGROUP_Project10                         = 51,
    TEXTUREGROUP_MAX                               = 52

};

// Enum  DFMGameLaunch.ELaunchStepResult
enum class ELaunchStepResult : uint8_t
{
    ELSR_None                                      = 0,
    ELSR_Success                                   = 1,
    ELSR_Warning                                   = 2,
    ELSR_Failed                                    = 3,
    ELSR_Restart                                   = 4,
    ELSR_MAX                                       = 5

};

// Enum  DFMGameLoading.EFlowResult
enum class EFlowResult : uint8_t
{
    EFR_None                                       = 0,
    EFR_Success                                    = 1,
    EFR_Failed                                     = 2,
    ERF_TimeOut                                    = 3,
    EFlowResult_MAX                                = 4

};

// Enum  DFMGameLoading.ELoadingTypeInner
enum class ELoadingTypeInner : uint8_t
{
    LT_None                                        = 0,
    LT_LoadingMapPreLoading                        = 1,
    LT_LoadingMapPostLoading                       = 2,
    LT_TargetMapPostLoading                        = 3,
    LT_MAX                                         = 4

};

// Enum  DFMGameLoading.EMapLoadStage
enum class EMapLoadStage : uint8_t
{
    MLS_None                                       = 0,
    MLS_LoadingMapPreLoad                          = 1,
    MLS_LoadingMapPostLoad                         = 2,
    MLS_TargetMapPreLoad                           = 3,
    MLS_TargetMapPostLoad                          = 4,
    MLS_MAX                                        = 5

};

// Enum  DFMGameLoading.EFlowStatus
enum class EFlowStatus : uint8_t
{
    EFS_None                                       = 0,
    EFS_Running                                    = 1,
    EFS_Finish                                     = 2,
    EFS_MAX                                        = 3

};

// Enum  DFMGameLoading.ELoadingType
enum class ELoadingType : uint8_t
{
    LT_None                                        = 0,
    LT_LoadingMapLoading                           = 1,
    LT_TargetMapLoading                            = 2,
    LT_MAX                                         = 3

};

// Enum  DFMGamepadInput.EAdaptiveTriggerEffectType
enum class EAdaptiveTriggerEffectType : uint8_t
{
    Off                                            = 0,
    Feedback                                       = 1,
    MultiPositionFeedback                          = 2,
    SlopeFeedback                                  = 3,
    Weapon                                         = 4,
    Vibration                                      = 5,
    MultiPositionVibration                         = 6,
    EAdaptiveTriggerEffectType_MAX                 = 7

};

// Enum  DFMGamepadInput.EInputDeviceTriggerMask
enum class EInputDeviceTriggerMask : uint8_t
{
    None                                           = 0,
    Left                                           = 1,
    Right                                          = 2,
    EInputDeviceTriggerMask_MAX                    = 3

};

// Enum  DFMGamepadInput.EDFMInputSettingVisibility
enum class EDFMInputSettingVisibility : uint8_t
{
    Visible                                        = 0,
    Disable                                        = 1,
    Hidden                                         = 2,
    EDFMInputSettingVisibility_MAX                 = 3

};

// Enum  DFMGamepadInput.EDFMInputPresetDisplayGrouping
enum class EDFMInputPresetDisplayGrouping : uint8_t
{
    Foot                                           = 0,
    Vehicle                                        = 1,
    Helicopter                                     = 2,
    Jet                                            = 3,
    EDFMInputPresetDisplayGrouping_MAX             = 4

};

// Enum  DFMGamepadInput.EDFMInputPriority
enum class EDFMInputPriority : uint8_t
{
    Low                                            = 0,
    Middle                                         = 1,
    High                                           = 2,
    VeryHigh                                       = 3,
    EDFMInputPriority_MAX                          = 4

};

// Enum  DFMGamepadInput.ETriggerSuperSprintType
enum class ETriggerSuperSprintType : uint8_t
{
    TapWhenSprint                                  = 0,
    TapWhenRun                                     = 1,
    DoubleClickWhenSprint                          = 2,
    ETriggerSuperSprintType_MAX                    = 3

};

// Enum  DFMGamepadInput.ESlideAndProneTriggerType
enum class ESlideAndProneTriggerType : uint8_t
{
    TapSlideAndLongPressProne                      = 0,
    TapProneAndLongPressSlide                      = 1,
    OnlySlide                                      = 2,
    OnlyProne                                      = 3,
    ESlideAndProneTriggerType_MAX                  = 4

};

// Enum  DFMGamepadInput.EAutoSprintSettingType
enum class EAutoSprintSettingType : uint8_t
{
    Close                                          = 0,
    AutoSprint                                     = 1,
    AutoSuperSprint                                = 2,
    EAutoSprintSettingType_MAX                     = 3

};

// Enum  DFMGamepadInput.EDFMInputModifierTargetKey
enum class EDFMInputModifierTargetKey : uint8_t
{
    Key1                                           = 0,
    Key2                                           = 1,
    Both                                           = 2,
    EDFMInputModifierTargetKey_MAX                 = 3

};

// Enum  DFMGamepadInput.EDFMInputTriggerState
enum class EDFMInputTriggerState : uint8_t
{
    None                                           = 0,
    Ongoing                                        = 1,
    Triggered                                      = 2,
    WaitingRelease                                 = 3,
    WaitingReset                                   = 4,
    EDFMInputTriggerState_MAX                      = 5

};

// Enum  DFMGameplay.EC103ButterState
enum class EC103ButterState : uint8_t
{
    Idle                                           = 0,
    AutoFly                                        = 1,
    Resaving                                       = 2,
    Stop                                           = 3,
    EC103ButterState_MAX                           = 4

};

// Enum  DFMGameplay.EActionState
enum class EActionState : uint8_t
{
    Idle                                           = 0,
    Succeeded                                      = 1,
    Failed                                         = 2,
    Aborted                                        = 3,
    InProgress                                     = 4,
    EActionState_MAX                               = 5

};

// Enum  DFMGameplay.EActivityActorType
enum class EActivityActorType : uint8_t
{
    ENone                                          = 0,
    EActor_Arknights                               = 1,
    EActivityActorType_MAX                         = 2

};

// Enum  DFMGameplay.ESkillType
enum class ESkillType : uint8_t
{
    Crocodile_DeathRoll                            = 0,
    Crocodile_MAX                                  = 1

};

// Enum  DFMGameplay.EAIGroupDramaVoiceRole
enum class EAIGroupDramaVoiceRole : uint8_t
{
    NONE                                           = 0,
    ROLE_MASTER                                    = 1,
    ROLE                                           = 2,
    ROLE                                           = 3,
    ROLE                                           = 4,
    ROLE                                           = 5,
    EAIGroupDramaVoiceRole_MAX                     = 6

};

// Enum  DFMGameplay.EPathFollowState
enum class EPathFollowState : uint8_t
{
    Idle                                           = 0,
    Finished                                       = 1,
    Failed                                         = 2,
    Aborted                                        = 3,
    InProgress                                     = 4,
    EPathFollowState_MAX                           = 5

};

// Enum  DFMGameplay.EAILabJobType
enum class EAILabJobType : uint8_t
{
    Init                                           = 0,
    MoveToPOI                                      = 1,
    Loot                                           = 2,
    Exit                                           = 3,
    MAX                                            = 4

};

// Enum  DFMGameplay.EAILabTransCommand
enum class EAILabTransCommand : uint8_t
{
    ETransNone                                     = 0,
    ETransMove                                     = 1,
    ETransRight                                    = 2,
    ETransTurn                                     = 3,
    ETransLookUp                                   = 4,
    ETransFire                                     = 5,
    ETransReload                                   = 6,
    ETransAim                                      = 7,
    ETransJump                                     = 8,
    ETransProne                                    = 9,
    ETransCrouch                                   = 10,
    ETransCarryBody                                = 11,
    ETransInter                                    = 12,
    ETransSlide                                    = 13,
    ETransSkill                                    = 14,
    EMapMark                                       = 15,
    ETransLeftLean                                 = 16,
    ETransRightLean                                = 17,
    ETransUseItem                                  = 18,
    ETransSwitchWeapon                             = 19,
    ETransOperateBox                               = 20,
    ETransRescue                                   = 21,
    ETransReDeploy                                 = 22,
    ETransGiveup                                   = 23,
    ETransSuperSprint                              = 24,
    ETransDoLadder                                 = 25,
    ETransToggleZipline                            = 26,
    ETransUseScenceWeapon                          = 27,
    ETransUseAmmoBox                               = 28,
    ETransUseVehicle                               = 29,
    ETransVehicleThrottleInput                     = 30,
    ETransVehicleSteeringInput                     = 31,
    EAILabTransCommand_MAX                         = 32

};

// Enum  DFMGameplay.EAIQuestCommand
enum class EAIQuestCommand : uint8_t
{
    EAIQuestCommand_None                           = 0,
    EAIQuestCommand_MoveToLocation                 = 1,
    EAIQuestCommand_MAX                            = 2

};

// Enum  DFMGameplay.EAirDropResult
enum class EAirDropResult : uint8_t
{
    ENone                                          = 0,
    ESuccess                                       = 1,
    ENotEnoughScore                                = 2,
    ECountDown                                     = 3,
    ENotEnoughVehicleCount                         = 4,
    EOverSectorVehicleCountLimit                   = 5,
    EOverCampVehicleCountLimit                     = 6,
    EAirDropResult_MAX                             = 7

};

// Enum  DFMGameplay.EAISpawnCheckRule
enum class EAISpawnCheckRule : uint8_t
{
    PLAYERAREA                                     = 1,
    PLAYERSIGHT                                    = 2,
    ALL                                            = 255,
    EAISpawnCheckRule_MAX                          = 256

};

// Enum  DFMGameplay.EAISpawnRule
enum class EAISpawnRule : uint8_t
{
    EImmediate                                     = 0,
    ETime                                          = 1,
    EAISpawnRule_MAX                               = 2

};

// Enum  DFMGameplay.ESpawnState
enum class ESpawnState : uint8_t
{
    Wait                                           = 0,
    Active                                         = 1,
    Finish                                         = 2,
    ESpawnState_MAX                                = 3

};

// Enum  DFMGameplay.EAISpeakContextType
enum class EAISpeakContextType : uint8_t
{
    GO_SEARCH                                      = 0,
    FOUND_ENEMY                                    = 1,
    UNSET                                          = 2,
    EAISpeakContextType_MAX                        = 3

};

// Enum  DFMGameplay.EAIStyleType
enum class EAIStyleType : uint8_t
{
    None                                           = 0,
    TotalJob_TKV_Assult                            = 1,
    TotalJob_TKV_Prudent                           = 2,
    TotalJob_TKV_Normal                            = 3,
    TotalJob_MGS                                   = 4,
    LocalJob_Start                                 = 5,
    LocalJob_MGS_Alert_Search                      = 6,
    LocalJob_MGS_Alert_Stay                        = 7,
    LocalJob_MGS_Fight_Close                       = 8,
    LocalJob_MGS_FIght_Far                         = 9,
    Max                                            = 10

};

// Enum  DFMGameplay.EAIUnitTestPlayerState
enum class EAIUnitTestPlayerState : uint8_t
{
    SLIENTWALK                                     = 0,
    RUN                                            = 1,
    SPRINT                                         = 2,
    CROUCH                                         = 3,
    PRONE                                          = 4,
    SHOOT                                          = 5,
    MAX                                            = 6

};

// Enum  DFMGameplay.EPrefectureReplenishScheme
enum class EPrefectureReplenishScheme : uint8_t
{
    ReplenishByReborn                              = 0,
    ReplenishByCar                                 = 1,
    ReplenishByAir                                 = 2,
    ReplenishByNone                                = 3,
    End                                            = 4,
    EPrefectureReplenishScheme_MAX                 = 5

};

// Enum  DFMGameplay.EPrefectureBoardcastThreatType
enum class EPrefectureBoardcastThreatType : uint8_t
{
    BoardcastPrefecture                            = 0,
    BoardcastNearby                                = 1,
    End                                            = 2,
    EPrefectureBoardcastThreatType_MAX             = 3

};

// Enum  DFMGameplay.EAmbientLightVolumeDefine
enum class EAmbientLightVolumeDefine : uint8_t
{
    ECharacterGlobalEventD_None                    = 0,
    ECharacterGlobalEvent_ToHandingM2HB            = 1,
    ECharacterGlobalEvent_WTF                      = 2,
    EAmbientLightVolumeDefine_MAX                  = 3

};

// Enum  DFMGameplay.EDBAmmoBoxCountLimitRule
enum class EDBAmmoBoxCountLimitRule : uint8_t
{
    OnlyOnce                                       = 0,
    EachOnce                                       = 1,
    EDBAmmoBoxCountLimitRule_MAX                   = 2

};

// Enum  DFMGameplay.EDBAmmoBoxVisibilityRule
enum class EDBAmmoBoxVisibilityRule : uint8_t
{
    OnlyKiller                                     = 0,
    OnlyKillerTeam                                 = 1,
    All                                            = 2,
    EDBAmmoBoxVisibilityRule_MAX                   = 3

};

// Enum  DFMGameplay.EGPPlayParticleEffectTeamRole
enum class EGPPlayParticleEffectTeamRole : uint8_t
{
    ROLE_All                                       = 0,
    ROLE_Team                                      = 1,
    ROLE_Enermy                                    = 2,
    ROLE_MAX                                       = 3

};

// Enum  DFMGameplay.ETerrainType
enum class ETerrainType : uint8_t
{
    Land                                           = 0,
    River                                          = 1,
    ETerrainType_MAX                               = 2

};

// Enum  DFMGameplay.EArenaScoreChangeEvent
enum class EArenaScoreChangeEvent : uint8_t
{
    None                                           = 0,
    Rental_Undefined                               = 1,
    Rental_Roll                                    = 2,
    Rental_Buy                                     = 3,
    Round_Start                                    = 10,
    Round                                          = 11,
    Round                                          = 12,
    Round                                          = 13,
    Round                                          = 14,
    Round                                          = 15,
    Round                                          = 16,
    Round                                          = 17,
    Round_Max                                      = 18,
    Win                                            = 30,
    Win_Continue                                   = 31,
    Lose                                           = 50,
    Lose_Continue                                  = 51,
    Win_Continue_Turn_Lose                         = 71,
    Lose_Continue_Turn_Win                         = 72,
    Increase_Base                                  = 80,
    Kill                                           = 100,
    Assist                                         = 101,
    Kill_AI                                        = 103,
    Assist_Kill_AI                                 = 104,
    Brick_RoundFirstPick                           = 110,
    Brick_Decode                                   = 111,
    Brick_Upload                                   = 112,
    GM                                             = 200,
    EArenaScoreChangeEvent_MAX                     = 201

};

// Enum  DFMGameplay.EArenaCompetitionResult
enum class EArenaCompetitionResult : uint8_t
{
    None                                           = 0,
    Victory                                        = 1,
    Defeat                                         = 2,
    Draw                                           = 3,
    EArenaCompetitionResult_MAX                    = 4

};

// Enum  DFMGameplay.EArenaRoundEndReason
enum class EArenaRoundEndReason : uint8_t
{
    None                                           = 0,
    RoundTimeOver                                  = 1,
    EnemyAllDie                                    = 2,
    ArenaBrickUpload                               = 3,
    EnemyAllEscape                                 = 4,
    EArenaRoundEndReason_MAX                       = 5

};

// Enum  DFMGameplay.EArenaRoundState
enum class EArenaRoundState : uint8_t
{
    None                                           = 0,
    RoundStart                                     = 1,
    RoundReady                                     = 2,
    RoundFreeze                                    = 3,
    RoundEnd                                       = 4,
    RoundSettlement                                = 5,
    GameEnd                                        = 6,
    EArenaRoundState_MAX                           = 7

};

// Enum  DFMGameplay.EArenaEquipChangeType
enum class EArenaEquipChangeType : uint8_t
{
    None                                           = 0,
    Weapon                                         = 1,
    Helmet                                         = 2,
    BreastPlate                                    = 3,
    EArenaEquipChangeType_MAX                      = 4

};

// Enum  DFMGameplay.EArenaRole
enum class EArenaRole : uint8_t
{
    RoleEnemy                                      = 0,
    RoleTeammate                                   = 1,
    RoleSelf                                       = 2,
    EArenaRole_MAX                                 = 3

};

// Enum  DFMGameplay.EHelmetProtectionPart
enum class EHelmetProtectionPart : uint8_t
{
    Head                                           = 1,
    Face                                           = 2,
    Ear                                            = 3,
    UpFace                                         = 4,
    DownFace                                       = 5,
    EHelmetProtectionPart_MAX                      = 6

};

// Enum  DFMGameplay.EProtectionPart
enum class EProtectionPart : uint8_t
{
    Chest                                          = 1,
    Abdomen                                        = 2,
    BigArm                                         = 3,
    SmallArm                                       = 4,
    Leg                                            = 5,
    LowerLeg                                       = 6,
    EProtectionPart_MAX                            = 7

};

// Enum  DFMGameplay.EProcessDurabilityReason
enum class EProcessDurabilityReason : uint8_t
{
    None                                           = 0,
    StartGame                                      = 1,
    PlayerDead                                     = 2,
    EndGame                                        = 3,
    EProcessDurabilityReason_MAX                   = 4

};

// Enum  DFMGameplay.EMovePlanAvoidanceStatus
enum class EMovePlanAvoidanceStatus : uint8_t
{
    None                                           = 0,
    Idle                                           = 1,
    Wait                                           = 2,
    Move                                           = 3,
    EMovePlanAvoidanceStatus_MAX                   = 4

};

// Enum  DFMGameplay.EAvoidanceBoxType
enum class EAvoidanceBoxType : uint8_t
{
    Body                                           = 0,
    Probe                                          = 1,
    EAvoidanceBoxType_MAX                          = 2

};

// Enum  DFMGameplay.ENightVisionEquipmentState
enum class ENightVisionEquipmentState : uint8_t
{
    Unknown                                        = 0,
    On                                             = 1,
    Off                                            = 2,
    NotEquipped                                    = 3,
    ENightVisionEquipmentState_MAX                 = 4

};

// Enum  DFMGameplay.ENightVisionEquipmentType
enum class ENightVisionEquipmentType : uint8_t
{
    NightVisionDevice                              = 0,
    ThermalImaging                                 = 1,
    FlashLight                                     = 2,
    Max                                            = 3

};

// Enum  DFMGameplay.EEventType
enum class EEventType : uint8_t
{
    CarryInEquipmentValue                          = 0,
    CarryOutProfit                                 = 1,
    OneTimeEvent                                   = 2,
    GetMandelBrickFrequency                        = 3,
    ReceiveContractFrequency                       = 4,
    EEventType_MAX                                 = 5

};

// Enum  DFMGameplay.EPlayerDeathType
enum class EPlayerDeathType : uint8_t
{
    None                                           = 0,
    DeathByAI                                      = 1,
    DeathByPlayer                                  = 2,
    DeathByAIPlayer                                = 3,
    DeathBySelf                                    = 4,
    EPlayerDeathType_MAX                           = 5

};

// Enum  DFMGameplay.EBattleFieldTODTransitionTemplateType
enum class EBattleFieldTODTransitionTemplateType : uint8_t
{
    None                                           = 0,
    BreakthroughSectorIndex                        = 1,
    ConquestPreponderanceScore                     = 2,
    EBattleFieldTODTransitionTemplateType_MAX      = 3

};

// Enum  DFMGameplay.ESpawnerCommonInfoTemplate
enum class ESpawnerCommonInfoTemplate : uint8_t
{
    None                                           = 0,
    Template1                                      = 1,
    Template2                                      = 2,
    Template3                                      = 3,
    Template4                                      = 4,
    Template5                                      = 5,
    Template6                                      = 6,
    Template7                                      = 7,
    Template8                                      = 8,
    Template9                                      = 9,
    Template10                                     = 10,
    Template11                                     = 11,
    Template12                                     = 12,
    Template13                                     = 13,
    Template14                                     = 14,
    Template15                                     = 15,
    Template16                                     = 16,
    Template17                                     = 17,
    Template18                                     = 18,
    Template19                                     = 19,
    Template20                                     = 20,
    ESpawnerCommonInfoTemplate_MAX                 = 21

};

// Enum  DFMGameplay.EVehicleSpawnerActiveConditionType
enum class EVehicleSpawnerActiveConditionType : uint8_t
{
    ENone                                          = 0,
    ELeftVoteLessthanX                             = 1,
    ESectorActiveSomeTime                          = 2,
    EMorethanBalanceValue                          = 3,
    EVehicleSpawnerActiveConditionType_MAX         = 4

};

// Enum  DFMGameplay.EBattleFieldBackgroundCharacterVoiceStatusType
enum class EBattleFieldBackgroundCharacterVoiceStatusType : uint8_t
{
    None                                           = 0,
    SeaVehicle                                     = 1,
    LandVehicle                                    = 2,
    AirVehicle                                     = 3,
    FootWarfare                                    = 4,
    EBattleFieldBackgroundCharacterVoiceStatusType_MAX = 5

};

// Enum  DFMGameplay.EBattleFieldBackgroundCharacterVoiceEventType
enum class EBattleFieldBackgroundCharacterVoiceEventType : uint8_t
{
    None                                           = 0,
    FirstEntryMatch                                = 1,
    SectorChange                                   = 2,
    Loading                                        = 3,
    EBattleFieldBackgroundCharacterVoiceEventType_MAX = 4

};

// Enum  DFMGameplay.EBattleFieldEventTriggerType
enum class EBattleFieldEventTriggerType : uint8_t
{
    None                                           = 0,
    SpringFestSatellitedishEasterEgg1              = 1,
    SpringFestSatellitedishFinalEasterEgg          = 2,
    EBattleFieldEventTriggerType_MAX               = 3

};

// Enum  DFMGameplay.EBattleFieldDeathConfigType
enum class EBattleFieldDeathConfigType : uint8_t
{
    Default                                        = 0,
    OutOfSafeArea                                  = 1,
    Damage                                         = 2,
    InVehicle                                      = 3,
    InGiantTower                                   = 4,
    InElevator                                     = 5,
    EBattleFieldDeathConfigType_MAX                = 6

};

// Enum  DFMGameplay.EBattleFieldSectorType
enum class EBattleFieldSectorType : uint8_t
{
    None                                           = 0,
    SectorBase                                     = 1,
    CampSector                                     = 2,
    VehicleSector                                  = 4,
    EBattleFieldSectorType_MAX                     = 5

};

// Enum  DFMGameplay.EBattleFieldDeduceType
enum class EBattleFieldDeduceType : uint8_t
{
    E_None                                         = 0,
    E_SectorBeginDeduce                            = 1,
    E_SectorEndTransitionDeduce                    = 2,
    E_ConquestDeduce                               = 3,
    E_MAX                                          = 4

};

// Enum  DFMGameplay.EBattleSupportSkillType
enum class EBattleSupportSkillType : uint8_t
{
    ENone                                          = 0,
    EBattleSupportSkill_GuidedMissile              = 1,
    EBattleSupportSkill_SectorArtilerrate          = 2,
    EBattleSupportSkill_SectorSmoke                = 3,
    EBattleSupportSkillType_MAX                    = 4

};

// Enum  DFMGameplay.EBattleFieldQuestObjectionState
enum class EBattleFieldQuestObjectionState : uint8_t
{
    InActive                                       = 0,
    Active                                         = 1,
    Complete                                       = 2,
    Failed                                         = 3,
    InitialComplete                                = 4,
    InActive_Condition                             = 5,
    EBattleFieldQuestObjectionState_MAX            = 6

};

// Enum  DFMGameplay.EBattleRouteSegmentThreatType
enum class EBattleRouteSegmentThreatType : uint8_t
{
    NormalKill                                     = 0,
    GroundVehicleKill                              = 1,
    SceneWeaponKill                                = 2,
    EBattleRouteSegmentThreatType_MAX              = 3

};

// Enum  DFMGameplay.EBattleRouteOccupyAction
enum class EBattleRouteOccupyAction : uint8_t
{
    OccupyAll                                      = 0,
    ReleaseSegment                                 = 1,
    ReleaseAll                                     = 2,
    EBattleRouteOccupyAction_MAX                   = 3

};

// Enum  DFMGameplay.EBattleRoutePointType
enum class EBattleRoutePointType : uint8_t
{
    WayPoint                                       = 0,
    SectorPoint                                    = 1,
    FlankPoint                                     = 2,
    EBattleRoutePointType_MAX                      = 3

};

// Enum  DFMGameplay.EOutStandingContributionType
enum class EOutStandingContributionType : uint8_t
{
    ENone                                          = 0,
    ECommander                                     = 1,
    EKill                                          = 2,
    EPilot                                         = 3,
    EArmor                                         = 4,
    EVehicleKiller                                 = 5,
    EDoctor                                        = 6,
    ECapture                                       = 7,
    ETactical                                      = 8,
    EOutStandingContributionType_MAX               = 9

};

// Enum  DFMGameplay.EModalPointType
enum class EModalPointType : uint8_t
{
    ENone                                          = 0,
    EFight                                         = 1,
    EConquer                                       = 2,
    ELogistics                                     = 3,
    EInformation                                   = 4,
    EModalPointType_MAX                            = 5

};

// Enum  DFMGameplay.EBehaviorScoreTLogCategoryType
enum class EBehaviorScoreTLogCategoryType : uint8_t
{
    ENone                                          = 0,
    EKillLongDistance                              = 1,
    EKill                                          = 2,
    EToVehicle                                     = 3,
    EVehicle                                       = 4,
    ECapture                                       = 5,
    ERescue                                        = 6,
    EArmAssaultWolf                                = 7,
    EArmAssaultDragon                              = 8,
    EArmAssaultShadow                              = 9,
    EArmMedicBee                                   = 10,
    EArmMedicZoya                                  = 11,
    EArmEngineerShepherd                           = 12,
    EArmEngineerUluuru                             = 13,
    EArmEngineerShieldBrother                      = 14,
    EArmReconCatWoman                              = 15,
    EArmReconLuna                                  = 16,
    ELogistics                                     = 17,
    EFortification                                 = 18,
    ESectorSupport                                 = 19,
    EChase                                         = 20,
    EOther                                         = 21,
    EBehaviorScoreTLogCategoryType_MAX             = 22

};

// Enum  DFMGameplay.EScoreBoardContributionType
enum class EScoreBoardContributionType : uint8_t
{
    ENone                                          = 0,
    ERescueContrib                                 = 1,
    EBuildAndDestroyContrib                        = 2,
    ECaptureContrib                                = 3,
    ETacticsContrib                                = 4,
    EScoreBoardContributionType_MAX                = 5

};

// Enum  DFMGameplay.EScoreBoardType
enum class EScoreBoardType : uint8_t
{
    ENone                                          = 0,
    EKill                                          = 1,
    EAssist                                        = 2,
    ERescue                                        = 3,
    ECap                                           = 4,
    ESuccessCapturedFlag                           = 5,
    EScoreBoardType_MAX                            = 6

};

// Enum  DFMGameplay.EScoreBoardCategoryType
enum class EScoreBoardCategoryType : uint8_t
{
    ENone                                          = 0,
    EBattle                                        = 1,
    EVehicle                                       = 2,
    EAssist                                        = 3,
    ELogistics                                     = 4,
    ECapture                                       = 5,
    EArm                                           = 6,
    EEarn                                          = 7,
    EScoreBoardCategoryType_MAX                    = 8

};

// Enum  DFMGameplay.EBionicBirdMarkingType
enum class EBionicBirdMarkingType : uint8_t
{
    None                                           = 0,
    CountDown                                      = 1,
    CountDownEnd                                   = 2,
    BirdMarking                                    = 3,
    SpyMarking                                     = 4,
    EBionicBirdMarkingType_MAX                     = 5

};

// Enum  DFMGameplay.EBlueprintPlunderCustomModeType
enum class EBlueprintPlunderCustomModeType : uint8_t
{
    None                                           = 0,
    EArenaMode                                     = 1,
    EBlueprintPlunderCustomModeType_MAX            = 2

};

// Enum  DFMGameplay.EBlueprintPlunderInteractResultType
enum class EBlueprintPlunderInteractResultType : uint8_t
{
    None                                           = 0,
    ESuccess                                       = 1,
    EFailed_BeingWanted_LackProps                  = 2,
    EFailed_Deciphering_Teammate_Wait2Copy         = 3,
    EFailed_BeTakenOut_Self                        = 4,
    EBlueprintPlunderInteractResultType_MAX        = 5

};

// Enum  DFMGameplay.EInteract3DAudioType
enum class EInteract3DAudioType : uint8_t
{
    None                                           = 0,
    Container_Lp_Start                             = 1,
    Container_Lp_Stop                              = 2,
    CodeBreak_Lp_Start                             = 3,
    CodeBreak_Lp_Stop                              = 4,
    CodeBreak_Mandel_Lp                            = 5,
    CodeBreak_Mandel_Stop                          = 6,
    CodeBreak_Tp_Start                             = 7,
    CodeBreak_Tp_Stop                              = 8,
    Mandel_CodeBreak_End                           = 9,
    Mandel_FallDown                                = 10,
    Mandel_Lp                                      = 11,
    Mandel_Stop                                    = 12,
    CodeBreak_Interact_Start                       = 13,
    CodeBreak_Interact_Stop                        = 14,
    CodeBreak_Interact_End                         = 15,
    CodeBreak_Cloned                               = 16,
    CodeBreak_Plunder                              = 17,
    EInteract3DAudioType_MAX                       = 18

};

// Enum  DFMGameplay.EBlueprintPlunderSettlementType
enum class EBlueprintPlunderSettlementType : uint8_t
{
    Settlement_Failed                              = 0,
    Settlement_Success                             = 1,
    Settlement_Half                                = 2,
    Settlement_Success_TeamMate                    = 3,
    Settlement_MAX                                 = 4

};

// Enum  DFMGameplay.EBoatBreakoutState
enum class EBoatBreakoutState : uint8_t
{
    None                                           = 0,
    InActive                                       = 1,
    WaitingActive                                  = 2,
    Activating                                     = 3,
    Drive2Exit                                     = 4,
    InExitZone                                     = 5,
    Closed                                         = 6,
    Destroyed                                      = 7,
    EBoatBreakoutState_MAX                         = 8

};

// Enum  DFMGameplay.EVegetationState
enum class EVegetationState : uint8_t
{
    ENormal                                        = 0,
    EBroken                                        = 1,
    EDestructed                                    = 2,
    EMax                                           = 3,
    EVegetationState_MAX                           = 4

};

// Enum  DFMGameplay.EBreakableNavBoxMode
enum class EBreakableNavBoxMode : uint8_t
{
    Default                                        = 0,
    InitialEffectBrokenIgnore                      = 1,
    InitialIgnoreBrokenEffect                      = 2,
    EBreakableNavBoxMode_MAX                       = 3

};

// Enum  DFMGameplay.EBreakableItemState
enum class EBreakableItemState : uint8_t
{
    None                                           = 0,
    ReadyBreak                                     = 1,
    PartBroken                                     = 2,
    FullBroken                                     = 3,
    EBreakableItemState_MAX                        = 4

};

// Enum  DFMGameplay.EBreakableItemType
enum class EBreakableItemType : uint8_t
{
    None                                           = 0,
    SingleSection                                  = 1,
    MultipleSection                                = 2,
    SingleRigid                                    = 3,
    BuildingWall                                   = 4,
    WholeBuilding                                  = 5,
    Foliage                                        = 6,
    BatchBuilding                                  = 7,
    PhysicalInteract                               = 8,
    EBreakableItemType_MAX                         = 9

};

// Enum  DFMGameplay.ETacticalMarkingShape
enum class ETacticalMarkingShape : uint8_t
{
    Shield                                         = 0,
    Rhombus                                        = 1,
    ETacticalMarkingShape_MAX                      = 2

};

// Enum  DFMGameplay.EBreakthroughAirDropVehicleLimitPolicy
enum class EBreakthroughAirDropVehicleLimitPolicy : uint8_t
{
    None                                           = 0,
    RegularDeployVehicle                           = 1,
    CampVoteVehicle                                = 2,
    AirDropVehicle                                 = 3,
    EBreakthroughAirDropVehicleLimitPolicy_MAX     = 4

};

// Enum  DFMGameplay.EBreakthroughGiudeType
enum class EBreakthroughGiudeType : uint8_t
{
    ENone                                          = 0,
    ESafeAreaGuide                                 = 1,
    ETransitionGuide                               = 2,
    EBreakthroughGiudeType_MAX                     = 3

};

// Enum  DFMGameplay.EBreakthroughScriptedMatchType
enum class EBreakthroughScriptedMatchType : uint8_t
{
    None                                           = 0,
    FirstGameOffenseWin                            = 1,
    SecondGameDefenseWin                           = 2,
    EBreakthroughScriptedMatchType_MAX             = 3

};

// Enum  DFMGameplay.EBreakthroughMapType
enum class EBreakthroughMapType : uint8_t
{
    None                                           = 0,
    All                                            = 1,
    IceLand                                        = 2,
    Gibraltar                                      = 4,
    EBreakthroughMapType_MAX                       = 5

};

// Enum  DFMGameplay.EEstimateName
enum class EEstimateName : uint8_t
{
    EEnemyNone                                     = 0,
    EEnemyDist                                     = 1,
    EEnemySight                                    = 2,
    EEnemyAirHit                                   = 3,
    ETeamMateDist                                  = 4,
    EOtherTeamMateDist                             = 5,
    EAnchorDist                                    = 6,
    EDeadMateDist                                  = 7,
    AnchorEnemyDis                                 = 8,
    EEnemyMax                                      = 9,
    EEstimateName_MAX                              = 10

};

// Enum  DFMGameplay.ELauncherDir
enum class ELauncherDir : uint8_t
{
    Default                                        = 0,
    F                                              = 1,
    R                                              = 2,
    L                                              = 3,
    B                                              = 4,
    ELauncherDir_MAX                               = 5

};

// Enum  DFMGameplay.ELauncherType
enum class ELauncherType : uint8_t
{
    Auto                                           = 0,
    TestRandom                                     = 1,
    ELauncherType_MAX                              = 2

};

// Enum  DFMGameplay.EShootType
enum class EShootType : uint8_t
{
    Dot                                            = 0,
    Burst                                          = 1,
    Continuous                                     = 2,
    EShootType_MAX                                 = 3

};

// Enum  DFMGameplay.EPvpAISkill
enum class EPvpAISkill : uint8_t
{
    None                                           = 0,
    HiveTechSmokeGrenade                           = 1,
    EPvpAISkill_MAX                                = 2

};

// Enum  DFMGameplay.EBuffEffectReplicateAttributeType
enum class EBuffEffectReplicateAttributeType : uint8_t
{
    None                                           = 0,
    OwnerOnly                                      = 1,
    Multicast                                      = 2,
    EBuffEffectReplicateAttributeType_MAX          = 3

};

// Enum  DFMGameplay.EOutLineRole
enum class EOutLineRole : uint8_t
{
    OutLineRole_ALL                                = 0,
    OutLineRole_Only3P                             = 1,
    OutLineRole_Only1p                             = 2,
    OutLineRole_OnlySource                         = 3,
    OutLineRole_SourceAndTeammate                  = 4,
    OutLineRole_TeammateAndMe                      = 5,
    OutLineRole_TeammateNoMe                       = 6,
    OutLineRole_Enermy                             = 7,
    OutLineRole_MAX                                = 8

};

// Enum  DFMGameplay.EBuffClientEventTag
enum class EBuffClientEventTag : uint8_t
{
    None                                           = 0,
    InjuredVoiceState                              = 1,
    EBuffClientEventTag_MAX                        = 2

};

// Enum  DFMGameplay.EBuffImmunityType
enum class EBuffImmunityType : uint8_t
{
    None                                           = 0,
    Inhibition                                     = 1,
    Reduction                                      = 2,
    Replace                                        = 3,
    EBuffImmunityType_MAX                          = 4

};

// Enum  DFMGameplay.EBuffAction
enum class EBuffAction : uint8_t
{
    None                                           = 0,
    CureSOLHealthBody                              = 1,
    AddCoolDownBuff                                = 2,
    EBuffAction_MAX                                = 3

};

// Enum  DFMGameplay.EBuffActionTriggerType
enum class EBuffActionTriggerType : uint8_t
{
    None                                           = 0,
    OnAdd                                          = 1,
    OnRefreshTime                                  = 2,
    OnPeriod                                       = 3,
    OnPause                                        = 4,
    OnResume                                       = 5,
    OnRemove                                       = 6,
    EBuffActionTriggerType_MAX                     = 7

};

// Enum  DFMGameplay.EBuffConflictOp
enum class EBuffConflictOp : uint8_t
{
    None                                           = 0,
    DurationMax                                    = 1,
    Replace                                        = 2,
    Priority                                       = 3,
    EBuffConflictOp_MAX                            = 4

};

// Enum  DFMGameplay.EBuffApplyAttributeType
enum class EBuffApplyAttributeType : uint8_t
{
    Always                                         = 0,
    Once                                           = 1,
    EBuffApplyAttributeType_MAX                    = 2

};

// Enum  DFMGameplay.EStackType
enum class EStackType : uint8_t
{
    Unable                                         = 0,
    PartIndie                                      = 1,
    Refresh                                        = 2,
    Independent                                    = 3,
    RefreshStack                                   = 4,
    EStackType_MAX                                 = 5

};

// Enum  DFMGameplay.ECDAWardKillType
enum class ECDAWardKillType : uint8_t
{
    Player                                         = 0,
    AI                                             = 1,
    ECDAWardKillType_MAX                           = 2

};

// Enum  DFMGameplay.EBuffAttributeModType
enum class EBuffAttributeModType : uint8_t
{
    Float                                          = 0,
    Curve                                          = 1,
    EBuffAttributeModType_MAX                      = 2

};

// Enum  DFMGameplay.EBuffAttributeDataType
enum class EBuffAttributeDataType : uint8_t
{
    AttributeId                                    = 0,
    Custom                                         = 1,
    Damage                                         = 2,
    EBuffAttributeDataType_MAX                     = 3

};

// Enum  DFMGameplay.EBuffEventType
enum class EBuffEventType : uint8_t
{
    Add                                            = 0,
    Remove                                         = 1,
    Refresh                                        = 2,
    Pause                                          = 3,
    EBuffEventType_MAX                             = 4

};

// Enum  DFMGameplay.ECharacterBuffDebuffType
enum class ECharacterBuffDebuffType : uint8_t
{
    Unknow                                         = 0,
    Buff                                           = 1,
    Debuff                                         = 2,
    ECharacterBuffDebuffType_MAX                   = 3

};

// Enum  DFMGameplay.EBuffRemoveOrPauseReasonTag
enum class EBuffRemoveOrPauseReasonTag : uint8_t
{
    ENone                                          = 0,
    EInWater                                       = 1,
    EBuffRemoveOrPauseReasonTag_MAX                = 2

};

// Enum  DFMGameplay.EBuffDisableTag
enum class EBuffDisableTag : uint8_t
{
    ENone                                          = 0,
    EImpendingDeath                                = 1,
    EPVEGameMode                                   = 2,
    EDisableDebuff                                 = 3,
    EDeath                                         = 4,
    EVehicle                                       = 5,
    EAICharacter                                   = 6,
    EInWater                                       = 7,
    EBuffDisableTag_MAX                            = 8

};

// Enum  DFMGameplay.ECarryBodyStatusType
enum class ECarryBodyStatusType : uint8_t
{
    AnyStatus                                      = 0,
    Box                                            = 1,
    Died                                           = 2,
    ImpendingDeath                                 = 3,
    SpecificType                                   = 4,
    ECarryBodyStatusType_MAX                       = 5

};

// Enum  DFMGameplay.ECarryBodyTaskType
enum class ECarryBodyTaskType : uint8_t
{
    FinishCarryBody                                = 0,
    ReachLocation                                  = 1,
    Escape                                         = 2,
    KeepCarryingForDistance                        = 3,
    ECarryBodyTaskType_MAX                         = 4

};

// Enum  DFMGameplay.EChainHookState
enum class EChainHookState : uint8_t
{
    None                                           = 0,
    Active                                         = 1,
    MoveForward                                    = 2,
    HitTarget                                      = 3,
    HitOther                                       = 4,
    HitNone                                        = 5,
    PullBack                                       = 6,
    BackToSocket                                   = 7,
    Success                                        = 8,
    Break                                          = 9,
    EChainHookState_MAX                            = 10

};

// Enum  DFMGameplay.EChangeableContainerType
enum class EChangeableContainerType : uint8_t
{
    None                                           = 0,
    FixedAmmoBox                                   = 1,
    FireFlower1                                    = 2,
    FireFlower2                                    = 3,
    FireFlower3                                    = 4,
    FireFlower4                                    = 5,
    FireFlower5                                    = 6,
    FireFlower6                                    = 7,
    FireFlower7                                    = 8,
    FireFlower8                                    = 9,
    FireFlower9                                    = 10,
    FireFlower10                                   = 11,
    FireFlower11                                   = 12,
    FireFlower12                                   = 13,
    FireFlower13                                   = 14,
    FireFlower14                                   = 15,
    ArknightsAmmoBox                               = 16,
    ArknightsMusicPlayerDaily                      = 17,
    EChangeableContainerType_MAX                   = 18

};

// Enum  DFMGameplay.EWeaponStaggerType
enum class EWeaponStaggerType : uint8_t
{
    None                                           = 0,
    Medium                                         = 1,
    Heavy                                          = 2,
    Skill                                          = 3,
    EWeaponStaggerType_MAX                         = 4

};

// Enum  DFMGameplay.ECharacterStaggerType
enum class ECharacterStaggerType : uint8_t
{
    None                                           = 0,
    Gentle                                         = 1,
    Heavy                                          = 2,
    Tumble                                         = 3,
    InMove                                         = 4,
    InSprint                                       = 5,
    FlashBomb                                      = 6,
    SpecialType1                                   = 7,
    MAX_Type                                       = 8,
    ECharacterStaggerType_MAX                      = 9

};

// Enum  DFMGameplay.EAINameClass
enum class EAINameClass : uint8_t
{
    AllAI                                          = 0,
    Class1                                         = 1,
    Class2                                         = 2,
    Class3                                         = 3,
    Class4                                         = 4,
    Class5                                         = 5,
    Class6                                         = 6,
    Class7                                         = 7,
    Class8                                         = 8,
    Class9                                         = 9,
    Class10                                        = 10,
    EAINameClass_MAX                               = 11

};

// Enum  DFMGameplay.EFireMoveStyleBodyState
enum class EFireMoveStyleBodyState : uint8_t
{
    Stand                                          = 0,
    Sprint                                         = 1,
    Crouch                                         = 2,
    Prone                                          = 3,
    EFireMoveStyleBodyState_MAX                    = 4

};

// Enum  DFMGameplay.EAILevel
enum class EAILevel : uint8_t
{
    T0                                             = 0,
    T1                                             = 1,
    T2                                             = 2,
    T3                                             = 3,
    T4                                             = 4,
    T5                                             = 5,
    EAILevel_MAX                                   = 6

};

// Enum  DFMGameplay.ESpecialHitPartType
enum class ESpecialHitPartType : uint8_t
{
    Default                                        = 0,
    BlastShield                                    = 1,
    ESpecialHitPartType_MAX                        = 2

};

// Enum  DFMGameplay.ERoleType
enum class ERoleType : uint8_t
{
    Player                                         = 0,
    AILab                                          = 1,
    BehaviorTree                                   = 2,
    ERoleType_MAX                                  = 3

};

// Enum  DFMGameplay.EHeroType
enum class EHeroType : uint8_t
{
    C101_Medic                                     = 0,
    C201_Sniper                                    = 1,
    C301_Assault                                   = 2,
    C401_Gunner                                    = 3,
    EHeroType_MAX                                  = 4

};

// Enum  DFMGameplay.EPVPAIFightStyle
enum class EPVPAIFightStyle : uint8_t
{
    Defensive                                      = 0,
    Aggressive                                     = 1,
    Passive                                        = 2,
    EPVPAIFightStyle_MAX                           = 3

};

// Enum  DFMGameplay.ESpawnBossRule
enum class ESpawnBossRule : uint8_t
{
    Default                                        = 0,
    Spawn                                          = 1,
    NotSpawn                                       = 2,
    ESpawnBossRule_MAX                             = 3

};

// Enum  DFMGameplay.ECombatSupportType
enum class ECombatSupportType : uint8_t
{
    AerialVehicle                                  = 0,
    FlameTower                                     = 1,
    End                                            = 2,
    ECombatSupportType_MAX                         = 3

};

// Enum  DFMGameplay.EBattleFieldInGameGuideType
enum class EBattleFieldInGameGuideType : uint8_t
{
    None                                           = 0,
    FirstDeployChoosePoint                         = 1,
    FirstDeploySelectBoat                          = 2,
    FirstDeployClickHeroOpenHeroList               = 3,
    FirstDeployClickHeroViewHeroInfo               = 4,
    FirstDeployConfirmSelectHero                   = 5,
    FirstDeployConfirmDeploy                       = 6,
    SkillReadyClickSkillButton                     = 7,
    ReDeployClickHeroOpenHeroList                  = 8,
    ReDeployClickHeroViewHeroInfo                  = 9,
    ReDeployClickWeaponOpenWeaponList              = 10,
    ReDeployClickWeaponViewWeaponInfo              = 11,
    ReDeployChoosePointTips                        = 12,
    ReDeployConfirmDeploy                          = 13,
    BroadcastBreakthroughAttack                    = 14,
    BroadcastBreakthroughDefend                    = 15,
    BroadcastConquest                              = 16,
    AnchorFirstStartCapture                        = 17,
    CancelRequestRescue                            = 18,
    ReDeployLongStayGuideDeployButton              = 19,
    EBattleFieldInGameGuideType_MAX                = 20

};

// Enum  DFMGameplay.EBattleFieldInGameGuideGroupType
enum class EBattleFieldInGameGuideGroupType : uint8_t
{
    None                                           = 0,
    Continuous                                     = 1,
    Independent                                    = 2,
    EBattleFieldInGameGuideGroupType_MAX           = 3

};

// Enum  DFMGameplay.EBattleFieldInGameGuideGroup
enum class EBattleFieldInGameGuideGroup : uint8_t
{
    None                                           = 0,
    Deploy                                         = 1,
    Skill                                          = 2,
    Conquest                                       = 4,
    Anchor                                         = 8,
    BreakthroughAttack                             = 16,
    BreakthroughDefend                             = 32,
    DyingRescue                                    = 64,
    EBattleFieldInGameGuideGroup_MAX               = 65

};

// Enum  DFMGameplay.EBreakthroughRedeployOneGuideStatus
enum class EBreakthroughRedeployOneGuideStatus : uint8_t
{
    InvalidGuide                                   = 0,
    NotStart                                       = 1,
    Showing                                        = 2,
    Finished                                       = 3,
    EBreakthroughRedeployOneGuideStatus_MAX        = 4

};

// Enum  DFMGameplay.EStatName
enum class EStatName : uint8_t
{
    None                                           = 0,
    AIMovement_Update                              = 1,
    Max                                            = 2

};

// Enum  DFMGameplay.ECrashableDroneState
enum class ECrashableDroneState : uint8_t
{
    NORMAL                                         = 0,
    DAMAGED                                        = 1,
    CRASHED                                        = 2,
    LANDED                                         = 3,
    ECrashableDroneState_MAX                       = 4

};

// Enum  DFMGameplay.EDeliverProgressionStage
enum class EDeliverProgressionStage : uint8_t
{
    NotInRange                                     = 0,
    ReachLocation                                  = 1,
    Delivering                                     = 2,
    Delivered                                      = 3,
    EDeliverProgressionStage_MAX                   = 4

};

// Enum  DFMGameplay.EDesTerrainCheckCode
enum class EDesTerrainCheckCode : uint8_t
{
    PASS                                           = 0,
    INTERNAL                                       = 1,
    NET_ROLE                                       = 2,
    NUM_LIMIT                                      = 3,
    DISTANCE_LIMIT                                 = 4,
    EDesTerrainCheckCode_MAX                       = 5

};

// Enum  DFMGameplay.EDSMCPoolMethod
enum class EDSMCPoolMethod : uint8_t
{
    None                                           = 0,
    AutoRelease                                    = 1,
    ManualRelease                                  = 2,
    ManualRelease_OnComplete                       = 3,
    FreeInPool                                     = 4,
    EDSMCPoolMethod_MAX                            = 5

};

// Enum  DFMGameplay.EDisplayInputActionValidateFlag
enum class EDisplayInputActionValidateFlag : uint8_t
{
    None                                           = 0,
    UIVisibility                                   = 1,
    UIEnabled                                      = 2,
    UIWhitelist                                    = 4,
    UIDefault                                      = 7,
    UIInFocusPath                                  = 8,
    UIModalPop                                     = 16,
    LuaCondition                                   = 16,
    Custom                                         = 128,
    EDisplayInputActionValidateFlag_MAX            = 129

};

// Enum  DFMGameplay.EDisplayInputActionPriority_Cpp
enum class EDisplayInputActionPriority_Cpp : uint8_t
{
    Game                                           = 0,
    UI_HUD                                         = 1,
    UI_Stack                                       = 2,
    UI_Loading                                     = 3,
    UI_Tip                                         = 4,
    UI_Pop                                         = 5,
    Always                                         = 6,
    Debug                                          = 100,
    EDisplayInputActionPriority_MAX                = 101

};

// Enum  DFMGameplay.EHDInputEnableRuleType
enum class EHDInputEnableRuleType : uint8_t
{
    Whitelist                                      = 0,
    Blacklist                                      = 1,
    EHDInputEnableRuleType_MAX                     = 2

};

// Enum  DFMGameplay.EHDInputEnableMapType
enum class EHDInputEnableMapType : uint8_t
{
    HudState                                       = 0,
    MainStage                                      = 1,
    PlayMode                                       = 2,
    Dynamic                                        = 3,
    NumMax                                         = 4,
    EHDInputEnableMapType_MAX                      = 5

};

// Enum  DFMGameplay.ELootingKeyCondition
enum class ELootingKeyCondition : uint8_t
{
    None                                           = 0,
    CheckHover                                     = 1,
    CheckHoverItemMarked                           = 2,
    CheckHoverItemNotMarked                        = 3,
    CheckHoverItemNotFromPlayer                    = 4,
    CheckIsLootingView                             = 5,
    CheckCanDiscard                                = 6,
    CheckItemCanBeMoved                            = 7,
    CheckItemCanBeEquipped                         = 8,
    CheckIsGamepadInput                            = 9,
    CheckIsKeyboardInput                           = 10,
    CheckOpenedItemPopView                         = 11,
    CheckItemDragStart                             = 12,
    CheckIsOnSimulatedMouseDragging                = 13,
    CheckIsStopSimulatedMouseDrag                  = 14,
    CheckItemCanBeUsed                             = 15,
    CheckHoverItemNotUseIn                         = 16,
    CheckItemCanBeDirectlyEquipped                 = 17,
    CheckItemCanUsePlaceSubMenu                    = 18,
    CheckNoItemPopViewOpen                         = 19,
    CheckNotInCollectionRoom                       = 20,
    CheckItemAllowedOperateInCollectionRoom        = 21,
    CheckItemIsAbleToSplit                         = 22,
    CheckIsInteractivity                           = 23,
    CheckIsAbleToDrag                              = 24,
    ELootingKeyCondition_MAX                       = 25

};

// Enum  DFMGameplay.EMDVSwitchingMode
enum class EMDVSwitchingMode : uint8_t
{
    Interp                                         = 0,
    OnZoomIn                                       = 1,
    ZoomedIn                                       = 2,
    EMDVSwitchingMode_MAX                          = 3

};

// Enum  DFMGameplay.EStepFindPathType
enum class EStepFindPathType : uint8_t
{
    FindPathType_None                              = 0,
    FindPathType_NavMesh                           = 1,
    FindPathType_PilotPath                         = 2,
    FindPathType_DirectSee                         = 4,
    FindPathType_Guaranteed                        = 8,
    FindPathType_ALL                               = -1,
    FindPathType_MAX                               = 0

};

// Enum  DFMGameplay.EActionWithCastTimeType
enum class EActionWithCastTimeType : uint8_t
{
    EActionWithCastTimeType_None                   = 0,
    EActionWithCastTimeType_UseItem                = 1,
    EActionWithCastTimeType_RescueTeammate         = 2,
    EActionWithCastTimeType_RescuedByTeammate      = 3,
    EActionWithCastTimeType_ActivateAirBox         = 4,
    EActionWithCastTimeType_FightAirBox            = 5,
    EActionWithCastTimeType_RecyleSceneItem        = 6,
    EActionWithCastTimeType_MAX                    = 7

};

// Enum  DFMGameplay.EAIAnalysisFightState
enum class EAIAnalysisFightState : uint8_t
{
    Leisure                                        = 0,
    Alert                                          = 1,
    Fight                                          = 2,
    Dead                                           = 3,
    _Invalid                                       = 4,
    EAIAnalysisFightState_MAX                      = 5

};

// Enum  DFMGameplay.EEquipLevel
enum class EEquipLevel : uint8_t
{
    None                                           = 0,
    One                                            = 1,
    Two                                            = 2,
    Three                                          = 3,
    Four                                           = 4,
    Five                                           = 5,
    Six                                            = 6,
    Max                                            = 7

};

// Enum  DFMGameplay.EAIMachineGunFocusMode
enum class EAIMachineGunFocusMode : uint8_t
{
    EAIMachineGunFocus_Target                      = 1,
    EAIMachineGunFocus_Reset                       = 2,
    EAIMachineGunFocus_KeepCurrent                 = 3,
    EAIMachineGunFocus_MAX                         = 4

};

// Enum  DFMGameplay.EAIWalkStateEvent
enum class EAIWalkStateEvent : uint8_t
{
    RequestMove                                    = 0,
    RequestStop                                    = 1,
    RequestPreStop                                 = 2,
    StartMoveFinish                                = 3,
    StopMoveFinish                                 = 4,
    StopMoveFailed                                 = 5,
    RequestMoveTurn                                = 6,
    MoveTurnFinish                                 = 7,
    RequestTurn                                    = 8,
    TurnFinish                                     = 9,
    StopImmediately                                = 10,
    RequestPlayCustomAnimRootMotion                = 11,
    PlayCustomAnimRootMotionFinish                 = 12,
    RequestStagger                                 = 13,
    StaggerFinish                                  = 14,
    RequestBeingAssassinated                       = 15,
    AssasssinationFinished                         = 16,
    Max                                            = 17

};

// Enum  DFMGameplay.EAIPoseState
enum class EAIPoseState : uint8_t
{
    Stand                                          = 0,
    Crouch                                         = 1,
    Prone                                          = 2,
    Stand2Crouch                                   = 3,
    Stand2Prone                                    = 4,
    Crouch2Stand                                   = 5,
    Crouch2Prone                                   = 6,
    Prone2Stand                                    = 7,
    Prone2Crouch                                   = 8,
    Max                                            = 9

};

// Enum  DFMGameplay.EAIWalkState
enum class EAIWalkState : uint8_t
{
    Idle                                           = 0,
    PlayCustomAnimRootMotion                       = 1,
    Turn                                           = 2,
    TurnInPlace                                    = 3,
    Stagger                                        = 4,
    BeingAssassinated                              = 5,
    Move                                           = 6,
    Move_Init                                      = 7,
    Move_Forward                                   = 8,
    Move_Forward_Turn                              = 9,
    Move_Forward_Start                             = 10,
    Move_Forward_Loop                              = 11,
    Move_Forward_PreStop                           = 12,
    Move_Forward_Stop                              = 13,
    Move_AnyAngle                                  = 14,
    Move_AnyAngle_Init                             = 15,
    Move_AnyAngle_Start                            = 16,
    Move_AnyAngle_Loop                             = 17,
    Move_AnyAngle_PreStop                          = 18,
    Move_AnyAngle_Stop                             = 19,
    Move_AnyAngle_FinishStop                       = 20,
    Move_Finish                                    = 21,
    Max                                            = 22

};

// Enum  DFMGameplay.EGroupDebugInfo
enum class EGroupDebugInfo : uint8_t
{
    EGroupObject                                   = 0,
    EGoal                                          = 1,
    EPathObject                                    = 2,
    EFightTarget                                   = 3,
    EFireValue                                     = 4,
    EEnd                                           = 5,
    EGroupDebugInfo_MAX                            = 6

};

// Enum  DFMGameplay.ESOLCoverHeightQuery
enum class ESOLCoverHeightQuery : uint8_t
{
    AllHeight                                      = 0,
    High                                           = 1,
    Low                                            = 2,
    ESOLCoverHeightQuery_MAX                       = 3

};

// Enum  DFMGameplay.ESOLCoverDirQuery
enum class ESOLCoverDirQuery : uint8_t
{
    AllDirection                                   = 0,
    Left                                           = 1,
    Right                                          = 2,
    Middle                                         = 3,
    ESOLCoverDirQuery_MAX                          = 4

};

// Enum  DFMGameplay.ECoverModifierType
enum class ECoverModifierType : uint8_t
{
    Remove                                         = 0,
    Camp                                           = 1,
    ECoverModifierType_MAX                         = 2

};

// Enum  DFMGameplay.EDFMAICustomLinkType
enum class EDFMAICustomLinkType : uint8_t
{
    Simple                                         = 0,
    Jump                                           = 1,
    Vault                                          = 2,
    JumpAndVault                                   = 3,
    ClimbLadder                                    = 4,
    Zipline                                        = 5,
    Invalid                                        = 6,
    EDFMAICustomLinkType_MAX                       = 7

};

// Enum  DFMGameplay.EAIAttakType
enum class EAIAttakType : uint8_t
{
    Common                                         = 0,
    StingerMissle                                  = 1,
    EAIAttakType_MAX                               = 2

};

// Enum  DFMGameplay.EAIThreatLevel
enum class EAIThreatLevel : uint8_t
{
    Fight                                          = 0,
    AlertThenFight                                 = 1,
    Alert                                          = 2,
    Ignore                                         = 3,
    MAX                                            = 4

};

// Enum  DFMGameplay.EAITransportPoseType
enum class EAITransportPoseType : uint8_t
{
    Default                                        = 0,
    Idle                                           = 1,
    TakeOff                                        = 2,
    TakeOffFinished                                = 3,
    JumpLook                                       = 4,
    JumpLookIdle                                   = 5,
    BackSeat                                       = 6,
    BackSeatFinished                               = 7,
    BackSeatFinished2                              = 8,
    Wounded                                        = 9,
    WoundedFinished                                = 10,
    GetIn                                          = 11,
    GetInFinished                                  = 12,
    EAITransportPoseType_MAX                       = 13

};

// Enum  DFMGameplay.EAITransportActorType
enum class EAITransportActorType : uint8_t
{
    Default                                        = 0,
    Pilot                                          = 1,
    Guard                                          = 2,
    Doctor                                         = 3,
    EAITransportActorType_MAX                      = 4

};

// Enum  DFMGameplay.EAIHelicopterSpawnState
enum class EAIHelicopterSpawnState : uint8_t
{
    Default                                        = 0,
    Idle                                           = 1,
    Descent                                        = 2,
    DescentBlendOut                                = 3,
    Finish                                         = 4,
    EAIHelicopterSpawnState_MAX                    = 5

};

// Enum  DFMGameplay.EAIInteractionType
enum class EAIInteractionType : uint8_t
{
    None                                           = 0,
    SingleMontage                                  = 1,
    UsingSceneWeapon                               = 2,
    AttachActor                                    = 3,
    EAIInteractionType_MAX                         = 4

};

// Enum  DFMGameplay.EAIInteractionState
enum class EAIInteractionState : uint8_t
{
    PreStart                                       = 0,
    Starting                                       = 1,
    DuringInteraction                              = 2,
    Ending                                         = 3,
    FinishSucceed                                  = 4,
    FinishFailed                                   = 5,
    EAIInteractionState_MAX                        = 6

};

// Enum  DFMGameplay.EAICoverPointType
enum class EAICoverPointType : uint8_t
{
    NONE                                           = 0,
    HIGH_LEFT                                      = 1,
    HIGH_RIGHT                                     = 2,
    LOW_LEFT                                       = 4,
    LOW_RIGHT                                      = 8,
    LOW_CENTER                                     = 16,
    EAICoverPointType_MAX                          = 17

};

// Enum  DFMGameplay.EAiPlayerLeanActionType
enum class EAiPlayerLeanActionType : uint8_t
{
    LeaveLean                                      = 0,
    LeftLean                                       = 1,
    RightLean                                      = 2,
    EAiPlayerLeanActionType_MAX                    = 3

};

// Enum  DFMGameplay.EAiPlayerDosuicideType
enum class EAiPlayerDosuicideType : uint8_t
{
    None                                           = 0,
    DosuicideByNotMove                             = 1,
    DosuicideByKick                                = 2,
    DosuicideByDeathArea                           = 3,
    DosuicideByBlueprint                           = 4,
    DosuicideByOnBoat                              = 5,
    DosuicideByOffTrapFail                         = 6,
    EAiPlayerDosuicideType_MAX                     = 7

};

// Enum  DFMGameplay.EPlayerRequestAssistType
enum class EPlayerRequestAssistType : uint8_t
{
    None                                           = 0,
    NeedRescue                                     = 1,
    NeedMedic                                      = 2,
    NeedMunitions                                  = 3,
    EPlayerRequestAssistType_MAX                   = 4

};

// Enum  DFMGameplay.ERCVAISoundFxType
enum class ERCVAISoundFxType : uint8_t
{
    None                                           = 0,
    EngineStartFight                               = 1,
    EngineStopFight                                = 2,
    EngineStartRelax                               = 3,
    EngineStopRelax                                = 4,
    EngineTurnRound                                = 5,
    TurretTuring                                   = 6,
    RadarRotationStart                             = 7,
    RadarRotationStop                              = 8,
    CarMusicStart                                  = 9,
    CarMusicStop                                   = 10,
    DoorOpen                                       = 11,
    DoorClose                                      = 12,
    SuicideCarEject                                = 13,
    BeepOneShot                                    = 14,
    BeepWarning                                    = 15,
    MAX                                            = 16

};

// Enum  DFMGameplay.EPreInteractionWalkingMode
enum class EPreInteractionWalkingMode : uint8_t
{
    Walk                                           = 0,
    Run                                            = 1,
    StopAndGo                                      = 2,
    StopAndRun                                     = 3,
    End                                            = 4,
    EPreInteractionWalkingMode_MAX                 = 5

};

// Enum  DFMGameplay.EScenesFailureType
enum class EScenesFailureType : uint8_t
{
    WORLDNULL                                      = 0,
    NOVACANCY                                      = 1,
    DEPENDENCYINCOMPLETE                           = 2,
    NOTGROUP                                       = 3,
    MEMBERNULL                                     = 4,
    COOLDOWN                                       = 5,
    UNREACHABLE                                    = 6,
    End                                            = 7,
    EScenesFailureType_MAX                         = 8

};

// Enum  DFMGameplay.EShelterType
enum class EShelterType : uint8_t
{
    LowShelter                                     = 0,
    MiddleShelter                                  = 1,
    HighShelter                                    = 2,
    End                                            = 3,
    EShelterType_MAX                               = 4

};

// Enum  DFMGameplay.EScenesInteractiveActorTag
enum class EScenesInteractiveActorTag : uint8_t
{
    EPatrolPoint                                   = 0,
    ERest                                          = 1,
    EEat                                           = 2,
    EDrink                                         = 3,
    EScout                                         = 4,
    EToilet                                        = 5,
    EQueue                                         = 6,
    ECheck                                         = 7,
    ECollect                                       = 8,
    EPutUp                                         = 9,
    EPutDown                                       = 10,
    EDoor                                          = 11,
    EChat                                          = 12,
    EQuarrel                                       = 13,
    EProvoke                                       = 14,
    ECarry                                         = 15,
    EEnd                                           = 16,
    EScenesInteractiveActorTag_MAX                 = 17

};

// Enum  DFMGameplay.EScenesActorType
enum class EScenesActorType : uint8_t
{
    EPatrol                                        = 0,
    ERest                                          = 1,
    EStationed                                     = 2,
    EEnd                                           = 3,
    EScenesActorType_MAX                           = 4

};

// Enum  DFMGameplay.EFaceToTurnType
enum class EFaceToTurnType : uint8_t
{
    FaceToTurnType_KeepLerp                        = 0,
    FaceToTurnType_TurnOnce                        = 1,
    FaceToTurnType_MAX                             = 2

};

// Enum  DFMGameplay.EFaceToLocationType
enum class EFaceToLocationType : uint8_t
{
    FaceToLocationType_CurrentLocation             = 0,
    FaceToLocationType_LastSeeLocation             = 1,
    FaceToLocationType_CoverCorner                 = 2,
    FaceToLocationType_MoveDirection               = 3,
    FaceToLocationType_MAX                         = 4

};

// Enum  DFMGameplay.EChangeFightStateMode
enum class EChangeFightStateMode : uint8_t
{
    Leisure                                        = 0,
    Alert                                          = 1,
    AlertTurn                                      = 2,
    AlertHearTurn                                  = 3,
    Fight                                          = 4,
    FightTurn                                      = 5,
    EChangeFightStateMode_MAX                      = 6

};

// Enum  DFMGameplay.EAICoverAreaEntryType
enum class EAICoverAreaEntryType : uint8_t
{
    None                                           = 0,
    Left                                           = 1,
    Right                                          = 2,
    EAICoverAreaEntryType_MAX                      = 3

};

// Enum  DFMGameplay.ESpecialActingMontageType
enum class ESpecialActingMontageType : uint8_t
{
    None                                           = 0,
    AlertLookAround                                = 1,
    AlertLookAround02                              = 2,
    AlertSpotTarget                                = 3,
    AlertCallCompany                               = 4,
    ForwardSliding                                 = 5,
    ForwardRolling                                 = 6,
    ActingType1                                    = 7,
    ActingType2                                    = 8,
    InCoverActing1                                 = 9,
    InCoverActing2                                 = 10,
    InCoverShootingStart                           = 11,
    InCoverShootingEnd                             = 12,
    SideRushingLeft                                = 13,
    SideRushingRight                               = 14,
    ESpecialActingMontageType_MAX                  = 15

};

// Enum  DFMGameplay.ECoverGunShootBoss05
enum class ECoverGunShootBoss05 : uint8_t
{
    Left                                           = 1,
    Right                                          = 2,
    ECoverGunShootBoss05_MAX                       = 3

};

// Enum  DFMGameplay.EExecuteEnemyBoss05
enum class EExecuteEnemyBoss05 : uint8_t
{
    Type1                                          = 1,
    Type2                                          = 2,
    EExecuteEnemyBoss05_MAX                        = 3

};

// Enum  DFMGameplay.ESmokeTossAnimType
enum class ESmokeTossAnimType : uint8_t
{
    FullBody                                       = 0,
    UpperBody                                      = 1,
    InterruptWithFullBody                          = 2,
    ESmokeTossAnimType_MAX                         = 3

};

// Enum  DFMGameplay.ESmokeTossType
enum class ESmokeTossType : uint8_t
{
    Auto                                           = 0,
    Manual                                         = 1,
    TestRandom                                     = 2,
    ESmokeTossType_MAX                             = 3

};

// Enum  DFMGameplay.ESmokeTossDir
enum class ESmokeTossDir : uint8_t
{
    Default                                        = 0,
    LocalSite                                      = 1,
    F                                              = 2,
    R                                              = 3,
    L                                              = 4,
    B                                              = 5,
    ESmokeTossDir_MAX                              = 6

};

// Enum  DFMGameplay.ESpinShootAnimType
enum class ESpinShootAnimType : uint8_t
{
    Default                                        = 0,
    FirstBlood                                     = 1,
    DoubleKill                                     = 2,
    TripleKill                                     = 3,
    QuadraKill                                     = 4,
    PentaKill                                      = 5,
    ESpinShootAnimType_MAX                         = 6

};

// Enum  DFMGameplay.EMauriceSkillType
enum class EMauriceSkillType : uint8_t
{
    Attack01                                       = 0,
    EMauriceSkillType_MAX                          = 1

};

// Enum  DFMGameplay.EReisSkillType
enum class EReisSkillType : uint8_t
{
    RushShootLeft                                  = 0,
    RushShootRight                                 = 1,
    RushShootFront                                 = 2,
    StrikeFront                                    = 3,
    ComboShoot                                     = 4,
    StrikeInPlace                                  = 5,
    EReisSkillType_MAX                             = 6

};

// Enum  DFMGameplay.ETakingCoverType
enum class ETakingCoverType : uint8_t
{
    LeftCover                                      = 0,
    RightCover                                     = 1,
    ETakingCoverType_MAX                           = 2

};

// Enum  DFMGameplay.EAIThreatEvent
enum class EAIThreatEvent : uint8_t
{
    HURTED                                         = 0,
    ALERT                                          = 1,
    FIGHTING                                       = 2,
    DEADBODY                                       = 3,
    SAFE                                           = 4,
    MAX                                            = 5

};

// Enum  DFMGameplay.EAIThreatFlagName
enum class EAIThreatFlagName : uint8_t
{
    STEP_SOUND                                     = 0,
    GUN_SOUND                                      = 1,
    GRENADE                                        = 2,
    VISIBLE                                        = 3,
    HURTED                                         = 4,
    PLAYER_OP                                      = 5,
    SENCE                                          = 6,
    ASN_SOUND                                      = 7,
    ATTRACTION_SOUND                               = 8,
    VEHICLE_HURTED                                 = 9,
    UNSET                                          = 10,
    EAIThreatFlagName_MAX                          = 11

};

// Enum  DFMGameplay.EAIThreatDetailName
enum class EAIThreatDetailName : uint8_t
{
    TINY_STEP                                      = 0,
    SMALL_STEP                                     = 1,
    NORMAL_STEP                                    = 2,
    LARGE_STEP                                     = 3,
    AIR_HIT                                        = 4,
    NEAR_SHOOT_GUN                                 = 5,
    GUN_SOUND                                      = 6,
    GRENADE                                        = 7,
    VISIBLE                                        = 8,
    TEAM_HURTED                                    = 9,
    HURTED                                         = 10,
    PLAYER_OP                                      = 11,
    AIMING                                         = 12,
    SMOKEBOMB                                      = 13,
    FLASHBANG                                      = 14,
    ASN                                            = 15,
    ATTRACTION                                     = 16,
    PVP_TEAM_HURTED                                = 17,
    VEHICLE_HURTED                                 = 18,
    MAX                                            = 19

};

// Enum  DFMGameplay.EAttributeChangeOp
enum class EAttributeChangeOp : uint8_t
{
    Less_Value                                     = 0,
    Greater_Value                                  = 1,
    Less_Percent                                   = 2,
    Greater_Percent                                = 3,
    EAttributeChangeOp_MAX                         = 4

};

// Enum  DFMGameplay.EDFMCharacterHideReason
enum class EDFMCharacterHideReason : uint8_t
{
    EDFMCHR_None                                   = 0,
    EDFMCHR_Redeploy                               = 1,
    EDFMCHR_VehicleHideCharacterSeat               = 2,
    EDFMCHR_MAX                                    = 3

};

// Enum  DFMGameplay.ELeanControlType
enum class ELeanControlType : uint8_t
{
    None                                           = 0,
    Other                                          = 1,
    ZoomAutoLean                                   = 2,
    ELeanControlType_MAX                           = 3

};

// Enum  DFMGameplay.EAIActive
enum class EAIActive : uint8_t
{
    Stop                                           = 0,
    Prepare                                        = 1,
    Active                                         = 2,
    EAIActive_MAX                                  = 3

};

// Enum  DFMGameplay.EBossAudioState
enum class EBossAudioState : uint8_t
{
    Default                                        = 0,
    Battle                                         = 1,
    Leisure                                        = 2,
    EBossAudioState_MAX                            = 3

};

// Enum  DFMGameplay.ECharacterAudioState
enum class ECharacterAudioState : uint8_t
{
    EWildRoam                                      = 0,
    EProwl                                         = 1,
    EWarn                                          = 2,
    EFire                                          = 3,
    EBoss_Area                                     = 4,
    EBoss_Guard                                    = 5,
    EBoss_Battle                                   = 6,
    EBoss_Leisure                                  = 7,
    EMax                                           = 8,
    ECharacterAudioState_MAX                       = 9

};

// Enum  DFMGameplay.EWearablePreferenceType
enum class EWearablePreferenceType : uint8_t
{
    Fashion                                        = 0,
    Equipment                                      = 1,
    EWearablePreferenceType_MAX                    = 2

};

// Enum  DFMGameplay.ECharacterAppearanceMeshHideReason
enum class ECharacterAppearanceMeshHideReason : uint8_t
{
    None                                           = 0,
    AnimChanged                                    = 1,
    AllCharacterMesh                               = 2,
    ClientEquipChanged                             = 3,
    ECharacterAppearanceMeshHideReason_MAX         = 4

};

// Enum  DFMGameplay.EEquipmentHideReason
enum class EEquipmentHideReason : uint8_t
{
    EquipmentHide_None                             = 0,
    EquipmentHide_FPPBeingCarryBody                = 1,
    EquipmentHide_Vehicle                          = 2,
    EquipmentHide_MAX                              = 3

};

// Enum  DFMGameplay.EChangeSkillCDType
enum class EChangeSkillCDType : uint8_t
{
    Normal                                         = 0,
    Percent                                        = 1,
    EChangeSkillCDType_MAX                         = 2

};

// Enum  DFMGameplay.ERTCharacterMergeMeshLODBias
enum class ERTCharacterMergeMeshLODBias : uint8_t
{
    MergeMeshLODBias                               = 0,
    MergeMeshLODBias                               = 1,
    MergeMeshLODBias                               = 2,
    MergeMeshLODBias_MAX                           = 3

};

// Enum  DFMGameplay.ERTCharacterMergeTextureSize
enum class ERTCharacterMergeTextureSize : uint32_t
{
    MergeTextureSize                               = 128,
    MergeTextureSize                               = 256,
    MergeTextureSize                               = 512,
    MergeTextureSize                               = 1024,
    MergeTextureSize                               = 2048,
    MergeTextureSize_MAX                           = 2049

};

// Enum  DFMGameplay.ERTCharacterGameMode
enum class ERTCharacterGameMode : uint8_t
{
    ERTCharacterGameMode_MP                        = 1,
    ERTCharacterGameMode_SOL                       = 2,
    ERTCharacterGameMode_MAX                       = 3

};

// Enum  DFMGameplay.ERuntimeCharacterMeshMergeType
enum class ERuntimeCharacterMeshMergeType : uint8_t
{
    CharacterMeshMerge_None                        = 0,
    CharacterMeshMerge_Trunk                       = 1,
    CharacterMeshMerge_Equipment                   = 2,
    CharacterMeshMerge_ExtraPart                   = 3,
    CharacterMeshMerge_MAX                         = 4

};

// Enum  DFMGameplay.ERTCharacterAppearanceSCFilter
enum class ERTCharacterAppearanceSCFilter : uint8_t
{
    ERTCharacterAppearanceSCFilter_None            = 0,
    ERTCharacterAppearanceSCFilter_Light           = 1,
    ERTCharacterAppearanceSCFilter_All             = 99,
    ERTCharacterAppearanceSCFilter_MAX             = 100

};

// Enum  DFMGameplay.ERTCharacterAppearanceType
enum class ERTCharacterAppearanceType : uint8_t
{
    ERTCharacterAppearance_None                    = 0,
    ERTCharacterAppearance_FPP                     = 1,
    ERTCharacterAppearance_TPP                     = 2,
    ERTCharacterAppearance_3P_Teammate             = 3,
    ERTCharacterAppearance_3P_Other                = 4,
    ERTCharacterAppearance_AI                      = 5,
    ERTCharacterAppearance_MAX                     = 6

};

// Enum  DFMGameplay.ERTCharacterMemoryStrategy
enum class ERTCharacterMemoryStrategy : uint8_t
{
    Normal                                         = 0,
    Low                                            = 1,
    VeryLow                                        = 2,
    ERTCharacterMemoryStrategy_MAX                 = 3

};

// Enum  DFMGameplay.EAssassinateChangeLocType
enum class EAssassinateChangeLocType : uint8_t
{
    NONE                                           = 0,
    ChangeSourceLoc                                = 1,
    ChangeTargetLoc                                = 2,
    RotationSourceLoc                              = 3,
    StayLocal                                      = 4,
    EAssassinateChangeLocType_MAX                  = 5

};

// Enum  DFMGameplay.EMapInteractorType
enum class EMapInteractorType : uint8_t
{
    HiddenItem                                     = 0,
    AmmoBox                                        = 1,
    IronGauze                                      = 2,
    EMapInteractorType_MAX                         = 3

};

// Enum  DFMGameplay.ETagFilterMode
enum class ETagFilterMode : uint8_t
{
    ETagFilterMode_None                            = 0,
    ETagFilterMode_HasAll                          = 1,
    ETagFilterMode_HasAny                          = 2,
    ETagFilterMode_MAX                             = 3

};

// Enum  DFMGameplay.EquipmentType
enum class EquipmentType : uint8_t
{
    Mesh                                           = 0,
    MeshFPP                                        = 1,
    EquipmentType_MAX                              = 2

};

// Enum  DFMGameplay.EBonusExpType
enum class EBonusExpType : uint8_t
{
    EBonusExpType_HeadShot                         = 0,
    EBonusExpType_KillStreak                       = 1,
    EBonusExpType_MAX                              = 2

};

// Enum  DFMGameplay.EFootprintSearchType
enum class EFootprintSearchType : uint8_t
{
    None                                           = 0,
    AimEnemy                                       = 1,
    OtherTarget                                    = 2,
    EFootprintSearchType_MAX                       = 3

};

// Enum  DFMGameplay.ECrowdControlStage
enum class ECrowdControlStage : uint8_t
{
    Init                                           = 0,
    Start                                          = 1,
    Loop                                           = 2,
    End                                            = 3,
    ECrowdControlStage_MAX                         = 4

};

// Enum  DFMGameplay.EAnimType
enum class EAnimType : uint8_t
{
    Firefighting                                   = 0,
    ZoyaSwarms                                     = 1,
    Rope                                           = 2,
    BionicSpy                                      = 3,
    NetRemove                                      = 4,
    EAnimType_MAX                                  = 5

};

// Enum  DFMGameplay.EAudioNetRole
enum class EAudioNetRole : uint8_t
{
    ROLE_None                                      = 0,
    ROLE_SimulatedProxy                            = 1,
    ROLE_AutonomousProxy                           = 2,
    ROLE_Authority                                 = 3,
    ROLE_MAX                                       = 4

};

// Enum  DFMGameplay.EStatusBoolModifyAction
enum class EStatusBoolModifyAction : uint8_t
{
    ECharacterStatusConflictSolution_DontCare      = 0,
    ECharacterStatusConflictSolution_ModifyValue   = 1,
    ECharacterStatusConflictSolution_MAX           = 2

};

// Enum  DFMGameplay.EUsingItemActionState
enum class EUsingItemActionState : uint8_t
{
    None                                           = 0,
    PutWeapon                                      = 1,
    OnUsing                                        = 2,
    GetWeapon                                      = 3,
    End                                            = 4,
    EUsingItemActionState_MAX                      = 5

};

// Enum  DFMGameplay.ECharacterAmbientLightState
enum class ECharacterAmbientLightState : uint8_t
{
    ECharacterLiveStatus_Default                   = 0,
    ECharacterLiveStatus_Normal                    = 1,
    ECharacterLiveStatus_SOLSettlementRaidCutscene = 2,
    ECharacterLiveStatus_RaidS1                    = 3,
    ECharacterLiveStatus_SOLNightVisionOff         = 4,
    ECharacterLiveStatus_SOLNightVisionON          = 5,
    ECharacterLiveStatus_MPNightVisionOff          = 6,
    ECharacterLiveStatus_MPNightVisionON           = 7,
    ECharacterLiveStatus_MPNightSettlement         = 8,
    ECharacterLiveStatus_Unknow                    = 9,
    ECharacterLiveStatus_MAX                       = 10

};

// Enum  DFMGameplay.EDebugInfoType
enum class EDebugInfoType : uint8_t
{
    All                                            = 0,
    Base                                           = 1,
    Weapon                                         = 2,
    FSM                                            = 3,
    BlackBoard                                     = 4,
    Movement                                       = 5,
    Camera                                         = 6,
    Mesh                                           = 7,
    VehicleMesh                                    = 8,
    EDebugInfoType_MAX                             = 9

};

// Enum  DFMGameplay.EAssassinateTargetType
enum class EAssassinateTargetType : uint8_t
{
    None                                           = 0,
    Civilian                                       = 1,
    HPPercentPlayer                                = 2,
    ImpendingDeath                                 = 3,
    EAssassinateTargetType_MAX                     = 4

};

// Enum  DFMGameplay.EGameDifficultLevel
enum class EGameDifficultLevel : uint8_t
{
    Simple                                         = 1,
    Normal                                         = 2,
    Hard                                           = 3,
    EGameDifficultLevel_MAX                        = 4

};

// Enum  DFMGameplay.EDsFightFlowType
enum class EDsFightFlowType : uint8_t
{
    All                                            = 0,
    HPGained                                       = 1,
    Hit                                            = 2,
    Behited                                        = 3,
    EDsFightFlowType_MAX                           = 4

};

// Enum  DFMGameplay.EDFRouletteType
enum class EDFRouletteType : uint8_t
{
    ENone                                          = 0,
    ERankSupport                                   = 1,
    ESOLMarking                                    = 2,
    EAmmoPriority                                  = 3,
    ECommercialization                             = 4,
    EScope                                         = 5,
    EMPMarking                                     = 6,
    ESkillInspect                                  = 7,
    EDFRouletteType_MAX                            = 8

};

// Enum  DFMGameplay.EBigMapIconLayer_BB
enum class EBigMapIconLayer_BB : uint8_t
{
    L                                              = 0,
    L_1_Base                                       = 1,
    L                                              = 2,
    L                                              = 3,
    L_4_Facility                                   = 4,
    L                                              = 5,
    L                                              = 6,
    L                                              = 7,
    L_9_Skill                                      = 8,
    L_10_Sector                                    = 9,
    L                                              = 10,
    L_12_DeadBody                                  = 11,
    L_13_NormalSign                                = 12,
    L_14_LocalVehicle                              = 13,
    L_15_SameCamp                                  = 14,
    L_16_TeamMate                                  = 15,
    L_17_LocalPlayer                               = 16,
    L_18_EnemyVehicle                              = 17,
    L_19_Enemy                                     = 18,
    L_20_                                          = 19,
    L_Max                                          = 20

};

// Enum  DFMGameplay.EBigMapIconLayer_SOL
enum class EBigMapIconLayer_SOL : uint8_t
{
    L                                              = 0,
    L_1_Base                                       = 1,
    L_2_POI                                        = 2,
    L_3_Boss                                       = 3,
    L_4_Facility                                   = 4,
    L_5_InteractActor                              = 5,
    L_6_Lock                                       = 6,
    L_7_Box                                        = 7,
    L_8_Exit                                       = 8,
    L_9_Skill                                      = 9,
    L_10_DeadBody                                  = 10,
    L_11_Quest                                     = 11,
    L_12_Contract                                  = 12,
    L_12_Box_New                                   = 13,
    L_13_DecipherDevice                            = 14,
    L_14_MandelBrick                               = 15,
    L_15_TeamMateSign                              = 16,
    L_16_LocalSign                                 = 17,
    L_17_Death                                     = 18,
    L_18_TeamMate                                  = 19,
    L_19_LocalPlayer                               = 27,
    L_20_Enemy                                     = 28,
    L_Max                                          = 29

};

// Enum  DFMGameplay.EMiniMapIconLayer
enum class EMiniMapIconLayer : uint8_t
{
    Lowest                                         = 0,
    Base                                           = 1,
    Line                                           = 2,
    EMiniMapIconLayer_MAX                          = 3

};

// Enum  DFMGameplay.EMapIconGamePlayMode
enum class EMapIconGamePlayMode : uint8_t
{
    None                                           = 0,
    MapIconGamePlayMode_SOL                        = 1,
    EMapIconGamePlayMode_Raid                      = 4,
    MapIconGamePlayMode_IrisDiscovery              = 8,
    MapIconGamePlayMode_BattleField                = 16,
    MapIconGamePlayMode_Breakthrough               = 32,
    MapIconGamePlayMode_SafeHouse                  = 64,
    EMapIconGamePlayMode_MAX                       = 65

};

// Enum  DFMGameplay.ENavAreaFlag
enum class ENavAreaFlag : uint8_t
{
    Default                                        = 0,
    Climb                                          = 1,
    Vault                                          = 2,
    JumpOff                                        = 3,
    Door                                           = 4,
    Shallow                                        = 5,
    DeepWater                                      = 6,
    GroundPatch                                    = 7,
    Fire                                           = 8,
    ENavAreaFlag_MAX                               = 9

};

// Enum  DFMGameplay.ENPCService
enum class ENPCService : uint8_t
{
    ENS_Dialogue                                   = 0,
    ENS_Business                                   = 1,
    ENS_RaidTrigger                                = 2,
    ENS_MAX                                        = 3

};

// Enum  DFMGameplay.EDialogueRule
enum class EDialogueRule : uint8_t
{
    EDS_None                                       = 0,
    EDS_InAngleRange                               = 1,
    EDS_NoLimit                                    = 2,
    EDS_MAX                                        = 3

};

// Enum  DFMGameplay.ENPCCategory
enum class ENPCCategory : uint8_t
{
    SKILL_STATUS_UNKNOW                            = 0,
    SKILL_STATUS_READY                             = 1,
    SKILL_STATUS_PRECAST                           = 2,
    SKILL_STATUS_CASTING                           = 3,
    SKILL_STATUS_AFTERCAST                         = 4,
    SKILL_STATUS_FINISH                            = 5,
    SKILL_STATUS_COOLING                           = 6,
    SKILL_STATUS_CHARGING                          = 7,
    SKILL_STATUS_PREPARING                         = 8,
    SKILL_STATUS_MAX                               = 9

};

// Enum  DFMGameplay.EBattleFieldQuestState
enum class EBattleFieldQuestState : uint8_t
{
    EBattleFieldQuestState_Locked                  = 0,
    EBattleFieldQuestState_Unread                  = 1,
    EBattleFieldQuestState_Unaccepted              = 2,
    EBattleFieldQuestState_Accepted                = 3,
    EBattleFieldQuestState_Failed                  = 4,
    EBattleFieldQuestState_Paused                  = 5,
    EBattleFieldQuestState_Completed               = 6,
    EBattleFieldQuestState_Rewarded                = 7,
    EBattleFieldQuestState_MAX                     = 8

};

// Enum  DFMGameplay.ELootTotalValueRecordReason
enum class ELootTotalValueRecordReason : uint8_t
{
    Exit                                           = 0,
    Dead                                           = 1,
    TimeOver                                       = 2,
    ELootTotalValueRecordReason_MAX                = 3

};

// Enum  DFMGameplay.EPlayerCombatDamageMakerWeaponType
enum class EPlayerCombatDamageMakerWeaponType : uint8_t
{
    NormalWeapon                                   = 0,
    ElectricArrowDamage                            = 1,
    ProxSensorArrowMark                            = 2,
    LauncherDamage                                 = 3,
    OverloadDamage                                 = 4,
    ClaymoreDamage                                 = 5,
    C303KnifeDrone                                 = 6,
    SilenceZoneDamage                              = 7,
    ElectricShock                                  = 8,
    EPlayerCombatDamageMakerWeaponType_MAX         = 9

};

// Enum  DFMGameplay.EPlayerMatchStatusType
enum class EPlayerMatchStatusType : uint8_t
{
    BloodLoss                                      = 1,
    HpHealed                                       = 2,
    DehydrationTimes                               = 3,
    DrinkConsumed                                  = 4,
    FoodConsumed                                   = 5,
    DistanceTraveled                               = 6,
    BodiesLooted                                   = 7,
    WeaponFound                                    = 8,
    AccessoriesFound                               = 9,
    FoodFound                                      = 10,
    RescueCount                                    = 11,
    ReviveCount                                    = 12,
    UnlockTimes                                    = 13,
    TotalDamage                                    = 14,
    TotalCombatCount                               = 15,
    SneakingRatio                                  = 16,
    EPlayerMatchStatusType_MAX                     = 17

};

// Enum  DFMGameplay.ECharacterRoleType
enum class ECharacterRoleType : uint8_t
{
    CharacterRole_Boss                             = 0,
    CharacterRole_AI                               = 1,
    CharacterRole_Player                           = 2,
    CharacterRole_MAX                              = 3

};

// Enum  DFMGameplay.EDFMMarkerPriority
enum class EDFMMarkerPriority : uint8_t
{
    None                                           = 0,
    NpcTalk                                        = 1,
    Mission                                        = 2,
    Ability                                        = 3,
    Max                                            = 4

};

// Enum  DFMGameplay.ERedeployPlayerShowState
enum class ERedeployPlayerShowState : uint8_t
{
    NotSee                                         = 0,
    Dead                                           = 1,
    Live                                           = 2,
    ERedeployPlayerShowState_MAX                   = 3

};

// Enum  DFMGameplay.ESafeHouseElevatorSwitchType
enum class ESafeHouseElevatorSwitchType : uint8_t
{
    None                                           = 0,
    Up                                             = 1,
    Down                                           = 2,
    Inside                                         = 3,
    ESafeHouseElevatorSwitchType_MAX               = 4

};

// Enum  DFMGameplay.EBuffBlockRole
enum class EBuffBlockRole : uint8_t
{
    All                                            = 0,
    Block                                          = 1,
    NoBlock                                        = 2,
    EBuffBlockRole_MAX                             = 3

};

// Enum  DFMGameplay.EBuffGameRole
enum class EBuffGameRole : uint8_t
{
    All                                            = 0,
    SOL                                            = 1,
    MP                                             = 2,
    INTRO                                          = 3,
    EBuffGameRole_MAX                              = 4

};

// Enum  DFMGameplay.EBuffApplyRole
enum class EBuffApplyRole : uint8_t
{
    All                                            = 0,
    Enermy                                         = 1,
    TeammateNoMe                                   = 2,
    TeammateAndMe                                  = 3,
    OnlyMe                                         = 4,
    EnermyAndMe                                    = 5,
    NoMe                                           = 6,
    TeammateNoMe_CheckEnemy                        = 7,
    EBuffApplyRole_MAX                             = 8

};

// Enum  DFMGameplay.ESniperTargetMarkState
enum class ESniperTargetMarkState : uint8_t
{
    InMarkRange                                    = 0,
    InMaintainRange                                = 1,
    OutSideMaintainRange                           = 2,
    ESniperTargetMarkState_MAX                     = 3

};

// Enum  DFMGameplay.ESoundVisualizeActionType
enum class ESoundVisualizeActionType : uint8_t
{
    GunFire                                        = 0,
    Explosion                                      = 1,
    Walk                                           = 2,
    Run                                            = 3,
    Sprint                                         = 4,
    Interaction                                    = 5,
    OpenDoor                                       = 6,
    BreakDoor                                      = 7,
    CarryBody                                      = 8,
    PutDownBody                                    = 9,
    AIVoice                                        = 10,
    PlayerVoice                                    = 11,
    UseItem                                        = 12,
    Vehicle                                        = 13,
    None                                           = 14,
    ESoundVisualizeActionType_MAX                  = 15

};

// Enum  DFMGameplay.EAIAudioDebugFailReason
enum class EAIAudioDebugFailReason : uint8_t
{
    SUCCESS                                        = 0,
    TYPE_COOLDOWN                                  = 1,
    GLOBAL_COOLDOWN                                = 2,
    ALLAI_COOLDOWN                                 = 3,
    NO_MATCHED                                     = 4,
    ABORT                                          = 5,
    MAX                                            = 6

};

// Enum  DFMGameplay.ECharacterSpeakDynamicDialogueSwitchGroup
enum class ECharacterSpeakDynamicDialogueSwitchGroup : uint8_t
{
    NONE                                           = 0,
    STATUS_GROUP                                   = 1,
    ACTION_GROUP                                   = 2,
    AI_HEALTH_GROUP                                = 3,
    PLAYER_HEALTH_GROUP                            = 4,
    TEAMMATE_GROUP                                 = 5,
    LOCATION_GROUP                                 = 6,
    TIME_OF_DAY_GROUP                              = 7,
    MAX                                            = 8

};

// Enum  DFMGameplay.ECharacterSpeakDynamicDialogueSwitchTime_of_Day
enum class ECharacterSpeakDynamicDialogueSwitchTime_of_Day : uint8_t
{
    NONE                                           = 0,
    Daylight                                       = 1,
    Evening                                        = 2,
    Night                                          = 3,
    Morning                                        = 4,
    MAX                                            = 5

};

// Enum  DFMGameplay.ECharacterSpeakDynamicDialogueSwitchLocation
enum class ECharacterSpeakDynamicDialogueSwitchLocation : uint8_t
{
    NONE                                           = 0,
    Dam                                            = 1,
    Forrest                                        = 2,
    Spacecity                                      = 3,
    Others                                         = 4,
    MAX                                            = 5

};

// Enum  DFMGameplay.ECharacterSpeakDynamicDialogueSwitchTeammate
enum class ECharacterSpeakDynamicDialogueSwitchTeammate : uint8_t
{
    NONE                                           = 0,
    No                                             = 1,
    Yes                                            = 2,
    MAX                                            = 3

};

// Enum  DFMGameplay.ECharacterSpeakDynamicDialogueSwitchPlayer_Health
enum class ECharacterSpeakDynamicDialogueSwitchPlayer_Health : uint8_t
{
    NONE                                           = 0,
    Healthy                                        = 1,
    Injured                                        = 2,
    MAX                                            = 3

};

// Enum  DFMGameplay.ECharacterSpeakDynamicDialogueSwitchAI_Health
enum class ECharacterSpeakDynamicDialogueSwitchAI_Health : uint8_t
{
    NONE                                           = 0,
    Healthy                                        = 1,
    Unhealthy                                      = 2,
    MAX                                            = 3

};

// Enum  DFMGameplay.ECharacterSpeakDynamicDialogueSwitchaAction
enum class ECharacterSpeakDynamicDialogueSwitchaAction : uint8_t
{
    NONE                                           = 0,
    AirHit                                         = 1,
    Confront                                       = 2,
    Enemylost                                      = 3,
    HearL                                          = 4,
    HearM                                          = 5,
    HearS                                          = 6,
    Hide                                           = 7,
    Hit                                            = 8,
    Hold                                           = 9,
    Kill                                           = 10,
    Return                                         = 11,
    Rush                                           = 12,
    Search                                         = 13,
    Start                                          = 14,
    MAX                                            = 15

};

// Enum  DFMGameplay.ECharacterSpeakDynamicDialogueSwitchStatus
enum class ECharacterSpeakDynamicDialogueSwitchStatus : uint8_t
{
    NONE                                           = 0,
    Alert                                          = 1,
    Combat                                         = 2,
    Relax                                          = 3,
    MAX                                            = 4

};

// Enum  DFMGameplay.ETieDoorState
enum class ETieDoorState : uint8_t
{
    E_Close                                        = 0,
    E_Opening                                      = 1,
    E_Opened                                       = 2,
    E_MAX                                          = 3

};

// Enum  DFMGameplay.ETieBreakerState
enum class ETieBreakerState : uint8_t
{
    E_Dormancy                                     = 0,
    E_ActiveWaiting                                = 1,
    E_Active                                       = 2,
    E_Impaired                                     = 3,
    E_Destory                                      = 4,
    E_MAX                                          = 5

};

// Enum  DFMGameplay.EDFMWaterInteractionType
enum class EDFMWaterInteractionType : uint8_t
{
    None                                           = 0,
    Vehicle                                        = 1,
    Character                                      = 2,
    EDFMWaterInteractionType_MAX                   = 3

};

// Enum  DFMGameplay.EDFMWaterInteractionState
enum class EDFMWaterInteractionState : uint8_t
{
    None                                           = 0,
    NotSwimmingCharacter                           = 1,
    SwimmingCharacter                              = 2,
    Vehicle                                        = 3,
    EDFMWaterInteractionState_MAX                  = 4

};

// Enum  DFMGameplay.EReloadTriggerType
enum class EReloadTriggerType : uint8_t
{
    Undefined                                      = 0,
    Auto                                           = 1,
    Click                                          = 2,
    Bag                                            = 3,
    Roulette                                       = 4,
    EReloadTriggerType_MAX                         = 5

};

// Enum  DFMGameplay.EPendingReloadType
enum class EPendingReloadType : uint8_t
{
    Clear                                          = 0,
    Stack                                          = 1,
    Priority                                       = 2,
    Undefined                                      = 3,
    EPendingReloadType_MAX                         = 4

};

// Enum  DFMGameplay.EDFMWeaponMeshType
enum class EDFMWeaponMeshType : uint8_t
{
    Bar                                            = 0,
    Bip                                            = 1,
    Bullet                                         = 2,
    Dev                                            = 3,
    Eyec                                           = 4,
    FroG                                           = 5,
    FroS                                           = 6,
    GripTape                                       = 7,
    Han                                            = 8,
    Handle                                         = 9,
    Mag                                            = 10,
    Mou                                            = 11,
    Muz                                            = 12,
    PisG                                           = 13,
    ReaS                                           = 14,
    Rec                                            = 15,
    Sco                                            = 16,
    Spe                                            = 17,
    Sto                                            = 18,
    StockP                                         = 19,
    Tri                                            = 20,
    Unknown                                        = 21,
    EDFMWeaponMeshType_MAX                         = 22

};

// Enum  DFMGameplay.EAIDramaDebugLineType
enum class EAIDramaDebugLineType : uint8_t
{
    EDefaultLine                                   = 0,
    ETriggerLine                                   = 1,
    EAIDramaDebugLineType_MAX                      = 2

};

// Enum  DFMGameplay.EAIDramaState
enum class EAIDramaState : uint8_t
{
    ENone                                          = 0,
    EActing                                        = 1,
    EAIDramaState_MAX                              = 2

};

// Enum  DFMGameplay.EAIDramaPriority
enum class EAIDramaPriority : uint8_t
{
    EAIDramaAboveFight                             = 0,
    EAIDramaAboveAlert                             = 1,
    EAIDramaAboveLeisure                           = 2,
    EAIDramaAboveAll                               = 3,
    EAIDramaMax                                    = 4,
    EAIDramaPriority_MAX                           = 5

};

// Enum  DFMGameplay.EDramaAct
enum class EDramaAct : uint8_t
{
    EDA_TALK                                       = 0,
    EDA_WAIT                                       = 1,
    EDA_MTG                                        = 2,
    EDA_CUSTOM                                     = 3,
    EDA_MAX                                        = 4

};

// Enum  DFMGameplay.EDramaRole
enum class EDramaRole : uint8_t
{
    EDR_ACTOR                                      = 0,
    EDR_ACTOR                                      = 1,
    EDR_ACTOR                                      = 2,
    EDR_ACTOR                                      = 3,
    EDR_ACTOR                                      = 4,
    EDR_ACTOR                                      = 5,
    EDR_ACTOR                                      = 6,
    EDR_ACTOR_MAX                                  = 7

};

// Enum  DFMGameplay.EInAllDirection
enum class EInAllDirection : uint8_t
{
    Front                                          = 0,
    Back                                           = 1,
    Left                                           = 2,
    Right                                          = 3,
    LF                                             = 4,
    RF                                             = 5,
    LB                                             = 6,
    RB                                             = 7,
    EInAllDirection_MAX                            = 8

};

// Enum  DFMGameplay.EAITestDistanceType
enum class EAITestDistanceType : uint8_t
{
    ECheckDistType_3D                              = 0,
    ECheckDistType_2D                              = 1,
    ECheckDistType_Z                               = 2,
    ECheckDistType_AbsoluteZ                       = 3,
    ECheckDistType_MAX                             = 4

};

// Enum  DFMGameplay.EEnvTestPathfindingStraightBatch
enum class EEnvTestPathfindingStraightBatch : uint8_t
{
    PathExist                                      = 0,
    PathCost                                       = 1,
    PathLength                                     = 2,
    EEnvTestPathfindingStraightBatch_MAX           = 3

};

// Enum  DFMGameplay.EEscortBossState
enum class EEscortBossState : uint8_t
{
    None                                           = 0,
    BossAppear                                     = 1,
    Manning                                        = 2,
    Escort2Door                                    = 3,
    Escort2Helicopter                              = 4,
    BossDownCarryBossOpenDoor                      = 5,
    CarryBoss2HelicopterPutDownBoss                = 6,
    EEscortBossState_MAX                           = 7

};

// Enum  DFMGameplay.ECustomMapTipsBoxType
enum class ECustomMapTipsBoxType : uint8_t
{
    SingleText                                     = 0,
    CountdownTimeAndText                           = 1,
    IconAndText                                    = 2,
    DescribeSingleText                             = 3,
    ECustomMapTipsBoxType_MAX                      = 4

};

// Enum  DFMGameplay.EExitTriggerScreenType
enum class EExitTriggerScreenType : uint8_t
{
    Default                                        = 0,
    Gray                                           = 1,
    Green                                          = 2,
    Red                                            = 3,
    Yellow                                         = 4,
    EExitTriggerScreenType_MAX                     = 5

};

// Enum  DFMGameplay.EExitMatchInfoSwitchType
enum class EExitMatchInfoSwitchType : uint8_t
{
    None                                           = -1,
    NoCtrl                                         = 0,
    Open                                           = 1,
    Close                                          = 2,
    EExitMatchInfoSwitchType_MAX                   = 3

};

// Enum  DFMGameplay.EExitCloseType
enum class EExitCloseType : uint8_t
{
    None                                           = 0,
    LimitedTime                                    = 1,
    AfterCountDown                                 = 2,
    AfterEscapeCount                               = 3,
    EExitCloseType_MAX                             = 4

};

// Enum  DFMGameplay.EExitConditionType
enum class EExitConditionType : uint8_t
{
    Unconditional                                  = 0,
    Payment                                        = 1,
    PayItem                                        = 2,
    EquipmentLimit                                 = 3,
    RoleLoadLimit                                  = 4,
    ItemLimit                                      = 5,
    EExitConditionType_MAX                         = 6

};

// Enum  DFMGameplay.EExitConditionEquipmentState
enum class EExitConditionEquipmentState : uint8_t
{
    None                                           = 0,
    Exist                                          = 1,
    Empty                                          = 2,
    EExitConditionEquipmentState_MAX               = 3

};

// Enum  DFMGameplay.EExitConditionEquipmentType
enum class EExitConditionEquipmentType : uint8_t
{
    None                                           = 0,
    Helmet                                         = 101,
    BreastPlate                                    = 105,
    ChestHanging                                   = 107,
    Bag                                            = 108,
    EExitConditionEquipmentType_MAX                = 109

};

// Enum  DFMGameplay.EExitMethodType
enum class EExitMethodType : uint8_t
{
    Solo                                           = 0,
    Together                                       = 1,
    EExitMethodType_MAX                            = 2

};

// Enum  DFMGameplay.EExitOpenType
enum class EExitOpenType : uint8_t
{
    Normal                                         = 0,
    Random                                         = 1,
    Delay                                          = 2,
    Switch                                         = 3,
    Event                                          = 4,
    Payment                                        = 5,
    Item                                           = 6,
    EExitOpenType_MAX                              = 7

};

// Enum  DFMGameplay.EExitUIStateType
enum class EExitUIStateType : uint8_t
{
    Normal                                         = 0,
    Pay                                            = 1,
    Limit                                          = 2,
    Special                                        = 3,
    Event                                          = 4,
    EExitUIStateType_MAX                           = 5

};

// Enum  DFMGameplay.EExitCutSceneType
enum class EExitCutSceneType : uint8_t
{
    NonGeneric                                     = 0,
    InDoor                                         = 1,
    OutDoor                                        = 2,
    MediaVideo                                     = 3,
    EExitCutSceneType_MAX                          = 4

};

// Enum  DFMGameplay.EExitState
enum class EExitState : uint8_t
{
    Normal                                         = 1,
    WaitingToEscape                                = 2,
    Escaped                                        = 3,
    ReadyToStartEscape                             = 4,
    InEscaping                                     = 5,
    EExitState_MAX                                 = 6

};

// Enum  DFMGameplay.EPeekType
enum class EPeekType : uint8_t
{
    Up                                             = 0,
    Left                                           = 1,
    Right                                          = 2,
    EPeekType_MAX                                  = 3

};

// Enum  DFMGameplay.EFormationSyncType
enum class EFormationSyncType : uint8_t
{
    FollowSlot                                     = 0,
    SyncPathFollowProgress                         = 1,
    EFormationSyncType_MAX                         = 2

};

// Enum  DFMGameplay.EGeneralSignificanceType
enum class EGeneralSignificanceType : uint8_t
{
    None                                           = 0,
    Weapon                                         = 1,
    SmallProp                                      = 2,
    BigProp                                        = 3,
    ImportantProp                                  = 4,
    PCImportant                                    = 5,
    Max                                            = 6

};

// Enum  DFMGameplay.EAIModiferCameraType
enum class EAIModiferCameraType : uint8_t
{
    Default                                        = 0,
    BOSS05_01                                      = 1,
    BOSS05_02                                      = 2,
    EAIModiferCameraType_MAX                       = 3

};

// Enum  DFMGameplay.EJoggleCameraType
enum class EJoggleCameraType : uint8_t
{
    EJoggleCameraType_Default                      = 0,
    EJoggleCameraType_CharacterPain                = 1,
    EJoggleCameraType_MAX                          = 2

};

// Enum  DFMGameplay.EGPEffectStaus
enum class EGPEffectStaus : uint8_t
{
    None                                           = 0,
    Running                                        = 1,
    EGPEffectStaus_MAX                             = 2

};

// Enum  DFMGameplay.EGPPrefGroupName
enum class EGPPrefGroupName : uint8_t
{
    Default                                        = 0,
    PVE                                            = 1,
    EGPPrefGroupName_MAX                           = 2

};

// Enum  DFMGameplay.EGroupAIActions
enum class EGroupAIActions : uint8_t
{
    ENone                                          = 0,
    EScene_Patrol                                  = 1,
    EScene_Guard                                   = 2,
    EScene_Gather                                  = 3,
    ECombat_Assault                                = 4,
    ECombat_Normal                                 = 5,
    ECombat_Dodge                                  = 6,
    ECombat_TacticalPos                            = 7,
    EGroupAI_MAX                                   = 8,
    EGroupAIActions_MAX                            = 9

};

// Enum  DFMGameplay.EHealthAttributeUnit
enum class EHealthAttributeUnit : uint8_t
{
    Normal                                         = 0,
    Percent                                        = 1,
    EHealthAttributeUnit_MAX                       = 2

};

// Enum  DFMGameplay.TriggerBuffType
enum class TriggerBuffType : uint8_t
{
    Probability                                    = 0,
    Wound                                          = 1,
    OnBroken                                       = 2,
    RadialDamage                                   = 3,
    RadialDamageHead                               = 4,
    Dizzy                                          = 5,
    HeadDamage                                     = 6,
    TriggerBuffType_MAX                            = 7

};

// Enum  DFMGameplay.EHelmetMaskType
enum class EHelmetMaskType : uint8_t
{
    Type_None                                      = 0,
    Type_Mask                                      = 1,
    Type_NightVision                               = 2,
    Type_MAX                                       = 3

};

// Enum  DFMGameplay.EHighlightMomentEventType
enum class EHighlightMomentEventType : uint8_t
{
    GameStart                                      = 1,
    GameEnd                                        = 2,
    GameEndDS                                      = 3,
    GameEndView                                    = 4,
    KillEvent                                      = 5,
    BattleExpCut                                   = 6,
    BattleExpLog                                   = 7,
    TacticalSupport                                = 8,
    EnterVehicle                                   = 9,
    ZoneTaken                                      = 10,
    DeployBeacon                                   = 11,
    SOLGainItem                                    = 12,
    SOLGetMandelBrick                              = 13,
    SOLDecryptMandelBrick                          = 14,
    SOLCopyMandelBrick                             = 15,
    SOLMandelBrickTakenOut                         = 16,
    PlayerReborn                                   = 17,
    VehicleDestory                                 = 18,
    GameToHall                                     = 19,
    LognHall                                       = 20,
    EHighlightMomentEventType_MAX                  = 21

};

// Enum  DFMGameplay.EUpgradeTipsType
enum class EUpgradeTipsType : uint8_t
{
    EGameModeLevelMP                               = 0,
    EGunUnlock                                     = 1,
    EGunLevel                                      = 2,
    EGunPartUnlock                                 = 3,
    EMedal                                         = 4,
    EVehicleLevel                                  = 5,
    EVehiclePartUnlock                             = 6,
    EWeaponStar                                    = 7,
    EUpgradeTipsType_MAX                           = 8

};

// Enum  DFMGameplay.EItemFppOrTppType
enum class EItemFppOrTppType : uint8_t
{
    UnDefined                                      = 0,
    Fpp                                            = 1,
    Tpp                                            = 2,
    EItemFppOrTppType_MAX                          = 3

};

// Enum  DFMGameplay.ECheckItemMeshType
enum class ECheckItemMeshType : uint8_t
{
    InValid                                        = 0,
    SkeletalMesh                                   = 1,
    StaticMesh                                     = 2,
    ECheckItemMeshType_MAX                         = 3

};

// Enum  DFMGameplay.EOperateFailedType
enum class EOperateFailedType : uint8_t
{
    OperateFailedBegin                             = 0,
    Props                                          = 1,
    ArmdedForce                                    = 2,
    Others                                         = 3,
    OperateFailedMax                               = 99,
    EOperateFailedType_MAX                         = 100

};

// Enum  DFMGameplay.EElevatorUsingState
enum class EElevatorUsingState : uint8_t
{
    ENone                                          = 0,
    EElevatorCanUsing                              = 1,
    EElevatorDoorBlock                             = 2,
    EElevatorRunning                               = 3,
    EElevatorCDing                                 = 4,
    EElevatorUsingState_MAX                        = 5

};

// Enum  DFMGameplay.EElevatorState
enum class EElevatorState : uint8_t
{
    OnTop                                          = 0,
    OnDown                                         = 1,
    OnMovingUp                                     = 2,
    OnMovingDown                                   = 3,
    EElevatorState_MAX                             = 4

};

// Enum  DFMGameplay.EElevatorDoorState
enum class EElevatorDoorState : uint8_t
{
    OnOpened                                       = 0,
    OnClosed                                       = 1,
    OnOpening                                      = 2,
    OnClosing                                      = 3,
    EElevatorDoorState_MAX                         = 4

};

// Enum  DFMGameplay.EElevatorSwitchState
enum class EElevatorSwitchState : uint8_t
{
    OnUsing                                        = 0,
    OnGuideInteraction                             = 1,
    EElevatorSwitchState_MAX                       = 2

};

// Enum  DFMGameplay.EPreTriggerType
enum class EPreTriggerType : uint8_t
{
    NoNeedPreMiniGame                              = 0,
    WaitPreMiniGame2Start                          = 1,
    PreMiniGameSucceed                             = 2,
    EPreTriggerType_MAX                            = 3

};

// Enum  DFMGameplay.EExitTriggerType
enum class EExitTriggerType : uint8_t
{
    SingleExit                                     = 0,
    MultipleExit                                   = 1,
    FakeExit                                       = 2,
    EExitTriggerType_MAX                           = 3

};

// Enum  DFMGameplay.EPatrolRobotTriggerType
enum class EPatrolRobotTriggerType : uint8_t
{
    None                                           = 0,
    StopSeconds                                    = 1,
    SwitchToGuideRoute                             = 2,
    OpenLockedDoor                                 = 3,
    EPatrolRobotTriggerType_MAX                    = 4

};

// Enum  DFMGameplay.EPatrolRobotState
enum class EPatrolRobotState : uint8_t
{
    OnStop                                         = 0,
    OnMove                                         = 1,
    OnDamaged                                      = 2,
    OnGuideInteraction                             = 3,
    EPatrolRobotState_MAX                          = 4

};

// Enum  DFMGameplay.ERadarStationElevatorSwitchType
enum class ERadarStationElevatorSwitchType : uint8_t
{
    None                                           = 0,
    Up                                             = 1,
    Down                                           = 2,
    Inside                                         = 3,
    ERadarStationElevatorSwitchType_MAX            = 4

};

// Enum  DFMGameplay.ERaidAmmoBoxType
enum class ERaidAmmoBoxType : uint8_t
{
    None                                           = 0,
    Rifle                                          = 1,
    Submachine                                     = 2,
    Shotgun                                        = 3,
    LightMachine                                   = 4,
    PrecisionShootingRifle                         = 5,
    Sniper                                         = 6,
    Pistol                                         = 7,
    Max                                            = 8

};

// Enum  DFMGameplay.ESingleItemContainerType
enum class ESingleItemContainerType : uint8_t
{
    SIContainer_None                               = 0,
    SIContainer_IceBox                             = 1,
    SIContainer_WeaponBox                          = 2,
    SIContainer_Cabinet                            = 3,
    SIContainer_Dustbin                            = 4,
    SIContainer_Container                          = 5,
    SIContainer_SafeBox                            = 6,
    SIContainer_AgitatingLorry                     = 7,
    SIContainer_PakMachine                         = 8,
    SIContainer_ItemHeap                           = 9,
    SIContainer_Deltashell                         = 10,
    SIContainer_Prisontoilet                       = 11,
    SIContainer_Lottery                            = 12,
    SIContainer_Replace                            = 13,
    SIContainer_MAX                                = 14

};

// Enum  DFMGameplay.ETimeBombWireLayoutType
enum class ETimeBombWireLayoutType : uint8_t
{
    None                                           = 0,
    Type1                                          = 1,
    Type2                                          = 2,
    Type3                                          = 3,
    Type4                                          = 4,
    ETimeBombWireLayoutType_MAX                    = 5

};

// Enum  DFMGameplay.ETimeBombState
enum class ETimeBombState : uint8_t
{
    None                                           = 0,
    Activated                                      = 1,
    Disabled                                       = 2,
    Exploded                                       = 3,
    ETimeBombState_MAX                             = 4

};

// Enum  DFMGameplay.ERandomLootResultType
enum class ERandomLootResultType : uint8_t
{
    ENone                                          = 0,
    ENormalLoot                                    = 1,
    EC4Bomb                                        = 2,
    ESmoke                                         = 3,
    ERandomLootResultType_MAX                      = 4

};

// Enum  DFMGameplay.EHackPcMiniGameType
enum class EHackPcMiniGameType : uint8_t
{
    EMorceCode                                     = 0,
    EFingerprint                                   = 1,
    EHackPcMiniGameType_MAX                        = 2

};

// Enum  DFMGameplay.EPreciseMoveStage
enum class EPreciseMoveStage : uint8_t
{
    None                                           = 0,
    BeginPreciseMove                               = 1,
    OnPreciseMove                                  = 2,
    EndPreciseMove                                 = 3,
    EndPreciseInteract                             = 4,
    EPreciseMoveStage_MAX                          = 5

};

// Enum  DFMGameplay.EAerialWorkPlatformState
enum class EAerialWorkPlatformState : uint8_t
{
    None                                           = 0,
    Descended                                      = 1,
    Ascended                                       = 2,
    EAerialWorkPlatformState_MAX                   = 3

};

// Enum  DFMGameplay.EWorkVehicleSwitchLightType
enum class EWorkVehicleSwitchLightType : uint8_t
{
    Default                                        = 0,
    Red                                            = 1,
    Green                                          = 2,
    Yellow                                         = 3,
    EWorkVehicleSwitchLightType_MAX                = 4

};

// Enum  DFMGameplay.EWorkVehicleSwitchStatus
enum class EWorkVehicleSwitchStatus : uint8_t
{
    On                                             = 0,
    Blinking                                       = 1,
    Off                                            = 2,
    Max                                            = 3

};

// Enum  DFMGameplay.EInteractorOptExecuteState
enum class EInteractorOptExecuteState : uint8_t
{
    ES_None                                        = 0,
    ES_Executing                                   = 1,
    ES_Finished                                    = 2,
    ES_MAX                                         = 3

};

// Enum  DFMGameplay.EUnequipAmmoResultNotifyCode
enum class EUnequipAmmoResultNotifyCode : uint8_t
{
    BulletUnequipFailed                            = 0,
    BulletUnequipToBag                             = 1,
    BulletUnequipToLootingObj                      = 2,
    BulletUnequipToGround                          = 3,
    BulletUnequipToBagAndGround                    = 4,
    BulletUnequipToBulletSlotAndBag                = 5,
    BulletUnequipToBulletSlotAndGround             = 6,
    BulletUnequipToBulletSlot                      = 7,
    EUnequipAmmoResultNotifyCode_MAX               = 8

};

// Enum  DFMGameplay.EShowCabinetType
enum class EShowCabinetType : uint8_t
{
    Display                                        = 1,
    Special                                        = 2,
    DIY                                            = 3,
    EShowCabinetType_MAX                           = 4

};

// Enum  DFMGameplay.EUseItemInputSource
enum class EUseItemInputSource : uint8_t
{
    None                                           = 0,
    Health                                         = 1,
    Bag                                            = 2,
    Shortcut                                       = 3,
    Rouletee                                       = 4,
    EUseItemInputSource_MAX                        = 5

};

// Enum  DFMGameplay.ECancelUseItemReason
enum class ECancelUseItemReason : uint8_t
{
    None                                           = 0,
    Fire                                           = 1,
    Aim                                            = 2,
    SwitchWeapon                                   = 3,
    BothTry                                        = 4,
    ProneMove                                      = 5,
    ProneToOtherPose                               = 6,
    TipHud                                         = 7,
    MatchEnd                                       = 8,
    Looting                                        = 9,
    BackgroudCancel                                = 10,
    FinshPeriodUse                                 = 11,
    SprintButton                                   = 12,
    BeingCrocodileBite                             = 13,
    FaildToUse                                     = 14,
    SkillHit                                       = 15,
    InvalidLocation                                = 16,
    ECancelUseItemReason_MAX                       = 17

};

// Enum  DFMGameplay.EQuickUseItemReason
enum class EQuickUseItemReason : uint8_t
{
    Succeed                                        = 0,
    NotEnoughDurability                            = 1,
    NoNeedToHeal                                   = 2,
    DontHaveItem                                   = 3,
    DontHaveNeededItem                             = 4,
    CantUseItem                                    = 5,
    ItemCantUse                                    = 6,
    NoReason                                       = 7,
    ItemIsBeingUsed                                = 8,
    Burden                                         = 9,
    UnknownReason                                  = 10,
    EQuickUseItemReason_MAX                        = 11

};

// Enum  DFMGameplay.EAmmoBoxCantUseReason
enum class EAmmoBoxCantUseReason : uint8_t
{
    None                                           = 0,
    EAmmoBoxCantUseReason_MAX                      = 1

};

// Enum  DFMGameplay.EAmmoBoxCharacterLimit
enum class EAmmoBoxCharacterLimit : uint8_t
{
    None                                           = 0,
    Team                                           = 1,
    EAmmoBoxCharacterLimit_MAX                     = 2

};

// Enum  DFMGameplay.EAmmoBoxAddAmmoType
enum class EAmmoBoxAddAmmoType : uint8_t
{
    AllGunFull                                     = 0,
    CurrentGun                                     = 1,
    EAmmoBoxAddAmmoType_MAX                        = 2

};

// Enum  DFMGameplay.EAddItemMode
enum class EAddItemMode : uint8_t
{
    Default                                        = 0,
    ResortBeforeAdd                                = 1,
    ResortIfAddFailed                              = 2,
    CombineFirst                                   = 3,
    EAddItemMode_MAX                               = 4

};

// Enum  DFMGameplay.EItemSpaceType
enum class EItemSpaceType : uint8_t
{
    None                                           = 0,
    EItemSpaceType_MAX                             = 1

};

// Enum  DFMGameplay.EKuroshioShellDropMethod
enum class EKuroshioShellDropMethod : uint8_t
{
    RANDOM                                         = 0,
    ORDER                                          = 1,
    EKuroshioShellDropMethod_MAX                   = 2

};

// Enum  DFMGameplay.EPriceSourceMode
enum class EPriceSourceMode : uint8_t
{
    AllSource                                      = 0,
    OnlySelfSource                                 = 1,
    ExcludeSelfSource                              = 2,
    ExcludeTeammateSource                          = 3,
    ExcludeSelfAndTeammateSource                   = 4,
    EPriceSourceMode_MAX                           = 5

};

// Enum  DFMGameplay.EMapClickMode
enum class EMapClickMode : uint8_t
{
    Normal                                         = 0,
    Detector                                       = 1,
    Commander                                      = 2,
    EMapClickMode_MAX                              = 3

};

// Enum  DFMGameplay.EMapRegionHelperType
enum class EMapRegionHelperType : uint8_t
{
    RegionCenter                                   = 0,
    GamePlayRegion                                 = 1,
    EMapRegionHelperType_MAX                       = 2

};

// Enum  DFMGameplay.EMatchSubType
enum class EMatchSubType : uint8_t
{
    SubType_None                                   = 0,
    SubType_SOL                                    = 1,
    SubType_PVE                                    = 2,
    SubType_MAX                                    = 3

};

// Enum  DFMGameplay.EMatchType
enum class EMatchType : uint8_t
{
    MatchType_Normal                               = 1,
    MatchType_Ladder                               = 2,
    MatchType_Room                                 = 3,
    MatchType_OpenWorld                            = 4,
    MatchType_Guide                                = 5,
    MatchType_MAX                                  = 6

};

// Enum  DFMGameplay.ETeamType
enum class ETeamType : uint8_t
{
    TeamType_Single                                = 1,
    TeamType_Double                                = 2,
    TeamType_Three                                 = 3,
    TeamType_Four                                  = 4,
    TeamType_Five                                  = 5,
    TeamType_MAX                                   = 6

};

// Enum  DFMGameplay.EMatchSOLOMode
enum class EMatchSOLOMode : uint8_t
{
    MatchSOLOMode_None                             = 0,
    MatchSOLOMode_PMC                              = 1,
    MatchSOLOMode_SCAV                             = 2,
    MatchSOLOMode_MAX                              = 3

};

// Enum  DFMGameplay.EModeType
enum class EModeType : uint8_t
{
    ModeType_TKV                                   = 1,
    ModeType_MAX                                   = 2

};

// Enum  DFMGameplay.ERedeployStaticPointType
enum class ERedeployStaticPointType : uint8_t
{
    AmmoBox                                        = 0,
    Weapon                                         = 1,
    ERedeployStaticPointType_MAX                   = 2

};

// Enum  DFMGameplay.EMotionActionFrameType
enum class EMotionActionFrameType : uint8_t
{
    AnimFrame                                      = 0,
    TickActionFrame                                = 1,
    RequestSeparatorFrame                          = 2,
    EMotionActionFrameType_MAX                     = 3

};

// Enum  DFMGameplay.EMotionActionMsgType
enum class EMotionActionMsgType : uint8_t
{
    None                                           = 0,
    NewActionFrames                                = 1,
    NewTickActionFrame                             = 2,
    RequestSeparatorFrame                          = 3,
    EMotionActionMsgType_MAX                       = 4

};

// Enum  DFMGameplay.EPlasmolysisType
enum class EPlasmolysisType : uint8_t
{
    MeshCompNull                                   = 0,
    MeshNull                                       = 1,
    Plasmolysis_MeshComp                           = 2,
    Plasmolysis_Mesh                               = 3,
    ChangeParentMeshComp                           = 4,
    Burden                                         = 5,
    EPlasmolysisType_MAX                           = 6

};

// Enum  DFMGameplay.EGuardAnimType
enum class EGuardAnimType : uint8_t
{
    RandomPlay                                     = 0,
    OrderPlay                                      = 1,
    End                                            = 2,
    EGuardAnimType_MAX                             = 3

};

// Enum  DFMGameplay.EGroupPatrolPose
enum class EGroupPatrolPose : uint8_t
{
    WALK                                           = 0,
    STAND                                          = 1,
    SPRINT                                         = 2,
    EGroupPatrolPose_MAX                           = 3

};

// Enum  DFMGameplay.EGuardType
enum class EGuardType : uint8_t
{
    Order                                          = 0,
    ToAndFrom                                      = 1,
    Random                                         = 2,
    End                                            = 3,
    EGuardType_MAX                                 = 4

};

// Enum  DFMGameplay.EPatrolType
enum class EPatrolType : uint8_t
{
    OneWay                                         = 0,
    ToAndFrom                                      = 1,
    Loop                                           = 2,
    End                                            = 3,
    EPatrolType_MAX                                = 4

};

// Enum  DFMGameplay.ESectionType
enum class ESectionType : uint8_t
{
    Order                                          = 0,
    ToAndFrom                                      = 1,
    ESectionType_MAX                               = 2

};

// Enum  DFMGameplay.ENavLinkType
enum class ENavLinkType : uint8_t
{
    None                                           = 0,
    Jump                                           = 1,
    Vault                                          = 2,
    JumpAndVault                                   = 3,
    Zipline                                        = 4,
    ClimbLadder                                    = 5,
    JumpAndZipline                                 = 6,
    ZiplineAndGetOff                               = 7,
    JumpAndParachute                               = 8,
    _Invalid                                       = 9,
    ENavLinkType_MAX                               = 10

};

// Enum  DFMGameplay.ENarrowLanePatchMarkType
enum class ENarrowLanePatchMarkType : uint8_t
{
    Expand                                         = 0,
    ForceMark                                      = 1,
    ENarrowLanePatchMarkType_MAX                   = 2

};

// Enum  DFMGameplay.EStatsVisibilityMode
enum class EStatsVisibilityMode : uint8_t
{
    ViewQuery                                      = 0,
    AIInvisible                                    = 1,
    PlayerInvisible                                = 2,
    SyncAI                                         = 3,
    AISight                                        = 4,
    EStatsVisibilityMode_MAX                       = 5

};

// Enum  DFMGameplay.ESparseOctreeMode
enum class ESparseOctreeMode : uint8_t
{
    VoxelLand                                      = 0,
    VoxelValid                                     = 1,
    VoxelCeil                                      = 2,
    VoxelFloor                                     = 3,
    None                                           = 4,
    ESparseOctreeMode_MAX                          = 5

};

// Enum  DFMGameplay.EOBPlayerStatusType
enum class EOBPlayerStatusType : uint8_t
{
    Alive                                          = 0,
    FirstDeath                                     = 1,
    KnockedDown                                    = 2,
    Died                                           = 3,
    Escaped                                        = 4,
    NotDeadAndCarryBySomeOne                       = 5,
    DeployNotFinished                              = 6,
    UnValid                                        = 7,
    EOBPlayerStatusType_MAX                        = 8

};

// Enum  DFMGameplay.EScreenPercentageStage
enum class EScreenPercentageStage : uint8_t
{
    Low                                            = 0,
    Mid                                            = 1,
    High                                           = 2,
    EScreenPercentageStage_MAX                     = 3

};

// Enum  DFMGameplay.EPickupApproachType
enum class EPickupApproachType : uint8_t
{
    EPickupApproachType_Default                    = 0,
    EPickupApproachType_QuickPickup                = 1,
    EPickupApproachType_Bag                        = 2,
    EPickupApproachType_AutoPickup                 = 3,
    EPickupApproachType_MAX                        = 4

};

// Enum  DFMGameplay.EPrebakedMeshQuality
enum class EPrebakedMeshQuality : uint8_t
{
    SceneDetailLevel0                              = 0,
    SceneDetailLevel1                              = 1,
    SceneDetailLevel2                              = 2,
    SceneDetailLevel3                              = 3,
    SceneDetailLevel4                              = 4,
    EPrebakedMeshQuality_MAX                       = 5

};

// Enum  DFMGameplay.EPvpWeaponAntiVehicleActionType
enum class EPvpWeaponAntiVehicleActionType : uint8_t
{
    Common                                         = 1,
    StingerMissile                                 = 2,
    CommonAndStingerMissile                        = 3,
    EPvpWeaponAntiVehicleActionType_MAX            = 4

};

// Enum  DFMGameplay.ESOLRadarStationElevatorSwitchType
enum class ESOLRadarStationElevatorSwitchType : uint8_t
{
    None                                           = 0,
    Up                                             = 1,
    Down                                           = 2,
    Inside                                         = 3,
    ESOLRadarStationElevatorSwitchType_MAX         = 4

};

// Enum  DFMGameplay.ERagdollTestResult
enum class ERagdollTestResult : uint8_t
{
    Default                                        = 0,
    Error                                          = 1,
    Failed                                         = 2,
    Succeeded                                      = 3,
    ERagdollTestResult_MAX                         = 4

};

// Enum  DFMGameplay.EIrisDataType
enum class EIrisDataType : uint8_t
{
    None                                           = 0,
    Damage                                         = 1,
    DAMAGE_TANK                                    = 2,
    DAMAGE_GRENADE                                 = 3,
    DAMAGE_VEHICLE                                 = 4,
    DAMAGE_AI                                      = 5,
    DAMAGE_TRAIN                                   = 6,
    EIrisDataType_MAX                              = 7

};

// Enum  DFMGameplay.EReplicateVariableType
enum class EReplicateVariableType : uint8_t
{
    ERVT_Int                                       = 0,
    ERVT_Float                                     = 1,
    ERVT_Bool                                      = 2,
    ERVT_Enum                                      = 3,
    ERVT_Name                                      = 4,
    ERVT_Object                                    = 5,
    ERVT_MAX                                       = 6

};

// Enum  DFMGameplay.ERoleLoadType
enum class ERoleLoadType : uint8_t
{
    Normal                                         = 0,
    OverLoad                                       = 1,
    SuperOverLoad                                  = 2,
    ERoleLoadType_MAX                              = 3

};

// Enum  DFMGameplay.ETurnAnimType
enum class ETurnAnimType : uint8_t
{
    TurnAnimType_Alert                             = 0,
    TurnAnimType_Leisurely                         = 1,
    TurnAnimType_Leisure2Fight                     = 2,
    TrunAnimType_Stand2Alert                       = 3,
    TrunAnimType_Stand2Alert_Hit                   = 4,
    TurnAnimType_Stand2Alert_Hear                  = 5,
    TurnAnimType_Alert2Fight                       = 6,
    TurnAnimType_Alert2Fight_Hit                   = 7,
    TurnAnimType_Fight                             = 8,
    TurnAnimType_SprintTurn                        = 9,
    ETurnAnimType_MAX                              = 10

};

// Enum  DFMGameplay.EMotionCorrectionTargetKey
enum class EMotionCorrectionTargetKey : uint8_t
{
    None                                           = 0,
    FirstTarget                                    = 1,
    SecondTarget                                   = 2,
    ThirdTarget                                    = 3,
    MaxTargetSeq                                   = 4,
    PreTarget                                      = 5,
    RealTarget                                     = 6,
    PostTarget                                     = 7,
    FinalTarget                                    = 8,
    EMotionCorrectionTargetKey_MAX                 = 9

};

// Enum  DFMGameplay.ESafeHouseHUDMode
enum class ESafeHouseHUDMode : uint8_t
{
    None                                           = 0,
    SafeHouse3D                                    = 1,
    Range                                          = 2,
    CollectionRoom                                 = 3,
    ESafeHouseHUDMode_MAX                          = 4

};

// Enum  DFMGameplay.ECurrencyChangeReason
enum class ECurrencyChangeReason : uint8_t
{
    Quest                                          = 0,
    RobberFromEnemy                                = 1,
    GetFromTeammate                                = 2,
    ConsumeFromShopStation                         = 3,
    ConsumeFromExitPoint                           = 4,
    GMAdd                                          = 99,
    DontRecord                                     = 100,
    ECurrencyChangeReason_MAX                      = 101

};

// Enum  DFMGameplay.ESOLEvacuationEventState
enum class ESOLEvacuationEventState : uint8_t
{
    None                                           = 0,
    Start                                          = 1,
    Waiting                                        = 2,
    Ready                                          = 3,
    Finish                                         = 4,
    Extra                                          = 5,
    ESOLEvacuationEventState_MAX                   = 6

};

// Enum  DFMGameplay.ESOLEventMapIconType
enum class ESOLEventMapIconType : uint8_t
{
    ShellingArea                                   = 0,
    ESOLEventMapIconType_MAX                       = 1

};

// Enum  DFMGameplay.ESOLMapName
enum class ESOLMapName : uint8_t
{
    Forrest                                        = 1,
    SpaceCenter                                    = 2,
    Dam_Iris                                       = 3,
    MAX                                            = 4

};

// Enum  DFMGameplay.ESOLPlayerAiSpawnType
enum class ESOLPlayerAiSpawnType : uint8_t
{
    Default                                        = 0,
    DramaShe3EasterEggAi                           = 1,
    ESOLPlayerAiSpawnType_MAX                      = 2

};

// Enum  DFMGameplay.EContractReportType
enum class EContractReportType : uint8_t
{
    ENone                                          = 0,
    ESuccess                                       = 1,
    EFailure                                       = 2,
    ECanceled                                      = 3,
    EAccept                                        = 4,
    EDeliver                                       = 5,
    EContractReportType_MAX                        = 6

};

// Enum  DFMGameplay.EVoteStatus
enum class EVoteStatus : uint8_t
{
    ENone                                          = 0,
    EVoted                                         = 1,
    ECanceled                                      = 2,
    EVoteStatus_MAX                                = 3

};

// Enum  DFMGameplay.ERocketSmokeType
enum class ERocketSmokeType : uint8_t
{
    ET_Landing                                     = 0,
    ET_Launch                                      = 1,
    ET_MAX                                         = 2

};

// Enum  DFMGameplay.EAtmosphericEventState
enum class EAtmosphericEventState : uint8_t
{
    Stop                                           = 0,
    Playing                                        = 1,
    EAtmosphericEventState_MAX                     = 2

};

// Enum  DFMGameplay.ESOLTimeLineEventState
enum class ESOLTimeLineEventState : uint8_t
{
    BeforeEvent                                    = 0,
    DuringEvent                                    = 1,
    AfterEvent                                     = 2,
    ESOLTimeLineEventState_MAX                     = 3

};

// Enum  DFMGameplay.ESOLTimeLineEventActorType
enum class ESOLTimeLineEventActorType : uint8_t
{
    Standalone                                     = 0,
    Affiliate                                      = 1,
    ESOLTimeLineEventActorType_MAX                 = 2

};

// Enum  DFMGameplay.ESOLTimelineMajorEventState
enum class ESOLTimelineMajorEventState : uint8_t
{
    WaitBegin                                      = 0,
    Noticed                                        = 1,
    Begin                                          = 2,
    End                                            = 3,
    AllEnd                                         = 4,
    ESOLTimelineMajorEventState_MAX                = 5

};

// Enum  DFMGameplay.ESOLTimelineMajorEventType
enum class ESOLTimelineMajorEventType : uint8_t
{
    ET_Void                                        = 0,
    ET_Shelling                                    = 1,
    ET_Paratrooper                                 = 2,
    ET_MAX                                         = 3

};

// Enum  DFMGameplay.ESOLEventConcomitantFlags
enum class ESOLEventConcomitantFlags : uint8_t
{
    IntroEvent                                     = 1,
    MajorEvent                                     = 2,
    EvacuationEvent                                = 4,
    ESOLEventConcomitantFlags_MAX                  = 5

};

// Enum  DFMGameplay.EBTType
enum class EBTType : uint8_t
{
    FightBehavior                                  = 0,
    LeaveFightBehavior                             = 1,
    AlertBehavior                                  = 2,
    LeisureBehavior                                = 3,
    AbilityReactBehavior                           = 4,
    ShootBehavior                                  = 5,
    DyingBehavior                                  = 6,
    EBTType_MAX                                    = 7

};

// Enum  DFMGameplay.ECharacterDuty
enum class ECharacterDuty : uint8_t
{
    None                                           = 0,
    FightDuty                                      = 1,
    OverKill                                       = 2,
    Camper                                         = 3,
    Screener                                       = 4,
    AtmosphereEnlivener                            = 5,
    MGS                                            = 6,
    TKV_Assult                                     = 7,
    TKV_Normal                                     = 8,
    TKV_Prudent                                    = 9,
    Warm                                           = 10,
    FIghtDutyEnd                                   = 11,
    AlertDuty                                      = 51,
    AlertDutyEnd                                   = 52,
    LeitureDuty                                    = 101,
    LeitureDutyEnd                                 = 102,
    Max                                            = 103

};

// Enum  DFMGameplay.ECharacterDutyType
enum class ECharacterDutyType : uint8_t
{
    None                                           = 0,
    FightDuty                                      = 1,
    AlertDuty                                      = 2,
    LeitureDuty                                    = 3,
    ECharacterDutyType_MAX                         = 4

};

// Enum  DFMGameplay.ESOLPlayerMode
enum class ESOLPlayerMode : uint8_t
{
    ESOLPlayerMode_PMC                             = 0,
    ESOLPlayerMode_SCAV                            = 1,
    ESOLPlayerMode_SCAVRevenge                     = 2,
    ESOLPlayerMode_MAX                             = 3

};

// Enum  DFMGameplay.EStartSpotTemplateType
enum class EStartSpotTemplateType : uint8_t
{
    AllocByTemplate                                = 0,
    AllocByMS20Policy                              = 1,
    AllocByDefaultPolicy                           = 2,
    AllocByTemplateMS23                            = 3,
    AllocByTournamentPolicy                        = 4,
    EStartSpotTemplateType_MAX                     = 5

};

// Enum  DFMGameplay.EStatisticsConditionType
enum class EStatisticsConditionType : uint8_t
{
    None                                           = 0,
    Equipment                                      = 1,
    Weapon                                         = 2,
    GameItem                                       = 3,
    All                                            = 4,
    EStatisticsConditionType_MAX                   = 5

};

// Enum  DFMGameplay.EStatisticsConditionOperator
enum class EStatisticsConditionOperator : uint8_t
{
    And                                            = 0,
    Or                                             = 1,
    EStatisticsConditionOperator_MAX               = 2

};

// Enum  DFMGameplay.EStatisticsEnemyType
enum class EStatisticsEnemyType : uint8_t
{
    EStatisticsEnemyType_All                       = 0,
    EStatisticsEnemyType_AI                        = 1,
    EStatisticsEnemyType_Player                    = 2,
    EStatisticsEnemyType_Vehicle                   = 4,
    EStatisticsEnemyType_MAX                       = 5

};

// Enum  DFMGameplay.EStatisticsBigType
enum class EStatisticsBigType : uint8_t
{
    EStatisticsBigType_Activity                    = 0,
    EStatisticsBigType_Quest                       = 1,
    EStatisticsBigType_MAX                         = 2

};

// Enum  DFMGameplay.EAIBodyPartOffsetLean
enum class EAIBodyPartOffsetLean : uint8_t
{
    Center                                         = 0,
    Left                                           = 1,
    Right                                          = 2,
    Max                                            = 3

};

// Enum  DFMGameplay.EAIBodyPartOffsetPoise
enum class EAIBodyPartOffsetPoise : uint8_t
{
    None                                           = 0,
    Stand                                          = 1,
    Crouch                                         = 2,
    Prone                                          = 3,
    Max                                            = 4

};

// Enum  DFMGameplay.ERCVWayPointType
enum class ERCVWayPointType : uint8_t
{
    NONE                                           = 0,
    PATROL                                         = 1,
    ERCVWayPointType_MAX                           = 2

};

// Enum  DFMGameplay.EWayPointCoverDir
enum class EWayPointCoverDir : uint8_t
{
    Left                                           = 0,
    Right                                          = 1,
    EWayPointCoverDir_MAX                          = 2

};

// Enum  DFMGameplay.EWayPointCoverHeight
enum class EWayPointCoverHeight : uint8_t
{
    StandCover                                     = 0,
    CrouchCover                                    = 1,
    ProneCover                                     = 2,
    EWayPointCoverHeight_MAX                       = 3

};

// Enum  DFMGameplay.EPendantSkinFireEffectState
enum class EPendantSkinFireEffectState : uint8_t
{
    None                                           = 0,
    Increase                                       = 1,
    Wating                                         = 2,
    Decrease                                       = 3,
    EPendantSkinFireEffectState_MAX                = 4

};

// Enum  DFMGameplay.EWeaponTextureSeqAnimTrigger
enum class EWeaponTextureSeqAnimTrigger : uint8_t
{
    None                                           = 0,
    WeaponActive                                   = 1,
    Reload                                         = 2,
    Fire                                           = 3,
    EWeaponTextureSeqAnimTrigger_MAX               = 4

};

// Enum  DFMGameplay.ENameCardMaterialParamOverrideType
enum class ENameCardMaterialParamOverrideType : uint8_t
{
    Texture                                        = 0,
    Float                                          = 1,
    Vector                                         = 2,
    ENameCardMaterialParamOverrideType_MAX         = 3

};

// Enum  DFMGameplay.EOrginNamrCardReplaceType
enum class EOrginNamrCardReplaceType : uint8_t
{
    None                                           = 0,
    Texture                                        = 1,
    Material                                       = 2,
    EOrginNamrCardReplaceType_MAX                  = 3

};

// Enum  DFMGameplay.ETextureAnimSeqPlayConfig
enum class ETextureAnimSeqPlayConfig : uint8_t
{
    None                                           = 0,
    Default                                        = 1,
    Empty                                          = 2,
    ETextureAnimSeqPlayConfig_MAX                  = 3

};

// Enum  DFMGameplay.EWeatherForecastEffectState
enum class EWeatherForecastEffectState : uint8_t
{
    None                                           = 0,
    Default                                        = 1,
    State0                                         = 2,
    State1                                         = 3,
    State2                                         = 4,
    Inspect                                        = 5,
    InSpectEmpty                                   = 6,
    UIEffect                                       = 7,
    EWeatherForecastEffectState_MAX                = 8

};

// Enum  DFMGameSDK.EMetaError
enum class EMetaError : uint8_t
{
    NOT_FOUND                                      = 0,
    DOWNLOAD_FAIL                                  = 1,
    DECRYPT_FAIL                                   = 2,
    RETRY_FAIL                                     = 3,
    EMetaError_MAX                                 = 4

};

// Enum  DFMGameSDK.EConfigState
enum class EConfigState : uint8_t
{
    Success                                        = 0,
    DOWNLOAD_FAILED                                = 1,
    DECRYPT_FAILED                                 = 2,
    LOAD_FILE_FAILED                               = 3,
    EConfigState_MAX                               = 4

};

// Enum  DFMGameSDK.EMapleError
enum class EMapleError : uint32_t
{
    InnerError                                     = 1,
    NetworkException                               = 2,
    Timeout                                        = 3,
    InvalidArgument                                = 4,
    LengthError                                    = 5,
    Unknown                                        = 6,
    Empty                                          = 7,
    NotInitialized                                 = 9,
    NotSupported                                   = 10,
    NotInstalled                                   = 11,
    SystemError                                    = 12,
    NoPermission                                   = 13,
    InvalidGameId                                  = 14,
    InvalidToken                                   = 100,
    NoToken                                        = 101,
    AccessTokenExpired                             = 102,
    RefreshTokenExpired                            = 103,
    PayTokenExpired                                = 104,
    LoginFailed                                    = 105,
    UserCancel                                     = 106,
    UserDenied                                     = 107,
    Checking                                       = 108,
    NeedRealNameAuth                               = 109,
    NetworkError                                   = 200,
    SendError                                      = 207,
    RecvError                                      = 208,
    LeafNotFound                                   = 500,
    PlatformNotFound                               = 501,
    InvalidErrorCode                               = 404,
    Success                                        = 600,
    MapleNotInit                                   = 601,
    FetchDataOutOfTime                             = 602,
    HandleDataFailed                               = 603,
    EMapleError_MAX                                = 604

};

// Enum  DFMGameSDK.EMatchFlowStep
enum class EMatchFlowStep : uint32_t
{
    Start                                          = 10001,
    PrepareJoinMatch                               = 10002,
    MatchVerify                                    = 10003,
    PlayerJoinMatch                                = 10004,
    DsLink                                         = 10005,
    Success                                        = 10006,
    DSCore                                         = 99999,
    EMatchFlowStep_MAX                             = 100000

};

// Enum  DFMGameSDK.DFMGameDataKeyForControlState
enum class DFMGameDataKeyForControlState : uint32_t
{
    FiringStart                                    = 900,
    FiringEnd                                      = 901,
    BeginZoom3                                     = 301,
    EndZoom3                                       = 302,
    BeginZoom6                                     = 401,
    EndZoom6                                       = 402,
    BeginZoom7                                     = 501,
    EndZoom7                                       = 502,
    BeginHurt                                      = 910,
    EndHurt                                        = 911,
    BeginLooting                                   = 921,
    EndLooting                                     = 922,
    OpenBag                                        = 931,
    CloseBag                                       = 932,
    BeginBlueprintHolder                           = 721,
    EndBlueprintHolder                             = 722,
    BeginSeamLessEnterGame                         = 101,
    EndSeamLessEnterGame                           = 102,
    BeginRedeploy                                  = 601,
    EndRedeploy                                    = 602,
    BeginGetOnVehicle                              = 821,
    EndGetOnVehicle                                = 822,
    DFMGameDataKeyForControlState_MAX              = 933

};

// Enum  DFMGameSDK.DFMGameDataKeyForStoryState
enum class DFMGameDataKeyForStoryState : uint8_t
{
    Launch                                         = 1,
    VersionUpdate                                  = 2,
    Loading                                        = 3,
    Lobby                                          = 4,
    CommonEnterGame                                = 5,
    CommonGame                                     = 7,
    POI                                            = 106,
    BattleField                                    = 7,
    SOLExit                                        = 110,
    Settlement                                     = 111,
    DFMGameDataKeyForStoryState_MAX                = 112

};

// Enum  DFMGameSDK.EGVoiceButtonType
enum class EGVoiceButtonType : uint8_t
{
    GVoiceButtonType_Close                         = 0,
    GVoiceButtonType_ClosePress                    = 1,
    GVoiceButtonType_MossPress                     = 11,
    GVoiceButtonType_Team                          = 30,
    GVoiceButtonType_TeamPress                     = 31,
    GVoiceButtonType_All                           = 50,
    GVoiceButtonType_AllPress                      = 51,
    GVoiceButtonType_Camp                          = 70,
    GVoiceButtonType_CampPress                     = 71,
    GVoiceButtonType_MAX                           = 72

};

// Enum  DFMGameSDK.EGVoiceRoomChannel
enum class EGVoiceRoomChannel : uint8_t
{
    GVoiceRoomChannel_None                         = 0,
    GVoiceRoomChannel_Moss                         = 1,
    GVoiceRoomChannel_Team                         = 3,
    GVoiceRoomChannel_All                          = 5,
    GVoiceRoomChannel_Camp                         = 7,
    GVoiceRoomChannel_MAX                          = 8

};

// Enum  DFMGameSDK.EDolphinVersionUpdateStep
enum class EDolphinVersionUpdateStep : uint8_t
{
    None                                           = 0,
    Begin                                          = 1,
    CheckClearFiles                                = 2,
    App                                            = 3,
    Extract                                        = 4,
    Resource                                       = 5,
    CheckResource                                  = 6,
    Finish                                         = 7,
    EDolphinVersionUpdateStep_MAX                  = 8

};

// Enum  DFMGameSDK.EGameSDKInitRuleType
enum class EGameSDKInitRuleType : uint8_t
{
    All                                            = 0,
    Disable                                        = 1,
    RegionList                                     = 2,
    XIDSuffixRange                                 = 3,
    EGameSDKInitRuleType_MAX                       = 4

};

// Enum  DFMGameSDK.EGameSDKType
enum class EGameSDKType : uint8_t
{
    None                                           = 0,
    Perfsight                                      = 1,
    Crashsight                                     = 2,
    EGameSDKType_MAX                               = 3

};

// Enum  DFMGameSDK.EQRencodeMode
enum class EQRencodeMode : uint8_t
{
    QR_MODE_NUL                                    = 0,
    QR_MODE_NUM                                    = 1,
    QR_MODE_AN                                     = 2,
    QR_MODE                                        = 3,
    QR_MODE_KANJI                                  = 4,
    QR_MODE_STRUCTURE                              = 5,
    QR_MODE_ECI                                    = 6,
    QR_MODE_FNC1FIRST                              = 7,
    QR_MODE_FNC1SECOND                             = 8,
    QR_MODE_MAX                                    = 9

};

// Enum  DFMGameSDK.EQRecLevel
enum class EQRecLevel : uint8_t
{
    QR_ECLEVEL_L                                   = 0,
    QR_ECLEVEL_M                                   = 1,
    QR_ECLEVEL_Q                                   = 2,
    QR_ECLEVEL_H                                   = 3,
    QR_ECLEVEL_MAX                                 = 4

};

// Enum  DFMGlobalDefines.EAILabBodyState
enum class EAILabBodyState : uint8_t
{
    EBodyState_Stand                               = 0,
    EBodyState_Crouch                              = 1,
    EBodyState_Prone                               = 2,
    EBodyState_StandLeanLeft                       = 3,
    EBodyState_StandLeanRight                      = 4,
    EBodyState_CrouchLeanLeft                      = 5,
    EBodyState_CrouchLeanRight                     = 6,
    EBodyState_MAX                                 = 7

};

// Enum  DFMGlobalDefines.ECreateModelType
enum class ECreateModelType : uint8_t
{
    EMod_MatchSecs                                 = 0,
    EMod_KillBot                                   = 1,
    EMod_KillPlayer                                = 2,
    EMod_KillAILab                                 = 3,
    EMod_HitRate                                   = 4,
    EMode_ExitDist                                 = 5,
    EMode_TeamNum                                  = 6,
    ECreateModelType_MAX                           = 7

};

// Enum  DFMGlobalDefines.EAILabDiffcultType
enum class EAILabDiffcultType : uint8_t
{
    EDiff_Hp                                       = 1,
    EDiff_KillPlayer                               = 2,
    EDiff_KillHadson                               = 3,
    EDiff_Asset                                    = 4,
    EDiff_MAX                                      = 5

};

// Enum  DFMGlobalDefines.EDropConditionType
enum class EDropConditionType : uint8_t
{
    ECon_Normal                                    = 0,
    ECon_DeadPlayer                                = 1,
    ECon_GameTime                                  = 2,
    ECon_KillerLeftHp                              = 3,
    ECon_DeadPlayerRate                            = 4,
    ECon_KillerBloody                              = 5,
    ECon_KillerFracture                            = 6,
    ECon_MAX                                       = 7

};

// Enum  DFMGlobalDefines.EBattlePassItemTransformType
enum class EBattlePassItemTransformType : uint8_t
{
    None                                           = 0,
    TransformSelf                                  = 1,
    EBattlePassItemTransformType_MAX               = 2

};

// Enum  DFMGlobalDefines.EBreakthroughTextType
enum class EBreakthroughTextType : uint8_t
{
    None                                           = 0,
    CustomSameCampTextType                         = 1,
    CustomEnemyCampTextType                        = 2,
    CustomNeutralCampTextType                      = 3,
    EBreakthroughTextType_MAX                      = 4

};

// Enum  DFMGlobalDefines.EBreakthroughUIIconType
enum class EBreakthroughUIIconType : uint8_t
{
    None                                           = 0,
    TransMarker_Helicopter                         = 1,
    TransMarker_Elevator                           = 2,
    TransMarker_Zipline                            = 3,
    TransMarker_SceneWeapon                        = 4,
    MarkerIcon_Offence                             = 5,
    MarkerIcon_Defence                             = 6,
    Icon_Hawk                                      = 7,
    Icon_GTI                                       = 8,
    Icon_Hawk_Topbar                               = 9,
    Icon_GTI_Topbar                                = 10,
    Icon_Commander                                 = 11,
    Icon_TeamLeader                                = 12,
    HighThreatVehicle                              = 13,
    HighValueAnchor                                = 14,
    FastDeploy                                     = 15,
    TeamA                                          = 16,
    TeamB                                          = 17,
    TeamC                                          = 18,
    TeamD                                          = 19,
    TeamE                                          = 20,
    TeamF                                          = 21,
    TeamG                                          = 22,
    TeamH                                          = 23,
    TeamI                                          = 24,
    PlayerLocationMarkerSmallIcon                  = 25,
    PlayerLocationMarkerBigIcon                    = 26,
    PlayerLocationMarkerSmallIcon_Commander        = 27,
    PlayerLocationMarkerBigIcon_Commander          = 28,
    TeamA_SameTeam                                 = 29,
    TeamB_SameTeam                                 = 30,
    TeamC_SameTeam                                 = 31,
    TeamD_SameTeam                                 = 32,
    TeamE_SameTeam                                 = 33,
    TeamF_SameTeam                                 = 34,
    TeamG_SameTeam                                 = 35,
    TeamH_SameTeam                                 = 36,
    TeamI_SameTeam                                 = 37,
    TeamA_Vehicle                                  = 38,
    TeamB_Vehicle                                  = 39,
    TeamC_Vehicle                                  = 40,
    TeamD_Vehicle                                  = 41,
    TeamE_Vehicle                                  = 42,
    TeamF_Vehicle                                  = 43,
    TeamG_Vehicle                                  = 44,
    TeamH_Vehicle                                  = 45,
    TeamI_Vehicle                                  = 46,
    Icon_Commander_Vehicle                         = 47,
    EBreakthroughUIIconType_MAX                    = 48

};

// Enum  DFMGlobalDefines.EBreakthroughUIColorType
enum class EBreakthroughUIColorType : uint8_t
{
    None                                           = 0,
    CustomSameCampColor                            = 1,
    CustomEnemyCampColor                           = 2,
    CustomNeutralCampColor                         = 3,
    CustomSameTeamColor                            = 4,
    RippleSameCampColor                            = 5,
    RippleEnemyCampColor                           = 6,
    RippleNeutralCampColor                         = 7,
    TopBarFriendlyColor                            = 8,
    TopBarEnemyColor                               = 9,
    Color_Commander                                = 10,
    Color_TeamLeader                               = 11,
    Color_Teammate                                 = 12,
    CustomSelfColor                                = 13,
    EBreakthroughUIColorType_MAX                   = 14

};

// Enum  DFMGlobalDefines.ECarrayItemsType
enum class ECarrayItemsType : uint8_t
{
    None                                           = 0,
    Health                                         = 1,
    Armor                                          = 2,
    Telescope                                      = 3,
    ECarrayItemsType_MAX                           = 4

};

// Enum  DFMGlobalDefines.EHeroShapeShiftType
enum class EHeroShapeShiftType : uint8_t
{
    Zero                                           = 0,
    One                                            = 1,
    Two                                            = 2,
    MpGTIZero                                      = 20,
    MpGTIOne                                       = 21,
    MpGTITwo                                       = 22,
    MpHavvkZero                                    = 40,
    MpHavvkOne                                     = 41,
    MpHavvkTwo                                     = 42,
    BodyOne                                        = 101,
    BodyTwo                                        = 102,
    BodyEnd                                        = 110,
    Seamless1P                                     = 200,
    Prisoner                                       = 201,
    Seamless3P                                     = 202,
    Pilot                                          = 203,
    EHeroShapeShiftType_MAX                        = 204

};

// Enum  DFMGlobalDefines.EHeroItemFashionQuality
enum class EHeroItemFashionQuality : uint8_t
{
    None                                           = 0,
    S                                              = 1,
    A                                              = 2,
    B                                              = 3,
    C                                              = 4,
    D                                              = 5,
    EHeroItemFashionQuality_MAX                    = 6

};

// Enum  DFMGlobalDefines.ECharacterTag
enum class ECharacterTag : uint8_t
{
    Unknown                                        = 0,
    Hero                                           = 1,
    AI                                             = 2,
    NPC                                            = 3,
    ECharacterTag_MAX                              = 4

};

// Enum  DFMGlobalDefines.ECharacterAvatarSex
enum class ECharacterAvatarSex : uint8_t
{
    Male                                           = 0,
    Female                                         = 1,
    ECharacterAvatarSex_MAX                        = 2

};

// Enum  DFMGlobalDefines.EMergablePart
enum class EMergablePart : uint8_t
{
    Upper                                          = 0,
    Lower                                          = 1,
    Head                                           = 2,
    BreastPlate                                    = 3,
    ChestHang                                      = 4,
    Bag                                            = 5,
    Helmet                                         = 6,
    ExtraPart                                      = 7,
    Watch                                          = 8,
    EMergablePart_MAX                              = 9

};

// Enum  DFMGlobalDefines.ECharacterAvatarExtraTag
enum class ECharacterAvatarExtraTag : uint8_t
{
    ExtraItem                                      = 0,
    SkillItem                                      = 1,
    ECharacterAvatarExtraTag_MAX                   = 2

};

// Enum  DFMGlobalDefines.ECharacterAvatarPartConfig
enum class ECharacterAvatarPartConfig : uint8_t
{
    Upper                                          = 2,
    Hair                                           = 0,
    HairAdaptive                                   = 5,
    Head                                           = 1,
    Lower                                          = 3,
    ECharacterAvatarPartConfig_MAX                 = 6

};

// Enum  DFMGlobalDefines.ECharacterAvatarPart
enum class ECharacterAvatarPart : uint8_t
{
    Hair                                           = 0,
    Head                                           = 1,
    Upper                                          = 2,
    Lower                                          = 3,
    Extra                                          = 4,
    HairAdaptive                                   = 5,
    MasterMesh                                     = 6,
    Equipment                                      = 7,
    Watch                                          = 8,
    None                                           = 255,
    ECharacterAvatarPart_MAX                       = 256

};

// Enum  DFMGlobalDefines.ELoadLevelOption
enum class ELoadLevelOption : uint8_t
{
    None                                           = 0,
    Single                                         = 1,
    Multiple                                       = 2,
    ELoadLevelOption_MAX                           = 3

};

// Enum  DFMGlobalDefines.EShowLevelConfig
enum class EShowLevelConfig : uint8_t
{
    None                                           = 0,
    DefaultLoad                                    = 1,
    VisibilityAfterLoaded                          = 2,
    EShowLevelConfig_MAX                           = 3

};

// Enum  DFMGlobalDefines.EMeshType
enum class EMeshType : uint8_t
{
    None                                           = 0,
    FPP                                            = 1,
    TPP                                            = 2,
    UI                                             = 3,
    EMeshType_MAX                                  = 4

};

// Enum  DFMGlobalDefines.ECustomTransformRule
enum class ECustomTransformRule : uint8_t
{
    None                                           = 0,
    Absolute                                       = 1,
    Relative                                       = 2,
    ECustomTransformRule_MAX                       = 3

};

// Enum  DFMGlobalDefines.EVoiceType
enum class EVoiceType : uint8_t
{
    None                                           = 0,
    Lines                                          = 1,
    KillaLines                                     = 2,
    EVoiceType_MAX                                 = 3

};

// Enum  DFMGlobalDefines.ECharacterFeatureLODAvatarPart
enum class ECharacterFeatureLODAvatarPart : uint8_t
{
    None                                           = 0,
    Trunk                                          = 1,
    Hair                                           = 2,
    Equipment                                      = 3,
    ExtraItem                                      = 4,
    ExtraSkillItem                                 = 5,
    Watch                                          = 6,
    ECharacterFeatureLODAvatarPart_MAX             = 7

};

// Enum  DFMGlobalDefines.ECharacterSpeakType
enum class ECharacterSpeakType : uint8_t
{
    NONE                                           = 0,
    USUAL_NO_THREAT                                = 1,
    RocketMouse_Singing                            = 20,
    ALERT_BEGIN                                    = 32,
    ALERT_HEARD_SMALL_SOUND                        = 33,
    ALERT_HEARD_SOUND                              = 34,
    ALERT_Frightened                               = 35,
    ALERT_HIDING                                   = 36,
    ALERT_SEARCHING                                = 37,
    ALERT_BACK                                     = 38,
    BATTLE_BEGIN                                   = 96,
    BATTLE_START_FIGHT                             = 97,
    BATTLE_HIDING                                  = 98,
    BATTLE_COME_CLOSE                              = 99,
    BATTLE_AIRHIT                                  = 100,
    BATTLE_SEE_ENEMY                               = 101,
    BATTLE_LOSE_ENEMY_SIGHT                        = 102,
    BATTLE_IN_COVER                                = 103,
    BATTLE_HIT_ENEMY                               = 104,
    BATTLE_KILL_ENEMY                              = 105,
    COMING_GRENADE                                 = 106,
    BATTLE_THROW_GRENADE                           = 107,
    BATTLE_ChangeClip                              = 108,
    BATTLE_END_FIGHT                               = 109,
    STATE_BEGIN                                    = 160,
    STATE_BLEEDING                                 = 161,
    STATE_GOT_HURTED_HEAVY                         = 162,
    STATE_HIT_BONE_BROKEN                          = 163,
    STATE_LEG_BONE_BROKEN                          = 164,
    STATE_ARM_BONE_BROKEN                          = 165,
    STATE_DEATH                                    = 166,
    STATE_PAIN                                     = 167,
    STATE_EATFULL                                  = 168,
    STATE_SPICY                                    = 169,
    STATE_DRUNK                                    = 170,
    BEATTACK_BEGIN                                 = 180,
    BEATTACK_HEAD                                  = 181,
    BEATTACK_BODY                                  = 182,
    BEATTACK_BEHIT                                 = 183,
    FPP_ONLY_BEGIN                                 = 192,
    FPP_GOT_HIT                                    = 193,
    BOSS_ONLY_BEGIN                                = 224,
    BOSS_Reis_ROAR                                 = 225,
    BOSS_Maurice_Flame                             = 226,
    BOSS_Maurice_Smoke                             = 227,
    BOSS_Maurice_Bomb                              = 228,
    BOSS_Maurice_Pivot                             = 229,
    BOSS_Maurice_Roll                              = 230,
    BOSS_Maurice_Slide                             = 231,
    BOSS_Romytheus_StartWalk                       = 232,
    BOSS_Romytheus_EndWalk                         = 233,
    BOSS_Romytheus_PlayerLeave                     = 234,
    BOSS_Romytheus_Appear                          = 235,
    BOSS_Romytheus_Guard                           = 236,
    BOSS_Romytheus_FriendlyFire                    = 237,
    BOSS_Speak_01                                  = 238,
    BOSS_Speak_02                                  = 239,
    BOSS_Speak_03                                  = 240,
    BOSS_Speak_04                                  = 241,
    BOSS_Speak_05                                  = 242,
    BOSS_Speak_06                                  = 243,
    BOSS_Speak_07                                  = 244,
    BOSS_Speak_08                                  = 245,
    BOSS_Speak_09                                  = 246,
    BOSS_Speak                                     = 247,
    MAX                                            = 248

};

// Enum  DFMGlobalDefines.EMeritObtainType
enum class EMeritObtainType : uint8_t
{
    HitTarget                                      = 0,
    HeadShot                                       = 1,
    Assist                                         = 2,
    BasicKill                                      = 3,
    ContinueKillBegin                              = 100,
    ContinueKillTwo                                = 101,
    ContinueKillEnd                                = 200,
    LongDistanceKill                               = 201,
    ShortDistanceKill                              = 202,
    EMeritObtainType_MAX                           = 203

};

// Enum  DFMGlobalDefines.EBeHitedType
enum class EBeHitedType : uint8_t
{
    None                                           = 0,
    HitBody                                        = 1,
    HitBodyWithArmor                               = 2,
    HitBodyWithArmorAndDamageHp                    = 3,
    HitHeadWithoutHelmet                           = 4,
    HitHelmet                                      = 5,
    HitHelmetAndDamageHp                           = 6,
    HitHelmetBroken                                = 7,
    HitArmorBroken                                 = 8,
    HitLowHealth                                   = 9,
    HitBulletWhoosh                                = 10,
    HitBulletHitAround                             = 11,
    HitSuppressByBullet                            = 12,
    KnockDownByHitBody                             = 13,
    KnockDownByHitHead                             = 14,
    KilledByHitBody                                = 15,
    KilledByHitHead                                = 16,
    Shocked                                        = 17,
    HitVehicle                                     = 18,
    KillVehicle                                    = 19,
    BreakthroughRankSkillHit                       = 20,
    HitShield                                      = 21,
    HitHeavyArmor                                  = 22,
    Stagger                                        = 23,
    HitADS                                         = 24,
    HitSkillActor                                  = 25,
    BreakShieldGlass                               = 26,
    CounterProjectile                              = 27,
    Invincible                                     = 28,
    EBeHitedType_MAX                               = 29

};

// Enum  DFMGlobalDefines.EItemHealthBuffTriggerType
enum class EItemHealthBuffTriggerType : uint8_t
{
    OnFirstPeriod                                  = 0,
    Period                                         = 1,
    OnFinalPeriod                                  = 2,
    EItemHealthBuffTriggerType_MAX                 = 3

};

// Enum  DFMGlobalDefines.EItemHealthTriggerType
enum class EItemHealthTriggerType : uint8_t
{
    OnFinish                                       = 0,
    Period                                         = 1,
    EItemHealthTriggerType_MAX                     = 2

};

// Enum  DFMGlobalDefines.EItemHealthSubType
enum class EItemHealthSubType : uint8_t
{
    None                                           = 0,
    Painkiller                                     = 1,
    OperationKits                                  = 2,
    HP                                             = 3,
    BodyArmor                                      = 4,
    HelmetArmor                                    = 5,
    Needle                                         = 6,
    FireCracker                                    = 7,
    EItemHealthSubType_MAX                         = 8

};

// Enum  DFMGlobalDefines.EItemHealthRecommendType
enum class EItemHealthRecommendType : uint8_t
{
    None                                           = 0,
    HealthRange01                                  = 1,
    HealthRange02                                  = 2,
    HealthRange03                                  = 3,
    Low_Health                                     = 4,
    HealthInjured                                  = 5,
    Low_Armor                                      = 6,
    Low_HelmetArmor                                = 7,
    Part_Injured                                   = 8,
    Bleeding                                       = 9,
    Part_Injured_NoAlgesiaBuff                     = 10,
    EItemHealthRecommendType_MAX                   = 11

};

// Enum  DFMGlobalDefines.EItemUseActionLimit
enum class EItemUseActionLimit : uint8_t
{
    None                                           = 0,
    NoCrouch                                       = 1,
    NoProne                                        = 2,
    EItemUseActionLimit_MAX                        = 3

};

// Enum  DFMGlobalDefines.EItemUseFunction
enum class EItemUseFunction : uint8_t
{
    None                                           = 0,
    Normal                                         = 1,
    HoldAndUse                                     = 2,
    Skill                                          = 3,
    EItemUseFunction_MAX                           = 4

};

// Enum  DFMGlobalDefines.EBuffTarget
enum class EBuffTarget : uint8_t
{
    ENone                                          = 0,
    ECharacter                                     = 1,
    EWeapon                                        = 2,
    ECharacterAndWeapon                            = 3,
    EBuffTarget_MAX                                = 4

};

// Enum  DFMGlobalDefines.EItemSlotType
enum class EItemSlotType : uint8_t
{
    None                                           = 0,
    Minimal                                        = 1,
    Small                                          = 2,
    Medium                                         = 3,
    Large                                          = 4,
    EItemSlotType_MAX                              = 5

};

// Enum  DFMGlobalDefines.EPropItemType
enum class EPropItemType : uint8_t
{
    Sub_Prop_Default                               = 0,
    Sub_Prop_Energy                                = 1,
    Sub_Prop_Health                                = 2,
    Sub_Prop_Buff                                  = 3,
    Sub_Prop_Gasoline                              = 4,
    Sub_Prop_PickupConsume                         = 5,
    Sub_Prop_MAX                                   = 6

};

// Enum  DFMGlobalDefines.EApparelItemType
enum class EApparelItemType : uint8_t
{
    None                                           = 0,
    AS_Apparel                                     = 1,
    AS_Hat                                         = 2,
    AS_Glasses                                     = 3,
    AS_UpShirt                                     = 4,
    AS_Pants                                       = 5,
    AS_Shoes                                       = 6,
    AS_Ghillie                                     = 7,
    AS_Head                                        = 8,
    AS_FullBody                                    = 9,
    MAX                                            = 10

};

// Enum  DFMGlobalDefines.EItemUserType
enum class EItemUserType : uint8_t
{
    Item_Default                                   = 0,
    Item_Avatar                                    = 1,
    Item_Weapon                                    = 2,
    Item_Adapter                                   = 3,
    Item_Ammo                                      = 4,
    Item_Equip                                     = 5,
    Item_Props                                     = 6,
    Item_Apparel                                   = 7,
    Item_Ability                                   = 8,
    Item_MAX                                       = 9

};

// Enum  DFMGlobalDefines.EEquipmentSubType
enum class EEquipmentSubType : uint8_t
{
    EquipmentSubType_None                          = 0,
    EquipmentSubType_Helmet                        = 1,
    EquipmentSubType_HeadSet                       = 2,
    EquipmentSubType_FaceMask                      = 3,
    EquipmentSubType_BreastPlate                   = 5,
    EquipmentSubType_Glasses                       = 6,
    EquipmentSubType_ChestHanging                  = 7,
    EquipmentSubType_Bag                           = 8,
    EquipmentSubType_MAX                           = 9

};

// Enum  DFMGlobalDefines.EAdaptationCharacterType
enum class EAdaptationCharacterType : uint8_t
{
    EMale                                          = 0,
    EFemale                                        = 1,
    EAdaptationCharacterType_MAX                   = 2

};

// Enum  DFMGlobalDefines.EHelmetSubType
enum class EHelmetSubType : uint8_t
{
    EHelmetSubType_Normal                          = 0,
    EHelmetSubType_MAX                             = 1

};

// Enum  DFMGlobalDefines.EBreastPlateSubType
enum class EBreastPlateSubType : uint8_t
{
    EBreastPlateSubType_Normal                     = 0,
    EBreastPlateSubType_MAX                        = 1

};

// Enum  DFMGlobalDefines.EChestHangingSubType
enum class EChestHangingSubType : uint8_t
{
    EChestHangingSubType_Normal                    = 0,
    EChestHangingSubType_MAX                       = 1

};

// Enum  DFMGlobalDefines.EBagSubType
enum class EBagSubType : uint8_t
{
    EBagSubType_BackPack                           = 0,
    EBagSubType_MessengerBag                       = 1,
    EBagSubType_MAX                                = 2

};

// Enum  DFMGlobalDefines.ECurrencyBindType
enum class ECurrencyBindType : uint8_t
{
    None                                           = 0,
    Unbind                                         = 1,
    Bind                                           = 2,
    BindAndUnbind                                  = 3,
    ECurrencyBindType_MAX                          = 4

};

// Enum  DFMGlobalDefines.ECurrencyType
enum class ECurrencyType : uint8_t
{
    None                                           = 0,
    Timeless                                       = 1,
    Play                                           = 2,
    Temporary                                      = 3,
    Fake                                           = 4,
    ECurrencyType_MAX                              = 5

};

// Enum  DFMGlobalDefines.ECustomerServicesDisplayType
enum class ECustomerServicesDisplayType : uint8_t
{
    Invalid                                        = 0,
    Inside_Webview                                 = 1,
    Outside_Webview                                = 2,
    ECustomerServicesDisplayType_MAX               = 3

};

// Enum  DFMGlobalDefines.ECustomerServicesPlatformType
enum class ECustomerServicesPlatformType : uint8_t
{
    Invalid                                        = 0,
    Windows                                        = 1,
    Android                                        = 2,
    iOS                                            = 4,
    OpenHarmony                                    = 5,
    XSX                                            = 6,
    PS5                                            = 8,
    ECustomerServicesPlatformType_MAX              = 9

};

// Enum  DFMGlobalDefines.ECustomerServicesEntranceType
enum class ECustomerServicesEntranceType : uint8_t
{
    InvalidPage                                    = 0,
    LoginPage                                      = 1,
    MainPage                                       = 2,
    ActivityPage                                   = 3,
    RechargePage                                   = 4,
    SettingPage                                    = 5,
    ESCPage                                        = 6,
    SafePage_Mobile                                = 7,
    SafePage_PC                                    = 8,
    SafePage_Global_Mobile                         = 9,
    SafePage_Global_PC                             = 9,
    ECustomerServicesEntranceType_MAX              = 10

};

// Enum  DFMGlobalDefines.EDFLogCategory
enum class EDFLogCategory : uint8_t
{
    DFLogAIEditor                                  = 0,
    EDFLogCategory_MAX                             = 1

};

// Enum  DFMGlobalDefines.EMediaPlayMode
enum class EMediaPlayMode : uint8_t
{
    ONLY_ONE                                       = 0,
    MEDIALIST                                      = 1,
    EMediaPlayMode_MAX                             = 2

};

// Enum  DFMGlobalDefines.ERotateAndScaleType
enum class ERotateAndScaleType : uint8_t
{
    AlwaysDontRotate                               = 0,
    Defalut                                        = 1,
    AlwaysRotate                                   = 2,
    ERotateAndScaleType_MAX                        = 3

};

// Enum  DFMGlobalDefines.EDFMImageDebugType
enum class EDFMImageDebugType : uint8_t
{
    ActionProcess                                  = 0,
    ImageSize                                      = 1,
    Tile                                           = 2,
    Merge                                          = 3,
    EDFMImageDebugType_MAX                         = 4

};

// Enum  DFMGlobalDefines.EPermissionPlatformType
enum class EPermissionPlatformType : uint8_t
{
    Invalid                                        = 0,
    Android                                        = 1,
    iOS                                            = 2,
    OpenHarmony                                    = 4,
    EPermissionPlatformType_MAX                    = 5

};

// Enum  DFMGlobalDefines.EDropItemType
enum class EDropItemType : uint8_t
{
    DropHelmet                                     = 0,
    DropArmor                                      = 1,
    DropWeapon                                     = 2,
    DropConsume                                    = 3,
    EDropItemType_MAX                              = 4

};

// Enum  DFMGlobalDefines.EDropSource
enum class EDropSource : uint8_t
{
    LootPoint                                      = 0,
    AI_Drop                                        = 1,
    EDropSource_MAX                                = 2

};

// Enum  DFMGlobalDefines.EEquipmentCheckSlotType
enum class EEquipmentCheckSlotType : uint8_t
{
    None                                           = 0,
    EAttrBuffType_Bleeding                         = 1,
    EAttrBuffType_Fracture                         = 2,
    EAttrBuffType_Pain                             = 3,
    Helmet                                         = 101,
    BreastPlate                                    = 105,
    Bag                                            = 108,
    MainWeaponLeft                                 = 111,
    SecondaryWeapon                                = 113,
    Medicine                                       = 122,
    EEquipmentCheckSlotType_MAX                    = 123

};

// Enum  DFMGlobalDefines.EEquipmentPanelType
enum class EEquipmentPanelType : uint8_t
{
    MainCheckBoxPanel                              = 0,
    RecommendSwitchPanel                           = 1,
    ReservedSpaceSwitchPanel                       = 2,
    RemainItemsSWitchPanel                         = 3,
    DeBufCheckBoxPanel                             = 4,
    HelmetSliderPanel                              = 5,
    BreastPlateSliderPanel                         = 6,
    BagSliderPanel                                 = 7,
    MedicineSliderPanel                            = 8,
    EEquipmentPanelType_MAX                        = 9

};

// Enum  DFMGlobalDefines.EFashionWearPosition
enum class EFashionWearPosition : uint8_t
{
    None                                           = 0,
    Head                                           = 1,
    Face                                           = 2,
    Eyes                                           = 3,
    Ears                                           = 4,
    Neck                                           = 5,
    Shoulders                                      = 6,
    Upper                                          = 7,
    Lower                                          = 8,
    Bag                                            = 9,
    BagBadge                                       = 10,
    BagPendant                                     = 11,
    EFashionWearPosition_MAX                       = 12

};

// Enum  DFMGlobalDefines.EDamageShowType
enum class EDamageShowType : uint8_t
{
    ENone                                          = 0,
    EBluntDamge                                    = 1,
    ENormalDamage                                  = 2,
    ECritDamage                                    = 3,
    EDamageShowType_MAX                            = 4

};

// Enum  DFMGlobalDefines.EGamePlayerNumModeType
enum class EGamePlayerNumModeType : uint8_t
{
    Unknown                                        = 0,
    Single                                         = 1,
    Double                                         = 2,
    Triple                                         = 3,
    Quadruple                                      = 4,
    EGamePlayerNumModeType_MAX                     = 5

};

// Enum  DFMGlobalDefines.EGameSubModeType
enum class EGameSubModeType : uint8_t
{
    Unknown                                        = 0,
    SOL_PMC                                        = 1,
    SOL_SCAV                                       = 2,
    SOL_SOL                                        = 3,
    PVE_Easy                                       = 10,
    PVE_Normal                                     = 11,
    PVE_Diffcult                                   = 12,
    PVE_RealWar                                    = 13,
    BW_LEVEL1                                      = 20,
    BW_LEVEL2                                      = 21,
    BW_LEVEL3                                      = 22,
    BW_LEVEL4                                      = 23,
    TDM_LEVEL1                                     = 31,
    TDM_LEVEL2                                     = 32,
    TDM_LEVEL3                                     = 33,
    TDM_LEVEL4                                     = 34,
    TDM_LEVEL5                                     = 35,
    EGameSubModeType_MAX                           = 36

};

// Enum  DFMGlobalDefines.EGameMainModeType
enum class EGameMainModeType : uint8_t
{
    Unknown                                        = 0,
    SOL                                            = 1,
    PVE                                            = 2,
    BigWorld                                       = 3,
    TDM                                            = 4,
    EGameMainModeType_MAX                          = 5

};

// Enum  DFMGlobalDefines.EGuidePopWindowShowType
enum class EGuidePopWindowShowType : uint8_t
{
    ProgressBar                                    = 0,
    EGuidePopWindowShowType_MAX                    = 1

};

// Enum  DFMGlobalDefines.EGuidePopWindowItemExContentType
enum class EGuidePopWindowItemExContentType : uint8_t
{
    Image                                          = 0,
    ImageAndPlayBtn                                = 1,
    Video                                          = 10,
    SubWBP                                         = 11,
    FullScreenVideo                                = 12,
    EGuidePopWindowItemExContentType_MAX           = 13

};

// Enum  DFMGlobalDefines.EGuideClickConfigOption
enum class EGuideClickConfigOption : uint8_t
{
    HDNoFallbackText                               = 0,
    HDNoDefaultIcon                                = 1,
    NoMask                                         = 2,
    EGuideClickConfigOption_MAX                    = 3

};

// Enum  DFMGlobalDefines.EGuideStageClientMode
enum class EGuideStageClientMode : uint8_t
{
    None                                           = 0,
    SOL                                            = 1,
    MP                                             = 2,
    Raid                                           = 3,
    StructTutorial                                 = 4,
    Arena                                          = 5,
    EGuideStageClientMode_MAX                      = 6

};

// Enum  DFMGlobalDefines.EGuideConditionId
enum class EGuideConditionId : uint8_t
{
    MinCompleteCount                               = 101,
    MaxCompleteCount                               = 102,
    NeedPreGuideModule                             = 103,
    MaxPlayTimes                                   = 104,
    IsNewPlayerGuideEnd                            = 105,
    NoMapMarkForRetreat                            = 106,
    IsBattleState                                  = 107,
    LastSolFailed                                  = 108,
    MinSeasonLevel                                 = 109,
    MaxSeasonLevel                                 = 110,
    NotInMatching                                  = 111,
    PlayCD                                         = 112,
    EGuideConditionId_MAX                          = 113

};

// Enum  DFMGlobalDefines.EVehicleCameraType
enum class EVehicleCameraType : uint8_t
{
    ModifiedType                                   = 0,
    MainType                                       = 1,
    BPType                                         = 2,
    EVehicleCameraType_MAX                         = 3

};

// Enum  DFMGlobalDefines.EItemFlowType
enum class EItemFlowType : uint8_t
{
    Default                                        = 0,
    Other                                          = 1,
    SceneBox                                       = 2,
    SubPickup                                      = 3,
    LabAI                                          = 4,
    BotAI                                          = 5,
    Player                                         = 6,
    Quest                                          = 7,
    HackPC                                         = 8,
    DecipherDevice                                 = 9,
    RaidAmmoBox                                    = 10,
    EItemFlowType_MAX                              = 11

};

// Enum  DFMGlobalDefines.EContainerInteractResult
enum class EContainerInteractResult : uint8_t
{
    None                                           = 0,
    Failed_KeyRoom_NotKeyMan                       = 1,
    Failed_OtherPlayerIsLooting                    = 2,
    Success                                        = 3,
    EContainerInteractResult_MAX                   = 4

};

// Enum  DFMGlobalDefines.EUseItemAnimType
enum class EUseItemAnimType : uint8_t
{
    FullAnim                                       = 0,
    PreUseAnim                                     = 1,
    UsingAnim                                      = 2,
    AfterUseAnim                                   = 3,
    Holding                                        = 4,
    EUseItemAnimType_MAX                           = 5

};

// Enum  DFMGlobalDefines.EPropAnimEvent
enum class EPropAnimEvent : uint8_t
{
    EPropAnimEvent_PreUseItem                      = 0,
    EPropAnimEvent_StopPreUsingItem                = 1,
    EPropAnimEvent_PreUseThrowableItem             = 2,
    EPropAnimEvent_ThrowItem                       = 3,
    EPropAnimEvent_MAX                             = 4

};

// Enum  DFMGlobalDefines.ESuitableSpaceChecker
enum class ESuitableSpaceChecker : uint8_t
{
    SuitableSpaceChecker_All                       = 0,
    SuitableSpaceChecker_Equipment                 = 1,
    SuitableSpaceChecker_Container                 = 2,
    SuitableSpaceChecker_MAX                       = 3

};

// Enum  DFMGlobalDefines.ELootLimitType
enum class ELootLimitType : uint8_t
{
    ELootLimitType_Both                            = 0,
    ELootLimitType_OnlySource                      = 1,
    ELootLimitType_OnlyTarget                      = 2,
    ELootLimitType_None                            = 3,
    ELootLimitType_MAX                             = 4

};

// Enum  DFMGlobalDefines.ELootObjType
enum class ELootObjType : uint8_t
{
    ELootObjType_None                              = 0,
    ELootObjType_InventoryMgr                      = 1,
    ELootObjType_ScenePickup                       = 2,
    ELootObjType_SceneContainer                    = 3,
    ELootObjType_OpenBox                           = 4,
    ELootObjType_DeadBody                          = 5,
    ELootObjType_MAX                               = 6

};

// Enum  DFMGlobalDefines.EPlayerLootingState
enum class EPlayerLootingState : uint8_t
{
    EPlayerLootingState_None                       = 0,
    EPlayerLootingState_InSearching                = 1,
    EPlayerLootingState_Looting                    = 2,
    EPlayerLootingState_ViewBag                    = 3,
    EPlayerLootingState_MAX                        = 4

};

// Enum  DFMGlobalDefines.EPreUseAnimType
enum class EPreUseAnimType : uint8_t
{
    PreUseAnimType_None                            = 0,
    PreUseAnimType_RedBull                         = 1,
    PreUseAnimType_PainKiller                      = 2,
    PreUseAnimType_AidKit                          = 3,
    PreUseAnimType_Bandage                         = 4,
    PreUseAnimType_MedKit                          = 5,
    PreUseAnimType_Adrenaline                      = 6,
    PreUseAnimType_CMS                             = 7,
    PreUseAnimType_Splint                          = 8,
    PreUseAnimType_Augmentin                       = 9,
    PreUseAnimType_BearMedKit                      = 10,
    PreUseAnimType_MAX                             = 11

};

// Enum  DFMGlobalDefines.EItemUseCondition
enum class EItemUseCondition : uint8_t
{
    ItemUseCondition_None                          = 0,
    ItemUseCondition_OK                            = 1,
    ItemUseCondition_Cooldowning                   = 2,
    ItemUseCondition_AlreadyUsed                   = 3,
    ItemUseCondition_NotInitiativeUsable           = 4,
    ItemUseCondition_OtherReason                   = 5,
    ItemUseCondition_MaxHeath                      = 6,
    ItemUseCondition_VehicleSpeed                  = 7,
    ItemUseCondition_VehicleFuel                   = 8,
    ItemUseCondition_Move                          = 9,
    ItemUseCondition_LeanOut                       = 10,
    ItemUseCondition_Swim                          = 11,
    ItemUseCondition_OutVehice                     = 12,
    ItemUseCondition_Vault                         = 13,
    ItemUseCondition_Climb                         = 14,
    ItemUseCondition_TransitionAnim                = 15,
    ItemUseCondition_NoNeedToUse                   = 16,
    ItemUseCondition_MaxArmor                      = 17,
    ItemUseCondition_MaxHelmetArmorValue           = 18,
    ItemUseCondition_ArmorLowDurability            = 19,
    ItemUseCondition_ArmorRepairDisable            = 20,
    ItemUseCondition_UnsupportedArmorType          = 21,
    NoArmor                                        = 22,
    NoHelmet                                       = 23,
    HealthStateGood                                = 24,
    NoBleeding                                     = 25,
    NoFracture                                     = 26,
    NotEnoughDurability                            = 27,
    NotEnoughDurabilityToCureBody                  = 28,
    ItemIsBeingUsed                                = 29,
    CharacterCantUse                               = 30,
    Burden                                         = 31,
    TargetWeaponNotFound                           = 32,
    TargetWeaponNotMatch                           = 33,
    UnequipAmmoSpaceNotEngouht                     = 34,
    ItemUseCondition_InvalidLocation_UpBlock       = 35,
    ItemUseCondition_InvalidLocation_NotFlat       = 36,
    EItemUseCondition_MAX                          = 37

};

// Enum  DFMGlobalDefines.EUseItemAddBuffFunctionType
enum class EUseItemAddBuffFunctionType : uint8_t
{
    None                                           = 0,
    Bleeding                                       = 1,
    EUseItemAddBuffFunctionType_MAX                = 2

};

// Enum  DFMGlobalDefines.EUseItemFunctionType
enum class EUseItemFunctionType : uint8_t
{
    None                                           = 0,
    HP                                             = 1,
    BodyArmor                                      = 2,
    HelmetArmor                                    = 3,
    Health                                         = 4,
    BUFF                                           = 5,
    Bleeding                                       = 10,
    Fracture                                       = 11,
    PartHealth                                     = 12,
    EUseItemFunctionType_MAX                       = 13

};

// Enum  DFMGlobalDefines.ERealItemSource
enum class ERealItemSource : uint8_t
{
    None                                           = 0,
    PlayerSelf                                     = 1,
    PlayerTeammate                                 = 2,
    PlayerEnemy                                    = 3,
    Pickup                                         = 4,
    NormalAI                                       = 5,
    LabAI                                          = 6,
    SceneBox                                       = 7,
    Other                                          = 8,
    ERealItemSource_MAX                            = 9

};

// Enum  DFMGlobalDefines.ERawItemSource
enum class ERawItemSource : uint8_t
{
    None                                           = 0,
    Player                                         = 1,
    Pickup                                         = 2,
    NormalAI                                       = 3,
    LabAI                                          = 4,
    SceneBox                                       = 5,
    Other                                          = 6,
    ERawItemSource_MAX                             = 7

};

// Enum  DFMGlobalDefines.EItemBindTypeForSettlement
enum class EItemBindTypeForSettlement : uint8_t
{
    BindingBinded                                  = 0,
    BindingNotBind                                 = 1,
    BindingTeammateBinded                          = 2,
    BindingTeammateNotBinded                       = 3,
    EItemBindTypeForSettlement_MAX                 = 4

};

// Enum  DFMGlobalDefines.EItemBindType
enum class EItemBindType : uint8_t
{
    BindingBinded                                  = 0,
    BindingNotBind                                 = 1,
    BindingTeammate                                = 2,
    EItemBindType_MAX                              = 3

};

// Enum  DFMGlobalDefines.EItemViewStyleLayoutType
enum class EItemViewStyleLayoutType : uint8_t
{
    ItemViewStyleLayoutType_Default                = 0,
    ItemViewStyleLayoutType_VehicleMainWeapon      = 1,
    ItemViewStyleLayoutType_VehicleSecondWeapon    = 2,
    ItemViewStyleLayoutType_VehicleEquip           = 3,
    ItemViewStyleLayoutType_MAX                    = 4

};

// Enum  DFMGlobalDefines.EItemViewStyleType
enum class EItemViewStyleType : uint8_t
{
    ItemViewStyleType_Default                      = 0,
    ItemViewStyleType_Large                        = 1,
    ItemViewStyleType_Small                        = 2,
    ItemViewStyleType_Special                      = 3,
    ItemViewStyleType_MAX                          = 4

};

// Enum  DFMGlobalDefines.ELineOrientation
enum class ELineOrientation : uint8_t
{
    HORIZONTAL                                     = 0,
    VERTICAL                                       = 1,
    ELineOrientation_MAX                           = 2

};

// Enum  DFMGlobalDefines.EMapInstancedIconLayerType
enum class EMapInstancedIconLayerType : uint8_t
{
    Base                                           = 0,
    TeamMate                                       = 1,
    LocalPlayer                                    = 2,
    UnderBase                                      = 3,
    HighBase                                       = 4,
    EMapInstancedIconLayerType_MAX                 = 5

};

// Enum  DFMGlobalDefines.EMapIconSizeType
enum class EMapIconSizeType : uint8_t
{
    None                                           = 0,
    BigIcon                                        = 1,
    MiniIcon                                       = 2,
    XSIcon                                         = 3,
    BigIcon_Breakthrough                           = 4,
    BF_Vehicle                                     = 5,
    BF_SceneWeapon                                 = 6,
    BF_SkillDevice                                 = 7,
    BF_AmmoBox                                     = 8,
    TacticalMarker                                 = 9,
    SectorAnchorMarker                             = 10,
    EMapIconSizeType_MAX                           = 11

};

// Enum  DFMGlobalDefines.EMapPlayerIconState
enum class EMapPlayerIconState : uint8_t
{
    Normal                                         = 0,
    ImpendingDeath                                 = 1,
    Dead                                           = 2,
    Offline                                        = 3,
    Escaped                                        = 4,
    Driving                                        = 5,
    InGlitchVolume                                 = 6,
    Count                                          = 7,
    EMapPlayerIconState_MAX                        = 8

};

// Enum  DFMGlobalDefines.EDFMMapIconType
enum class EDFMMapIconType : uint8_t
{
    None                                           = 0,
    Mission                                        = 1,
    SOL_WeaponBlueprint                            = 2,
    SOL_Player                                     = 3,
    Timeline_Shelling                              = 4,
    SOL_CommonRange                                = 5,
    SOL_PlayerDeath                                = 6,
    SOLEvent_Train_Locomotive                      = 7,
    SOLEvent_Train_Car                             = 8,
    SOLEvent_Train_Station                         = 9,
    SOLEvent_Train_Railway                         = 10,
    SOLEvacuation_HackPoint                        = 11,
    SOLEvacuation_PlayerExit                       = 12,
    AmmoBox                                        = 13,
    SceneWeapon                                    = 14,
    SOL_WeaponBlueprintStation                     = 15,
    PlayerSignLine                                 = 16,
    POILocationName                                = 17,
    SOL_PlayerExit                                 = 18,
    SOL_Contract                                   = 19,
    SOL_Door                                       = 20,
    SOL_Quest                                      = 21,
    SOL_QuestRange                                 = 22,
    SOL_DeadBody                                   = 23,
    BattleField_CapturePoint                       = 24,
    BattleField_Marker                             = 25,
    BattleField_Camp                               = 26,
    AblityDetector                                 = 27,
    MotionDetector                                 = 28,
    Vehicle                                        = 29,
    QA_Marker                                      = 30,
    SOL_Enemy                                      = 31,
    SOL_TeammatePlayer                             = 32,
    Breakthrough_SectorAnchor                      = 33,
    CaptureFlag_FlagAnchor                         = 34,
    CaptureFlag_FlagConvoyRange                    = 35,
    CaptureFlag_BattleFlag                         = 36,
    Common_Enemy                                   = 37,
    Raid_MissionTarget                             = 38,
    Raid_CustomizeTarget                           = 39,
    Raid_Enemy                                     = 40,
    SOL_EventMaker                                 = 41,
    SOL_WishItemMaker                              = 42,
    SOL_ShopStation                                = 43,
    SOL_POIProduct                                 = 44,
    SOL_BossLocation                               = 45,
    SOL_HighValueBox                               = 46,
    SOL_ContractObjection                          = 47,
    AILab_Character                                = 48,
    Breakthrough_SplineArea                        = 49,
    AbilityRobot                                   = 50,
    AbilitySuppressionMine                         = 51,
    AbilityCruiseMissile                           = 52,
    AbilitySentryHive                              = 53,
    AbilityIntelligentSmoke                        = 54,
    BattleField_Player                             = 55,
    BattleField_TeammatePlayer                     = 56,
    BattleField_PlayerDeath                        = 57,
    Breakthrough_SectorAnchorSplineArea            = 58,
    Breakthrough_MaskSplineArea                    = 59,
    SOL_TeamMateSignOptimize                       = 60,
    Breakthrough_SupportIcon                       = 61,
    Breakthrough_SupportIcon_Commander             = 62,
    SOL_PlayerStart                                = 63,
    SOLEvent_Intro                                 = 64,
    Breakthrough_SupportPoint                      = 65,
    PlayerMarkingItem                              = 66,
    PlayerMarkingLocation                          = 67,
    Player2SignLine                                = 68,
    SOL_Zipline                                    = 69,
    SOLEvent_Train_HighValueBox                    = 70,
    SOL_FloorVolume                                = 71,
    SOL_Interactor_Scouter                         = 72,
    SOL_Interactor_IronGauze                       = 73,
    PlayerMarkingUnitActor                         = 74,
    SOL_BigMapFloorVolume                          = 75,
    AbilityRebornFlag                              = 76,
    SOL_OB_Camera                                  = 77,
    SOL_OB_Player                                  = 78,
    AbilityADS                                     = 79,
    SOL_Helicopter                                 = 80,
    PakMachine                                     = 81,
    SOL_AdjutantLocation                           = 82,
    MiniMapPOILocationName                         = 83,
    CountDownReleaseTrigger                        = 84,
    SOL_CommonRange2                               = 85,
    BattleField_CommanderSign                      = 86,
    SOL_ExitTriggerMiniGame                        = 87,
    VehicleRadar                                   = 88,
    SkillFixedWeaponWhiteModel                     = 89,
    Count                                          = 90,
    EDFMMapIconType_MAX                            = 91

};

// Enum  DFMGlobalDefines.EMapFloorType
enum class EMapFloorType : uint8_t
{
    None                                           = 0,
    Layer1                                         = 1,
    Layer2                                         = 2,
    Layer3                                         = 3,
    Layer4                                         = 4,
    Layer5                                         = 5,
    Layer6                                         = 6,
    Layer7                                         = 7,
    Layer8                                         = 8,
    Layer9                                         = 9,
    Layer10                                        = 10,
    EMapFloorType_MAX                              = 11

};

// Enum  DFMGlobalDefines.ESeamlessEnterOperateType
enum class ESeamlessEnterOperateType : uint8_t
{
    None                                           = 0,
    TutorialHUD                                    = 1,
    NormalHUD                                      = 2,
    TutorialClick                                  = 3,
    QuestPanel                                     = 4,
    PlayerExit                                     = 5,
    BlueprintPlunder                               = 6,
    BlueprintDevice                                = 7,
    Contract                                       = 8,
    Quest                                          = 9,
    Other                                          = 10,
    SeamlessEnterStage_GetOn                       = 11,
    SeamlessEnterStage_PadShow                     = 12,
    SeamlessEnterStage_InteractionMap              = 13,
    SeamlessEnterStage_ConnectDS                   = 14,
    SeamlessEnterStage_ConnectDSSuccess            = 15,
    SeamlessEnterStage_LevelStreaming              = 16,
    SeamlessEnterStage_LevelStreamingSuccess       = 17,
    SeamlessEnterStage_HUDPreload                  = 18,
    SeamlessEnterStage_HUDPreloadSuccess           = 19,
    SeamlessEnterStage_AllPlayerReady              = 20,
    SeamlessEnterStage_Abseil                      = 21,
    SeamlessEnterStage_AbseilSuccess               = 22,
    SeamlessEnterStage_Finish                      = 23,
    SeamlessEnterStage_Fail                        = 24,
    Max                                            = 25

};

// Enum  DFMGlobalDefines.EBigMapOperateType
enum class EBigMapOperateType : uint8_t
{
    OpenBigMap                                     = 0,
    CloseBigMap                                    = 1,
    MarkEvacuationPoint                            = 2,
    MarkMapSign                                    = 3,
    MarkBlueprintPlunder                           = 4,
    MarkContract                                   = 5,
    SwitchInfoBtn_SupplyStation                    = 6,
    SwitchInfoBtn_UnlockPoint                      = 7,
    SwitchInfoBtn_Boss                             = 8,
    SwitchInfoBtn_POI                              = 9,
    UseQuestList                                   = 10,
    UseWishList                                    = 11,
    UseContractList                                = 12,
    UseSeasonQuestList                             = 13,
    EBigMapOperateType_MAX                         = 14

};

// Enum  DFMGlobalDefines.EMapSignExtraSyncType
enum class EMapSignExtraSyncType : uint8_t
{
    None                                           = 0,
    Delete                                         = 1,
    Location                                       = 2,
    Icon                                           = 3,
    MAX                                            = 4

};

// Enum  DFMGlobalDefines.ESafeHouseIconGroundType
enum class ESafeHouseIconGroundType : uint8_t
{
    All                                            = 0,
    Underground                                    = 1,
    Overground                                     = 2,
    ESafeHouseIconGroundType_MAX                   = 3

};

// Enum  DFMGlobalDefines.ESafeHouseIconMapType
enum class ESafeHouseIconMapType : uint8_t
{
    All                                            = 0,
    MiniMap                                        = 1,
    BigMap                                         = 2,
    ESafeHouseIconMapType_MAX                      = 3

};

// Enum  DFMGlobalDefines.EMapLocationPOIProductType
enum class EMapLocationPOIProductType : uint8_t
{
    None                                           = 0,
    ElectricalApplication                          = 1,
    Entertainment                                  = 2,
    Instrument                                     = 3,
    BuildingMaterial                               = 4,
    Drink                                          = 5,
    ElectronicComponent                            = 6,
    DailySupply                                    = 7,
    Information                                    = 8,
    Fabrication                                    = 9,
    Fuel                                           = 10,
    Medical                                        = 11,
    Tool                                           = 12,
    Food                                           = 13,
    Gun                                            = 14,
    Communication                                  = 15,
    EMapLocationPOIProductType_MAX                 = 16

};

// Enum  DFMGlobalDefines.EMapLocationPOILevelType
enum class EMapLocationPOILevelType : uint8_t
{
    None                                           = 0,
    POILevel1                                      = 1,
    POILevel2                                      = 2,
    EMapLocationPOILevelType_MAX                   = 3

};

// Enum  DFMGlobalDefines.EMapLocationType
enum class EMapLocationType : uint8_t
{
    NormalPOI                                      = 0,
    HighPOI                                        = 1,
    HugePOI                                        = 2,
    ShopStation                                    = 3,
    POIProduct                                     = 4,
    BossLocation                                   = 5,
    HighValueBox                                   = 6,
    Zipline                                        = 7,
    Scouter                                        = 8,
    IronGauze                                      = 9,
    Count                                          = 10,
    EMapLocationType_MAX                           = 11

};

// Enum  DFMGlobalDefines.EMapRotationType
enum class EMapRotationType : uint8_t
{
    None                                           = 0,
    Clockwise                                      = 1,
    CounterClockWise                               = 2,
    EMapRotationType_MAX                           = 3

};

// Enum  DFMGlobalDefines.EVehicleType
enum class EVehicleType : uint8_t
{
    Car                                            = 0,
    Tank                                           = 1,
    Helicopter                                     = 2,
    EVehicleType_MAX                               = 3

};

// Enum  DFMGlobalDefines.EBattleFieldQuestType
enum class EBattleFieldQuestType : uint8_t
{
    EBattleFieldQuestType_None                     = 0,
    EBattleFieldQuestType_Armory                   = 1,
    EBattleFieldQuestType_AgentRecruitment         = 2,
    EBattleFieldQuestType_AgentFile                = 3,
    EBattleFieldQuestType_Agentbadge               = 4,
    EBattleFieldQuestType_FirearmsAppearance       = 5,
    EBattleFieldQuestType_OnlyInGame               = 6,
    EBattleFieldQuestType_MAX                      = 7

};

// Enum  DFMGlobalDefines.EQuestType
enum class EQuestType : uint8_t
{
    ENone                                          = 0,
    EContract_KillAI                               = 1,
    EContract_KillBoss                             = 2,
    EContract_C4                                   = 3,
    EContract_Interact                             = 4,
    EContract_DrillingSafe                         = 5,
    EContract_Benchmark                            = 6,
    EContract_JailBreak                            = 7,
    EQuestType_MAX                                 = 8

};

// Enum  DFMGlobalDefines.EQuestDialogActiveType
enum class EQuestDialogActiveType : uint8_t
{
    None                                           = 0,
    OnQuestCompleted                               = 1,
    OnObjectiveCompleted                           = 2,
    OnObjectiveActivated                           = 3,
    OnObjectiveFailed                              = 4,
    OnEnterMatch                                   = 5,
    OnReachProgressTarget                          = 6,
    OnContractCanceled                             = 7,
    OnObjectiveActivatedByPlunder                  = 8,
    EQuestDialogActiveType_MAX                     = 9

};

// Enum  DFMGlobalDefines.EQuestBigType
enum class EQuestBigType : uint8_t
{
    EQuestBigType_Quest                            = 0,
    EQuestBigType_Contract                         = 1,
    EQuestBigType_Season                           = 2,
    EQuestBigType_MAX                              = 3

};

// Enum  DFMGlobalDefines.EQuestGoalForbiddenType
enum class EQuestGoalForbiddenType : uint8_t
{
    ECondition                                     = 0,
    EForbidden                                     = 1,
    EQuestGoalForbiddenType_MAX                    = 2

};

// Enum  DFMGlobalDefines.EFreeBuildRankSkillType
enum class EFreeBuildRankSkillType : uint8_t
{
    None                                           = 0,
    CoastalDefenseArtillery                        = 1,
    AntiAircraftGuns                               = 2,
    Bunker                                         = 3,
    EFreeBuildRankSkillType_MAX                    = 4

};

// Enum  DFMGlobalDefines.ECommanderRankSkillType
enum class ECommanderRankSkillType : uint8_t
{
    None                                           = 0,
    HighValueAnchor                                = 1,
    HightThreatVehicle                             = 2,
    FastRedeploy                                   = 3,
    ECommanderRankSkillType_MAX                    = 4

};

// Enum  DFMGlobalDefines.ECommanderRankSkillCDChangeMode
enum class ECommanderRankSkillCDChangeMode : uint8_t
{
    Fixed                                          = 0,
    DynamicBasedOnResult                           = 1,
    ECommanderRankSkillCDChangeMode_MAX            = 2

};

// Enum  DFMGlobalDefines.ECommanderRankSkillScoreChangeMode
enum class ECommanderRankSkillScoreChangeMode : uint8_t
{
    Original                                       = 0,
    DynamicBasedOnResult                           = 1,
    DynamicBasedOnResult_Fallback                  = 2,
    ECommanderRankSkillScoreChangeMode_MAX         = 3

};

// Enum  DFMGlobalDefines.ERankSkillState
enum class ERankSkillState : uint8_t
{
    Open                                           = 0,
    UnOpen                                         = 1,
    SectorCantUse                                  = 2,
    ERankSkillState_MAX                            = 3

};

// Enum  DFMGlobalDefines.ERankSkillType
enum class ERankSkillType : uint8_t
{
    None                                           = 0,
    DropVehicle                                    = 1,
    CommanderSkil                                  = 2,
    FreeBuild                                      = 3,
    ERankSkillType_MAX                             = 4

};

// Enum  DFMGlobalDefines.EReportMode
enum class EReportMode : uint8_t
{
    None                                           = 0,
    ReportSol                                      = 1,
    ReportMP                                       = 2,
    Disabled                                       = 3,
    EReportMode_MAX                                = 4

};

// Enum  DFMGlobalDefines.ESafeHouseDeviceType
enum class ESafeHouseDeviceType : uint8_t
{
    Production                                     = 0,
    Functional                                     = 1,
    Gameplay                                       = 2,
    ESafeHouseDeviceType_MAX                       = 3

};

// Enum  DFMGlobalDefines.EServerType
enum class EServerType : uint8_t
{
    Default                                        = 0,
    PreRelease                                     = 1,
    EServerType_MAX                                = 2

};

// Enum  DFMGlobalDefines.EEaseMode
enum class EEaseMode : uint8_t
{
    LinearIn                                       = 0,
    QuadEaseIn                                     = 1,
    QuadEaseOut                                    = 2,
    CubicEaseIn                                    = 3,
    CubicEaseOut                                   = 4,
    EEaseMode_MAX                                  = 5

};

// Enum  DFMGlobalDefines.EPriceDisplayOrder
enum class EPriceDisplayOrder : uint8_t
{
    None                                           = 0,
    NumAbbr                                        = 1,
    AbbrNum                                        = 2,
    NumSymbol                                      = 3,
    SymbolNum                                      = 4,
    NumSymbolAbbr                                  = 5,
    NumAbbrSymbol                                  = 6,
    SymbolNumAbbr                                  = 7,
    SymbolAbbrNum                                  = 8,
    AbbrNumSymbol                                  = 9,
    AbbrSymbolNum                                  = 10,
    EPriceDisplayOrder_MAX                         = 11

};

// Enum  DFMGlobalDefines.EPlayerRelationShipType
enum class EPlayerRelationShipType : uint8_t
{
    E_None                                         = 0,
    E_Self                                         = 1,
    E_Teammate                                     = 2,
    E_SameCamp                                     = 3,
    E_Enemy                                        = 4,
    E_MAX                                          = 5

};

// Enum  DFMGlobalDefines.ETeammateState
enum class ETeammateState : uint8_t
{
    ETeammateState_Normal                          = 0,
    ETeammateState_Dying                           = 1,
    ETeammateState_WaitForResurrection             = 2,
    ETeammateState_Dead                            = 3,
    ETeammateState_Disconnect                      = 4,
    ETeammateState_Withdrawal                      = 5,
    ETeammateState_QuitGame                        = 6,
    ETeammateState_BeingReviveFromDying            = 7,
    ETeammateState_BeingReviveFromFirstDeath       = 8,
    ETeammateState_Count                           = 9,
    ETeammateState_MAX                             = 10

};

// Enum  DFMGlobalDefines.EMessagetype
enum class EMessagetype : uint8_t
{
    ETeamInvite                                    = 0,
    ETeamApply                                     = 1,
    EMessagetype_MAX                               = 2

};

// Enum  DFMIrisSeamless.EIrisEnterStageType
enum class EIrisEnterStageType : uint8_t
{
    None                                           = 0,
    Init                                           = 1,
    Match                                          = 2,
    SelectShow                                     = 3,
    GetOn                                          = 4,
    EventShow                                      = 5,
    PadShow                                        = 6,
    InfoInteract                                   = 7,
    Abseil                                         = 8,
    Finish                                         = 9,
    Fail                                           = 10,
    Max                                            = 11

};

// Enum  DFMIrisSeamless.ESeamlessEntryMatchType
enum class ESeamlessEntryMatchType : uint8_t
{
    None                                           = 0,
    Tutorial                                       = 1,
    Scream                                         = 2,
    FirstN                                         = 3,
    Normal                                         = 4,
    ESeamlessEntryMatchType_MAX                    = 5

};

// Enum  DFMIrisSeamless.ESeamlessDSConnectState
enum class ESeamlessDSConnectState : uint8_t
{
    None                                           = 0,
    Waiting                                        = 1,
    ReadyConnect                                   = 2,
    Connecting                                     = 3,
    Connected                                      = 4,
    MAX                                            = 5

};

// Enum  DFMIrisSeamless.EClientSeamlessTravelStatus
enum class EClientSeamlessTravelStatus : uint8_t
{
    OnClientSeamlessTravelBegin                    = 0,
    OnSeamlessStageEnter                           = 1,
    OnPreCleanupDynamicObjects                     = 2,
    OnPostCleanupDynamicObjects                    = 3,
    OnPreConnectDS                                 = 4,
    OnPostConnectDS                                = 5,
    OnPreStandaloneInitialize                      = 6,
    OnPostStandaloneInitialize                     = 7,
    OnClientCreateNewPlayerController              = 8,
    OnSwitchClientPlayer                           = 9,
    OnClientSeamlessTravelEnd                      = 10,
    OnNetDriverShutdown                            = 11,
    EClientSeamlessTravelStatus_MAX                = 12

};

// Enum  DFMLuaSupport.ELuaFrontEndType
enum class ELuaFrontEndType : uint8_t
{
    None                                           = 0,
    Normal                                         = 1,
    FromSettlement                                 = 2,
    WidgetTest                                     = 10,
    ELuaFrontEndType_MAX                           = 11

};

// Enum  DFMMission.ELayerActorCheck
enum class ELayerActorCheck : uint8_t
{
    Common                                         = 0,
    Alive                                          = 1,
    NoAWheeledVehicle                              = 2,
    ELayerActorCheck_MAX                           = 3

};

// Enum  DFMMission.EMissionLayerOperate
enum class EMissionLayerOperate : uint8_t
{
    None                                           = 0,
    Show                                           = 1,
    Hide                                           = 2,
    EnableInteract                                 = 3,
    DisableInteract                                = 4,
    Destroy                                        = 5,
    Get                                            = 6,
    GetAlive                                       = 7,
    EMissionLayerOperate_MAX                       = 8

};

// Enum  DFMMission.EMissionSpawnerType
enum class EMissionSpawnerType : uint8_t
{
    Monster                                        = 0,
    NPC                                            = 1,
    EMissionSpawnerType_MAX                        = 2

};

// Enum  DFMMission.EMissionActionType
enum class EMissionActionType : uint8_t
{
    None                                           = 0,
    Quest                                          = 1,
    EMissionActionType_MAX                         = 2

};

// Enum  DFMMission.ERaidInterCondition
enum class ERaidInterCondition : uint8_t
{
    AllDie                                         = 0,
    TimeOut                                        = 1,
    ERaidInterCondition_MAX                        = 2

};

// Enum  DFMMission.EMissionQuestLifeType
enum class EMissionQuestLifeType : uint8_t
{
    Save                                           = 0,
    AutoRemove                                     = 1,
    AutoClear                                      = 2,
    MAX                                            = 3

};

// Enum  DFMMission.EMissionEventLayer
enum class EMissionEventLayer : uint8_t
{
    World                                          = 1,
    DaJieAn                                        = 2,
    MAX                                            = 3

};

// Enum  DFMMission.EMissionState
enum class EMissionState : uint8_t
{
    Init                                           = 0,
    UnActivate                                     = 1,
    LoadLevel                                      = 2,
    Activate                                       = 3,
    MAX                                            = 4

};

// Enum  DFMMission.ETriggerAreaFlag
enum class ETriggerAreaFlag : uint8_t
{
    None                                           = 0,
    InTriggerArea                                  = 1,
    NotInTriggerArea                               = 2,
    ETriggerAreaFlag_MAX                           = 3

};

// Enum  DFMPlatform.EDFMPlatformPremiumFeaturesType
enum class EDFMPlatformPremiumFeaturesType : uint8_t
{
    RealtimeMultiplay                              = 0,
    CrossPlatform                                  = 1,
    EngineSpectating                               = 2,
    EDFMPlatformPremiumFeaturesType_MAX            = 3

};

// Enum  DFMPlatform.EDFMPermissionType
enum class EDFMPermissionType : uint8_t
{
    CommunicateUsingText                           = 0,
    CommunicateUsingVoice                          = 1,
    CommunicateUsingTextAndVoice                   = 2,
    EDFMPermissionType_MAX                         = 3

};

// Enum  DFMPlatform.EDFMAnonymousUserType
enum class EDFMAnonymousUserType : uint8_t
{
    CrossNetworkUser                               = 0,
    CrossNetWorkFriend                             = 1,
    EDFMAnonymousUserType_MAX                      = 2

};

// Enum  DFMPlatform.EDFMUserPrivileges
enum class EDFMUserPrivileges : uint8_t
{
    CanPlay                                        = 0,
    CanPlayOnline                                  = 1,
    CanCommunicateOnline                           = 2,
    CanUseUserGeneratedContent                     = 3,
    CanUserCrossPlay                               = 4,
    EDFMUserPrivileges_MAX                         = 5

};

// Enum  DFMPlatform.EDFMSessionUpdateType
enum class EDFMSessionUpdateType : uint8_t
{
    Default                                        = 0,
    Leader                                         = 1,
    MaxMember                                      = 2,
    None                                           = 3,
    EDFMSessionUpdateType_MAX                      = 4

};

// Enum  DFMPlatform.EDFMOnlineMangerState
enum class EDFMOnlineMangerState : uint8_t
{
    Idle                                           = 0,
    Destroy_DestroyingSession                      = 1,
    Create_DestroyingOldSession                    = 2,
    Create_CreatingNewSession                      = 3,
    Create_StartingSession                         = 4,
    Join_DestroyingOldSession                      = 5,
    Join_JoiningNewSession                         = 6,
    AcceptInvite_DestroyingOldSession              = 7,
    AcceptInvite_JoiningNewSession                 = 8,
    EDFMOnlineMangerState_MAX                      = 9

};

// Enum  DFMPlatform.EDFMSessionRestriction
enum class EDFMSessionRestriction : uint8_t
{
    Public                                         = 0,
    InviteOnly                                     = 1,
    FriendsOnly                                    = 2,
    Private                                        = 3,
    EDFMSessionRestriction_MAX                     = 4

};

// Enum  DFMPlatform.EPS5ActivityMatchState
enum class EPS5ActivityMatchState : uint8_t
{
    NoMatch                                        = 0,
    InProgcess                                     = 1,
    MatchEnd                                       = 2,
    EPS5ActivityMatchState_MAX                     = 3

};

// Enum  DFMPSO.EPSOCachePrecompileState
enum class EPSOCachePrecompileState : uint8_t
{
    Uninitialized                                  = 0,
    PrecompilingAll                                = 1,
    PrecompiledAll                                 = 2,
    Precompiling                                   = 3,
    PrecompilingAllBackground                      = 4,
    EPSOCachePrecompileState_MAX                   = 5

};

// Enum  DFMPSO.EDFMPSOStage
enum class EDFMPSOStage : uint8_t
{
    None                                           = 0,
    START_UP                                       = 1,
    ALL_GAMEITEM                                   = 4,
    ALL_EFFECT                                     = 8,
    ALL_CHARACTER                                  = 16,
    ENTER_MAP                                      = 32,
    EDFMPSOStage_MAX                               = 33

};

// Enum  DFMPSO.EDFMPSOTaskGearShift
enum class EDFMPSOTaskGearShift : uint8_t
{
    Reset                                          = 0,
    Up                                             = 1,
    Down                                           = 2,
    Lowest                                         = 3,
    Highest                                        = 4,
    EDFMPSOTaskGearShift_MAX                       = 5

};

// Enum  DFMPSO.EDFMPSOTaskPriorityGear
enum class EDFMPSOTaskPriorityGear : uint8_t
{
    PriLow                                         = 1,
    PriMid                                         = 2,
    PriHigh                                        = 3,
    EDFMPSOTaskPriorityGear_MAX                    = 4

};

// Enum  DFMPSO.EDFMPSOTaskBatchGear
enum class EDFMPSOTaskBatchGear : uint8_t
{
    BatchLow                                       = 1,
    BatchMid                                       = 2,
    BatchHigh                                      = 3,
    EDFMPSOTaskBatchGear_MAX                       = 4

};

// Enum  DFMPSO.EPSOCollectState
enum class EPSOCollectState : uint8_t
{
    NotStarted                                     = 0,
    WaitToSpawnResouceActors                       = 1,
    SpawnResouceActors                             = 2,
    CollectPSOData                                 = 3,
    Completed                                      = 4,
    Failed                                         = 5,
    End                                            = 6,
    EPSOCollectState_MAX                           = 7

};

// Enum  DFMPSO.EPSOCollectResourceCategory
enum class EPSOCollectResourceCategory : uint8_t
{
    Res_StaticMesh                                 = 0,
    Res_SkeletalMesh                               = 1,
    Res_ParticleSystem                             = 2,
    Res_MAX                                        = 3

};

// Enum  DFMQuest.EQAInputActionType
enum class EQAInputActionType : uint8_t
{
    OpenMap                                        = 185,
    Skill_X                                        = 116,
    Skill_V                                        = 118,
    Skill_G                                        = 120,
    EQAInputActionType_MAX                         = 186

};

// Enum  DFMQuest.EQAKillAIType
enum class EQAKillAIType : uint8_t
{
    KillWithTag                                    = 0,
    KillWithoutTag                                 = 1,
    KillAll                                        = 2,
    EQAKillAIType_MAX                              = 3

};

// Enum  DFMQuest.EPlayerPosition
enum class EPlayerPosition : uint8_t
{
    None                                           = 0,
    InTargetZone                                   = 1,
    InSafeZone                                     = 2,
    InWarningZone                                  = 3,
    InFailZone                                     = 4,
    EPlayerPosition_MAX                            = 5

};

// Enum  DFMQuest.EPlayersChaseTargetMode
enum class EPlayersChaseTargetMode : uint8_t
{
    None                                           = 0,
    ClosestPlayer                                  = 1,
    FarthestPlayer                                 = 2,
    EPlayersChaseTargetMode_MAX                    = 3

};

// Enum  DFMQuest.ERVLeaveBehaviour
enum class ERVLeaveBehaviour : uint8_t
{
    KeepRestriction                                = 0,
    Revert                                         = 1,
    NewRestriction                                 = 2,
    ERVLeaveBehaviour_MAX                          = 3

};

// Enum  DFMQuest.EQA_AITeamSizeListenerOption
enum class EQA_AITeamSizeListenerOption : uint8_t
{
    CompareSize                                    = 0,
    SizeChanged                                    = 1,
    EQA_MAX                                        = 2

};

// Enum  DFMQuest.EQA_CountdownAsyncReturnBranch
enum class EQA_CountdownAsyncReturnBranch : uint8_t
{
    Finished                                       = 0,
    Stoped                                         = 1,
    EQA_MAX                                        = 2

};

// Enum  DFMQuest.EQA_GPSequenceOption
enum class EQA_GPSequenceOption : uint8_t
{
    Play                                           = 0,
    Listen                                         = 1,
    EQA_MAX                                        = 2

};

// Enum  DFMQuest.EQA_InteractorControllerOption
enum class EQA_InteractorControllerOption : uint8_t
{
    Listen                                         = 0,
    Activate                                       = 1,
    Deactivate                                     = 2,
    MakeSuccessful                                 = 3,
    MakeFail                                       = 4,
    EQA_MAX                                        = 5

};

// Enum  DFMQuest.EQA_PlayerSafePathListenerOption
enum class EQA_PlayerSafePathListenerOption : uint8_t
{
    Play                                           = 0,
    Stop                                           = 1,
    Pause                                          = 2,
    Resume                                         = 3,
    Listen                                         = 4,
    EQA_MAX                                        = 5

};

// Enum  DFMQuest.EQA_SimplePathFollowerOption
enum class EQA_SimplePathFollowerOption : uint8_t
{
    Play                                           = 0,
    Stop                                           = 1,
    Pause                                          = 2,
    Resume                                         = 3,
    Listen                                         = 4,
    EQA_MAX                                        = 5

};

// Enum  DFMQuest.EGPSimpleActionInnerType
enum class EGPSimpleActionInnerType : uint8_t
{
    None                                           = 0,
    SetTargets                                     = 1,
    SetTargetState                                 = 2,
    SetFails                                       = 3,
    SetFailState                                   = 4,
    SetLevelPos                                    = 5,
    SetLevelTime                                   = 6,
    CreateTaskGroup                                = 7,
    SetTargetTask                                  = 8,
    SetTaskState                                   = 9,
    CreateABTeam                                   = 10,
    GetMissionPlayer                               = 11,
    GetMissionPlayers                              = 12,
    PlayMultiCastNetworkdedMontage                 = 13,
    GetMainTrigger                                 = 14,
    EnableEffect                                   = 15,
    DisableEffect                                  = 16,
    LoadPersistLevel                               = 17,
    UnLoadPersistLevel                             = 18,
    LoadBindPersistLevel                           = 19,
    UnLoadBindPersistLevel                         = 20,
    ShowTeamScore                                  = 21,
    AddBigWordMapMarker                            = 22,
    RemoveBigWordMapMarker                         = 23,
    CarraySomeBody                                 = 24,
    SomeOneCarrySomeBody                           = 25,
    IsSomeOneCarrySomeBody                         = 26,
    GetMissionListeners                            = 27,
    GetMissionSideListeners                        = 28,
    GetMissionTeamListeners                        = 29,
    GetMissionListener                             = 30,
    EndAllListener                                 = 31,
    GetMissionTeamCharacters                       = 32,
    SetCarryBodyTag                                = 33,
    AddGameStateAction                             = 34,
    SetGameStateAction                             = 35,
    GetGameStateAction                             = 36,
    RemoveItem                                     = 37,
    SetMissionTotalTime                            = 38,
    PlayerPlayDialog                               = 39,
    PlayAbility                                    = 40,
    EGPSimpleActionInnerType_MAX                   = 41

};

// Enum  DFMQuest.EGPSimpleActionType
enum class EGPSimpleActionType : uint8_t
{
    None                                           = 0,
    Drama                                          = 1,
    StartQuest                                     = 2,
    PlayDialog                                     = 3,
    NpcTalk                                        = 4,
    PlaySequence                                   = 5,
    EnableInteract                                 = 6,
    DisableInteract                                = 7,
    SendSelfToPos                                  = 8,
    SendTeamToPos                                  = 9,
    EnterWorld                                     = 10,
    RAID_SendSelfToPos                             = 11,
    RAID_SendTeamToPos                             = 12,
    EndRaid                                        = 13,
    ShowRaidEnd                                    = 14,
    WorldCruise                                    = 15,
    EnableEffect                                   = 16,
    EnableHitEffect                                = 17,
    EGPSimpleActionType_MAX                        = 18

};

// Enum  DFMQuest.ETriggerTitleFlag
enum class ETriggerTitleFlag : uint8_t
{
    Normal                                         = 0,
    NormalMarkerTarget                             = 1,
    OnlyTitle                                      = 2,
    OnlyProgress                                   = 3,
    OnlyTarget                                     = 4,
    OnlyMarkerTarget                               = 5,
    ETriggerTitleFlag_MAX                          = 6

};

// Enum  DFMQuest.EGPSimpleObjectiveType
enum class EGPSimpleObjectiveType : uint8_t
{
    Main                                           = 0,
    HidenMain                                      = 1,
    Side                                           = 2,
    AutoSide                                       = 3,
    HidenSide                                      = 4,
    EGPSimpleObjectiveType_MAX                     = 5

};

// Enum  DFMQuest.EGPSimpleQuestTypeEx
enum class EGPSimpleQuestTypeEx : uint8_t
{
    None                                           = 0,
    Quest                                          = 1,
    InteractNPCEx                                  = 2,
    Combine                                        = 3,
    Event                                          = 4,
    ServerCombine                                  = 5,
    LoadLevel                                      = 6,
    ConditionSearchArea                            = 7,
    EGPSimpleQuestTypeEx_MAX                       = 8

};

// Enum  DFMQuest.EGPSimpleQuestType
enum class EGPSimpleQuestType : uint8_t
{
    None                                           = 0,
    KillEnermy                                     = 1,
    ObtainItem                                     = 2,
    SearchArea                                     = 3,
    InteractItem                                   = 4,
    InteractNPC                                    = 5,
    SelfPlayerDie                                  = 6,
    SelfPlayerReborn                               = 7,
    LeaveArea                                      = 8,
    GameState                                      = 9,
    AvoidAIFightMe                                 = 10,
    AvoidAIFightUs                                 = 11,
    ConditionInteractNPC                           = 12,
    LoseItem                                       = 13,
    EnermyDie                                      = 14,
    TurnInItem                                     = 15,
    TraceItem                                      = 16,
    Damage                                         = 17,
    SearchAreaAndGetOnVehicle                      = 18,
    SearchAreaAndGetOffVehicle                     = 19,
    CheckGetOnVehicle                              = 20,
    CheckGetOffVehicle                             = 21,
    Raid_ReachArea_ALL                             = 22,
    Raid_ReachArea_Leader                          = 23,
    Raid_ReachArea_num                             = 24,
    Raid_TrainBreaks                               = 25,
    Max                                            = 26

};

// Enum  DFMQuest.EQADamageType
enum class EQADamageType : uint8_t
{
    None                                           = 0,
    All_Types                                      = 1,
    Bullets                                        = 2,
    RPG                                            = 3,
    EQADamageType_MAX                              = 4

};

// Enum  DFMQuest.EQA_TimerMode
enum class EQA_TimerMode : uint8_t
{
    Timer                                          = 0,
    Countdown                                      = 1,
    EQA_MAX                                        = 2

};

// Enum  DFMQuest.EQA_TriggerListenerOption
enum class EQA_TriggerListenerOption : uint8_t
{
    All                                            = 0,
    PlayerOnly                                     = 1,
    NotPlayer                                      = 2,
    ExceptAICharacter                              = 3,
    PlayerVehicle                                  = 4,
    AIVehicle                                      = 5,
    EQA_MAX                                        = 6

};

// Enum  DFMQuest.EQA_VehiclePathFollowerOption
enum class EQA_VehiclePathFollowerOption : uint8_t
{
    Play                                           = 0,
    Stop                                           = 1,
    Pause                                          = 2,
    Resume                                         = 3,
    Listen                                         = 4,
    EQA_MAX                                        = 5

};

// Enum  DFMReplaySystem.EReplayDeathReason
enum class EReplayDeathReason : uint8_t
{
    None                                           = 0,
    Gun                                            = 1,
    Melee                                          = 2,
    Skill                                          = 3,
    Hand                                           = 4,
    Buff                                           = 5,
    Drop                                           = 6,
    Accident                                       = 7,
    Others                                         = 8,
    EReplayDeathReason_MAX                         = 9

};

// Enum  DFMReplaySystem.EReplayType
enum class EReplayType : uint8_t
{
    EReplayType_None                               = 0,
    EReplayType_Killcam                            = 1,
    EReplayType_OB                                 = 2,
    EReplayType_MAX                                = 3

};

// Enum  DFMReplaySystem.EDeathReplayState
enum class EDeathReplayState : uint8_t
{
    Idle                                           = 0,
    Replaying                                      = 1,
    ReplayingNoKiller                              = 2,
    ReplayEnd                                      = 3,
    Over                                           = 4,
    EDeathReplayState_MAX                          = 5

};

// Enum  DFMVehicle.EAIHelicopterMoveState
enum class EAIHelicopterMoveState : uint8_t
{
    Default                                        = 0,
    Moving                                         = 1,
    Arrived                                        = 2,
    CrashMoving                                    = 3,
    CrashFinished                                  = 4,
    EAIHelicopterMoveState_MAX                     = 5

};

// Enum  DFMVehicle.EAIHelicopterFightState
enum class EAIHelicopterFightState : uint8_t
{
    Leisure                                        = 0,
    Alert                                          = 1,
    Fighting                                       = 2,
    EAIHelicopterFightState_MAX                    = 3

};

// Enum  DFMVehicle.EAITransportHeliMoveState
enum class EAITransportHeliMoveState : uint8_t
{
    Default                                        = 0,
    PreLand                                        = 1,
    Land                                           = 2,
    Hover                                          = 3,
    PreTakeOff                                     = 4,
    TakeOff                                        = 5,
    AfterTakeOff                                   = 6,
    EAITransportHeliMoveState_MAX                  = 7

};

// Enum  DFMVehicle.EAnimVehicleDoorState
enum class EAnimVehicleDoorState : uint8_t
{
    Idle                                           = 0,
    Opened                                         = 1,
    Closed                                         = 2,
    OpenedWithNoAnim                               = 3,
    ClosedWithNoAnim                               = 4,
    EAnimVehicleDoorState_MAX                      = 5

};

// Enum  DFMVehicle.EDFMTrainState
enum class EDFMTrainState : uint8_t
{
    Invalid                                        = 0,
    Move                                           = 1,
    Stop                                           = 2,
    Destruct                                       = 3,
    EDFMTrainState_MAX                             = 4

};

// Enum  DFMVehicle.EAITankPhase
enum class EAITankPhase : uint8_t
{
    ENone                                          = 0,
    EFirstPhase                                    = 1,
    ESecondPhase                                   = 2,
    EThirdPhase                                    = 3,
    EDead                                          = 4,
    EAITankPhase_MAX                               = 5

};

// Enum  DFMVehicle.EAIHelicopterStepEvent
enum class EAIHelicopterStepEvent : uint8_t
{
    Default                                        = 0,
    Step1                                          = 1,
    Step2                                          = 2,
    Step3                                          = 3,
    Step4                                          = 4,
    Step5                                          = 5,
    EAIHelicopterStepEvent_MAX                     = 6

};

// Enum  DFMVehicle.EAIHelicopterDriveState
enum class EAIHelicopterDriveState : uint8_t
{
    Default                                        = 0,
    On                                             = 1,
    Off                                            = 2,
    EAIHelicopterDriveState_MAX                    = 3

};

// Enum  DFMVehicle.EAIHelicopterCrashType
enum class EAIHelicopterCrashType : uint8_t
{
    Default                                        = 0,
    Body_Crash                                     = 1,
    PilotDied_Crash                                = 2,
    EAIHelicopterCrashType_MAX                     = 3

};

// Enum  DFMVehicle.EAIHelicopterSpaceType
enum class EAIHelicopterSpaceType : uint8_t
{
    Default                                        = 0,
    High                                           = 1,
    Low                                            = 2,
    EAIHelicopterSpaceType_MAX                     = 3

};

// Enum  DFMVehicle.EDFMHelicopterSmokeState
enum class EDFMHelicopterSmokeState : uint8_t
{
    None                                           = 0,
    GroundSmoke                                    = 1,
    WaterSmoke                                     = 2,
    EDFMHelicopterSmokeState_MAX                   = 3

};

// Enum  DFMVehicle.EJetDriveModeState
enum class EJetDriveModeState : uint8_t
{
    Normal                                         = 0,
    ChangingToSuspension                           = 1,
    Suspension                                     = 2,
    ChangingToNormal                               = 3,
    EJetDriveModeState_MAX                         = 4

};

// Enum  DFMVehicle.EJetCockpitState
enum class EJetCockpitState : uint8_t
{
    Closed                                         = 0,
    Opening                                        = 1,
    Opened                                         = 2,
    Closing                                        = 3,
    EJetCockpitState_MAX                           = 4

};

// Enum  DFMVehicle.EJetDriveMode
enum class EJetDriveMode : uint8_t
{
    Normal                                         = 0,
    Suspension                                     = 1,
    EJetDriveMode_MAX                              = 2

};

// Enum  DFMVehicle.EJetInputMode
enum class EJetInputMode : uint8_t
{
    ControlCam                                     = 0,
    ControlJetAxis                                 = 1,
    ControlMove                                    = 2,
    EJetInputMode_MAX                              = 3

};

// Enum  DFMVehicle.EJetSpeedupStatus
enum class EJetSpeedupStatus : uint8_t
{
    NoSpeedUp                                      = 0,
    SpeedingUp                                     = 1,
    EmptyRecovering                                = 2,
    EJetSpeedupStatus_MAX                          = 3

};

// Enum  DFMVehicle.EJetLandingGearState
enum class EJetLandingGearState : uint8_t
{
    Retracted                                      = 0,
    Retracting                                     = 1,
    Dropping                                       = 2,
    Down                                           = 3,
    EJetLandingGearState_MAX                       = 4

};

// Enum  DFMVehicle.EDFMJetGroundSmokeState
enum class EDFMJetGroundSmokeState : uint8_t
{
    None                                           = 0,
    GroundSmoke                                    = 1,
    WaterSmoke                                     = 2,
    GroundSmokeSusp                                = 3,
    WaterSmokeSusp                                 = 4,
    EDFMJetGroundSmokeState_MAX                    = 5

};

// Enum  DFMVehicle.EJetEffectProcessType
enum class EJetEffectProcessType : uint8_t
{
    None                                           = 0,
    FadeIn                                         = 1,
    FadeOut                                        = 2,
    Permanent                                      = 3,
    EJetEffectProcessType_MAX                      = 4

};

// Enum  DFMVehicle.EMotorCycleState
enum class EMotorCycleState : uint8_t
{
    ES_NORMAL                                      = 0,
    ES_LIE_DOWN                                    = 1,
    ES_STANDING_UP                                 = 2,
    ES_MAX                                         = 3

};

// Enum  DFMVehicle.EDFMVehicleEmissionType
enum class EDFMVehicleEmissionType : uint8_t
{
    Sustainmen                                     = 0,
    VehicleStart                                   = 1,
    VehicleStop                                    = 2,
    StartBraking                                   = 3,
    StopBraking                                    = 4,
    EDFMVehicleEmissionType_MAX                    = 5

};

// Enum  DFMVehicle.EDFMVehiclePartState
enum class EDFMVehiclePartState : uint8_t
{
    EVPS_FullHealth                                = 0,
    EVPS_BeDamage                                  = 1,
    EVPS_BeRecover                                 = 2,
    EVPS_Broken                                    = 3,
    EVPS_MAX                                       = 4

};

// Enum  DFMVehicle.EVehicleFXCreateFlags
enum class EVehicleFXCreateFlags : uint8_t
{
    RelativeOffset                                 = 1,
    AutoDestroy                                    = 2,
    AutoPooling                                    = 4,
    ForceRecreate                                  = 8,
    EVehicleFXCreateFlags_MAX                      = 9

};

// Enum  DFMVehicle.EDFMVehicleDebugDumpStackType
enum class EDFMVehicleDebugDumpStackType : uint8_t
{
    EVDST_None                                     = 0,
    EVDST_EnterVehicle                             = 1,
    EVDST_ExitVehicle                              = 2,
    EVDST_MAX                                      = 3

};

// Enum  DFMVehicle.EDFMVehiclePathFollowStatus
enum class EDFMVehiclePathFollowStatus : uint8_t
{
    Idle                                           = 0,
    Paused                                         = 1,
    Moving                                         = 2,
    EDFMVehiclePathFollowStatus_MAX                = 3

};

// Enum  DFMVehicle.EDFMVehicleSkillStatus
enum class EDFMVehicleSkillStatus : uint8_t
{
    Invalid                                        = 0,
    Init                                           = 1,
    Active                                         = 2,
    Execute                                        = 3,
    End                                            = 4,
    EDFMVehicleSkillStatus_MAX                     = 5

};

// Enum  DFMVehicle.EDFMTrainDoorIndex
enum class EDFMTrainDoorIndex : uint8_t
{
    Door1                                          = 0,
    Door2                                          = 1,
    Door3                                          = 2,
    Door4                                          = 3,
    Door5                                          = 4,
    Door6                                          = 5,
    Door7                                          = 6,
    Door8                                          = 7,
    EDFMTrainDoorIndex_MAX                         = 8

};

// Enum  DFMVehicle.EDFMTrainDoorState
enum class EDFMTrainDoorState : uint8_t
{
    Normal                                         = 0,
    AlwaysOpen                                     = 1,
    AlwaysClose                                    = 2,
    EDFMTrainDoorState_MAX                         = 3

};

// Enum  DFMVehicle.EDFMVehicleAssistAimType
enum class EDFMVehicleAssistAimType : uint8_t
{
    EVAAT_None                                     = 0,
    EVAAT_VehicleFPP                               = 1,
    EVAAT_VehicleTPP                               = 2,
    EVAAT_HelicopterFPP                            = 3,
    EVAAT_JetFPP                                   = 4,
    EVAAT_MAX                                      = 5

};

// Enum  DFMVehicle.EDFMVehicleSkillType
enum class EDFMVehicleSkillType : uint8_t
{
    VehicleType_Repair                             = 0,
    VehicleType_Smoke                              = 1,
    VehicleType_Heat                               = 2,
    VehicleType_ADS                                = 3,
    VehicleType_Mark                               = 4,
    VehicleType_Scan                               = 5,
    VehicleType_RebornBeacon                       = 6,
    VehicleType_ThermalSmoke                       = 7,
    VehicleType_ThermalImaging                     = 8,
    VehicleType_LaunchProjectile                   = 9,
    VehicleType_CreateControllaleActor             = 10,
    VehicleType_Max                                = 11

};

// Enum  DFMVehicle.EVehicleHealthRecoverScaleFactorType
enum class EVehicleHealthRecoverScaleFactorType : uint8_t
{
    EVehicleHealthRecoverScaleFactorType_None      = 0,
    EVehicleHealthRecoverScaleFactorType_Health    = 1,
    EVehicleHealthRecoverScaleFactorType_HealthPercent = 2,
    EVehicleHealthRecoverScaleFactorType_Custom    = 3,
    EVehicleHealthRecoverScaleFactorType_MAX       = 4

};

// Enum  DFMVehicle.EVehicleHealthRecoverType
enum class EVehicleHealthRecoverType : uint8_t
{
    EVehicleHealthRecoverType_None                 = 0,
    EVehicleHealthRecoverType_SelfRecover          = 1,
    EVehicleHealthRecoverType_SupplyStation        = 2,
    EVehicleHealthRecoverType_RepairSkill          = 3,
    EVehicleHealthRecoverType_Engineer             = 4,
    EVehicleHealthRecoverType_MAX                  = 5

};

// Enum  DFMVehicle.EDFMVehicleEffectParamsXValue
enum class EDFMVehicleEffectParamsXValue : uint8_t
{
    EEPX_None                                      = 0,
    EEPX_VehicleKMPHAbs                            = 1,
    EEPX_VehicleSideSpeedKMPHAbs                   = 2,
    EEPX_VehicleSideSpeedKMPH                      = 3,
    EEPX_MAX                                       = 4

};

// Enum  DFMVehicle.EDFMVehicleArmorType
enum class EDFMVehicleArmorType : uint8_t
{
    None                                           = 0,
    Light                                          = 1,
    Middle                                         = 2,
    Heavy                                          = 3,
    Num                                            = 4,
    EDFMVehicleArmorType_MAX                       = 5

};

// Enum  DFMVehicle.ESeatStateType
enum class ESeatStateType : uint8_t
{
    SeatStateType_RideEmpty                        = 0,
    SeatStateType_SelfRide                         = 1,
    SeatStateType_TeammateRide                     = 2,
    SeatStateType_SameCampRide                     = 3,
    SeatStateType_Destroy                          = 4,
    SeatStateType_MAX                              = 5

};

// Enum  DFMVehicle.EDFMVehicleType
enum class EDFMVehicleType : uint8_t
{
    VehicleType_Common                             = 0,
    VehicleType_Ground                             = 1,
    VehicleType_Tank                               = 2,
    VehicleType_Water                              = 3,
    VehicleType_Sky                                = 4,
    VehicleType_MAX                                = 5

};

// Enum  DFMVehicle.EUVehicleFrontendBuildNodeState
enum class EUVehicleFrontendBuildNodeState : uint8_t
{
    EState_Default                                 = 0,
    EState_Dirty                                   = 1,
    EState_Loading                                 = 2,
    EState_LoadFailed                              = 4,
    EState_LoadSuccess                             = 8,
    EState_MAX                                     = 9

};

// Enum  DFMVehicle.EVehicleFrontendLoadResultCode
enum class EVehicleFrontendLoadResultCode : uint8_t
{
    EState_Default                                 = 0,
    EState_ConfigError                             = 1,
    EState_ResourcesError                          = 2,
    EState_MAX                                     = 3

};

// Enum  DFMVehicle.EVehicleSpawnerDirtyReason
enum class EVehicleSpawnerDirtyReason : uint8_t
{
    EReason_None                                   = 0,
    EReason_SpawnedAlive                           = 1,
    EReason_CDProgress                             = 2,
    EReason_MAX                                    = 3

};

// Enum  DFMWeaponAssemble.EWeaponLoadStatus
enum class EWeaponLoadStatus : uint8_t
{
    None                                           = 0,
    LoadingMesh                                    = 1,
    LoadingMaterial                                = 2,
    Success                                        = 3,
    Faild                                          = 4,
    EWeaponLoadStatus_MAX                          = 5

};

// Enum  DFMWeaponAssemble.EFastEquipOpreationCode
enum class EFastEquipOpreationCode : uint8_t
{
    Deault                                         = 0,
    Add                                            = 1,
    Remove                                         = 2,
    Conflict                                       = 4,
    VirtualPrepare                                 = 8,
    VirtualPost                                    = 16,
    EFastEquipOpreationCode_MAX                    = 17

};

// Enum  DFMWeaponAssemble.EAssemblePartSocketType
enum class EAssemblePartSocketType : uint8_t
{
    None                                           = 0,
    Default                                        = 1,
    RulesSocket                                    = 2,
    EAssemblePartSocketType_MAX                    = 3

};

// Enum  DFMWeaponAssemble.ERTIActorDataLoadMesh
enum class ERTIActorDataLoadMesh : uint8_t
{
    Loading                                        = 0,
    Success                                        = 1,
    Fail                                           = 2,
    ERTIActorDataLoadMesh_MAX                      = 3

};

// Enum  DFMWeaponAssemble.ERTIActorDataType
enum class ERTIActorDataType : uint8_t
{
    StaticIcon                                     = 0,
    Weapon                                         = 1,
    Vehicle                                        = 2,
    HeroItem                                       = 3,
    Item                                           = 4,
    ERTIActorDataType_MAX                          = 5

};

// Enum  DFMWeaponAssemble.ECaptureRTResult
enum class ECaptureRTResult : uint8_t
{
    Waiting                                        = 0,
    Success                                        = 1,
    Fail_ConfigIsError                             = 2,
    Fail_RTSizeIsZero                              = 3,
    Fail_RTIsNULL                                  = 4,
    Fail_WeaponIsNULL                              = 5,
    Fail_WeaponBoundsIsZero                        = 6,
    ECaptureRTResult_MAX                           = 7

};

// Enum  DFMWeaponAssemble.ERTICaptureType
enum class ERTICaptureType : uint8_t
{
    Game                                           = 0,
    Editor                                         = 1,
    ERTICaptureType_MAX                            = 2

};

// Enum  DFMWeaponAssemble.ERTICaptureMeshProcess
enum class ERTICaptureMeshProcess : uint8_t
{
    CaptureNone                                    = 0,
    CaptureLowIcon                                 = 1,
    CaptureHighIcon                                = 2,
    ERTICaptureMeshProcess_MAX                     = 3

};

// Enum  DFMWeaponAssemble.ERTICaptureState
enum class ERTICaptureState : uint8_t
{
    RTICaptureWaiting                              = 0,
    RTICaptureFail                                 = 1,
    RTICaptureSuccess                              = 2,
    ERTICaptureState_MAX                           = 3

};

// Enum  DFMWeaponAssemble.ERTIActionProcess
enum class ERTIActionProcess : uint8_t
{
    Init                                           = 0,
    Loading                                        = 1,
    LoadFail                                       = 2,
    LoadSuccess                                    = 3,
    Capturing                                      = 4,
    CaptureFail                                    = 5,
    CaptureSuccess                                 = 6,
    MergeSuccessOrFallBack                         = 7,
    Discard                                        = 8,
    ERTIActionProcess_MAX                          = 9

};

// Enum  DFMWeaponAssemble.ERTIMerge
enum class ERTIMerge : uint8_t
{
    Close                                          = 0,
    AllIcon                                        = 1,
    OnlyWeaponIcon                                 = 2,
    OnlyStaticIcon                                 = 3,
    ERTIMerge_MAX                                  = 4

};

// Enum  DFMWeaponAssemble.ERTIEnable
enum class ERTIEnable : uint8_t
{
    DisableAll                                     = 0,
    EnableAll                                      = 1,
    EnableWeaponIcon                               = 2,
    EnableStaticIcon                               = 3,
    ERTIEnable_MAX                                 = 4

};

// Enum  DFMWeaponAssemble.EWeaponPresetGenerateType
enum class EWeaponPresetGenerateType : uint8_t
{
    CompletelyRandom                               = 0,
    MainAttribute                                  = 1,
    OnlyMainAttribute                              = 2,
    EWeaponPresetGenerateType_MAX                  = 3

};

// Enum  BattleField.EBattleState
enum class EBattleState : uint8_t
{
    SelfCapturing                                  = 0,
    OpponentCapturing                              = 1,
    Battling                                       = 2,
    EBattleState_MAX                               = 3

};

// Enum  BattleField.ECaptureState
enum class ECaptureState : uint8_t
{
    Captured                                       = 0,
    CapturedButBattling                            = 1,
    Neutral                                        = 2,
    ECaptureState_MAX                              = 3

};

// Enum  BattleField.EGameStateChange
enum class EGameStateChange : uint8_t
{
    CampScore                                      = 0,
    MVP                                            = 1,
    EGameStateChange_MAX                           = 2

};

// Enum  BattleField.EBattleFieldMapMarkerType
enum class EBattleFieldMapMarkerType : uint8_t
{
    None                                           = 0,
    CampMate                                       = 1,
    CampMateBeKilled                               = 2,
    EnemyOnFire                                    = 3,
    TeamMateBeKilled                               = 4,
    EnemyBeKilled                                  = 5,
    MarkedEnemy                                    = 6,
    HoldFlagEnemy                                  = 7,
    EBattleFieldMapMarkerType_MAX                  = 8

};

// Enum  BattleField.EBackGroundMusicType
enum class EBackGroundMusicType : uint8_t
{
    None                                           = 0,
    EnterTheGame                                   = 1,
    GameStart                                      = 2,
    Death                                          = 3,
    Deploy                                         = 4,
    Revive                                         = 5,
    Sector3BGM                                     = 6,
    EBackGroundMusicType_MAX                       = 7

};

// Enum  BattleField.EBGMContentType
enum class EBGMContentType : uint8_t
{
    Normal                                         = 0,
    DFvsHawke                                      = 1,
    EBGMContentType_MAX                            = 2

};

// Enum  BattleField.EBattleFieldTipType
enum class EBattleFieldTipType : uint8_t
{
    None                                           = 0,
    GameStart                                      = 1,
    LeaveWarZoneTemporarily                        = 2,
    DieforLeaveWarZone                             = 3,
    DominantLeadsby5                               = 4,
    UnderdogDownby5                                = 5,
    DominantScoresMoreThanHalf                     = 6,
    DominantScoresNinetyPercent                    = 7,
    GameOver                                       = 8,
    Settlement                                     = 9,
    EnemyTakeOverOccupySuccessfully                = 10,
    TakeOverOccupySuccessfully                     = 11,
    UnderdogOvertakes                              = 12,
    HalfTheGameTime                                = 13,
    OnlyTenPercentOfTheGameTimeIsLeft              = 14,
    BreakthroughGameStart                          = 100,
    BreakthroughSectorActived                      = 101,
    BreakthroughSectorOccupyStatusChanged          = 102,
    BreakthroughStayInSectorOccupyed               = 103,
    BreakthroughEnemyTakeOverOccupyMoreThanHalf    = 104,
    BreakthroughDesperateCounterattack             = 105,
    BreakthroughHalfTimeRemain                     = 106,
    BreakthroughNoTime                             = 107,
    BreakthroughTakeOverOccupyMoreThanHalf         = 108,
    EBattleFieldTipType_MAX                        = 109

};

// Enum  BattleField.EPlayerAudioType
enum class EPlayerAudioType : uint8_t
{
    None                                           = 0,
    GameFirstKill                                  = 1,
    TeammateIntoSuppressedState                    = 2,
    MedicPullsUpTeammate                           = 3,
    TripleKill                                     = 4,
    TeammateTripleKill                             = 5,
    ResidualBloodAntiKill                          = 6,
    ResidualBloodAntiKillByEnemy                   = 7,
    PlayerChangeBullets                            = 8,
    BeingHit                                       = 9,
    IntoSuppressedState                            = 10,
    Grenade                                        = 11,
    ThrowableInTwoM                                = 12,
    BeingGrenade                                   = 13,
    HelpMe1                                        = 14,
    HelpMe2                                        = 15,
    CaptainMakeTarget                              = 16,
    Medic                                          = 17,
    NeedAmmo                                       = 18,
    GiveTeamMateAmmo                               = 19,
    PreventEnemyFromOccupyByEnemy                  = 20,
    PreventEnemyFromOccupyByTeamMate               = 21,
    AAAAAAAAAAAA                                   = 22,
    SpotSniper                                     = 23,
    EnemyDownBySniper                              = 24,
    ChargeEnemyBuilding                            = 25,
    ChargeEnemyBuildingByTeamMate                  = 26,
    TargetMarked                                   = 27,
    SpotEnemy                                      = 28,
    KnockDownEnemy                                 = 29,
    EnemyKnockedDown                               = 30,
    KnockDownEnemyByHead                           = 31,
    EnemyKnockedDownByHead                         = 32,
    WatchOutExplosive                              = 33,
    Death                                          = 34,
    Dialogue_AmmoReceived                          = 35,
    Dialogue_Recover                               = 36,
    Dialogue_Die                                   = 37,
    EPlayerAudioType_MAX                           = 38

};

// Enum  BattleField.EBroadcastAudioType
enum class EBroadcastAudioType : uint8_t
{
    None                                           = 0,
    GameStart                                      = 1,
    LeaveWarZoneTemporarily                        = 2,
    DieforLeaveWarZone                             = 3,
    DominantLeadsby5                               = 4,
    DominantScoresMoreThanHalf                     = 5,
    DominantScoresNinetyPercent                    = 6,
    UnderdogOvertakes                              = 7,
    GameOver                                       = 8,
    TakeOverOccupyMoreThanHalf                     = 9,
    TakeOverOccupySuccessfully                     = 10,
    EnemyTakeOverOccupyMoreThanHalf                = 11,
    EnemyTakeOverOccupySuccessfully                = 12,
    BreakthroughGameStart                          = 100,
    BreakthroughSectorActived                      = 101,
    BreakthroughSectorOccupyStatusChanged          = 102,
    BreakthroughStayInSectorOccupyed               = 103,
    BreakthroughEnemyTakeOverOccupyMoreThanHalf    = 104,
    BreakthroughDesperateCounterattack             = 105,
    BreakthroughHalfTimeRemain                     = 106,
    BreakthroughNoTime                             = 107,
    BreakthroughSector2Win                         = 108,
    EBroadcastAudioType_MAX                        = 109

};

// Enum  BattleField.EPlayerAudioListener
enum class EPlayerAudioListener : uint8_t
{
    All                                            = 0,
    Owner                                          = 1,
    Team                                           = 2,
    TeamSelf                                       = 3,
    SameCamp                                       = 4,
    SameCampWithoutSelf                            = 5,
    EPlayerAudioListener_MAX                       = 6

};

// Enum  BattleField.EWeakTipsViewType
enum class EWeakTipsViewType : uint8_t
{
    None                                           = 0,
    TipsWeakBroadcast                              = 1,
    IconWeakBroadcast                              = 2,
    NumberWeakBroadcast                            = 3,
    IconNumberWeakBroadcast                        = 4,
    EWeakTipsViewType_MAX                          = 5

};

// Enum  BattleField.EStrongTipsViewType
enum class EStrongTipsViewType : uint8_t
{
    None                                           = 0,
    SpecialStrongBroadcast                         = 1,
    GeneralStrongBroadcast                         = 2,
    WirelessDialogBroadcast                        = 3,
    IconStrongBroadcast                            = 4,
    EStrongTipsViewType_MAX                        = 5

};

// Enum  BattleField.ETipLevelType
enum class ETipLevelType : uint8_t
{
    None                                           = 0,
    Strong                                         = 1,
    Weak                                           = 2,
    Order                                          = 3,
    ETipLevelType_MAX                              = 4

};

// Enum  BattleField.ETipColorType
enum class ETipColorType : uint8_t
{
    Normal                                         = 0,
    Positive                                       = 1,
    Negative                                       = 2,
    ETipColorType_MAX                              = 3

};

// Enum  BattleField.EContentType
enum class EContentType : uint8_t
{
    Normal                                         = 0,
    CampDiff                                       = 1,
    Custom                                         = 2,
    EContentType_MAX                               = 3

};

// Enum  BattleField.ENotifyListener
enum class ENotifyListener : uint8_t
{
    None                                           = 0,
    All                                            = 1,
    TargetPlayer                                   = 2,
    CurrentDominantCamp                            = 3,
    SameCamp                                       = 4,
    EnemyCamp                                      = 5,
    OffenseCamp                                    = 6,
    DefenseCamp                                    = 7,
    SameTeam                                       = 8,
    ENotifyListener_MAX                            = 9

};

// Enum  BattleField.EPropBindingType
enum class EPropBindingType : uint8_t
{
    BindingBinded                                  = 0,
    BindingNotBind                                 = 1,
    BindingTeammate                                = 2,
    EPropBindingType_MAX                           = 3

};

// Enum  BattleField.EPvpAIThreatLevel
enum class EPvpAIThreatLevel : uint8_t
{
    Undefined                                      = 0,
    Low                                            = 1,
    Middle                                         = 2,
    High                                           = 3,
    Max                                            = 4

};

// Enum  BattleField.EPvpAIVisibleState
enum class EPvpAIVisibleState : uint8_t
{
    Block                                          = 0,
    Foliage                                        = 1,
    Visible                                        = 2,
    EPvpAIVisibleState_MAX                         = 3

};

// Enum  BattleField.EPVPAIJobType
enum class EPVPAIJobType : uint8_t
{
    MoveToCapturePoint_Camp                        = 0,
    MoveToCapturePoint_Flank                       = 1,
    Invalid                                        = 2,
    EPVPAIJobType_MAX                              = 3

};

// Enum  BattleField.EPoseType
enum class EPoseType : uint8_t
{
    Low                                            = 0,
    High                                           = 1,
    Invalid                                        = 2,
    EPoseType_MAX                                  = 3

};

// Enum  BattleField.EPvpAIJobAssignType
enum class EPvpAIJobAssignType : uint8_t
{
    AbortOld                                       = 0,
    Interrupt                                      = 1,
    Enqueue                                        = 2,
    EPvpAIJobAssignType_MAX                        = 3

};

// Enum  Breakthrough.EBattleFieldMarkingItemType
enum class EBattleFieldMarkingItemType : uint8_t
{
    None                                           = 0,
    QuickChat                                      = 1,
    Marking                                        = 2,
    EBattleFieldMarkingItemType_MAX                = 3

};

// Enum  Breakthrough.ERankSkillBackgroundUIStyle
enum class ERankSkillBackgroundUIStyle : uint8_t
{
    E_None                                         = 0,
    E_CanUse                                       = 1,
    E_CantUse                                      = 2,
    E_Selected                                     = 3,
    E_MAX                                          = 4

};

// Enum  Breakthrough.EBattleFlagState
enum class EBattleFlagState : uint8_t
{
    None                                           = 0,
    Born                                           = 1,
    Captured                                       = 2,
    Dropped_AnchorCapture                          = 3,
    CoolingDown                                    = 4,
    EBattleFlagState_MAX                           = 5

};

// Enum  Breakthrough.EBattleFlagAnchorState
enum class EBattleFlagAnchorState : uint8_t
{
    None                                           = 0,
    HasFlag                                        = 1,
    NoFlag                                         = 2,
    FlagBornCoolingDown                            = 3,
    EBattleFlagAnchorState_MAX                     = 4

};

// Enum  Breakthrough.EVehicleSceneWeaponType
enum class EVehicleSceneWeaponType : uint8_t
{
    Vehicle                                        = 0,
    SceneWeapon                                    = 1,
    Skill                                          = 2,
    FootSolider                                    = 3,
    EVehicleSceneWeaponType_MAX                    = 4

};

// Enum  Breakthrough.EImpendingDeathClickTgLogType
enum class EImpendingDeathClickTgLogType : uint8_t
{
    None                                           = 0,
    GiveUpButtonClick                              = 1,
    MayDayButtonClick                              = 2,
    EImpendingDeathClickTgLogType_MAX              = 3

};

// Enum  Breakthrough.EOnePlayerOneSectorTLogDataType
enum class EOnePlayerOneSectorTLogDataType : uint8_t
{
    None                                           = 0,
    RedeployStayTime                               = 1,
    SwitchHeroStayTime                             = 2,
    BackpackStayTime                               = 3,
    KillNum                                        = 4,
    DeathNum                                       = 5,
    Score                                          = 6,
    SpawnRebornFlag                                = 7,
    TeammateRebornOnMyRebornFlag                   = 8,
    HalfJoinGame                                   = 9,
    EnterSectorAnchorNum                           = 10,
    EnterSectorAnchorTime                          = 11,
    EnterSectorAnchorFightTime                     = 12,
    SupportSkillAssist                             = 13,
    SupportSkillKill                               = 14,
    SupportSkillNum                                = 15,
    SwitchBag                                      = 16,
    SwitchArmItem                                  = 17,
    BuildOneSatellitedish                          = 18,
    EOnePlayerOneSectorTLogDataType_MAX            = 19

};

// Enum  Breakthrough.ERoundRedeployTLogDataType
enum class ERoundRedeployTLogDataType : uint8_t
{
    None                                           = 0,
    EnterFirstDeployViewTime                       = 1,
    BeginFirstDeployTime                           = 2,
    FirstOpenDeployViewTime                        = 3,
    ERoundRedeployTLogDataType_MAX                 = 4

};

// Enum  Breakthrough.ERescueFailureReason
enum class ERescueFailureReason : uint8_t
{
    ERescue_None                                   = 0,
    ERescue_Abandon_RescuerKilled                  = 1,
    ERescue_Abandon_RescuerGiveUp                  = 2,
    ERescue_MAX                                    = 3

};

// Enum  Breakthrough.EExplodeType
enum class EExplodeType : uint8_t
{
    PlayerSkill                                    = 0,
    Vehicle                                        = 1,
    FieldSupport                                   = 2,
    FieldSupportMissile                            = 3,
    EExplodeType_MAX                               = 4

};

// Enum  Breakthrough.ESectorAnchorState
enum class ESectorAnchorState : uint8_t
{
    DefendState                                    = 0,
    DefendNeutral                                  = 1,
    OffensiveNeutral                               = 2,
    OffensiveState                                 = 3,
    ESectorAnchorState_MAX                         = 4

};

// Enum  Breakthrough.ERebornPositionType
enum class ERebornPositionType : uint8_t
{
    None                                           = 0,
    Base                                           = 1,
    Anchor                                         = 2,
    Teammate                                       = 3,
    Beacon                                         = 4,
    VehicleOnBase                                  = 5,
    VehicleOnTeammate                              = 6,
    VehicleOnSameCamp                              = 7,
    ERebornPositionType_MAX                        = 8

};

// Enum  Breakthrough.EDynamicMusicCondition
enum class EDynamicMusicCondition : uint8_t
{
    EInvalid                                       = 0,
    EAttackerLeftVotes                             = 1,
    EDefenderLeftVotes                             = 2,
    ESectorOccupyProgress                          = 3,
    ELeftTime                                      = 4,
    EOverTimeSectorOnlyOneAnchorOccupyProgress     = 5,
    EOverTimeSectorMultiAnchorOccupyProgress       = 6,
    EMax                                           = 7,
    EDynamicMusicCondition_MAX                     = 8

};

// Enum  Breakthrough.ECommanderBeforeRedeployAudioType
enum class ECommanderBeforeRedeployAudioType : uint8_t
{
    None                                           = 0,
    CommandersShow                                 = 1,
    RedeployHint                                   = 2,
    NormalTeamAudio                                = 3,
    GoldTeamAudio                                  = 4,
    SelectDutyHint                                 = 5,
    SelectDutyTip                                  = 6,
    NormalTeamMemberAudio                          = 7,
    GoldTeamMemberAudio                            = 8,
    TeamListShow                                   = 9,
    ShowCoolSandBox                                = 10,
    ECommanderBeforeRedeployAudioType_MAX          = 11

};

// Enum  Breakthrough.EBreakthroughNarrativeTipTriggerType
enum class EBreakthroughNarrativeTipTriggerType : uint8_t
{
    None                                           = 0,
    FirstDeploy                                    = 1,
    SectorTrans                                    = 2,
    SectorTransAndLastSectorBigEventHappen         = 3,
    SectorTransAndLastSectorBigEventNotHappen      = 4,
    SectorFightTicketReachX                        = 5,
    SectorFightTicketCostX                         = 6,
    SettlementBigEventHappen                       = 7,
    SettlementBigEventNotHappen                    = 8,
    EBreakthroughNarrativeTipTriggerType_MAX       = 9

};

// Enum  Breakthrough.EBreakthroughTipType
enum class EBreakthroughTipType : uint8_t
{
    None                                           = 0,
    BreakthroughGameStartOffence                   = 1,
    BreakthroughGameStartDefence                   = 2,
    BreakthroughGameOverOffenceVictory             = 3,
    BreakthroughGameOverDefenceVictory             = 4,
    BreakthroughGameOverOffenceDefeat              = 5,
    BreakthroughGameOverDefenceDefeat              = 6,
    BreakthroughHalfTimeRemain                     = 7,
    BreakthroughNoTime                             = 8,
    LeaveWarZoneTemporarily                        = 9,
    DieforLeaveWarZone                             = 10,
    BreakthroughSectorActivedOffence               = 11,
    BreakthroughSectorActivedDefence               = 12,
    BreakthroughSectorOccupyStatusChangedOffence   = 13,
    BreakthroughSectorOccupyStatusChangedDefence   = 14,
    BreakthroughSectorClear                        = 15,
    BreakthroughRetreatQuickly                     = 16,
    BreakthroughLastSectorActivedOffence           = 17,
    BreakthroughLastSectorActivedDefence           = 18,
    BreakthroughEnemyEnterOurSectorAnchor          = 19,
    BreakthroughOurEnterEnemySectorAnchor          = 20,
    BreakthroughEnemyTakeOverOccupyMoreThanHalf    = 21,
    BreakthroughTakeOverOccupyMoreThanHalf         = 22,
    EnemyTakeOverOccupySuccessfully                = 23,
    TakeOverOccupySuccessfully                     = 24,
    BreakthroughLeftVotesRemaining80PercentOffence = 25,
    BreakthroughLeftVotesRemaining80PercentDefence = 26,
    BreakthroughLeftVotesRemaining50PercentOffence = 27,
    BreakthroughLeftVotesRemaining50PercentDefence = 28,
    BreakthroughLeftVotesRemaining25PercentOffence = 29,
    BreakthroughLeftVotesRemaining25PercentDefence = 30,
    BreakthroughLeftVotesRemaining15PercentOffence = 31,
    BreakthroughLeftVotesRemaining15PercentDefence = 32,
    BreakthroughEnemyLeftLowerThanX                = 33,
    BreakthroughIceLandFirstRedeployOffence        = 34,
    BreakthroughIceLandFirstRedeployDefence        = 35,
    BreakthroughIceLandShipBlownIntoRedeploy       = 36,
    BreakthroughIceLandShipNotBlownIntoRedeploy    = 37,
    BreakthroughIceLandOffenseBaseStartOffence     = 38,
    BreakthroughIceLandOffenseBaseStartDefence     = 39,
    BreakthroughDesperateCounterattack             = 40,
    BreakthroughOvertimeGameOffence                = 41,
    BreakthroughOvertimeGameDefence                = 42,
    BreakthroughOvertimeGameDefenderOccupyOneAnchorOffence = 43,
    BreakthroughOvertimeGameDefenderOccupyOneAnchorDefence = 44,
    BreakthroughWarTower3Active                    = 45,
    BreakthroughGuidedMissile                      = 46,
    BreakthroughSectorArtilerrate                  = 47,
    BreakthroughSectorSmoke                        = 48,
    BreakthroughVehicle                            = 49,
    BreakthroughRebornBeacons                      = 50,
    BreakthroughMidwayIntoTheGameOffence           = 51,
    BreakthroughMidwayIntoTheGameDefence           = 52,
    BreakthroughGuidedMissileReady                 = 53,
    BreakthroughSectorArtilerrateReady             = 54,
    BreakthroughSectorSmokeReady                   = 55,
    BreakthroughVehicleReady                       = 56,
    BreakthroughRebornBeaconsReady                 = 57,
    BreakthroughCommanderSkillReady                = 58,
    BreakthroughHighValueAnchorReady               = 59,
    BreakthroughHighThreatVehicleReady             = 60,
    BreakthroughFastDeployReady                    = 61,
    BreakthroughWarOrderTakeAnchorOrder            = 62,
    BreakthroughWarOrderTakeAnchorStrong           = 63,
    BreakthroughWarOrderKillTargetOrder            = 64,
    BreakthroughWarOrderKillTargetStrong           = 65,
    BreakthroughWarOrderBeTarget                   = 66,
    BreakthroughWarOrderKillTargetFinish           = 67,
    BreakthroughWarOrderKillTargetCancel           = 68,
    BreakthroughWarOrderTakeAnchorFinish           = 69,
    BreakthroughBigEventCrackedWarehouseHappen     = 70,
    BreakthroughBigEventIcelandTowerHappen         = 71,
    BreakthroughBigEventIcelandTowerHP50Percent    = 72,
    BreakthroughBigEventIcelandTowerHP30Percent    = 73,
    BreakthroughBigEventIcelandSectorTrans         = 74,
    BreakthroughBigEventIcelandSectorDisable       = 75,
    BreakthroughBigEventGibraltarHappen            = 76,
    BreakthroughSmallEventGibraltarFirstLine       = 77,
    BreakthroughSmallEventGibraltarSecondLine      = 78,
    BreakthroughTheLastSectorAnchorOffence         = 79,
    BreakthroughTheLastSectorAnchorDefence         = 80,
    BreakthroughEnemyEnterOurFinalSectorAnchor     = 81,
    BreakthroughOurEnterEnemyFinalSectorAnchor     = 82,
    ConquestMidwayIntoTheGame                      = 83,
    ConquestFriendlyOccupyOneSectorAddScore        = 84,
    ConquestEnemyOccupyOneSectorAddScore           = 85,
    ConquestFriendlyOccupyAllSector                = 86,
    ConquestEnemyOccupyAllSector                   = 87,
    ConquestFriendlyOccupyMoreSector               = 88,
    ConquestEnemyOccupyMoreSector                  = 89,
    ConquestFriendlyTicketTakeLead                 = 90,
    ConquestEnemyTicketTakeLead                    = 91,
    ConquestSoonLose                               = 92,
    ConquestSoonWin                                = 93,
    ConquestSectorOccupyStatusChangedOffence       = 94,
    ConquestSectorOccupyStatusChangedDefence       = 95,
    ConquestTicketReach25PercentLead               = 96,
    ConquestTicketReach25PercentFall               = 97,
    ConquestTicketReach50PercentLead               = 98,
    ConquestTicketReach50PercentFall               = 99,
    ConquestTicketReach75PercentLead               = 100,
    ConquestTicketReach75PercentFall               = 101,
    ConquestGameStartOffence                       = 102,
    ConquestGameStartDefence                       = 103,
    ConquestGameOverOffenceVictory                 = 104,
    ConquestGameOverDefenceVictory                 = 105,
    ConquestGameOverOffenceDefeat                  = 106,
    ConquestGameOverDefenceDefeat                  = 107,
    ConquestGameOverOffenceDraw                    = 108,
    ConquestGameOverDefenceDraw                    = 109,
    FlagGameOverOffenceVictory                     = 110,
    FlagGameOverDefenceVictory                     = 111,
    FlagGameOverOffenceDefeat                      = 112,
    FlagGameOverDefenceDefeat                      = 113,
    FlagGameOverOffenceDraw                        = 114,
    FlagGameOverDefenceDraw                        = 115,
    CaptureTheFlagCamp0                            = 116,
    CaptureTheFlagCamp1                            = 117,
    CaptureFlagWeDroppedTheFlag                    = 118,
    CaptureFlagEnemyDroppedTheFlag                 = 119,
    CaptureFlagWeCaptureTheFlag                    = 120,
    CaptureFlagEnemyCaptureTheFlag                 = 121,
    CaptureFlagSelfCaptureTheFlag                  = 122,
    CaptureFlagWeGoal                              = 123,
    CaptureFlagEnemyGoal                           = 124,
    CaptureFlagWeRefresh                           = 125,
    CaptureFlagEnemyRefresh                        = 126,
    CaptureFlagWeRefreshAfterOccupied              = 127,
    CaptureFlagEnemyRefreshAfterOccupied           = 128,
    SuperiorityCampTriggerAddTimeOnFlagMode        = 129,
    InferiorCampTriggerAddTimeOnFlagMode           = 130,
    CommanderBeLocalPlayer                         = 131,
    CommanderNew                                   = 132,
    CommanderHighThreatBeTarget                    = 133,
    CommanderHighThreatTarget                      = 134,
    CommanderFinishHighThreat                      = 135,
    CommanderFailHighThreat                        = 136,
    CommanderTempOccupyConcentratedFireSectorAnchorFriend = 137,
    CommanderTempOccupyConcentratedFireSectorAnchorEnemy = 138,
    CommanderFinishHoldConcentratedFireSectorAnchor = 139,
    CommanderFinishTakeConcentratedFireSectorAnchor = 140,
    CommanderFailConcentratedFireSectorAnchor      = 141,
    CommanderOursBeOurConcentratedFireSectorAnchor = 142,
    CommanderTheirsBeOurConcentratedFireSectorAnchor = 143,
    CommanderOursBeTheirConcentratedFireSectorAnchor = 144,
    CommanderTheirsBeTheirConcentratedFireSectorAnchor = 145,
    CommanderHighThreatOrder                       = 146,
    CommanderConcentratedFireSectorAnchorOrder     = 147,
    CommanderUseFastDeploySkill                    = 148,
    CommanderFastDeploySkillReady                  = 149,
    CommanderFastDeployDuration                    = 150,
    CommanderEnemyUseFastDeploySkill               = 151,
    TeamLeaderBeLocalPlayer                        = 152,
    TeamLeaderNew                                  = 153,
    CommanderChannelAdd                            = 154,
    CommanderChannelRemove                         = 155,
    CommanderChannelAddForSelfCamp                 = 156,
    GuideMobileBroadcastBreakthroughAttack         = 157,
    GuideMobileBroadcastBreakthroughDefend         = 158,
    GuideMobileBroadcastConquest                   = 159,
    GuideMobileAnchorFirstStartCapture             = 160,
    ChristmasAmmoBoxInteractionSuccess             = 161,
    SpringFestSatellitedishFirstSuccess            = 162,
    SpringFestSatellitedishEasterEgg1Success       = 163,
    SpringFestSatellitedishFinalEasterEggSuccess   = 164,
    NavalBattleIntercontinentalBallisticMissileLaunch = 165,
    NavalBattleIntercontinentalBallisticMissileExplode = 166,
    FaultFoggyWeatherPhaseOne                      = 167,
    FaultFoggyWeatherPhaseTwo                      = 168,
    CampVehicleNumAvailable                        = 169,
    FreeBuildCoastalDefenseArtillery               = 170,
    FreeBuildAntiAircraftGuns                      = 171,
    FreeBuildBunker                                = 172,
    AutoTriggerType                                = 210,
    AutoTriggerType1                               = 211,
    AutoTriggerType2                               = 212,
    AutoTriggerType3                               = 213,
    AutoTriggerType4                               = 214,
    AutoTriggerType5                               = 215,
    AutoTriggerType6                               = 216,
    AutoTriggerType7                               = 217,
    AutoTriggerType8                               = 218,
    AutoTriggerType9                               = 219,
    AutoTriggerType10                              = 220,
    AutoTriggerType11                              = 221,
    AutoTriggerType12                              = 222,
    AutoTriggerType13                              = 223,
    AutoTriggerType14                              = 224,
    AutoTriggerType15                              = 225,
    AutoTriggerType16                              = 226,
    AutoTriggerType17                              = 227,
    AutoTriggerType18                              = 228,
    AutoTriggerType19                              = 229,
    AutoTriggerType20                              = 230,
    AutoTriggerType21                              = 231,
    AutoTriggerType22                              = 232,
    AutoTriggerType23                              = 233,
    AutoTriggerType24                              = 234,
    AutoTriggerType25                              = 235,
    AutoTriggerType26                              = 236,
    AutoTriggerType27                              = 237,
    AutoTriggerType28                              = 238,
    AutoTriggerType29                              = 239,
    AutoTriggerType30                              = 240,
    AutoTriggerType31                              = 241,
    AutoTriggerType32                              = 242,
    AutoTriggerType33                              = 243,
    AutoTriggerType34                              = 244,
    AutoTriggerType35                              = 245,
    AutoTriggerType36                              = 246,
    AutoTriggerType37                              = 247,
    AutoTriggerType38                              = 248,
    AutoTriggerType39                              = 249,
    AutoTriggerType40                              = 250,
    EBreakthroughTipType_MAX                       = 251

};

// Enum  Breakthrough.ERepositionReason
enum class ERepositionReason : uint8_t
{
    None                                           = 0,
    Expanding                                      = 1,
    Retracting                                     = 2,
    Insert                                         = 3,
    Delete                                         = 4,
    ERepositionReason_MAX                          = 5

};

// Enum  Breakthrough.EBattleSupportViewState
enum class EBattleSupportViewState : uint8_t
{
    E_None                                         = 0,
    E_FirstOpen                                    = 1,
    E_Selected                                     = 2,
    E_Cancled                                      = 3,
    E_Closed                                       = 4,
    E_MAX                                          = 5

};

// Enum  Breakthrough.ERequestCancelAutoDeployReturnCode
enum class ERequestCancelAutoDeployReturnCode : uint8_t
{
    Success                                        = 0,
    Error_NotHighView                              = 1,
    ERequestCancelAutoDeployReturnCode_MAX         = 2

};

// Enum  Breakthrough.ERequestLockTeammateLocationReturnCode
enum class ERequestLockTeammateLocationReturnCode : uint8_t
{
    Success                                        = 0,
    Error_RebornCharacterIsNull                    = 1,
    Error_RebornCharacterControllerIsNull          = 2,
    Error_RebornCharacterNotSelf                   = 3,
    Error_HaveBeReborn                             = 4,
    Error_CharacterIsNull                          = 5,
    Error_OwnerPlayerStateIsNull                   = 6,
    Error_OwnerCharacterCampIsInvalid              = 7,
    Error_GameStateIsNull                          = 8,
    Error_CurrentStageIsWaitingForPlayers          = 9,
    Error_NotDead                                  = 10,
    Error_CurrentStateIsNotHighView                = 11,
    Error_InCD                                     = 12,
    Error_SelectActorIdButNotFindActor             = 13,
    Error_SelectEmpty                              = 14,
    Error_NotTeamPlayer                            = 15,
    Error_TeamPlayerDie                            = 16,
    Error_TeamPlayerInBattle                       = 17,
    Error_TeamPlayerCurrentStateCannotRedeploy     = 18,
    Error_TeamPlayerNotInSafeZone                  = 19,
    Error_TeamPlayerInTransition                   = 20,
    Error_TeamPlayerInVehicle                      = 21,
    Error_VehicleFull                              = 22,
    Error_VehicleNotSelfCamp                       = 23,
    Error_VehicleNotInSafeZone                     = 24,
    Error_RebornFlagNotSelfCamp                    = 25,
    Error_RebornFlagNoAvailableTime                = 26,
    Error_EnemySpawnAreaHub                        = 27,
    Error_SpawnAreaHubIsNotActive                  = 28,
    Error_SpawnAreaHubDisableFootSoldier           = 29,
    Error_AnchorBeOccupy                           = 30,
    Error_SectorIsNotActive                        = 31,
    Error_PlayerDeployVehicleCD                    = 32,
    Error_LockedVehicleSpawnerNotInSpawnAreaHub    = 33,
    Error_LockedVehicleSpawnerTypeNotMatch         = 34,
    Error_VehicleTypeNotInSpawnAreaHub             = 35,
    Error_VehicleSpawnerInCD                       = 36,
    Error_NoAvailableVehicleSpawner                = 37,
    Error_VehicleSpawnerIsAlive                    = 38,
    Error_TeamMateNoSpace                          = 39,
    Error_SceneWeaponNotSameTeam                   = 40,
    Error_SwitchSceneWeaponToPlayerFailed          = 41,
    ERequestLockTeammateLocationReturnCode_MAX     = 42

};

// Enum  Breakthrough.ERequestRedeployReturnCode
enum class ERequestRedeployReturnCode : uint8_t
{
    Success                                        = 0,
    Error_RebornCharacterIsNull                    = 1,
    Error_RebornCharacterControllerIsNull          = 2,
    Error_RebornCharacterNotSelf                   = 3,
    Error_HaveBeReborn                             = 4,
    Error_CharacterIsNull                          = 5,
    Error_OwnerPlayerStateIsNull                   = 6,
    Error_OwnerCharacterCampIsInvalid              = 7,
    Error_CurrentArmBagHasDisableOrLockedWeaponItem = 8,
    Error_GameStateIsNull                          = 9,
    Error_CurrentStageIsWaitingForPlayers          = 10,
    Error_NotDead                                  = 11,
    Error_CurrentStateIsNotHighView                = 12,
    Error_InCD                                     = 13,
    Error_SelectActorIdButNotFindActor             = 14,
    Error_SelectEmpty                              = 15,
    Error_SelectPlayerNotPreLock                   = 16,
    Error_SelectPlayerIdNotMatchPreLock            = 17,
    Error_NotTeamPlayer                            = 18,
    Error_TeamPlayerDie                            = 19,
    Error_TeamPlayerInBattle                       = 20,
    Error_TeamPlayerCurrentStateCannotRedeploy     = 21,
    Error_TeamPlayerNotInSafeZone                  = 22,
    Error_TeamPlayerInTransition                   = 23,
    Error_TeamPlayerInVehicle                      = 24,
    Error_VehicleIsDead                            = 25,
    Error_VehicleFull                              = 26,
    Error_VehicleNotSelfCamp                       = 27,
    Error_VehicleNotInSafeZone                     = 28,
    Error_RebornFlagNotSelfCamp                    = 29,
    Error_RebornFlagNoAvailableTime                = 30,
    Error_NavMeshSystemIsNull                      = 31,
    Error_NavMeshIsNull                            = 32,
    Error_RebornFlagNotOnNavMesh                   = 33,
    Error_EnemySpawnAreaHub                        = 34,
    Error_SpawnAreaHubIsNotActive                  = 35,
    Error_SpawnAreaHubDisableFootSoldier           = 36,
    Error_AnchorBeOccupy                           = 37,
    Error_SectorIsNotActive                        = 38,
    Error_PlayerDeployVehicleCD                    = 39,
    Error_PlayerDeployVehicleMoreSingleUseRestrict = 40,
    Error_LockedVehicleSpawnerNotInSpawnAreaHub    = 41,
    Error_LockedVehicleSpawnerTypeNotMatch         = 42,
    Error_VehicleTypeNotInSpawnAreaHub             = 43,
    Error_VehicleSpawnerInCD                       = 44,
    Error_NoAvailableVehicleSpawner                = 45,
    Error_VehicleSpawnerIsAlive                    = 46,
    Error_TeamMateNoSpace                          = 47,
    Error_SceneWeaponNotSameTeam                   = 48,
    Error_SwitchSceneWeaponToPlayerFailed          = 49,
    ERequestRedeployReturnCode_MAX                 = 50

};

// Enum  Breakthrough.ERedeployLockVehicleReturnCode
enum class ERedeployLockVehicleReturnCode : uint8_t
{
    Success                                        = 0,
    Error_SelectActorIdButNotFindActor             = 1,
    Error_NotVehicle                               = 2,
    ERedeployLockVehicleReturnCode_MAX             = 3

};

// Enum  Breakthrough.ERedeployLockVehicleSpawnerReturnCode
enum class ERedeployLockVehicleSpawnerReturnCode : uint8_t
{
    Success                                        = 0,
    Error_PlayerInRedeployCD                       = 1,
    Error_PlayerControllerIsNull                   = 2,
    Error_PlayerCharacterIsNull                    = 3,
    Error_PlayerStateIsNull                        = 4,
    Error_SpawnAreaHubCampError                    = 5,
    Error_VehicleTypeNotInSpawnAreaHub             = 6,
    Error_VehicleSpawnerInCD                       = 7,
    Error_NoAvailableVehicleSpawner                = 8,
    Error_VehicleSpawnerIsAllDeployed              = 9,
    ERedeployLockVehicleSpawnerReturnCode_MAX      = 10

};

// Enum  Breakthrough.ERedeployStoreType
enum class ERedeployStoreType : uint8_t
{
    ERedeployStore_None                            = 0,
    ERedeployStore_MainWeapon                      = 1,
    ERedeployStore_SecondaryWeapon                 = 2,
    ERedeployStore_MeleeWeapon                     = 3,
    ERedeployStore_ArmItem                         = 4,
    ERedeployStore_Vehicle                         = 5,
    ERedeployStore_WeaponPreset                    = 6,
    ERedeployStore_VehicleStore                    = 7,
    ERedeployStore_VehiclePartStore                = 8,
    ERedeployStore_MAX                             = 9

};

// Enum  Breakthrough.EBreakthroughRedeployButtonState
enum class EBreakthroughRedeployButtonState : uint8_t
{
    WaitDeploy                                     = 5,
    Deploying                                      = 6,
    Deployed                                       = 7,
    EBreakthroughRedeployButtonState_MAX           = 8

};

// Enum  Breakthrough.EPlayerGamePlayImageState
enum class EPlayerGamePlayImageState : uint8_t
{
    None                                           = 0,
    UsingMed                                       = 1,
    Driving                                        = 2,
    ArmForce                                       = 3,
    Dead                                           = 4,
    Disconnect                                     = 5,
    QuitGame                                       = 6,
    EPlayerGamePlayImageState_MAX                  = 7

};

// Enum  Breakthrough.ETeammateStateType
enum class ETeammateStateType : uint8_t
{
    ETeammateStateType_Normal                      = 0,
    ETeammateStateType_Dying                       = 1,
    ETeammateStateType_Dead                        = 2,
    ETeammateStateType_Disconnect                  = 3,
    ETeammateStateType_Escaped                     = 4,
    ETeammateStateType_QuitGame                    = 5,
    ETeammateStateType_Count                       = 6,
    ETeammateStateType_MAX                         = 7

};

// Enum  Breakthrough.EBattleFlagAnchorUIState
enum class EBattleFlagAnchorUIState : uint8_t
{
    None                                           = 0,
    HasFlag                                        = 1,
    NoFlag                                         = 2,
    CoolingDown                                    = 3,
    CaptureEnemyFlag                               = 4,
    CaptureEnemyFlagAndCoolingDown                 = 5,
    EBattleFlagAnchorUIState_MAX                   = 6

};

// Enum  Breakthrough.EBattleFlagAnchorTextState
enum class EBattleFlagAnchorTextState : uint8_t
{
    None                                           = 0,
    SelfCampAnchorHasFlag                          = 1,
    SelfCampAnchorAndSelfCaptureFlag               = 2,
    EnemyCampAnchorHasFlag                         = 3,
    EBattleFlagAnchorTextState_MAX                 = 4

};

// Enum  Breakthrough.EBattleFlagTextState
enum class EBattleFlagTextState : uint8_t
{
    None                                           = 0,
    SelfCampFlagBeCaptured                         = 1,
    SelfCampFlagDroppedOrAvailable                 = 2,
    EnemyCampFlagBeCaptured                        = 3,
    EnemyCampFlagDroppedOrAvailable                = 4,
    EBattleFlagTextState_MAX                       = 5

};

// Enum  Breakthrough.EChangeableStatusType
enum class EChangeableStatusType : uint8_t
{
    None                                           = 0,
    Christmas2024                                  = 1,
    SpringFestival2025                             = 2,
    EChangeableStatusType_MAX                      = 3

};

// Enum  Breakthrough.ERecycleFreeBuildFortificationReturnCode
enum class ERecycleFreeBuildFortificationReturnCode : uint8_t
{
    Success                                        = 0,
    Error_OperatorCharacterNull                    = 1,
    Error_NoSkillConfig                            = 2,
    Error_GameStateNull                            = 3,
    Error_OperatorPlayerStateNull                  = 4,
    Error_NoAuthority                              = 5,
    Error_SceneWeaponNull                          = 6,
    Error_PlayerInSceneWeapon                      = 7,
    ERecycleFreeBuildFortificationReturnCode_MAX   = 8

};

// Enum  Breakthrough.EFortificationBuildWeapon
enum class EFortificationBuildWeapon : uint8_t
{
    EFortificationBuildWeapon_None                 = 0,
    EFortificationBuildWeapon_Hammer               = 1,
    EFortificationBuildWeapon_MAX                  = 2

};

// Enum  Breakthrough.EFortificationType
enum class EFortificationType : uint8_t
{
    EFortificationType_None                        = 0,
    EFortificationType_AmmoBox                     = 1,
    EFortificationType_SceneWeapon                 = 2,
    EFortificationType_BreakableItem               = 3,
    EFortificationType_FreeConstruction            = 4,
    EFortificationType_MAX                         = 5

};

// Enum  Breakthrough.EBreakthroughPlayerLifeStats
enum class EBreakthroughPlayerLifeStats : uint8_t
{
    TotalFightAsCommander                          = 0,
    Commander_Win                                  = 1,
    Commander_Gametime                             = 2,
    Commander_Score                                = 3,
    Commander_Kill                                 = 4,
    Commander_Death                                = 5,
    Commander_Like                                 = 6,
    Commander_Recommand                            = 7,
    Win_Ratio                                      = 8,
    Kill_By_Vehicle_Per_Minute                     = 9,
    Defeat_By_Per_Minute                           = 10,
    Help_Per_Minute                                = 11,
    Percentile_Of_Win_Ration                       = 12,
    Percentile_Of_Kill_By_Vehicle_Per_Minute       = 13,
    Percentile_Of_Defeat_By_Per_Minute             = 14,
    Percentile_Of_Help_Per_Minute                  = 15,
    Commander_Play                                 = 16,
    TotalNum                                       = 17,
    EBreakthroughPlayerLifeStats_MAX               = 18

};

// Enum  Breakthrough.EBreakthroughStage
enum class EBreakthroughStage : uint8_t
{
    None                                           = 0,
    LoadingMap                                     = 1,
    WaitingForPlayers                              = 2,
    PreElection                                    = 3,
    OnElection                                     = 4,
    ElectionResult                                 = 5,
    PreTeamConstruct                               = 6,
    OnTeamConstruct                                = 7,
    PostTeamConstruct                              = 8,
    PreMatch                                       = 9,
    EntryCutscene                                  = 10,
    Fighting                                       = 11,
    BattleEnd                                      = 12,
    EBreakthroughStage_MAX                         = 13

};

// Enum  Breakthrough.ESlotCompType
enum class ESlotCompType : uint8_t
{
    ESlotCompType_None                             = 0,
    ESlotCompType_Countdown                        = 1,
    ESlotCompType_Using                            = 2,
    ESlotCompType_Selected                         = 3,
    ESlotCompType_SmallLock                        = 4,
    ESlotCompType_Ban                              = 5,
    ESlotCompType_CommonPoint                      = 6,
    ESlotCompType_OnlyDFIcon                       = 7,
    ESlotCompType_Custom                           = 8,
    ESlotCompType_MAX                              = 9

};

// Enum  Breakthrough.ERedeployZOrderInsideRedeployMarker
enum class ERedeployZOrderInsideRedeployMarker : uint8_t
{
    None                                           = 0,
    SelectQuad                                     = 1,
    VehicleHub                                     = 100,
    Top                                            = 200,
    ERedeployZOrderInsideRedeployMarker_MAX        = 201

};

// Enum  Breakthrough.ERedeployShowStage
enum class ERedeployShowStage : uint8_t
{
    Global                                         = 0,
    Zoom                                           = 1,
    ERedeployShowStage_MAX                         = 2

};

// Enum  Breakthrough.ERedeployMarkerType
enum class ERedeployMarkerType : uint8_t
{
    None                                           = 0,
    SectorText                                     = 1,
    CampPoint                                      = 2,
    CampPointWithVehicle                           = 3,
    VehicleSelectQuad                              = 4,
    SameCampRebornFlag                             = 5,
    EnemyCampRebornFlag                            = 6,
    TeamDie                                        = 7,
    SameCampDie                                    = 8,
    EnemyCampDie                                   = 9,
    VehiclePoint                                   = 10,
    NeutralVehiclePoint                            = 11,
    EnemyCampVehiclePoint                          = 12,
    SameCampVehiclePoint                           = 13,
    TeamVehiclePoint                               = 14,
    EnemyCampPoint                                 = 15,
    SameCampPoint                                  = 16,
    TeammatePoint                                  = 17,
    SameTeamLeader                                 = 18,
    SectorAnchorInBattle                           = 19,
    SectorAnchorNormal                             = 20,
    RebornFlag                                     = 21,
    SelectedPoint                                  = 22,
    RandomReborn                                   = 23,
    StaticPoint                                    = 24,
    TeamStaticPoint                                = 25,
    CampStaticPoint                                = 26,
    EnemyStaticPoint                               = 27,
    CaptureFlagBase                                = 28,
    ERedeployMarkerType_MAX                        = 29

};

// Enum  Breakthrough.ERedeployKeybordMoveDirection
enum class ERedeployKeybordMoveDirection : uint8_t
{
    None                                           = 0,
    Up                                             = 1,
    Down                                           = 2,
    Left                                           = 3,
    Right                                          = 4,
    ERedeployKeybordMoveDirection_MAX              = 5

};

// Enum  Breakthrough.EReDeployVehicleItemViewUnDeployReason
enum class EReDeployVehicleItemViewUnDeployReason : uint8_t
{
    None                                           = 0,
    TriggerSingleUseLimitation                     = 1,
    NoAvailableVehicle                             = 2,
    VehicleSpawnerCD                               = 3,
    PlayerDeployVehicleCD                          = 4,
    EReDeployVehicleItemViewUnDeployReason_MAX     = 5

};

// Enum  Breakthrough.EFlagAudioType
enum class EFlagAudioType : uint8_t
{
    E_Flag_Raise                                   = 0,
    E_Flag_Down                                    = 1,
    E_Flag_MoveDownStop                            = 2,
    E_Flag_MoveTopStop                             = 3,
    E_Flag_MAX                                     = 4

};

// Enum  Breakthrough.EFlagStlyeType
enum class EFlagStlyeType : uint8_t
{
    E_FlagNeutralType                              = 0,
    E_FlagDefenseType                              = 1,
    E_FlagOffenseType                              = 2,
    E_MAX                                          = 3

};

// Enum  Breakthrough.ESectorAnchorFlagState
enum class ESectorAnchorFlagState : uint8_t
{
    E_FlagDisActive                                = 0,
    E_FlagOwnedByDefense                           = 1,
    E_FlagDefenseLeading                           = 2,
    E_FlagNeutral                                  = 3,
    E_FlagOffenseLeading                           = 4,
    E_FlagOwnedByOffense                           = 5,
    E_MAX                                          = 6

};

// Enum  IrisWorld.ERaidStage
enum class ERaidStage : uint8_t
{
    NONE                                           = 0,
    RAID_DISPLAY                                   = 1,
    CONDITION_SELECT                               = 2,
    MISSION_DECIDE                                 = 3,
    MISSION_PREPARE                                = 4,
    MISSION_START                                  = 5,
    MISSION_COMPLETE                               = 6,
    RAID_COMPLETE                                  = 7,
    RAID_MISSION_FAILED                            = 8,
    RAID_ALLDIE                                    = 9,
    RAID_FAILED                                    = 10,
    ERaidStage_MAX                                 = 11

};

// Enum  IrisWorld.EPVEBuyItemErrorCode
enum class EPVEBuyItemErrorCode : uint8_t
{
    Success                                        = 0,
    ItemNotExit                                    = 1,
    AddToInvError                                  = 2,
    MeritIsNotEnough                               = 3,
    EPVEBuyItemErrorCode_MAX                       = 4

};

// Enum  IrisWorld.ESubGameModeType
enum class ESubGameModeType : uint8_t
{
    None                                           = 0,
    FrontEndStart                                  = 1,
    GunSmith                                       = 2,
    SafeHouse                                      = 3,
    ESubGameModeType_MAX                           = 4

};

// Enum  IrisWorld.EShContainerType
enum class EShContainerType : uint8_t
{
    Reward                                         = 0,
    Collection1                                    = 1,
    Collection2                                    = 2,
    Collection3                                    = 3,
    EShContainerType_MAX                           = 4

};

// Enum  IrisWorld.EStrongholdState
enum class EStrongholdState : uint8_t
{
    EFailed                                        = 0,
    EInProgress                                    = 1,
    EOccupied                                      = 2,
    EStrongholdState_MAX                           = 3

};

// Enum  IrisWorld.ERaidMapMarkerType
enum class ERaidMapMarkerType : uint8_t
{
    None                                           = 0,
    Valkyrae                                       = 1,
    Train                                          = 2,
    LiLi                                           = 3,
    EnemyVehicle                                   = 4,
    ArmoredVehicle                                 = 5,
    Tank                                           = 6,
    EnemyOnFire                                    = 7,
    EnemyBeSpotted                                 = 8,
    ERaidMapMarkerType_MAX                         = 9

};

// Enum  SafeHouse.DepartmentTitleState
enum class DepartmentTitleState : uint8_t
{
    None                                           = 0,
    Hide                                           = 1,
    Show                                           = 2,
    DepartmentTitleState_MAX                       = 3

};

// Enum  SafeHouse.IconState
enum class IconState : uint8_t
{
    None                                           = 0,
    Hide                                           = 1,
    ShowIcon                                       = 2,
    ShowName                                       = 3,
    IconState_MAX                                  = 4

};

// Enum  SafeHouse.NPCIconState
enum class NPCIconState : uint8_t
{
    None                                           = 0,
    Hide                                           = 1,
    ShowName                                       = 2,
    NPCIconState_MAX                               = 3

};

// Enum  SafeHouse.SafeHouseDepartmentType
enum class SafeHouseDepartmentType : uint8_t
{
    None                                           = 0,
    RD                                             = 1,
    Combat                                         = 2,
    Med                                            = 3,
    TE                                             = 4,
    Tactical                                       = 5,
    SafeHouseDepartmentType_MAX                    = 6

};

// Enum  SafeHouse.SafeHouseNPCType
enum class SafeHouseNPCType : uint8_t
{
    None                                           = 0,
    CommonNPC                                      = 1,
    Insurance                                      = 2,
    Merchant                                       = 3,
    Scavenger                                      = 4,
    SafeHouseNPCType_MAX                           = 5

};

// Enum  SafeHouse.SafeHouseInteractiveType
enum class SafeHouseInteractiveType : uint8_t
{
    None                                           = 0,
    OpenUI                                         = 1,
    PlayDialogue                                   = 2,
    CallFunction                                   = 3,
    SafeHouseInteractiveType_MAX                   = 4

};

// Enum  GM.EClimbVaultResult
enum class EClimbVaultResult : uint8_t
{
    EChoice_None                                   = 0,
    Succeed                                        = 1,
    NoObstacle                                     = 2,
    TouchAngle                                     = 3,
    ObstacleHeight                                 = 4,
    ApexPoint                                      = 5,
    ObstacleAbruptSlope                            = 6,
    ObstacleWidth                                  = 7,
    CollideOverHead                                = 8,
    CollideOverHead_TopNearTarget                  = 9,
    EClimbVaultResult_MAX                          = 10

};

// Enum  Hall.EMainFlowCtrlType
enum class EMainFlowCtrlType : uint8_t
{
    MainFlowCtrl_SOL                               = 0,
    MainFlowCtrl_MP                                = 1,
    MainFlowCtrl_MAX                               = 2

};

// Enum  Hall.EHallDisplayTargetType
enum class EHallDisplayTargetType : uint8_t
{
    None                                           = 0,
    Character                                      = 1,
    Item                                           = 2,
    Weapon                                         = 3,
    Vehicle                                        = 4,
    WeaponPendant                                  = 5,
    SafeBox                                        = 6,
    EHallDisplayTargetType_MAX                     = 7

};

// Enum  Hall.EHallCharacterAnim
enum class EHallCharacterAnim : uint8_t
{
    PrevAnim0                                      = 0,
    PrevAnim1                                      = 1,
    PrevAnim2                                      = 2,
    PrevAnim3                                      = 3,
    PrevAnim4                                      = 4,
    PrevAnim5                                      = 5,
    PrevAnim6                                      = 6,
    PrevAnim7                                      = 7,
    PrevAnim8                                      = 8,
    PrevAnim9                                      = 9,
    PrevAnim10                                     = 10,
    PrevAnim11                                     = 11,
    PrevAnim12                                     = 12,
    PrevAnim13                                     = 13,
    PrevAnim14                                     = 14,
    PrevAnim15                                     = 15,
    PrevAnim16                                     = 16,
    PrevAnim17                                     = 17,
    PrevAnim18                                     = 18,
    PrevAnim19                                     = 19,
    PrevAnim20                                     = 20,
    PrevAnim21                                     = 21,
    EHallCharacterAnim_MAX                         = 22

};

// Enum  Hall.EPrevAnimHallCharacter
enum class EPrevAnimHallCharacter : uint8_t
{
    PrevAnimCharacter0                             = 0,
    PrevAnimCharacter1                             = 1,
    PrevAnimCharacter2                             = 2,
    PrevAnimCharacter3                             = 3,
    PrevAnimCharacter4                             = 4,
    PrevAnimCharacter5                             = 5,
    PrevAnimCharacter6                             = 6,
    PrevAnimCharacter7                             = 7,
    PrevAnimCharacter8                             = 8,
    PrevAnimCharacter9                             = 9,
    PrevAnimCharacter10                            = 10,
    PrevAnimCharacter11                            = 11,
    PrevAnimCharacter12                            = 12,
    PrevAnimCharacter13                            = 13,
    PrevAnimCharacter14                            = 14,
    PrevAnimCharacter15                            = 15,
    PrevAnimCharacter16                            = 16,
    PrevAnimCharacter17                            = 17,
    PrevAnimCharacter18                            = 18,
    PrevAnimCharacter19                            = 19,
    PrevAnimCharacter20                            = 20,
    PrevAnimCharacter21                            = 21,
    PrevAnimCharacter22                            = 22,
    PrevAnimCharacter23                            = 23,
    PrevAnimCharacter24                            = 24,
    EPrevAnimHallCharacter_MAX                     = 25

};

// Enum  Hall.ELoadLevelStateSeq
enum class ELoadLevelStateSeq : uint8_t
{
    ELoadLevelStateSequence                        = 0,
    ELoadLevelStateAvatar                          = 1,
    ELoadLevelStateFinish                          = 2,
    ELoadLevelStateSeq_MAX                         = 3

};

// Enum  Hall.EMagicTowerRoleType
enum class EMagicTowerRoleType : uint8_t
{
    None                                           = 0,
    Item                                           = 1,
    Monster                                        = 2,
    NPC                                            = 3,
    EMagicTowerRoleType_MAX                        = 4

};

// Enum  Hall.EHallDisplayTouchType
enum class EHallDisplayTouchType : uint8_t
{
    None                                           = 0,
    OneFingerTouch                                 = 1,
    TwoFingerTouch                                 = 2,
    EHallDisplayTouchType_MAX                      = 3

};

// Enum  Hall.EHallRotationType
enum class EHallRotationType : uint8_t
{
    None                                           = 0,
    Character                                      = 1,
    Camera                                         = 2,
    EHallRotationType_MAX                          = 3

};

// Enum  Hall.EHallDisplayType
enum class EHallDisplayType : uint8_t
{
    None                                           = 0,
    Mall                                           = 1,
    Individual                                     = 2,
    BattlePass                                     = 3,
    Activity                                       = 4,
    Collection                                     = 5,
    LevelUnlock                                    = 6,
    Blueprint                                      = 7,
    Capture2D                                      = 8,
    Resever1                                       = 91,
    Resever2                                       = 92,
    Resever3                                       = 93,
    Resever4                                       = 94,
    Resever5                                       = 95,
    EHallDisplayType_MAX                           = 96

};

// Enum  Hall.EHallCharacterLevelSequenceState
enum class EHallCharacterLevelSequenceState : uint8_t
{
    None                                           = 0,
    Loading                                        = 1,
    Loaded                                         = 2,
    Processing                                     = 3,
    Finished                                       = 4,
    Done                                           = 5,
    EHallCharacterLevelSequenceState_MAX           = 6

};

// Enum  Hall.EHallCameraTouchType
enum class EHallCameraTouchType : uint8_t
{
    None                                           = 0,
    OneFingerTouch                                 = 1,
    TwoFingerTouch                                 = 2,
    EHallCameraTouchType_MAX                       = 3

};

// Enum  Hall.EHallCharacterDisplayStage
enum class EHallCharacterDisplayStage : uint8_t
{
    Nothing                                        = 0,
    HallNormal                                     = 1,
    Hall_Hero                                      = 2,
    Deposit                                        = 3,
    RoleInfo                                       = 4,
    HeroDisplay                                    = 5,
    SettlementSucceed_Stage1                       = 6,
    SettlementSucceed_Stage2                       = 7,
    SettlementSucceed_Stage2_Team                  = 8,
    SettlementSucceed_Stage3                       = 9,
    SettlementFailed_Stage1                        = 10,
    SettlementFailed_Stage2                        = 11,
    SettlementFailed_Stage2_Team                   = 12,
    IrisPreparation                                = 13,
    EHallCharacterDisplayStage_MAX                 = 14

};

// Enum  Hall.EHallMainDisplayType
enum class EHallMainDisplayType : uint8_t
{
    None                                           = 0,
    Main                                           = 1,
    Team                                           = 2,
    Equip                                          = 3,
    Depository                                     = 4,
    Profile                                        = 5,
    Hero                                           = 6,
    Fashion                                        = 7,
    Fashion_Head                                   = 8,
    Fashion_Upper                                  = 9,
    Fashion_Lower                                  = 10,
    Fashion_Bag                                    = 11,
    Fashion_Overview                               = 12,
    Weapon                                         = 13,
    Settlement_Succeed                             = 14,
    Settlement_Succeed_Stage2                      = 15,
    Settlement_Succeed_Team_Near                   = 16,
    Settlement_Succeed_Team_Far                    = 17,
    Settlement_Failed                              = 18,
    Settlement_Failed_Team                         = 19,
    TakingSupplies                                 = 20,
    TakingMedicine                                 = 21,
    HeroHallInSeq                                  = 22,
    IrisPreparation                                = 23,
    Weapon_Item1                                   = 24,
    BattleFieldInTeamPrepare                       = 25,
    BattleFieldInTeam                              = 26,
    CrackedSettlementMVP1                          = 27,
    CrackedSettlementMVP2                          = 28,
    CrackedSettlementMVP3                          = 29,
    CrackedSettlementMVP4                          = 30,
    CrackedSettlementTeam                          = 31,
    CrackedSettlementMVP1Moving                    = 32,
    CrackedSettlementMVP2Moving                    = 33,
    CrackedSettlementMVP3Moving                    = 34,
    CrackedSettlementMVP4Moving                    = 35,
    CrackedSettlementTeamMoving                    = 36,
    WeaponZoom                                     = 37,
    WeaponZoom                                     = 38,
    Equip2                                         = 39,
    EquipMedicine                                  = 40,
    EHallMainDisplayType_MAX                       = 41

};

// Enum  Hall.ELoadLevelState
enum class ELoadLevelState : uint8_t
{
    ELoadLevelStateInit                            = 0,
    ELoadLevelStateUnLoadPre                       = 1,
    ELoadLevelStateLoad                            = 2,
    ELoadLevelStateFinish                          = 3,
    ELoadLevelStateNeedRefresh                     = 4,
    ELoadLevelState_MAX                            = 5

};

// Enum  Hall.ELoadLevelOpType
enum class ELoadLevelOpType : uint8_t
{
    ELoadLevelOpType_Load                          = 0,
    ELoadLevelOpType_Unload                        = 1,
    ELoadLevelOpType_MAX                           = 2

};

// Enum  Hall.ETransformType
enum class ETransformType : uint8_t
{
    Transform                                      = 0,
    Attach                                         = 1,
    ETransformType_MAX                             = 2

};

// Enum  Hall.EMandelBrickStatus
enum class EMandelBrickStatus : uint8_t
{
    MandelBrickStatus_UnOpen                       = 0,
    MandelBrickStatus_Openning70                   = 1,
    MandelBrickStatus_Openning85                   = 2,
    MandelBrickStatus_Openning100                  = 3,
    MandelBrickStatus_Opened                       = 4,
    MandelBrickStatus_MAX                          = 5

};

// Enum  Hall.EMoveDir
enum class EMoveDir : uint8_t
{
    None                                           = 0,
    MoveUp                                         = 1,
    MoveDown                                       = 2,
    MoveLeft                                       = 3,
    MoveRight                                      = 4,
    EMoveDir_MAX                                   = 5

};

// Enum  Hall.EHallCharacterAnimStateMechineType
enum class EHallCharacterAnimStateMechineType : uint8_t
{
    Default                                        = 0,
    Equip                                          = 1,
    Hero                                           = 2,
    Team                                           = 3,
    CrackedSettlement                              = 4,
    MainFlowHall                                   = 5,
    EHallCharacterAnimStateMechineType_MAX         = 6

};

// Enum  Hall.EHallTeamDisplayStage
enum class EHallTeamDisplayStage : uint8_t
{
    Normal                                         = 0,
    Settlement                                     = 1,
    EHallTeamDisplayStage_MAX                      = 2

};

// Enum  Hall.EMatchCtrlType
enum class EMatchCtrlType : uint8_t
{
    SOL_MatchCtrl                                  = 0,
    MP_MatchCtrl                                   = 1,
    EMatchCtrlType_MAX                             = 2

};

// Enum  Hall.EMiniWorldType
enum class EMiniWorldType : uint8_t
{
    Operator                                       = 0,
    Match                                          = 1,
    EMiniWorldType_MAX                             = 2

};

// Enum  Hall.ETransformRule
enum class ETransformRule : uint8_t
{
    Absolute                                       = 0,
    Relative                                       = 1,
    ETransformRule_MAX                             = 2

};

// Enum  Hall.ESandBoxMapModeType
enum class ESandBoxMapModeType : uint8_t
{
    None                                           = 0,
    SafeHouse                                      = 1,
    SOL                                            = 2,
    SOLHighValue                                   = 3,
    RaidSimple                                     = 4,
    RaidNormal                                     = 5,
    RaidHard                                       = 6,
    ESandBoxMapModeType_MAX                        = 7

};

// Enum  Hall.ESandBoxMapCameraTransitionMode
enum class ESandBoxMapCameraTransitionMode : uint8_t
{
    None                                           = 0,
    TopToPOI                                       = 1,
    POIToTop                                       = 2,
    POIToPOI                                       = 3,
    CurToLock                                      = 4,
    ESandBoxMapCameraTransitionMode_MAX            = 5

};

// Enum  Hall.ESandBoxMapState
enum class ESandBoxMapState : uint8_t
{
    None                                           = 0,
    Locked                                         = 1,
    UnLock                                         = 2,
    Selected                                       = 3,
    Unselect                                       = 4,
    LockedToUnlock                                 = 5,
    LockedToSelected                               = 6,
    UnlockToSelected                               = 7,
    SelectedToLocked                               = 8,
    SelectedToUnlock                               = 9,
    UnlockToLocked                                 = 10,
    ESandBoxMapState_MAX                           = 11

};

// Enum  MetaDorian.EMTHttpLoaderResult
enum class EMTHttpLoaderResult : uint8_t
{
    Succeeded                                      = 0,
    Failed                                         = 1,
    InvalidURL                                     = 2,
    EMTHttpLoaderResult_MAX                        = 3

};

// Enum  MetaExtra.EMTTestEnum1
enum class EMTTestEnum1 : uint8_t
{
    Excellent                                      = 0,
    Good                                           = 1,
    Normal                                         = 2,
    Underperformed                                 = 3,
    Bad                                            = 4,
    EMTTestEnum1_MAX                               = 5

};

// Enum  CoreUObject.ELifetimeCondition
enum class ELifetimeCondition : uint8_t
{
    COND_None                                      = 0,
    COND_InitialOnly                               = 1,
    COND_OwnerOnly                                 = 2,
    COND_SkipOwner                                 = 3,
    COND_SimulatedOnly                             = 4,
    COND_AutonomousOnly                            = 5,
    COND_SimulatedOrPhysics                        = 6,
    COND_InitialOrOwner                            = 7,
    COND_Custom                                    = 8,
    COND_ReplayOrOwner                             = 9,
    COND_ReplayOnly                                = 10,
    COND_SimulatedOnlyNoReplay                     = 11,
    COND_SimulatedOrPhysicsNoReplay                = 12,
    COND_SkipReplay                                = 13,
    COND_InitialOrSkipOwner                        = 14,
    COND_OwnerOrFocusTarget                        = 15,
    COND_FocusTargetSkipOwner                      = 16,
    COND_VisibleOnly                               = 17,
    COND_Never                                     = 31,
    COND_Max                                       = 32

};

// Enum  CoreUObject.EDataValidationResult
enum class EDataValidationResult : uint8_t
{
    Invalid                                        = 0,
    Valid                                          = 1,
    NotValidated                                   = 2,
    EDataValidationResult_MAX                      = 3

};

// Enum  CoreUObject.EPropertyAccessChangeNotifyMode
enum class EPropertyAccessChangeNotifyMode : uint8_t
{
    Default                                        = 0,
    Never                                          = 1,
    Always                                         = 2,
    EPropertyAccessChangeNotifyMode_MAX            = 3

};

// Enum  CoreUObject.EUnit
enum class EUnit : uint8_t
{
    Micrometers                                    = 0,
    Millimeters                                    = 1,
    Centimeters                                    = 2,
    Meters                                         = 3,
    Kilometers                                     = 4,
    Inches                                         = 5,
    Feet                                           = 6,
    Yards                                          = 7,
    Miles                                          = 8,
    Lightyears                                     = 9,
    Degrees                                        = 10,
    Radians                                        = 11,
    MetersPerSecond                                = 12,
    KilometersPerHour                              = 13,
    MilesPerHour                                   = 14,
    Celsius                                        = 15,
    Farenheit                                      = 16,
    Kelvin                                         = 17,
    Micrograms                                     = 18,
    Milligrams                                     = 19,
    Grams                                          = 20,
    Kilograms                                      = 21,
    MetricTons                                     = 22,
    Ounces                                         = 23,
    Pounds                                         = 24,
    Stones                                         = 25,
    Newtons                                        = 26,
    PoundsForce                                    = 27,
    KilogramsForce                                 = 28,
    Hertz                                          = 29,
    Kilohertz                                      = 30,
    Megahertz                                      = 31,
    Gigahertz                                      = 32,
    RevolutionsPerMinute                           = 33,
    Bytes                                          = 34,
    Kilobytes                                      = 35,
    Megabytes                                      = 36,
    Gigabytes                                      = 37,
    Terabytes                                      = 38,
    Lumens                                         = 39,
    Milliseconds                                   = 43,
    Seconds                                        = 44,
    Minutes                                        = 45,
    Hours                                          = 46,
    Days                                           = 47,
    Months                                         = 48,
    Years                                          = 49,
    Multiplier                                     = 52,
    Percentage                                     = 51,
    Unspecified                                    = 53,
    EUnit_MAX                                      = 54

};

// Enum  CoreUObject.EAxis
enum class EAxis : uint8_t
{
    None                                           = 0,
    X                                              = 1,
    Y                                              = 2,
    Z                                              = 3,
    EAxis_MAX                                      = 4

};

// Enum  CoreUObject.ELogTimes
enum class ELogTimes : uint8_t
{
    None                                           = 0,
    UTC                                            = 1,
    SinceGStartTime                                = 2,
    Local                                          = 3,
    ELogTimes_MAX                                  = 4

};

// Enum  CoreUObject.ESearchDir
enum class ESearchDir : uint8_t
{
    FromStart                                      = 0,
    FromEnd                                        = 1,
    ESearchDir_MAX                                 = 2

};

// Enum  CoreUObject.ESearchCase
enum class ESearchCase : uint8_t
{
    CaseSensitive                                  = 0,
    IgnoreCase                                     = 1,
    ESearchCase_MAX                                = 2

};

// Enum  InputCore.ETouchType
enum class ETouchType : uint8_t
{
    Began                                          = 0,
    Moved                                          = 1,
    Stationary                                     = 2,
    ForceChanged                                   = 3,
    FirstMove                                      = 4,
    Ended                                          = 5,
    NumTypes                                       = 6,
    ETouchType_MAX                                 = 7

};

// Enum  InputCore.EConsoleForGamepadLabels
enum class EConsoleForGamepadLabels : uint8_t
{
    None                                           = 0,
    XBoxOne                                        = 1,
    PS4                                            = 2,
    EConsoleForGamepadLabels_MAX                   = 3

};

// Enum  InputCore.EControllerHand
enum class EControllerHand : uint8_t
{
    Left                                           = 0,
    Right                                          = 1,
    AnyHand                                        = 2,
    Pad                                            = 3,
    ExternalCamera                                 = 4,
    Gun                                            = 5,
    Special                                        = 6,
    Special                                        = 7,
    Special                                        = 8,
    Special                                        = 9,
    Special                                        = 10,
    Special                                        = 11,
    Special                                        = 12,
    Special                                        = 13,
    Special                                        = 14,
    Special                                        = 15,
    Special                                        = 16,
    ControllerHand_Count                           = 17,
    EControllerHand_MAX                            = 18

};

// Enum  SlateCore.EFontLayoutMethod
enum class EFontLayoutMethod : uint8_t
{
    Metrics                                        = 0,
    BoundingBox                                    = 1,
    EFontLayoutMethod_MAX                          = 2

};

// Enum  SlateCore.EFontLoadingPolicy
enum class EFontLoadingPolicy : uint8_t
{
    LazyLoad                                       = 0,
    Stream                                         = 1,
    Inline                                         = 2,
    EFontLoadingPolicy_MAX                         = 3

};

// Enum  SlateCore.EFontHinting
enum class EFontHinting : uint8_t
{
    Default                                        = 0,
    Auto                                           = 1,
    AutoLight                                      = 2,
    Monochrome                                     = 3,
    None                                           = 4,
    EFontHinting_MAX                               = 5

};

// Enum  SlateCore.ESlateDebuggingFocusEvent
enum class ESlateDebuggingFocusEvent : uint8_t
{
    FocusChanging                                  = 0,
    FocusLost                                      = 1,
    FocusReceived                                  = 2,
    MAX                                            = 3

};

// Enum  SlateCore.ESlateDebuggingNavigationMethod
enum class ESlateDebuggingNavigationMethod : uint8_t
{
    Unknown                                        = 0,
    Explicit                                       = 1,
    CustomDelegateBound                            = 2,
    CustomDelegateUnbound                          = 3,
    NextOrPrevious                                 = 4,
    HitTestGrid                                    = 5,
    ESlateDebuggingNavigationMethod_MAX            = 6

};

// Enum  SlateCore.ESlateDebuggingStateChangeEvent
enum class ESlateDebuggingStateChangeEvent : uint8_t
{
    MouseCaptureGained                             = 0,
    MouseCaptureLost                               = 1,
    ESlateDebuggingStateChangeEvent_MAX            = 2

};

// Enum  SlateCore.ESlateDebuggingInputEvent
enum class ESlateDebuggingInputEvent : uint8_t
{
    MouseMove                                      = 0,
    MouseEnter                                     = 1,
    MouseLeave                                     = 2,
    PreviewMouseButtonDown                         = 3,
    MouseButtonDown                                = 4,
    MouseButtonUp                                  = 5,
    MouseButtonDoubleClick                         = 6,
    MouseWheel                                     = 7,
    TouchStart                                     = 8,
    TouchEnd                                       = 9,
    TouchForceChanged                              = 10,
    TouchFirstMove                                 = 11,
    TouchMoved                                     = 12,
    DragDetected                                   = 13,
    DragEnter                                      = 14,
    DragLeave                                      = 15,
    DragOver                                       = 16,
    DragDrop                                       = 17,
    DropMessage                                    = 18,
    PreviewKeyDown                                 = 19,
    KeyDown                                        = 20,
    KeyUp                                          = 21,
    KeyChar                                        = 22,
    AnalogInput                                    = 23,
    TouchGesture                                   = 24,
    MotionDetected                                 = 25,
    MAX                                            = 26

};

// Enum  SlateCore.EFake3DBlurType
enum class EFake3DBlurType : uint8_t
{
    M_Fake3DHUDDistortion                          = 0,
    M_Simulate3DUI                                 = 1,
    M_MAX                                          = 2

};

// Enum  SlateCore.EScrollDirection
enum class EScrollDirection : uint8_t
{
    Scroll_Down                                    = 0,
    Scroll_Up                                      = 1,
    Scroll_MAX                                     = 2

};

// Enum  SlateCore.EMenuPlacement
enum class EMenuPlacement : uint8_t
{
    MenuPlacement_BelowAnchor                      = 0,
    MenuPlacement_CenteredBelowAnchor              = 1,
    MenuPlacement_BelowRightAnchor                 = 2,
    MenuPlacement_ComboBox                         = 3,
    MenuPlacement_ComboBoxRight                    = 4,
    MenuPlacement_MenuRight                        = 5,
    MenuPlacement_AboveAnchor                      = 6,
    MenuPlacement_CenteredAboveAnchor              = 7,
    MenuPlacement_AboveRightAnchor                 = 8,
    MenuPlacement_MenuLeft                         = 9,
    MenuPlacement_Center                           = 10,
    MenuPlacement_RightLeftCenter                  = 11,
    MenuPlacement_MatchBottomLeft                  = 12,
    MenuPlacement_MAX                              = 13

};

// Enum  SlateCore.ENavigationGenesis
enum class ENavigationGenesis : uint8_t
{
    Keyboard                                       = 0,
    Controller                                     = 1,
    User                                           = 2,
    ENavigationGenesis_MAX                         = 3

};

// Enum  SlateCore.ENavigationSource
enum class ENavigationSource : uint8_t
{
    FocusedWidget                                  = 0,
    WidgetUnderCursor                              = 1,
    ENavigationSource_MAX                          = 2

};

// Enum  SlateCore.EUINavigationAction
enum class EUINavigationAction : uint8_t
{
    Accept                                         = 0,
    Back                                           = 1,
    Num                                            = 2,
    Invalid                                        = 3,
    EUINavigationAction_MAX                        = 4

};

// Enum  SlateCore.ESlateCheckBoxType
enum class ESlateCheckBoxType : uint8_t
{
    CheckBox                                       = 0,
    ToggleButton                                   = 1,
    ESlateCheckBoxType_MAX                         = 2

};

// Enum  SlateCore.ESlateParentWindowSearchMethod
enum class ESlateParentWindowSearchMethod : uint8_t
{
    ActiveWindow                                   = 0,
    MainWindow                                     = 1,
    ESlateParentWindowSearchMethod_MAX             = 2

};

// Enum  SlateCore.ELineWidgetOrientation
enum class ELineWidgetOrientation : uint8_t
{
    Horizontal                                     = 0,
    Vertical                                       = 1,
    ELineWidgetOrientation_MAX                     = 2

};

// Enum  SlateCore.ERadialImageFillType
enum class ERadialImageFillType : uint8_t
{
    Radial360                                      = 0,
    Horizontal                                     = 1,
    Vertical                                       = 2,
    ERadialImageFillType_MAX                       = 3

};

// Enum  ImageWrapper.EBitmapCSType
enum class EBitmapCSType : uint32_t
{
    BCST_BLCS_CALIBRATED_RGB                       = 0,
    BCST_LCS_sRGB                                  = 1934772034,
    BCST_LCS_WINDOWS_COLOR_SPACE                   = 1466527264,
    BCST_PROFILE_LINKED                            = 1279872587,
    BCST_PROFILE_EMBEDDED                          = 1296188740,
    BCST_MAX                                       = 1934772035

};

// Enum  ImageWrapper.EBitmapHeaderVersion
enum class EBitmapHeaderVersion : uint8_t
{
    BHV_BITMAPINFOHEADER                           = 0,
    BHV_BITMAPV2INFOHEADER                         = 1,
    BHV_BITMAPV3INFOHEADER                         = 2,
    BHV_BITMAPV4HEADER                             = 3,
    BHV_BITMAPV5HEADER                             = 4,
    BHV_MAX                                        = 5

};

// Enum  Slate.ETableViewMode
enum class ETableViewMode : uint8_t
{
    List                                           = 0,
    Tile                                           = 1,
    Tree                                           = 2,
    ETableViewMode_MAX                             = 3

};

// Enum  Slate.ESelectionMode
enum class ESelectionMode : uint8_t
{
    None                                           = 0,
    Single                                         = 1,
    SingleToggle                                   = 2,
    Multi                                          = 3,
    ESelectionMode_MAX                             = 4

};

// Enum  Slate.EMultiBlockType
enum class EMultiBlockType : uint8_t
{
    None                                           = 0,
    ButtonRow                                      = 1,
    EditableText                                   = 2,
    Heading                                        = 3,
    MenuEntry                                      = 4,
    MenuSeparator                                  = 5,
    ToolBarButton                                  = 6,
    ToolBarComboButton                             = 7,
    ToolBarSeparator                               = 8,
    Widget                                         = 9,
    EMultiBlockType_MAX                            = 10

};

// Enum  Slate.EMultiBoxType
enum class EMultiBoxType : uint8_t
{
    MenuBar                                        = 0,
    ToolBar                                        = 1,
    VerticalToolBar                                = 2,
    Menu                                           = 3,
    ButtonRow                                      = 4,
    ToolMenuBar                                    = 5,
    EMultiBoxType_MAX                              = 6

};

// Enum  Slate.EProgressBarFillType
enum class EProgressBarFillType : uint8_t
{
    LeftToRight                                    = 0,
    RightToLeft                                    = 1,
    FillFromCenter                                 = 2,
    TopToBottom                                    = 3,
    BottomToTop                                    = 4,
    Bidirectional                                  = 5,
    EProgressBarFillType_MAX                       = 6

};

// Enum  Slate.EStretch
enum class EStretch : uint8_t
{
    None                                           = 0,
    Fill                                           = 1,
    ScaleToFit                                     = 2,
    ScaleToFitX                                    = 3,
    ScaleToFitY                                    = 4,
    ScaleToFill                                    = 5,
    ScaleBySafeZone                                = 6,
    UserSpecified                                  = 7,
    EStretch_MAX                                   = 8

};

// Enum  Slate.EStretchDirection
enum class EStretchDirection : uint8_t
{
    Both                                           = 0,
    DownOnly                                       = 1,
    UpOnly                                         = 2,
    EStretchDirection_MAX                          = 3

};

// Enum  Slate.EListItemAlignment
enum class EListItemAlignment : uint8_t
{
    EvenlyDistributed                              = 0,
    EvenlySize                                     = 1,
    EvenlyWide                                     = 2,
    LeftAligned                                    = 3,
    RightAligned                                   = 4,
    CenterAligned                                  = 5,
    Fill                                           = 6,
    EListItemAlignment_MAX                         = 7

};

// Enum  Slate.ECustomizedToolMenuVisibility
enum class ECustomizedToolMenuVisibility : uint8_t
{
    None                                           = 0,
    Visible                                        = 1,
    Hidden                                         = 2,
    ECustomizedToolMenuVisibility_MAX              = 3

};

// Enum  Slate.EMultipleKeyBindingIndex
enum class EMultipleKeyBindingIndex : uint8_t
{
    Primary                                        = 0,
    Secondary                                      = 1,
    NumChords                                      = 2,
    EMultipleKeyBindingIndex_MAX                   = 3

};

// Enum  Slate.EUserInterfaceActionType
enum class EUserInterfaceActionType : uint8_t
{
    None                                           = 0,
    Button                                         = 1,
    ToggleButton                                   = 2,
    RadioButton                                    = 3,
    Check                                          = 4,
    CollapsedButton                                = 5,
    EUserInterfaceActionType_MAX                   = 6

};

// Enum  ImageWriteQueue.EDesiredImageFormat
enum class EDesiredImageFormat : uint8_t
{
    PNG                                            = 0,
    JPG                                            = 1,
    BMP                                            = 2,
    EXR                                            = 3,
    EDesiredImageFormat_MAX                        = 4

};

// Enum  MaterialShaderQualitySettings.EVolGiQuality
enum class EVolGiQuality : uint8_t
{
    Low                                            = 0,
    Medium                                         = 1,
    High                                           = 2,
    EVolGiQuality_MAX                              = 3

};

// Enum  MaterialShaderQualitySettings.EMaterialQualityTier
enum class EMaterialQualityTier : uint8_t
{
    Impatient                                      = 0,
    Ultra_Low                                      = 1,
    Low                                            = 2,
    Medium                                         = 3,
    High                                           = 4,
    Ultra_High                                     = 5,
    EMaterialQualityTier_MAX                       = 6

};

// Enum  MaterialShaderQualitySettings.EMobileCSMQuality
enum class EMobileCSMQuality : uint8_t
{
    NoFiltering                                    = 0,
    PCF_1x1                                        = 1,
    PCF_2x2                                        = 2,
    EMobileCSMQuality_MAX                          = 3

};

// Enum  EngineSettings.ESubLevelStripMode
enum class ESubLevelStripMode : uint8_t
{
    ExactClass                                     = 0,
    IsChildOf                                      = 1,
    ESubLevelStripMode_MAX                         = 2

};

// Enum  EngineSettings.EFourPlayerSplitScreenType
enum class EFourPlayerSplitScreenType : uint8_t
{
    Grid                                           = 0,
    Vertical                                       = 1,
    Horizontal                                     = 2,
    EFourPlayerSplitScreenType_MAX                 = 3

};

// Enum  EngineSettings.EThreePlayerSplitScreenType
enum class EThreePlayerSplitScreenType : uint8_t
{
    FavorTop                                       = 0,
    FavorBottom                                    = 1,
    Vertical                                       = 2,
    Horizontal                                     = 3,
    EThreePlayerSplitScreenType_MAX                = 4

};

// Enum  EngineSettings.ETwoPlayerSplitScreenType
enum class ETwoPlayerSplitScreenType : uint8_t
{
    Horizontal                                     = 0,
    Vertical                                       = 1,
    ETwoPlayerSplitScreenType_MAX                  = 2

};

// Enum  FieldSystemCore.EFieldPhysicsDefaultFields
enum class EFieldPhysicsDefaultFields : uint8_t
{
    Field_RadialIntMask                            = 0,
    Field_RadialFalloff                            = 1,
    Field_UniformVector                            = 2,
    Field_RadialVector                             = 3,
    Field_RadialVectorFalloff                      = 4,
    Field_EFieldPhysicsDefaultFields_Max           = 5,
    Field_MAX                                      = 6

};

// Enum  FieldSystemCore.EFieldPhysicsType
enum class EFieldPhysicsType : uint8_t
{
    Field_None                                     = 0,
    Field_DynamicState                             = 1,
    Field_LinearForce                              = 2,
    Field_ExternalClusterStrain                    = 3,
    Field_Kill                                     = 4,
    Field_LinearVelocity                           = 5,
    Field_AngularVelociy                           = 6,
    Field_AngularTorque                            = 7,
    Field_InternalClusterStrain                    = 8,
    Field_DisableThreshold                         = 9,
    Field_SleepingThreshold                        = 10,
    Field_PositionStatic                           = 11,
    Field_PositionAnimated                         = 12,
    Field_PositionTarget                           = 13,
    Field_DynamicConstraint                        = 14,
    Field_CollisionGroup                           = 15,
    Field_ActivateDisabled                         = 16,
    Field_PhysicsType_Max                          = 17

};

// Enum  FieldSystemCore.EFieldFalloffType
enum class EFieldFalloffType : uint8_t
{
    Field_FallOff_None                             = 0,
    Field_Falloff_Linear                           = 1,
    Field_Falloff_Inverse                          = 2,
    Field_Falloff_Squared                          = 3,
    Field_Falloff_Logarithmic                      = 4,
    Field_Falloff_Max                              = 5

};

// Enum  FieldSystemCore.EFieldResolutionType
enum class EFieldResolutionType : uint8_t
{
    Field_Resolution_Minimal                       = 0,
    Field_Resolution_DisabledParents               = 1,
    Field_Resolution_Maximum                       = 2,
    Field_Resolution_Max                           = 3

};

// Enum  FieldSystemCore.EFieldCullingOperationType
enum class EFieldCullingOperationType : uint8_t
{
    Field_Culling_Inside                           = 0,
    Field_Culling_Outside                          = 1,
    Field_Culling_Operation_Max                    = 2,
    Field_Culling_MAX                              = 3

};

// Enum  FieldSystemCore.EFieldOperationType
enum class EFieldOperationType : uint8_t
{
    Field_Multiply                                 = 0,
    Field_Divide                                   = 1,
    Field_Add                                      = 2,
    Field_Substract                                = 3,
    Field_Operation_Max                            = 4

};

// Enum  FieldSystemCore.ESetMaskConditionType
enum class ESetMaskConditionType : uint8_t
{
    Field_Set_Always                               = 0,
    Field_Set_IFF_NOT_Interior                     = 1,
    Field_Set_IFF_NOT_Exterior                     = 2,
    Field_MaskCondition_Max                        = 3

};

// Enum  PhysicsCore.EChaosBufferMode
enum class EChaosBufferMode : uint8_t
{
    Double                                         = 0,
    Triple                                         = 1,
    Num                                            = 2,
    Invalid                                        = 3,
    EChaosBufferMode_MAX                           = 4

};

// Enum  PhysicsCore.EChaosThreadingMode
enum class EChaosThreadingMode : uint8_t
{
    DedicatedThread                                = 0,
    TaskGraph                                      = 1,
    SingleThread                                   = 2,
    Num                                            = 3,
    Invalid                                        = 4,
    EChaosThreadingMode_MAX                        = 5

};

// Enum  PhysicsCore.EChaosSolverTickMode
enum class EChaosSolverTickMode : uint8_t
{
    Fixed                                          = 0,
    Variable                                       = 1,
    VariableCapped                                 = 2,
    VariableCappedWithTarget                       = 3,
    EChaosSolverTickMode_MAX                       = 4

};

// Enum  Engine.ERelativeTransformSpace
enum class ERelativeTransformSpace : uint8_t
{
    RTS_World                                      = 0,
    RTS_Actor                                      = 1,
    RTS_Component                                  = 2,
    RTS_ParentBoneSpace                            = 3,
    RTS_MAX                                        = 4

};

// Enum  Engine.EComponentMobility
enum class EComponentMobility : uint8_t
{
    Static                                         = 0,
    Stationary                                     = 1,
    Movable                                        = 2,
    EComponentMobility_MAX                         = 3

};

// Enum  Engine.EDetailMode
enum class EDetailMode : uint8_t
{
    DM_Low                                         = 0,
    DM_Medium                                      = 1,
    DM_High                                        = 2,
    DM_MAX                                         = 3

};

// Enum  MRMesh.EMeshTrackerVertexColorMode
enum class EMeshTrackerVertexColorMode : uint8_t
{
    None                                           = 0,
    Confidence                                     = 1,
    Block                                          = 2,
    EMeshTrackerVertexColorMode_MAX                = 3

};

// Enum  AugmentedReality.EARTrackingState
enum class EARTrackingState : uint8_t
{
    Unknown                                        = 0,
    Tracking                                       = 1,
    NotTracking                                    = 2,
    StoppedTracking                                = 3,
    EARTrackingState_MAX                           = 4

};

// Enum  AugmentedReality.EARSessionTrackingFeature
enum class EARSessionTrackingFeature : uint8_t
{
    None                                           = 0,
    PoseDetection2D                                = 1,
    PersonSegmentation                             = 2,
    PersonSegmentationWithDepth                    = 3,
    EARSessionTrackingFeature_MAX                  = 4

};

// Enum  AugmentedReality.EARFaceTrackingUpdate
enum class EARFaceTrackingUpdate : uint8_t
{
    CurvesAndGeo                                   = 0,
    CurvesOnly                                     = 1,
    EARFaceTrackingUpdate_MAX                      = 2

};

// Enum  AugmentedReality.EAREnvironmentCaptureProbeType
enum class EAREnvironmentCaptureProbeType : uint8_t
{
    None                                           = 0,
    Manual                                         = 1,
    Automatic                                      = 2,
    EAREnvironmentCaptureProbeType_MAX             = 3

};

// Enum  AugmentedReality.EARFrameSyncMode
enum class EARFrameSyncMode : uint8_t
{
    SyncTickWithCameraImage                        = 0,
    SyncTickWithoutCameraImage                     = 1,
    EARFrameSyncMode_MAX                           = 2

};

// Enum  AugmentedReality.EARLightEstimationMode
enum class EARLightEstimationMode : uint8_t
{
    None                                           = 0,
    AmbientLightEstimate                           = 1,
    DirectionalLightEstimate                       = 2,
    EARLightEstimationMode_MAX                     = 3

};

// Enum  AugmentedReality.EARPlaneDetectionMode
enum class EARPlaneDetectionMode : uint8_t
{
    None                                           = 0,
    HorizontalPlaneDetection                       = 1,
    VerticalPlaneDetection                         = 2,
    EARPlaneDetectionMode_MAX                      = 3

};

// Enum  AugmentedReality.EARSessionType
enum class EARSessionType : uint8_t
{
    None                                           = 0,
    Orientation                                    = 1,
    World                                          = 2,
    Face                                           = 3,
    Image                                          = 4,
    ObjectScanning                                 = 5,
    PoseTracking                                   = 6,
    EARSessionType_MAX                             = 7

};

// Enum  AugmentedReality.EARWorldAlignment
enum class EARWorldAlignment : uint8_t
{
    Gravity                                        = 0,
    GravityAndHeading                              = 1,
    Camera                                         = 2,
    EARWorldAlignment_MAX                          = 3

};

// Enum  AugmentedReality.EARDepthAccuracy
enum class EARDepthAccuracy : uint8_t
{
    Unkown                                         = 0,
    Approximate                                    = 1,
    Accurate                                       = 2,
    EARDepthAccuracy_MAX                           = 3

};

// Enum  AugmentedReality.EARDepthQuality
enum class EARDepthQuality : uint8_t
{
    Unkown                                         = 0,
    Low                                            = 1,
    High                                           = 2,
    EARDepthQuality_MAX                            = 3

};

// Enum  AugmentedReality.EARTextureType
enum class EARTextureType : uint8_t
{
    CameraImage                                    = 0,
    CameraDepth                                    = 1,
    EnvironmentCapture                             = 2,
    EARTextureType_MAX                             = 3

};

// Enum  AugmentedReality.EAREye
enum class EAREye : uint8_t
{
    LeftEye                                        = 0,
    RightEye                                       = 1,
    EAREye_MAX                                     = 2

};

// Enum  AugmentedReality.EARFaceBlendShape
enum class EARFaceBlendShape : uint8_t
{
    EyeBlinkLeft                                   = 0,
    EyeLookDownLeft                                = 1,
    EyeLookInLeft                                  = 2,
    EyeLookOutLeft                                 = 3,
    EyeLookUpLeft                                  = 4,
    EyeSquintLeft                                  = 5,
    EyeWideLeft                                    = 6,
    EyeBlinkRight                                  = 7,
    EyeLookDownRight                               = 8,
    EyeLookInRight                                 = 9,
    EyeLookOutRight                                = 10,
    EyeLookUpRight                                 = 11,
    EyeSquintRight                                 = 12,
    EyeWideRight                                   = 13,
    JawForward                                     = 14,
    JawLeft                                        = 15,
    JawRight                                       = 16,
    JawOpen                                        = 17,
    MouthClose                                     = 18,
    MouthFunnel                                    = 19,
    MouthPucker                                    = 20,
    MouthLeft                                      = 21,
    MouthRight                                     = 22,
    MouthSmileLeft                                 = 23,
    MouthSmileRight                                = 24,
    MouthFrownLeft                                 = 25,
    MouthFrownRight                                = 26,
    MouthDimpleLeft                                = 27,
    MouthDimpleRight                               = 28,
    MouthStretchLeft                               = 29,
    MouthStretchRight                              = 30,
    MouthRollLower                                 = 31,
    MouthRollUpper                                 = 32,
    MouthShrugLower                                = 33,
    MouthShrugUpper                                = 34,
    MouthPressLeft                                 = 35,
    MouthPressRight                                = 36,
    MouthLowerDownLeft                             = 37,
    MouthLowerDownRight                            = 38,
    MouthUpperUpLeft                               = 39,
    MouthUpperUpRight                              = 40,
    BrowDownLeft                                   = 41,
    BrowDownRight                                  = 42,
    BrowInnerUp                                    = 43,
    BrowOuterUpLeft                                = 44,
    BrowOuterUpRight                               = 45,
    CheekPuff                                      = 46,
    CheekSquintLeft                                = 47,
    CheekSquintRight                               = 48,
    NoseSneerLeft                                  = 49,
    NoseSneerRight                                 = 50,
    TongueOut                                      = 51,
    HeadYaw                                        = 52,
    HeadPitch                                      = 53,
    HeadRoll                                       = 54,
    LeftEyeYaw                                     = 55,
    LeftEyePitch                                   = 56,
    LeftEyeRoll                                    = 57,
    RightEyeYaw                                    = 58,
    RightEyePitch                                  = 59,
    RightEyeRoll                                   = 60,
    MAX                                            = 61

};

// Enum  AugmentedReality.EARFaceTrackingDirection
enum class EARFaceTrackingDirection : uint8_t
{
    FaceRelative                                   = 0,
    FaceMirrored                                   = 1,
    EARFaceTrackingDirection_MAX                   = 2

};

// Enum  AugmentedReality.EARCandidateImageOrientation
enum class EARCandidateImageOrientation : uint8_t
{
    Landscape                                      = 0,
    Portrait                                       = 1,
    EARCandidateImageOrientation_MAX               = 2

};

// Enum  AugmentedReality.EARJointTransformSpace
enum class EARJointTransformSpace : uint8_t
{
    Model                                          = 0,
    ParentJoint                                    = 1,
    EARJointTransformSpace_MAX                     = 2

};

// Enum  AugmentedReality.EARObjectClassification
enum class EARObjectClassification : uint8_t
{
    NotApplicable                                  = 0,
    Unknown                                        = 1,
    Wall                                           = 2,
    Ceiling                                        = 3,
    Floor                                          = 4,
    Table                                          = 5,
    Seat                                           = 6,
    Face                                           = 7,
    Image                                          = 8,
    World                                          = 9,
    SceneObject                                    = 10,
    EARObjectClassification_MAX                    = 11

};

// Enum  AugmentedReality.EARPlaneOrientation
enum class EARPlaneOrientation : uint8_t
{
    Horizontal                                     = 0,
    Vertical                                       = 1,
    Diagonal                                       = 2,
    EARPlaneOrientation_MAX                        = 3

};

// Enum  AugmentedReality.EARWorldMappingState
enum class EARWorldMappingState : uint8_t
{
    NotAvailable                                   = 0,
    StillMappingNotRelocalizable                   = 1,
    StillMappingRelocalizable                      = 2,
    Mapped                                         = 3,
    EARWorldMappingState_MAX                       = 4

};

// Enum  AugmentedReality.EARSessionStatus
enum class EARSessionStatus : uint8_t
{
    NotStarted                                     = 0,
    Running                                        = 1,
    NotSupported                                   = 2,
    FatalError                                     = 3,
    PermissionNotGranted                           = 4,
    UnsupportedConfiguration                       = 5,
    Other                                          = 6,
    EARSessionStatus_MAX                           = 7

};

// Enum  AugmentedReality.EARTrackingQualityReason
enum class EARTrackingQualityReason : uint8_t
{
    None                                           = 0,
    Initializing                                   = 1,
    Relocalizing                                   = 2,
    ExcessiveMotion                                = 3,
    InsufficientFeatures                           = 4,
    EARTrackingQualityReason_MAX                   = 5

};

// Enum  AugmentedReality.EARTrackingQuality
enum class EARTrackingQuality : uint8_t
{
    NotTracking                                    = 0,
    OrientationOnly                                = 1,
    OrientationAndPosition                         = 2,
    EARTrackingQuality_MAX                         = 3

};

// Enum  AugmentedReality.EARLineTraceChannels
enum class EARLineTraceChannels : uint8_t
{
    None                                           = 0,
    FeaturePoint                                   = 1,
    GroundPlane                                    = 2,
    PlaneUsingExtent                               = 4,
    PlaneUsingBoundaryPolygon                      = 8,
    EARLineTraceChannels_MAX                       = 9

};

// Enum  HeadMountedDisplay.EXRTrackedDeviceType
enum class EXRTrackedDeviceType : uint8_t
{
    HeadMountedDisplay                             = 0,
    Controller                                     = 1,
    TrackingReference                              = 2,
    Other                                          = 3,
    Invalid                                        = 254,
    Any                                            = 255,
    EXRTrackedDeviceType_MAX                       = 256

};

// Enum  HeadMountedDisplay.ESpectatorScreenMode
enum class ESpectatorScreenMode : uint8_t
{
    Disabled                                       = 0,
    SingleEyeLetterboxed                           = 1,
    Undistorted                                    = 2,
    Distorted                                      = 3,
    SingleEye                                      = 4,
    SingleEyeCroppedToFill                         = 5,
    Texture                                        = 6,
    TexturePlusEye                                 = 7,
    ESpectatorScreenMode_MAX                       = 8

};

// Enum  HeadMountedDisplay.EHMDWornState
enum class EHMDWornState : uint8_t
{
    Unknown                                        = 0,
    Worn                                           = 1,
    NotWorn                                        = 2,
    EHMDWornState_MAX                              = 3

};

// Enum  HeadMountedDisplay.EHMDTrackingOrigin
enum class EHMDTrackingOrigin : uint8_t
{
    Floor                                          = 0,
    Eye                                            = 1,
    Stage                                          = 2,
    EHMDTrackingOrigin_MAX                         = 3

};

// Enum  HeadMountedDisplay.EOrientPositionSelector
enum class EOrientPositionSelector : uint8_t
{
    Orientation                                    = 0,
    Position                                       = 1,
    OrientationAndPosition                         = 2,
    EOrientPositionSelector_MAX                    = 3

};

// Enum  HeadMountedDisplay.ETrackingStatus
enum class ETrackingStatus : uint8_t
{
    NotTracked                                     = 0,
    InertialOnly                                   = 1,
    Tracked                                        = 2,
    ETrackingStatus_MAX                            = 3

};

// Enum  Foliage.EFoliageTypeMode
enum class EFoliageTypeMode : uint8_t
{
    Share                                          = 0,
    HDReplace                                      = 1,
    HDOnly                                         = 2,
    MobileOnly                                     = 3,
    EFoliageTypeMode_MAX                           = 4

};

// Enum  Foliage.EFoliageScaling
enum class EFoliageScaling : uint8_t
{
    Uniform                                        = 0,
    Free                                           = 1,
    LockXY                                         = 2,
    LockXZ                                         = 3,
    LockYZ                                         = 4,
    EFoliageScaling_MAX                            = 5

};

// Enum  Foliage.EVertexColorMaskChannel
enum class EVertexColorMaskChannel : uint8_t
{
    Red                                            = 0,
    Green                                          = 1,
    Blue                                           = 2,
    Alpha                                          = 3,
    MAX_None                                       = 4,
    EVertexColorMaskChannel_MAX                    = 5

};

// Enum  Foliage.FoliageVertexColorMask
enum class FoliageVertexColorMask : uint8_t
{
    FOLIAGEVERTEXCOLORMASK_Disabled                = 0,
    FOLIAGEVERTEXCOLORMASK_Red                     = 1,
    FOLIAGEVERTEXCOLORMASK_Green                   = 2,
    FOLIAGEVERTEXCOLORMASK_Blue                    = 3,
    FOLIAGEVERTEXCOLORMASK_Alpha                   = 4,
    FOLIAGEVERTEXCOLORMASK_MAX                     = 5

};

// Enum  Foliage.ESimulationQuery
enum class ESimulationQuery : uint8_t
{
    None                                           = 0,
    CollisionOverlap                               = 1,
    ShadeOverlap                                   = 2,
    AnyOverlap                                     = 3,
    ESimulationQuery_MAX                           = 4

};

// Enum  Foliage.ESimulationOverlap
enum class ESimulationOverlap : uint8_t
{
    CollisionOverlap                               = 0,
    ShadeOverlap                                   = 1,
    None                                           = 2,
    ESimulationOverlap_MAX                         = 3

};

// Enum  Landscape.ELandscapeBlendMode
enum class ELandscapeBlendMode : uint8_t
{
    LSBM_AdditiveBlend                             = 0,
    LSBM_AlphaBlend                                = 1,
    LSBM_MAX                                       = 2

};

// Enum  Landscape.ELandscapeSetupErrors
enum class ELandscapeSetupErrors : uint8_t
{
    LSE_None                                       = 0,
    LSE_NoLandscapeInfo                            = 1,
    LSE_CollsionXY                                 = 2,
    LSE_NoLayerInfo                                = 3,
    LSE_MAX                                        = 4

};

// Enum  Landscape.ELandscapeClearMode
enum class ELandscapeClearMode : uint8_t
{
    Clear_Weightmap                                = 1,
    Clear_Heightmap                                = 2,
    Clear_All                                      = 3,
    Clear_MAX                                      = 4

};

// Enum  Landscape.ELandscapeGizmoType
enum class ELandscapeGizmoType : uint8_t
{
    LGT_None                                       = 0,
    LGT_Height                                     = 1,
    LGT_Weight                                     = 2,
    LGT_MAX                                        = 3

};

// Enum  Landscape.EGrassScaling
enum class EGrassScaling : uint8_t
{
    Uniform                                        = 0,
    Free                                           = 1,
    LockXY                                         = 2,
    EGrassScaling_MAX                              = 3

};

// Enum  Landscape.ESplineModulationColorMask
enum class ESplineModulationColorMask : uint8_t
{
    Red                                            = 0,
    Green                                          = 1,
    Blue                                           = 2,
    Alpha                                          = 3,
    ESplineModulationColorMask_MAX                 = 4

};

// Enum  Landscape.ELandscapeLODFalloff
enum class ELandscapeLODFalloff : uint8_t
{
    Linear                                         = 0,
    SquareRoot                                     = 1,
    ELandscapeLODFalloff_MAX                       = 2

};

// Enum  Landscape.ELandscapeLayerDisplayMode
enum class ELandscapeLayerDisplayMode : uint8_t
{
    Default                                        = 0,
    Alphabetical                                   = 1,
    UserSpecific                                   = 2,
    ELandscapeLayerDisplayMode_MAX                 = 3

};

// Enum  Landscape.ELandscapeLayerPaintingRestriction
enum class ELandscapeLayerPaintingRestriction : uint8_t
{
    None                                           = 0,
    UseMaxLayers                                   = 1,
    ExistingOnly                                   = 2,
    UseComponentWhitelist                          = 3,
    ELandscapeLayerPaintingRestriction_MAX         = 4

};

// Enum  Landscape.ELandscapeImportAlphamapType
enum class ELandscapeImportAlphamapType : uint8_t
{
    Additive                                       = 0,
    Layered                                        = 1,
    ELandscapeImportAlphamapType_MAX               = 2

};

// Enum  Landscape.LandscapeSplineMeshOrientation
enum class LandscapeSplineMeshOrientation : uint8_t
{
    LSMO_XUp                                       = 0,
    LSMO_YUp                                       = 1,
    LSMO_MAX                                       = 2

};

// Enum  Landscape.ELandscapeLayerBlendType
enum class ELandscapeLayerBlendType : uint8_t
{
    LB_WeightBlend                                 = 0,
    LB_AlphaBlend                                  = 1,
    LB_HeightBlend                                 = 2,
    LB_MAX                                         = 3

};

// Enum  Landscape.ELandscapeCustomizedCoordType
enum class ELandscapeCustomizedCoordType : uint8_t
{
    LCCT_None                                      = 0,
    LCCT_CustomUV0                                 = 1,
    LCCT_CustomUV1                                 = 2,
    LCCT_CustomUV2                                 = 3,
    LCCT_WeightMapUV                               = 4,
    LCCT_MAX                                       = 5

};

// Enum  Landscape.ETerrainCoordMappingType
enum class ETerrainCoordMappingType : uint8_t
{
    TCMT_Auto                                      = 0,
    TCMT_XY                                        = 1,
    TCMT_XZ                                        = 2,
    TCMT_YZ                                        = 3,
    TCMT_MAX                                       = 4

};

// Enum  TimeManagement.EFrameNumberDisplayFormats
enum class EFrameNumberDisplayFormats : uint8_t
{
    NonDropFrameTimecode                           = 0,
    DropFrameTimecode                              = 1,
    Seconds                                        = 2,
    Frames                                         = 3,
    MAX_Count                                      = 4,
    EFrameNumberDisplayFormats_MAX                 = 5

};

// Enum  MovieScene.ESubSequenceTimeType
enum class ESubSequenceTimeType : uint8_t
{
    Nearest                                        = 0,
    Floor                                          = 1,
    Ceil                                           = 2,
    ESubSequenceTimeType_MAX                       = 3

};

// Enum  MovieScene.EMovieSceneKeyInterpolation
enum class EMovieSceneKeyInterpolation : uint8_t
{
    Auto                                           = 0,
    User                                           = 1,
    Break                                          = 2,
    Linear                                         = 3,
    Constant                                       = 4,
    EMovieSceneKeyInterpolation_MAX                = 5

};

// Enum  MovieScene.EMovieSceneBlendType
enum class EMovieSceneBlendType : uint8_t
{
    Invalid                                        = 0,
    Absolute                                       = 1,
    Additive                                       = 2,
    Relative                                       = 4,
    EMovieSceneBlendType_MAX                       = 5

};

// Enum  MovieScene.EMovieSceneBuiltInEasing
enum class EMovieSceneBuiltInEasing : uint8_t
{
    Linear                                         = 0,
    SinIn                                          = 1,
    SinOut                                         = 2,
    SinInOut                                       = 3,
    QuadIn                                         = 4,
    QuadOut                                        = 5,
    QuadInOut                                      = 6,
    CubicIn                                        = 7,
    CubicOut                                       = 8,
    CubicInOut                                     = 9,
    QuartIn                                        = 10,
    QuartOut                                       = 11,
    QuartInOut                                     = 12,
    QuintIn                                        = 13,
    QuintOut                                       = 14,
    QuintInOut                                     = 15,
    ExpoIn                                         = 16,
    ExpoOut                                        = 17,
    ExpoInOut                                      = 18,
    CircIn                                         = 19,
    CircOut                                        = 20,
    CircInOut                                      = 21,
    EMovieSceneBuiltInEasing_MAX                   = 22

};

// Enum  MovieScene.EEvaluationMethod
enum class EEvaluationMethod : uint8_t
{
    Static                                         = 0,
    Swept                                          = 1,
    EEvaluationMethod_MAX                          = 2

};

// Enum  MovieScene.EUpdateClockSource
enum class EUpdateClockSource : uint8_t
{
    Tick                                           = 0,
    Platform                                       = 1,
    Audio                                          = 2,
    Timecode                                       = 3,
    EUpdateClockSource_MAX                         = 4

};

// Enum  MovieScene.EMovieSceneEvaluationType
enum class EMovieSceneEvaluationType : uint8_t
{
    FrameLocked                                    = 0,
    WithSubFrames                                  = 1,
    EMovieSceneEvaluationType_MAX                  = 2

};

// Enum  MovieScene.EMovieScenePlayerStatus
enum class EMovieScenePlayerStatus : uint8_t
{
    Stopped                                        = 0,
    Playing                                        = 1,
    Recording                                      = 2,
    Scrubbing                                      = 3,
    Jumping                                        = 4,
    Stepping                                       = 5,
    Paused                                         = 6,
    MAX                                            = 7

};

// Enum  MovieScene.EMovieSceneObjectBindingSpace
enum class EMovieSceneObjectBindingSpace : uint8_t
{
    Local                                          = 0,
    Root                                           = 1,
    EMovieSceneObjectBindingSpace_MAX              = 2

};

// Enum  MovieScene.EMovieSceneCompletionMode
enum class EMovieSceneCompletionMode : uint8_t
{
    KeepState                                      = 0,
    RestoreState                                   = 1,
    ProjectDefault                                 = 2,
    EMovieSceneCompletionMode_MAX                  = 3

};

// Enum  MovieScene.ESectionEvaluationFlags
enum class ESectionEvaluationFlags : uint8_t
{
    None                                           = 0,
    PreRoll                                        = 1,
    PostRoll                                       = 2,
    ESectionEvaluationFlags_MAX                    = 3

};

// Enum  MovieScene.EUpdatePositionMethod
enum class EUpdatePositionMethod : uint8_t
{
    Play                                           = 0,
    Jump                                           = 1,
    Scrub                                          = 2,
    EUpdatePositionMethod_MAX                      = 3

};

// Enum  MovieScene.ESpawnOwnership
enum class ESpawnOwnership : uint8_t
{
    InnerSequence                                  = 0,
    MasterSequence                                 = 1,
    External                                       = 2,
    ESpawnOwnership_MAX                            = 3

};

// Enum  AnimationCore.ETransformConstraintType
enum class ETransformConstraintType : uint8_t
{
    Translation                                    = 0,
    Rotation                                       = 1,
    Scale                                          = 2,
    Parent                                         = 3,
    ETransformConstraintType_MAX                   = 4

};

// Enum  AnimationCore.EConstraintType
enum class EConstraintType : uint8_t
{
    Transform                                      = 0,
    Aim                                            = 1,
    MAX                                            = 2

};

// Enum  AnimGraphRuntime.ESphericalLimitType
enum class ESphericalLimitType : uint8_t
{
    Inner                                          = 0,
    Outer                                          = 1,
    ESphericalLimitType_MAX                        = 2

};

// Enum  AnimGraphRuntime.AnimPhysSimSpaceType
enum class AnimPhysSimSpaceType : uint8_t
{
    Component                                      = 0,
    Actor                                          = 1,
    World                                          = 2,
    RootRelative                                   = 3,
    BoneRelative                                   = 4,
    AnimPhysSimSpaceType_MAX                       = 5

};

// Enum  AnimGraphRuntime.AnimPhysLinearConstraintType
enum class AnimPhysLinearConstraintType : uint8_t
{
    Free                                           = 0,
    Limited                                        = 1,
    AnimPhysLinearConstraintType_MAX               = 2

};

// Enum  AnimGraphRuntime.AnimPhysAngularConstraintType
enum class AnimPhysAngularConstraintType : uint8_t
{
    Angular                                        = 0,
    Cone                                           = 1,
    AnimPhysAngularConstraintType_MAX              = 2

};

// Enum  AnimGraphRuntime.EBlendListTransitionType
enum class EBlendListTransitionType : uint8_t
{
    StandardBlend                                  = 0,
    Inertialization                                = 1,
    EBlendListTransitionType_MAX                   = 2

};

// Enum  AnimGraphRuntime.EDrivenDestinationMode
enum class EDrivenDestinationMode : uint8_t
{
    Bone                                           = 0,
    MorphTarget                                    = 1,
    MaterialParameter                              = 2,
    EDrivenDestinationMode_MAX                     = 3

};

// Enum  AnimGraphRuntime.EDrivenBoneModificationMode
enum class EDrivenBoneModificationMode : uint8_t
{
    AddToInput                                     = 0,
    ReplaceComponent                               = 1,
    AddToRefPose                                   = 2,
    EDrivenBoneModificationMode_MAX                = 3

};

// Enum  AnimGraphRuntime.EConstraintOffsetOption
enum class EConstraintOffsetOption : uint8_t
{
    None                                           = 0,
    Offset_RefPose                                 = 1,
    EConstraintOffsetOption_MAX                    = 2

};

// Enum  AnimGraphRuntime.CopyBoneDeltaMode
enum class CopyBoneDeltaMode : uint8_t
{
    Accumulate                                     = 0,
    Copy                                           = 1,
    CopyBoneDeltaMode_MAX                          = 2

};

// Enum  AnimGraphRuntime.EInterpolationBlend
enum class EInterpolationBlend : uint8_t
{
    Linear                                         = 0,
    Cubic                                          = 1,
    Sinusoidal                                     = 2,
    EaseInOutExponent2                             = 3,
    EaseInOutExponent3                             = 4,
    EaseInOutExponent4                             = 5,
    EaseInOutExponent5                             = 6,
    MAX                                            = 7

};

// Enum  AnimGraphRuntime.EBoneModificationMode
enum class EBoneModificationMode : uint8_t
{
    BMM_Ignore                                     = 0,
    BMM_Replace                                    = 1,
    BMM_Additive                                   = 2,
    BMM_MAX                                        = 3

};

// Enum  AnimGraphRuntime.EModifyCurveApplyMode
enum class EModifyCurveApplyMode : uint8_t
{
    Add                                            = 0,
    Scale                                          = 1,
    Blend                                          = 2,
    WeightedMovingAverage                          = 3,
    RemapCurve                                     = 4,
    EModifyCurveApplyMode_MAX                      = 5

};

// Enum  AnimGraphRuntime.EPoseDriverOutput
enum class EPoseDriverOutput : uint8_t
{
    DrivePoses                                     = 0,
    DriveCurves                                    = 1,
    EPoseDriverOutput_MAX                          = 2

};

// Enum  AnimGraphRuntime.EPoseDriverSource
enum class EPoseDriverSource : uint8_t
{
    Rotation                                       = 0,
    Translation                                    = 1,
    EPoseDriverSource_MAX                          = 2

};

// Enum  AnimGraphRuntime.EPoseDriverType
enum class EPoseDriverType : uint8_t
{
    SwingAndTwist                                  = 0,
    SwingOnly                                      = 1,
    Translation                                    = 2,
    EPoseDriverType_MAX                            = 3

};

// Enum  AnimGraphRuntime.ESnapshotSourceMode
enum class ESnapshotSourceMode : uint8_t
{
    NamedSnapshot                                  = 0,
    SnapshotPin                                    = 1,
    ESnapshotSourceMode_MAX                        = 2

};

// Enum  AnimGraphRuntime.ERefPoseType
enum class ERefPoseType : uint8_t
{
    EIT_LocalSpace                                 = 0,
    EIT_Additive                                   = 1,
    EIT_MAX                                        = 2

};

// Enum  AnimGraphRuntime.ESimulationSpace
enum class ESimulationSpace : uint8_t
{
    ComponentSpace                                 = 0,
    WorldSpace                                     = 1,
    BaseBoneSpace                                  = 2,
    ESimulationSpace_MAX                           = 3

};

// Enum  AnimGraphRuntime.EScaleChainInitialLength
enum class EScaleChainInitialLength : uint8_t
{
    FixedDefaultLengthValue                        = 0,
    Distance                                       = 1,
    ChainLength                                    = 2,
    EScaleChainInitialLength_MAX                   = 3

};

// Enum  AnimGraphRuntime.ESequenceEvalReinit
enum class ESequenceEvalReinit : uint8_t
{
    NoReset                                        = 0,
    StartPosition                                  = 1,
    ExplicitTime                                   = 2,
    ESequenceEvalReinit_MAX                        = 3

};

// Enum  AnimGraphRuntime.ESplineBoneAxis
enum class ESplineBoneAxis : uint8_t
{
    None                                           = 0,
    X                                              = 1,
    Y                                              = 2,
    Z                                              = 3,
    ESplineBoneAxis_MAX                            = 4

};

// Enum  AnimGraphRuntime.ERotationComponent
enum class ERotationComponent : uint8_t
{
    EulerX                                         = 0,
    EulerY                                         = 1,
    EulerZ                                         = 2,
    QuaternionAngle                                = 3,
    SwingAngle                                     = 4,
    TwistAngle                                     = 5,
    ERotationComponent_MAX                         = 6

};

// Enum  AnimGraphRuntime.EEasingFuncType
enum class EEasingFuncType : uint8_t
{
    Linear                                         = 0,
    Sinusoidal                                     = 1,
    Cubic                                          = 2,
    QuadraticInOut                                 = 3,
    CubicInOut                                     = 4,
    HermiteCubic                                   = 5,
    QuarticInOut                                   = 6,
    QuinticInOut                                   = 7,
    CircularIn                                     = 8,
    CircularOut                                    = 9,
    CircularInOut                                  = 10,
    ExpIn                                          = 11,
    ExpOut                                         = 12,
    ExpInOut                                       = 13,
    CustomCurve                                    = 14,
    EEasingFuncType_MAX                            = 15

};

// Enum  AnimGraphRuntime.ERBFNormalizeMethod
enum class ERBFNormalizeMethod : uint8_t
{
    OnlyNormalizeAboveOne                          = 0,
    AlwaysNormalize                                = 1,
    NormalizeWithinMedian                          = 2,
    ERBFNormalizeMethod_MAX                        = 3

};

// Enum  AnimGraphRuntime.ERBFDistanceMethod
enum class ERBFDistanceMethod : uint8_t
{
    Euclidean                                      = 0,
    Quaternion                                     = 1,
    SwingAngle                                     = 2,
    DefaultMethod                                  = 3,
    ERBFDistanceMethod_MAX                         = 4

};

// Enum  AnimGraphRuntime.ERBFFunctionType
enum class ERBFFunctionType : uint8_t
{
    Gaussian                                       = 0,
    Exponential                                    = 1,
    Linear                                         = 2,
    Cubic                                          = 3,
    Quintic                                        = 4,
    DefaultFunction                                = 5,
    ERBFFunctionType_MAX                           = 6

};

// Enum  MovieSceneTracks.MovieScene3DPathSection_Axis
enum class MovieScene3DPathSection_Axis : uint8_t
{
    X                                              = 0,
    Y                                              = 1,
    Z                                              = 2,
    NEG_X                                          = 3,
    NEG_Y                                          = 4,
    NEG_Z                                          = 5,
    MovieScene3DPathSection_MAX                    = 6

};

// Enum  MovieSceneTracks.EFireEventsAtPosition
enum class EFireEventsAtPosition : uint8_t
{
    AtStartOfEvaluation                            = 0,
    AtEndOfEvaluation                              = 1,
    AfterSpawn                                     = 2,
    EFireEventsAtPosition_MAX                      = 3

};

// Enum  MovieSceneTracks.ELevelVisibility
enum class ELevelVisibility : uint8_t
{
    Visible                                        = 0,
    Hidden                                         = 1,
    ELevelVisibility_MAX                           = 2

};

// Enum  MovieSceneTracks.EParticleKey
enum class EParticleKey : uint8_t
{
    Activate                                       = 0,
    Deactivate                                     = 1,
    Trigger                                        = 2,
    EParticleKey_MAX                               = 3

};

// Enum  UMG.EDragPivot
enum class EDragPivot : uint8_t
{
    MouseDown                                      = 0,
    TopLeft                                        = 1,
    TopCenter                                      = 2,
    TopRight                                       = 3,
    CenterLeft                                     = 4,
    CenterCenter                                   = 5,
    CenterRight                                    = 6,
    BottomLeft                                     = 7,
    BottomCenter                                   = 8,
    BottomRight                                    = 9,
    EDragPivot_MAX                                 = 10

};

// Enum  UMG.EDynamicBoxType
enum class EDynamicBoxType : uint8_t
{
    Horizontal                                     = 0,
    Vertical                                       = 1,
    Wrap                                           = 2,
    Overlay                                        = 3,
    EDynamicBoxType_MAX                            = 4

};

// Enum  UMG.ELitePlayerType
enum class ELitePlayerType : uint8_t
{
    RenderTransform                                = 0,
    RenderOpacity                                  = 1,
    BrushMaterial                                  = 2,
    ColorAndOpacity                                = 3,
    OverrideMaterial                               = 4,
    EventTrigger                                   = 5,
    SubAnimation                                   = 6,
    RenderTransformPivot                           = 7,
    CanvasSlotProperty                             = 8,
    Visibility                                     = 9,
    Progress                                       = 10,
    Count                                          = 11,
    ELitePlayerType_MAX                            = 12

};

// Enum  UMG.ELiteAnimationPlayerStatus
enum class ELiteAnimationPlayerStatus : uint8_t
{
    Stopped                                        = 0,
    Playing                                        = 1,
    Paused                                         = 2,
    MAX                                            = 3

};

// Enum  UMG.ESlateSizeRule
enum class ESlateSizeRule : uint8_t
{
    Automatic                                      = 0,
    Fill                                           = 1,
    ESlateSizeRule_MAX                             = 2

};

// Enum  UMG.EWidgetDesignFlags
enum class EWidgetDesignFlags : uint8_t
{
    None                                           = 0,
    Designing                                      = 1,
    ShowOutline                                    = 2,
    ExecutePreConstruct                            = 4,
    EWidgetDesignFlags_MAX                         = 5

};

// Enum  UMG.EBindingKind
enum class EBindingKind : uint8_t
{
    Function                                       = 0,
    Property                                       = 1,
    EBindingKind_MAX                               = 2

};

// Enum  UMG.EWindowVisibility
enum class EWindowVisibility : uint8_t
{
    Visible                                        = 0,
    SelfHitTestInvisible                           = 1,
    EWindowVisibility_MAX                          = 2

};

// Enum  UMG.EWidgetGeometryMode
enum class EWidgetGeometryMode : uint8_t
{
    Plane                                          = 0,
    Cylinder                                       = 1,
    EWidgetGeometryMode_MAX                        = 2

};

// Enum  UMG.EWidgetBlendMode
enum class EWidgetBlendMode : uint8_t
{
    Opaque                                         = 0,
    Masked                                         = 1,
    Transparent                                    = 2,
    EWidgetBlendMode_MAX                           = 3

};

// Enum  UMG.EWidgetTimingPolicy
enum class EWidgetTimingPolicy : uint8_t
{
    RealTime                                       = 0,
    GameTime                                       = 1,
    EWidgetTimingPolicy_MAX                        = 2

};

// Enum  UMG.EWidgetSpace
enum class EWidgetSpace : uint8_t
{
    World                                          = 0,
    Screen                                         = 1,
    EWidgetSpace_MAX                               = 2

};

// Enum  UMG.EWidgetType3DUI
enum class EWidgetType3DUI : uint8_t
{
    TypeBRHud                                      = 0,
    TypeBRNonHud                                   = 1,
    TypeFrontend                                   = 2,
    EWidgetType3DUI_MAX                            = 3

};

// Enum  UMG.EWidgetInteractionSource
enum class EWidgetInteractionSource : uint8_t
{
    World                                          = 0,
    Mouse                                          = 1,
    CenterScreen                                   = 2,
    Custom                                         = 3,
    EWidgetInteractionSource_MAX                   = 4

};

// Enum  CinematicCamera.ECameraFocusMethod
enum class ECameraFocusMethod : uint8_t
{
    None                                           = 0,
    Manual                                         = 1,
    Tracking                                       = 2,
    ECameraFocusMethod_MAX                         = 3

};

// Enum  AudioMixer.EAudioSpectrumType
enum class EAudioSpectrumType : uint8_t
{
    MagnitudeSpectrum                              = 0,
    PowerSpectrum                                  = 1,
    EAudioSpectrumType_MAX                         = 2

};

// Enum  AudioMixer.EFFTWindowType
enum class EFFTWindowType : uint8_t
{
    None                                           = 0,
    Hamming                                        = 1,
    Hann                                           = 2,
    Blackman                                       = 3,
    EFFTWindowType_MAX                             = 4

};

// Enum  AudioMixer.EFFTPeakInterpolationMethod
enum class EFFTPeakInterpolationMethod : uint8_t
{
    NearestNeighbor                                = 0,
    Linear                                         = 1,
    Quadratic                                      = 2,
    EFFTPeakInterpolationMethod_MAX                = 3

};

// Enum  AudioMixer.EFFTSize
enum class EFFTSize : uint8_t
{
    DefaultSize                                    = 0,
    Min                                            = 1,
    Small                                          = 2,
    Medium                                         = 3,
    Large                                          = 4,
    Max                                            = 5

};

// Enum  AudioMixer.ESubmixEffectDynamicsPeakMode
enum class ESubmixEffectDynamicsPeakMode : uint8_t
{
    MeanSquared                                    = 0,
    RootMeanSquared                                = 1,
    Peak                                           = 2,
    Count                                          = 3,
    ESubmixEffectDynamicsPeakMode_MAX              = 4

};

// Enum  AudioMixer.ESubmixEffectDynamicsProcessorType
enum class ESubmixEffectDynamicsProcessorType : uint8_t
{
    Compressor                                     = 0,
    Limiter                                        = 1,
    Expander                                       = 2,
    Gate                                           = 3,
    Count                                          = 4,
    ESubmixEffectDynamicsProcessorType_MAX         = 5

};

// Enum  AssetRegistry.ECrossPlatformType
enum class ECrossPlatformType : uint8_t
{
    Mobile                                         = 0,
    Desktop                                        = 1,
    ECrossPlatformType_MAX                         = 2

};

// Enum  GameplayTags.EGameplayTagQueryExprType
enum class EGameplayTagQueryExprType : uint8_t
{
    Undefined                                      = 0,
    AnyTagsMatch                                   = 1,
    AllTagsMatch                                   = 2,
    NoTagsMatch                                    = 3,
    AnyExprMatch                                   = 4,
    AllExprMatch                                   = 5,
    NoExprMatch                                    = 6,
    EGameplayTagQueryExprType_MAX                  = 7

};

// Enum  GameplayTags.EGameplayContainerMatchType
enum class EGameplayContainerMatchType : uint8_t
{
    Any                                            = 0,
    All                                            = 1,
    EGameplayContainerMatchType_MAX                = 2

};

// Enum  GameplayTags.EGameplayTagMatchType
enum class EGameplayTagMatchType : uint8_t
{
    Explicit                                       = 0,
    IncludeParentTags                              = 1,
    EGameplayTagMatchType_MAX                      = 2

};

// Enum  GameplayTags.EGameplayTagSelectionType
enum class EGameplayTagSelectionType : uint8_t
{
    None                                           = 0,
    NonRestrictedOnly                              = 1,
    RestrictedOnly                                 = 2,
    All                                            = 3,
    EGameplayTagSelectionType_MAX                  = 4

};

// Enum  GameplayTags.EGameplayTagSourceType
enum class EGameplayTagSourceType : uint8_t
{
    Native                                         = 0,
    DefaultTagList                                 = 1,
    TagList                                        = 2,
    RestrictedTagList                              = 3,
    DataTable                                      = 4,
    Invalid                                        = 5,
    EGameplayTagSourceType_MAX                     = 6

};

// Enum  AudioPlatformConfiguration.ESoundwaveSampleRateSettings
enum class ESoundwaveSampleRateSettings : uint8_t
{
    Max                                            = 0,
    High                                           = 1,
    Medium                                         = 2,
    Low                                            = 3,
    Min                                            = 4,
    MatchDevice                                    = 5

};

// Enum  MeshDescription.EComputeNTBsOptions
enum class EComputeNTBsOptions : uint8_t
{
    None                                           = 0,
    Normals                                        = 1,
    Tangents                                       = 2,
    WeightedNTBs                                   = 4,
    EComputeNTBsOptions_MAX                        = 5

};

// Enum  GeometryCollectionCore.EGeometryCollectionCacheType
enum class EGeometryCollectionCacheType : uint8_t
{
    None                                           = 0,
    Record                                         = 1,
    Play                                           = 2,
    RecordAndPlay                                  = 3,
    EGeometryCollectionCacheType_MAX               = 4

};

// Enum  GeometryCollectionSimulationCore.EEmissionPatternTypeEnum
enum class EEmissionPatternTypeEnum : uint8_t
{
    Chaos_Emission_Pattern_First_Frame             = 0,
    Chaos_Emission_Pattern_On_Demand               = 1,
    Chaos_Max                                      = 2

};

// Enum  GeometryCollectionSimulationCore.EInitialVelocityTypeEnum
enum class EInitialVelocityTypeEnum : uint8_t
{
    Chaos_Initial_Velocity_User_Defined            = 0,
    Chaos_Initial_Velocity_None                    = 1,
    Chaos_Max                                      = 2

};

// Enum  GeometryCollectionSimulationCore.EGeometryCollectionPhysicsTypeEnum
enum class EGeometryCollectionPhysicsTypeEnum : uint8_t
{
    Chaos_AngularVelocity                          = 0,
    Chaos_DynamicState                             = 1,
    Chaos_LinearVelocity                           = 2,
    Chaos_InitialAngularVelocity                   = 3,
    Chaos_InitialLinearVelocity                    = 4,
    Chaos_CollisionGroup                           = 5,
    Chaos_LinearForce                              = 6,
    Chaos_AngularTorque                            = 7,
    Chaos_Max                                      = 8

};

// Enum  GeometryCollectionSimulationCore.EObjectStateTypeEnum
enum class EObjectStateTypeEnum : uint8_t
{
    Chaos_NONE                                     = 0,
    Chaos_Object_Sleeping                          = 1,
    Chaos_Object_Kinematic                         = 2,
    Chaos_Object_Static                            = 3,
    Chaos_Object_Dynamic                           = 4,
    Chaos_Object_UserDefined                       = 100,
    Chaos_Max                                      = 101

};

// Enum  GeometryCollectionSimulationCore.EImplicitTypeEnum
enum class EImplicitTypeEnum : uint8_t
{
    Chaos_Implicit_Box                             = 0,
    Chaos_Implicit_Sphere                          = 1,
    Chaos_Implicit_Capsule                         = 2,
    Chaos_Implicit_LevelSet                        = 3,
    Chaos_Implicit_None                            = 4,
    Chaos_Max                                      = 5

};

// Enum  GeometryCollectionSimulationCore.ECollisionTypeEnum
enum class ECollisionTypeEnum : uint8_t
{
    Chaos_Volumetric                               = 0,
    Chaos_Surface_Volumetric                       = 1,
    Chaos_Max                                      = 2

};

// Enum  EyeTracker.EEyeTrackerStatus
enum class EEyeTrackerStatus : uint8_t
{
    NotConnected                                   = 0,
    NotTracking                                    = 1,
    Tracking                                       = 2,
    EEyeTrackerStatus_MAX                          = 3

};

// Enum  Engine.EAspectRatioAxisConstraint
enum class EAspectRatioAxisConstraint : uint8_t
{
    AspectRatio_MaintainYFOV                       = 0,
    AspectRatio_MaintainXFOV                       = 1,
    AspectRatio_MajorAxisFOV                       = 2,
    AspectRatio_MAX                                = 3

};

// Enum  LevelSequence.ESubLevelSequenceType
enum class ESubLevelSequenceType : uint8_t
{
    Base                                           = 0,
    Dynamic                                        = 1,
    ESubLevelSequenceType_MAX                      = 2

};

// Enum  MovieSceneCapture.EHDRCaptureGamut
enum class EHDRCaptureGamut : uint8_t
{
    HCGM_Rec709                                    = 0,
    HCGM_P3DCI                                     = 1,
    HCGM_Rec2020                                   = 2,
    HCGM_ACES                                      = 3,
    HCGM_ACEScg                                    = 4,
    HCGM_Linear                                    = 5,
    HCGM_MAX                                       = 6

};

// Enum  MovieSceneCapture.EMovieSceneCaptureProtocolState
enum class EMovieSceneCaptureProtocolState : uint8_t
{
    Idle                                           = 0,
    Initialized                                    = 1,
    Capturing                                      = 2,
    Finalizing                                     = 3,
    EMovieSceneCaptureProtocolState_MAX            = 4

};

// Enum  MoviePlayer.EMoviePlaybackType
enum class EMoviePlaybackType : uint8_t
{
    MT_Normal                                      = 0,
    MT_Looped                                      = 1,
    MT_LoadingLoop                                 = 2,
    MT_MAX                                         = 3

};

// Enum  Engine.EAlphaBlendOption
enum class EAlphaBlendOption : uint8_t
{
    Linear                                         = 0,
    Cubic                                          = 1,
    HermiteCubic                                   = 2,
    Sinusoidal                                     = 3,
    QuadraticInOut                                 = 4,
    CubicInOut                                     = 5,
    QuarticInOut                                   = 6,
    QuinticInOut                                   = 7,
    CircularIn                                     = 8,
    CircularOut                                    = 9,
    CircularInOut                                  = 10,
    ExpIn                                          = 11,
    ExpOut                                         = 12,
    ExpInOut                                       = 13,
    Custom                                         = 14,
    EAlphaBlendOption_MAX                          = 15

};

// Enum  Engine.EAnimGroupRole
enum class EAnimGroupRole : uint8_t
{
    CanBeLeader                                    = 0,
    AlwaysFollower                                 = 1,
    AlwaysLeader                                   = 2,
    TransitionLeader                               = 3,
    TransitionFollower                             = 4,
    EAnimGroupRole_MAX                             = 5

};

// Enum  Engine.EPreviewAnimationBlueprintApplicationMethod
enum class EPreviewAnimationBlueprintApplicationMethod : uint8_t
{
    LinkedLayers                                   = 0,
    LinkedAnimGraph                                = 1,
    EPreviewAnimationBlueprintApplicationMethod_MAX = 2

};

// Enum  Engine.AnimationKeyFormat
enum class AnimationKeyFormat : uint8_t
{
    AKF_ConstantKeyLerp                            = 0,
    AKF_VariableKeyLerp                            = 1,
    AKF_PerTrackCompression                        = 2,
    AKF_MAX                                        = 3

};

// Enum  Engine.ERawCurveTrackTypes
enum class ERawCurveTrackTypes : uint8_t
{
    RCT_Float                                      = 0,
    RCT_Vector                                     = 1,
    RCT_Transform                                  = 2,
    RCT_MAX                                        = 3

};

// Enum  Engine.EAnimAssetCurveFlags
enum class EAnimAssetCurveFlags : uint8_t
{
    AACF_NONE                                      = 0,
    AACF_DriveMorphTarget_DEPRECATED               = 1,
    AACF_DriveAttribute_DEPRECATED                 = 2,
    AACF_Editable                                  = 4,
    AACF_DriveMaterial_DEPRECATED                  = 8,
    AACF_Metadata                                  = 16,
    AACF_DriveTrack                                = 32,
    AACF_Disabled                                  = 64,
    AACF_MAX                                       = 65

};

// Enum  Engine.AnimationCompressionFormat
enum class AnimationCompressionFormat : uint8_t
{
    ACF_None                                       = 0,
    ACF_Float96NoW                                 = 1,
    ACF_Fixed48NoW                                 = 2,
    ACF_IntervalFixed32NoW                         = 3,
    ACF_Fixed32NoW                                 = 4,
    ACF_Float32NoW                                 = 5,
    ACF_Identity                                   = 6,
    ACF_MAX                                        = 7

};

// Enum  Engine.EAdditiveBasePoseType
enum class EAdditiveBasePoseType : uint8_t
{
    ABPT_None                                      = 0,
    ABPT_RefPose                                   = 1,
    ABPT_AnimScaled                                = 2,
    ABPT_AnimFrame                                 = 3,
    ABPT_MAX                                       = 4

};

// Enum  Engine.ERootMotionMode
enum class ERootMotionMode : uint8_t
{
    NoRootMotionExtraction                         = 0,
    IgnoreRootMotion                               = 1,
    RootMotionFromEverything                       = 2,
    RootMotionFromMontagesOnly                     = 3,
    ERootMotionMode_MAX                            = 4

};

// Enum  Engine.ERootMotionRootLock
enum class ERootMotionRootLock : uint8_t
{
    RefPose                                        = 0,
    AnimFirstFrame                                 = 1,
    Zero                                           = 2,
    ERootMotionRootLock_MAX                        = 3

};

// Enum  Engine.EMontagePlayReturnType
enum class EMontagePlayReturnType : uint8_t
{
    MontageLength                                  = 0,
    Duration                                       = 1,
    EMontagePlayReturnType_MAX                     = 2

};

// Enum  Engine.EDrawDebugItemType
enum class EDrawDebugItemType : uint8_t
{
    DirectionalArrow                               = 0,
    Sphere                                         = 1,
    Line                                           = 2,
    OnScreenMessage                                = 3,
    CoordinateSystem                               = 4,
    EDrawDebugItemType_MAX                         = 5

};

// Enum  Engine.EMontageSubStepResult
enum class EMontageSubStepResult : uint8_t
{
    Moved                                          = 0,
    NotMoved                                       = 1,
    InvalidSection                                 = 2,
    InvalidMontage                                 = 3,
    EMontageSubStepResult_MAX                      = 4

};

// Enum  Engine.EAnimNotifyEventType
enum class EAnimNotifyEventType : uint8_t
{
    Begin                                          = 0,
    End                                            = 1,
    EAnimNotifyEventType_MAX                       = 2

};

// Enum  Engine.EInertializationSpace
enum class EInertializationSpace : uint8_t
{
    Default                                        = 0,
    WorldSpace                                     = 1,
    WorldRotation                                  = 2,
    EInertializationSpace_MAX                      = 3

};

// Enum  Engine.EInertializationBoneState
enum class EInertializationBoneState : uint8_t
{
    Invalid                                        = 0,
    Valid                                          = 1,
    Excluded                                       = 2,
    EInertializationBoneState_MAX                  = 3

};

// Enum  Engine.EInertializationState
enum class EInertializationState : uint8_t
{
    Inactive                                       = 0,
    Pending                                        = 1,
    Active                                         = 2,
    EInertializationState_MAX                      = 3

};

// Enum  Engine.EEvaluatorMode
enum class EEvaluatorMode : uint8_t
{
    EM_Standard                                    = 0,
    EM_Freeze                                      = 1,
    EM_DelayedFreeze                               = 2,
    EM_MAX                                         = 3

};

// Enum  Engine.EEvaluatorDataSource
enum class EEvaluatorDataSource : uint8_t
{
    EDS_SourcePose                                 = 0,
    EDS_DestinationPose                            = 1,
    EDS_MAX                                        = 2

};

// Enum  Engine.ECopyType
enum class ECopyType : uint8_t
{
    MemCopy                                        = 0,
    BoolProperty                                   = 1,
    StructProperty                                 = 2,
    ObjectProperty                                 = 3,
    ECopyType_MAX                                  = 4

};

// Enum  Engine.EPostCopyOperation
enum class EPostCopyOperation : uint8_t
{
    None                                           = 0,
    LogicalNegateBool                              = 1,
    EPostCopyOperation_MAX                         = 2

};

// Enum  Engine.EPinHidingMode
enum class EPinHidingMode : uint8_t
{
    NeverAsPin                                     = 0,
    PinHiddenByDefault                             = 1,
    PinShownByDefault                              = 2,
    AlwaysAsPin                                    = 3,
    EPinHidingMode_MAX                             = 4

};

// Enum  Engine.AnimPhysCollisionType
enum class AnimPhysCollisionType : uint8_t
{
    CoM                                            = 0,
    CustomSphere                                   = 1,
    InnerSphere                                    = 2,
    OuterSphere                                    = 3,
    AnimPhysCollisionType_MAX                      = 4

};

// Enum  Engine.AnimPhysTwistAxis
enum class AnimPhysTwistAxis : uint8_t
{
    AxisX                                          = 0,
    AxisY                                          = 1,
    AxisZ                                          = 2,
    AnimPhysTwistAxis_MAX                          = 3

};

// Enum  Engine.ETypeAdvanceAnim
enum class ETypeAdvanceAnim : uint8_t
{
    ETAA_Default                                   = 0,
    ETAA_Finished                                  = 1,
    ETAA_Looped                                    = 2,
    ETAA_MAX                                       = 3

};

// Enum  Engine.ETransitionLogicType
enum class ETransitionLogicType : uint8_t
{
    TLT_StandardBlend                              = 0,
    TLT_Inertialization                            = 1,
    TLT_Custom                                     = 2,
    TLT_MAX                                        = 3

};

// Enum  Engine.ETransitionBlendMode
enum class ETransitionBlendMode : uint8_t
{
    TBM_Linear                                     = 0,
    TBM_Cubic                                      = 1,
    TBM_MAX                                        = 2

};

// Enum  Engine.EComponentType
enum class EComponentType : uint8_t
{
    None                                           = 0,
    TranslationX                                   = 1,
    TranslationY                                   = 2,
    TranslationZ                                   = 3,
    RotationX                                      = 4,
    RotationY                                      = 5,
    RotationZ                                      = 6,
    Scale                                          = 7,
    ScaleX                                         = 8,
    ScaleY                                         = 9,
    ScaleZ                                         = 10,
    EComponentType_MAX                             = 11

};

// Enum  Engine.EAxisOption
enum class EAxisOption : uint8_t
{
    X                                              = 0,
    Y                                              = 1,
    Z                                              = 2,
    X_Neg                                          = 3,
    Y_Neg                                          = 4,
    Z_Neg                                          = 5,
    Custom                                         = 6,
    EAxisOption_MAX                                = 7

};

// Enum  Engine.EAnimInterpolationType
enum class EAnimInterpolationType : uint8_t
{
    Linear                                         = 0,
    Step                                           = 1,
    EAnimInterpolationType_MAX                     = 2

};

// Enum  Engine.ECurveBlendOption
enum class ECurveBlendOption : uint8_t
{
    MaxWeight                                      = 0,
    NormalizeByWeight                              = 1,
    BlendByWeight                                  = 2,
    ECurveBlendOption_MAX                          = 3

};

// Enum  Engine.EAdditiveAnimationType
enum class EAdditiveAnimationType : uint8_t
{
    AAT_None                                       = 0,
    AAT_LocalSpaceBase                             = 1,
    AAT_RotationOffsetMeshSpace                    = 2,
    AAT_MAX                                        = 3

};

// Enum  Engine.EBoneRotationSource
enum class EBoneRotationSource : uint8_t
{
    BRS_KeepComponentSpaceRotation                 = 0,
    BRS_KeepLocalSpaceRotation                     = 1,
    BRS_CopyFromTarget                             = 2,
    BRS_MAX                                        = 3

};

// Enum  Engine.EBoneControlSpace
enum class EBoneControlSpace : uint8_t
{
    BCS_WorldSpace                                 = 0,
    BCS_ComponentSpace                             = 1,
    BCS_ParentBoneSpace                            = 2,
    BCS_BoneSpace                                  = 3,
    BCS_MAX                                        = 4

};

// Enum  Engine.EBoneAxis
enum class EBoneAxis : uint8_t
{
    BA_X                                           = 0,
    BA_Y                                           = 1,
    BA_Z                                           = 2,
    BA_MAX                                         = 3

};

// Enum  Engine.EPrimaryAssetPakRule
enum class EPrimaryAssetPakRule : uint8_t
{
    Default                                        = 0,
    Necessary                                      = 1,
    Auto                                           = 2,
    Options                                        = 3,
    EPrimaryAssetPakRule_MAX                       = 4

};

// Enum  Engine.EPrimaryAssetCookRule
enum class EPrimaryAssetCookRule : uint8_t
{
    Unknown                                        = 0,
    NeverCook                                      = 1,
    DevelopmentCook                                = 2,
    DevelopmentAlwaysCook                          = 3,
    AlwaysCook                                     = 4,
    EPrimaryAssetCookRule_MAX                      = 5

};

// Enum  Engine.EAttenuationShape
enum class EAttenuationShape : uint8_t
{
    Sphere                                         = 0,
    Capsule                                        = 1,
    Box                                            = 2,
    Cone                                           = 3,
    EAttenuationShape_MAX                          = 4

};

// Enum  Engine.EAttenuationDistanceModel
enum class EAttenuationDistanceModel : uint8_t
{
    Linear                                         = 0,
    Logarithmic                                    = 1,
    Inverse                                        = 2,
    LogReverse                                     = 3,
    NaturalSound                                   = 4,
    Custom                                         = 5,
    EAttenuationDistanceModel_MAX                  = 6

};

// Enum  Engine.EAudioFaderCurve
enum class EAudioFaderCurve : uint8_t
{
    Linear                                         = 0,
    Logarithmic                                    = 1,
    SCurve                                         = 2,
    Sin                                            = 3,
    Count                                          = 4,
    EAudioFaderCurve_MAX                           = 5

};

// Enum  Engine.EAudioComponentPlayState
enum class EAudioComponentPlayState : uint8_t
{
    Playing                                        = 0,
    Stopped                                        = 1,
    Paused                                         = 2,
    FadingIn                                       = 3,
    FadingOut                                      = 4,
    Count                                          = 5,
    EAudioComponentPlayState_MAX                   = 6

};

// Enum  Engine.EMonoChannelUpmixMethod
enum class EMonoChannelUpmixMethod : uint8_t
{
    Linear                                         = 0,
    EqualPower                                     = 1,
    FullVolume                                     = 2,
    EMonoChannelUpmixMethod_MAX                    = 3

};

// Enum  Engine.EPanningMethod
enum class EPanningMethod : uint8_t
{
    Linear                                         = 0,
    EqualPower                                     = 1,
    EPanningMethod_MAX                             = 2

};

// Enum  Engine.EVoiceSampleRate
enum class EVoiceSampleRate : uint32_t
{
    Low16000Hz                                     = 16000,
    Normal24000Hz                                  = 24000,
    EVoiceSampleRate_MAX                           = 24001

};

// Enum  Engine.ReverbPreset
enum class ReverbPreset : uint8_t
{
    REVERB_Default                                 = 0,
    REVERB_Bathroom                                = 1,
    REVERB_StoneRoom                               = 2,
    REVERB_Auditorium                              = 3,
    REVERB_ConcertHall                             = 4,
    REVERB_Cave                                    = 5,
    REVERB_Hallway                                 = 6,
    REVERB_StoneCorridor                           = 7,
    REVERB_Alley                                   = 8,
    REVERB_Forest                                  = 9,
    REVERB_City                                    = 10,
    REVERB_Mountains                               = 11,
    REVERB_Quarry                                  = 12,
    REVERB_Plain                                   = 13,
    REVERB_ParkingLot                              = 14,
    REVERB_SewerPipe                               = 15,
    REVERB_Underwater                              = 16,
    REVERB_SmallRoom                               = 17,
    REVERB_MediumRoom                              = 18,
    REVERB_LargeRoom                               = 19,
    REVERB_MediumHall                              = 20,
    REVERB_LargeHall                               = 21,
    REVERB_Plate                                   = 22,
    REVERB_MAX                                     = 23

};

// Enum  Engine.EBlendableLocation
enum class EBlendableLocation : uint8_t
{
    BL_AfterTonemapping                            = 0,
    BL_BeforeTonemapping                           = 1,
    BL_BeforeTranslucency                          = 2,
    BL_ReplacingTonemapper                         = 3,
    BL_SSRInput                                    = 4,
    BL_MAX                                         = 5

};

// Enum  Engine.ENotifyTriggerMode
enum class ENotifyTriggerMode : uint8_t
{
    AllAnimations                                  = 0,
    HighestWeightedAnimation                       = 1,
    None                                           = 2,
    ENotifyTriggerMode_MAX                         = 3

};

// Enum  Engine.EBlendSpaceAxis
enum class EBlendSpaceAxis : uint8_t
{
    BSA_None                                       = 0,
    BSA_X                                          = 1,
    BSA_Y                                          = 2,
    BSA_Max                                        = 3

};

// Enum  Engine.EBlueprintNativizationFlag
enum class EBlueprintNativizationFlag : uint8_t
{
    Disabled                                       = 0,
    Dependency                                     = 1,
    ExplicitlyEnabled                              = 2,
    EBlueprintNativizationFlag_MAX                 = 3

};

// Enum  Engine.EBlueprintCompileMode
enum class EBlueprintCompileMode : uint8_t
{
    Default                                        = 0,
    Development                                    = 1,
    FinalRelease                                   = 2,
    EBlueprintCompileMode_MAX                      = 3

};

// Enum  Engine.EBlueprintType
enum class EBlueprintType : uint8_t
{
    BPTYPE_Normal                                  = 0,
    BPTYPE_Const                                   = 1,
    BPTYPE_MacroLibrary                            = 2,
    BPTYPE_Interface                               = 3,
    BPTYPE_LevelScript                             = 4,
    BPTYPE_FunctionLibrary                         = 5,
    BPTYPE_MAX                                     = 6

};

// Enum  Engine.EBlueprintStatus
enum class EBlueprintStatus : uint8_t
{
    BS_Unknown                                     = 0,
    BS_Dirty                                       = 1,
    BS_Error                                       = 2,
    BS_UpToDate                                    = 3,
    BS_BeingCreated                                = 4,
    BS_UpToDateWithWarnings                        = 5,
    BS_MAX                                         = 6

};

// Enum  Engine.EDOFMode
enum class EDOFMode : uint8_t
{
    Default                                        = 0,
    SixDOF                                         = 1,
    YZPlane                                        = 2,
    XZPlane                                        = 3,
    XYPlane                                        = 4,
    CustomPlane                                    = 5,
    None                                           = 6,
    EDOFMode_MAX                                   = 7

};

// Enum  Engine.EBodyCollisionResponse
enum class EBodyCollisionResponse : uint8_t
{
    BodyCollision_Enabled                          = 0,
    BodyCollision_Disabled                         = 1,
    BodyCollision_MAX                              = 2

};

// Enum  Engine.EPhysicsType
enum class EPhysicsType : uint8_t
{
    PhysType_Default                               = 0,
    PhysType_Kinematic                             = 1,
    PhysType_Simulated                             = 2,
    PhysType_MAX                                   = 3

};

// Enum  Engine.ECollisionTraceFlag
enum class ECollisionTraceFlag : uint8_t
{
    CTF_UseDefault                                 = 0,
    CTF_UseSimpleAndComplex                        = 1,
    CTF_UseSimpleAsComplex                         = 2,
    CTF_UseComplexAsSimple                         = 3,
    CTF_MAX                                        = 4

};

// Enum  Engine.EBrushType
enum class EBrushType : uint8_t
{
    Brush_Default                                  = 0,
    Brush_Add                                      = 1,
    Brush_Subtract                                 = 2,
    Brush_MAX                                      = 3

};

// Enum  Engine.ECsgOper
enum class ECsgOper : uint8_t
{
    CSG_Active                                     = 0,
    CSG_Add                                        = 1,
    CSG_Subtract                                   = 2,
    CSG_Intersect                                  = 3,
    CSG_Deintersect                                = 4,
    CSG_None                                       = 5,
    CSG_MAX                                        = 6

};

// Enum  Engine.EInitialOscillatorOffset
enum class EInitialOscillatorOffset : uint8_t
{
    EOO_OffsetRandom                               = 0,
    EOO_OffsetZero                                 = 1,
    EOO_MAX                                        = 2

};

// Enum  Engine.EOscillatorWaveform
enum class EOscillatorWaveform : uint8_t
{
    SineWave                                       = 0,
    PerlinNoise                                    = 1,
    EOscillatorWaveform_MAX                        = 2

};

// Enum  Engine.ECameraAlphaBlendMode
enum class ECameraAlphaBlendMode : uint8_t
{
    CABM_Linear                                    = 0,
    CABM_Cubic                                     = 1,
    CABM_MAX                                       = 2

};

// Enum  Engine.ECameraAnimPlaySpace
enum class ECameraAnimPlaySpace : uint8_t
{
    CameraLocal                                    = 0,
    World                                          = 1,
    UserDefined                                    = 2,
    ECameraAnimPlaySpace_MAX                       = 3

};

// Enum  Engine.ECameraProjectionMode
enum class ECameraProjectionMode : uint8_t
{
    Perspective                                    = 0,
    Orthographic                                   = 1,
    ECameraProjectionMode_MAX                      = 2

};

// Enum  Engine.ECloudStorageDelegate
enum class ECloudStorageDelegate : uint8_t
{
    CSD_KeyValueReadComplete                       = 0,
    CSD_KeyValueWriteComplete                      = 1,
    CSD_ValueChanged                               = 2,
    CSD_DocumentQueryComplete                      = 3,
    CSD_DocumentReadComplete                       = 4,
    CSD_DocumentWriteComplete                      = 5,
    CSD_DocumentConflictDetected                   = 6,
    CSD_MAX                                        = 7

};

// Enum  Engine.EAngularDriveMode
enum class EAngularDriveMode : uint8_t
{
    SLERP                                          = 0,
    TwistAndSwing                                  = 1,
    EAngularDriveMode_MAX                          = 2

};

// Enum  Engine.ELinearConstraintMotion
enum class ELinearConstraintMotion : uint8_t
{
    LCM_Free                                       = 0,
    LCM_Limited                                    = 1,
    LCM_Locked                                     = 2,
    LCM_MAX                                        = 3

};

// Enum  Engine.ECurveTableMode
enum class ECurveTableMode : uint8_t
{
    Empty                                          = 0,
    SimpleCurves                                   = 1,
    RichCurves                                     = 2,
    ECurveTableMode_MAX                            = 3

};

// Enum  Engine.EEvaluateCurveTableResult
enum class EEvaluateCurveTableResult : uint8_t
{
    RowFound                                       = 0,
    RowNotFound                                    = 1,
    EEvaluateCurveTableResult_MAX                  = 2

};

// Enum  Engine.EGrammaticalNumber
enum class EGrammaticalNumber : uint8_t
{
    Singular                                       = 0,
    Plural                                         = 1,
    EGrammaticalNumber_MAX                         = 2

};

// Enum  Engine.EGrammaticalGender
enum class EGrammaticalGender : uint8_t
{
    Neuter                                         = 0,
    Masculine                                      = 1,
    Feminine                                       = 2,
    Mixed                                          = 3,
    EGrammaticalGender_MAX                         = 4

};

// Enum  Engine.DistributionParamMode
enum class DistributionParamMode : uint8_t
{
    DPM_Normal                                     = 0,
    DPM_Abs                                        = 1,
    DPM_Direct                                     = 2,
    DPM_MAX                                        = 3

};

// Enum  Engine.EDistributionVectorMirrorFlags
enum class EDistributionVectorMirrorFlags : uint8_t
{
    EDVMF_Same                                     = 0,
    EDVMF_Different                                = 1,
    EDVMF_Mirror                                   = 2,
    EDVMF_MAX                                      = 3

};

// Enum  Engine.EDistributionVectorLockFlags
enum class EDistributionVectorLockFlags : uint8_t
{
    EDVLF_None                                     = 0,
    EDVLF_XY                                       = 1,
    EDVLF_XZ                                       = 2,
    EDVLF_YZ                                       = 3,
    EDVLF_XYZ                                      = 4,
    EDVLF_MAX                                      = 5

};

// Enum  Engine.ENodeEnabledState
enum class ENodeEnabledState : uint8_t
{
    Enabled                                        = 0,
    Disabled                                       = 1,
    DevelopmentOnly                                = 2,
    ENodeEnabledState_MAX                          = 3

};

// Enum  Engine.ENodeAdvancedPins
enum class ENodeAdvancedPins : uint8_t
{
    NoPins                                         = 0,
    Shown                                          = 1,
    Hidden                                         = 2,
    ENodeAdvancedPins_MAX                          = 3

};

// Enum  Engine.ENodeTitleType
enum class ENodeTitleType : uint8_t
{
    FullTitle                                      = 0,
    ListView                                       = 1,
    EditableTitle                                  = 2,
    MenuTitle                                      = 3,
    MAX_TitleTypes                                 = 4,
    ENodeTitleType_MAX                             = 5

};

// Enum  Engine.EPinContainerType
enum class EPinContainerType : uint8_t
{
    None                                           = 0,
    Array                                          = 1,
    Set                                            = 2,
    Map                                            = 3,
    EPinContainerType_MAX                          = 4

};

// Enum  Engine.EEdGraphPinDirection
enum class EEdGraphPinDirection : uint8_t
{
    EGPD_Input                                     = 0,
    EGPD_Output                                    = 1,
    EGPD_MAX                                       = 2

};

// Enum  Engine.EBlueprintPinStyleType
enum class EBlueprintPinStyleType : uint8_t
{
    BPST_Original                                  = 0,
    BPST_VariantA                                  = 1,
    BPST_MAX                                       = 2

};

// Enum  Engine.ECanCreateConnectionResponse
enum class ECanCreateConnectionResponse : uint8_t
{
    CONNECT_RESPONSE_MAKE                          = 0,
    CONNECT_RESPONSE_DISALLOW                      = 1,
    CONNECT_RESPONSE_BREAK_OTHERS_A                = 2,
    CONNECT_RESPONSE_BREAK_OTHERS_B                = 3,
    CONNECT_RESPONSE_BREAK_OTHERS_AB               = 4,
    CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE     = 5,
    CONNECT_RESPONSE_MAX                           = 6

};

// Enum  Engine.EGraphType
enum class EGraphType : uint8_t
{
    GT_Function                                    = 0,
    GT_Ubergraph                                   = 1,
    GT_Macro                                       = 2,
    GT_Animation                                   = 3,
    GT_StateMachine                                = 4,
    GT_MAX                                         = 5

};

// Enum  Engine.ELowMemoryWarningLevel
enum class ELowMemoryWarningLevel : uint8_t
{
    None                                           = 0,
    Light                                          = 1,
    Moderate                                       = 2,
    Serious                                        = 3,
    Critical                                       = 4,
    ELowMemoryWarningLevel_MAX                     = 5

};

// Enum  Engine.ETransitionType
enum class ETransitionType : uint8_t
{
    None                                           = 0,
    Paused                                         = 1,
    Loading                                        = 2,
    Saving                                         = 3,
    Connecting                                     = 4,
    Precaching                                     = 5,
    WaitingToConnect                               = 6,
    MAX                                            = 7

};

// Enum  Engine.EFullyLoadPackageType
enum class EFullyLoadPackageType : uint8_t
{
    FULLYLOAD_Map                                  = 0,
    FULLYLOAD_Game_PreLoadClass                    = 1,
    FULLYLOAD_Game_PostLoadClass                   = 2,
    FULLYLOAD_Always                               = 3,
    FULLYLOAD_Mutator                              = 4,
    FULLYLOAD_MAX                                  = 5

};

// Enum  Engine.EViewModeIndex
enum class EViewModeIndex : uint8_t
{
    VMI_BrushWireframe                             = 0,
    VMI_Wireframe                                  = 1,
    VMI_Unlit                                      = 2,
    VMI_Lit                                        = 3,
    VMI_Lit_DetailLighting                         = 4,
    VMI_LightingOnly                               = 5,
    VMI_LightComplexity                            = 6,
    VMI_ShaderComplexity                           = 8,
    VMI_LightmapDensity                            = 9,
    VMI_LitLightmapDensity                         = 10,
    VMI_ReflectionOverride                         = 11,
    VMI_VisualizeBuffer                            = 12,
    VMI_StationaryLightOverlap                     = 14,
    VMI_CollisionPawn                              = 15,
    VMI_CollisionVisibility                        = 16,
    VMI_LODColoration                              = 18,
    VMI_QuadOverdraw                               = 19,
    VMI_PrimitiveDistanceAccuracy                  = 20,
    VMI_MeshUVDensityAccuracy                      = 21,
    VMI_ShaderComplexityWithQuadOverdraw           = 22,
    VMI_HLODColoration                             = 23,
    VMI_GroupLODColoration                         = 24,
    VMI_MaterialTextureScaleAccuracy               = 25,
    VMI_RequiredTextureResolution                  = 26,
    VMI_PathTracing                                = 27,
    VMI_RayTracingDebug                            = 28,
    VMI_PRT                                        = 29,
    VMI_PRT_Normal                                 = 30,
    VMI_PRT_PbCheck                                = 31,
    VMI_LIGHT_Check                                = 32,
    VMI_MeshTextureDensity                         = 33,
    VMI_RayTracingCausticsDebug                    = 34,
    VMI_Max                                        = 35,
    VMI_Unknown                                    = 255

};

// Enum  Engine.ENetMode
enum class ENetMode : uint8_t
{
    NM_Standalone                                  = 0,
    NM_DedicatedServer                             = 1,
    NM_ListenServer                                = 2,
    NM_Client                                      = 3,
    NM_MAX                                         = 4

};

// Enum  Engine.EDemoPlayFailure
enum class EDemoPlayFailure : uint8_t
{
    Generic                                        = 0,
    DemoNotFound                                   = 1,
    Corrupt                                        = 2,
    InvalidVersion                                 = 3,
    InitBase                                       = 4,
    GameSpecificHeader                             = 5,
    ReplayStreamerInternal                         = 6,
    LoadMap                                        = 7,
    Serialization                                  = 8,
    EDemoPlayFailure_MAX                           = 9

};

// Enum  Engine.ETravelType
enum class ETravelType : uint8_t
{
    TRAVEL_Absolute                                = 0,
    TRAVEL_Partial                                 = 1,
    TRAVEL_Relative                                = 2,
    TRAVEL_MAX                                     = 3

};

// Enum  Engine.ENetworkLagState
enum class ENetworkLagState : uint8_t
{
    NotLagging                                     = 0,
    Lagging                                        = 1,
    ENetworkLagState_MAX                           = 2

};

// Enum  Engine.ETickListType
enum class ETickListType : uint8_t
{
    AnyTickList                                    = 0,
    EnabledTickList                                = 1,
    CoolingDownTickList                            = 2,
    DisabledTickList                               = 3,
    RescheduleTickList                             = 4,
    NewlySpawnedTickList                           = 5,
    MaxTypeCount                                   = 6,
    ETickListType_MAX                              = 7

};

// Enum  Engine.EMouseCaptureMode
enum class EMouseCaptureMode : uint8_t
{
    NoCapture                                      = 0,
    CapturePermanently                             = 1,
    CapturePermanently_IncludingInitialMouseDown   = 2,
    CaptureDuringMouseDown                         = 3,
    CaptureDuringRightMouseDown                    = 4,
    EMouseCaptureMode_MAX                          = 5

};

// Enum  Engine.ECustomTimeStepSynchronizationState
enum class ECustomTimeStepSynchronizationState : uint8_t
{
    Closed                                         = 0,
    Error                                          = 1,
    Synchronized                                   = 2,
    Synchronizing                                  = 3,
    ECustomTimeStepSynchronizationState_MAX        = 4

};

// Enum  Engine.EPrebakeShadowCascadeIndex
enum class EPrebakeShadowCascadeIndex : uint8_t
{
    Cascade_None                                   = 0,
    Cascade                                        = 1,
    Cascade                                        = 2,
    Cascade                                        = 3,
    Cascade                                        = 4,
    Cascade_MAX                                    = 5

};

// Enum  Engine.ELODShadowBiasType
enum class ELODShadowBiasType : uint8_t
{
    LOD_None                                       = 0,
    LOD                                            = 1,
    LOD                                            = 2,
    LOD                                            = 3,
    LOD                                            = 4,
    LOD                                            = 5,
    LOD                                            = 6,
    LOD                                            = 7,
    LOD                                            = 8,
    LOD_MAX                                        = 9

};

// Enum  Engine.EMaterialStencilOpType
enum class EMaterialStencilOpType : uint8_t
{
    MSOP_None                                      = 0,
    MSOP_Equal                                     = 1,
    MSOP_NoEqual                                   = 2,
    MSOP_Always                                    = 4,
    MSOP_MAX                                       = 5

};

// Enum  Engine.ELightMapAllocationPolicy
enum class ELightMapAllocationPolicy : uint8_t
{
    LMAP_FixTexelLengthRatio                       = 0,
    LMAP_FixLightMapCount                          = 1,
    LMAP_MAX                                       = 2

};

// Enum  Engine.ELightMapGroupingPolicy
enum class ELightMapGroupingPolicy : uint8_t
{
    LMGP_DefaultUE                                 = 0,
    LMGP_Distance                                  = 1,
    LMGP_PreDefinedLightMapGroup                   = 2,
    LMGP_MAX                                       = 3

};

// Enum  Engine.EWorldScale
enum class EWorldScale : uint8_t
{
    MiniWorld                                      = 0,
    MidWorld                                       = 1,
    BigWorld                                       = 2,
    EWorldScale_MAX                                = 3

};

// Enum  Engine.EMeshBufferAccess
enum class EMeshBufferAccess : uint8_t
{
    Default                                        = 0,
    ForceCPUAndGPU                                 = 1,
    EMeshBufferAccess_MAX                          = 2

};

// Enum  Engine.EConstraintFrame
enum class EConstraintFrame : uint8_t
{
    Frame1                                         = 0,
    Frame2                                         = 1,
    EConstraintFrame_MAX                           = 2

};

// Enum  Engine.EAngularConstraintMotion
enum class EAngularConstraintMotion : uint8_t
{
    ACM_Free                                       = 0,
    ACM_Limited                                    = 1,
    ACM_Locked                                     = 2,
    ACM_MAX                                        = 3

};

// Enum  Engine.EComponentSocketType
enum class EComponentSocketType : uint8_t
{
    Invalid                                        = 0,
    Bone                                           = 1,
    Socket                                         = 2,
    EComponentSocketType_MAX                       = 3

};

// Enum  Engine.EPhysicalSurface
enum class EPhysicalSurface : uint8_t
{
    SurfaceType_Default                            = 0,
    SurfaceType1                                   = 1,
    SurfaceType2                                   = 2,
    SurfaceType3                                   = 3,
    SurfaceType4                                   = 4,
    SurfaceType5                                   = 5,
    SurfaceType6                                   = 6,
    SurfaceType7                                   = 7,
    SurfaceType8                                   = 8,
    SurfaceType9                                   = 9,
    SurfaceType10                                  = 10,
    SurfaceType11                                  = 11,
    SurfaceType12                                  = 12,
    SurfaceType13                                  = 13,
    SurfaceType14                                  = 14,
    SurfaceType15                                  = 15,
    SurfaceType16                                  = 16,
    SurfaceType17                                  = 17,
    SurfaceType18                                  = 18,
    SurfaceType19                                  = 19,
    SurfaceType20                                  = 20,
    SurfaceType21                                  = 21,
    SurfaceType22                                  = 22,
    SurfaceType23                                  = 23,
    SurfaceType24                                  = 24,
    SurfaceType25                                  = 25,
    SurfaceType26                                  = 26,
    SurfaceType27                                  = 27,
    SurfaceType28                                  = 28,
    SurfaceType29                                  = 29,
    SurfaceType30                                  = 30,
    SurfaceType31                                  = 31,
    SurfaceType32                                  = 32,
    SurfaceType33                                  = 33,
    SurfaceType34                                  = 34,
    SurfaceType35                                  = 35,
    SurfaceType36                                  = 36,
    SurfaceType37                                  = 37,
    SurfaceType38                                  = 38,
    SurfaceType39                                  = 39,
    SurfaceType40                                  = 40,
    SurfaceType41                                  = 41,
    SurfaceType42                                  = 42,
    SurfaceType43                                  = 43,
    SurfaceType44                                  = 44,
    SurfaceType45                                  = 45,
    SurfaceType46                                  = 46,
    SurfaceType47                                  = 47,
    SurfaceType48                                  = 48,
    SurfaceType49                                  = 49,
    SurfaceType50                                  = 50,
    SurfaceType51                                  = 51,
    SurfaceType52                                  = 52,
    SurfaceType53                                  = 53,
    SurfaceType54                                  = 54,
    SurfaceType55                                  = 55,
    SurfaceType56                                  = 56,
    SurfaceType57                                  = 57,
    SurfaceType58                                  = 58,
    SurfaceType59                                  = 59,
    SurfaceType60                                  = 60,
    SurfaceType61                                  = 61,
    SurfaceType62                                  = 62,
    SurfaceType_Max                                = 63,
    EPhysicalSurface_MAX                           = 64

};

// Enum  Engine.EWalkableSlopeBehavior
enum class EWalkableSlopeBehavior : uint8_t
{
    WalkableSlope_Default                          = 0,
    WalkableSlope_Increase                         = 1,
    WalkableSlope_Decrease                         = 2,
    WalkableSlope_Unwalkable                       = 3,
    WalkableSlope_Max                              = 4

};

// Enum  Engine.EUpdateRateShiftBucket
enum class EUpdateRateShiftBucket : uint8_t
{
    ShiftBucket0                                   = 0,
    ShiftBucket1                                   = 1,
    ShiftBucket2                                   = 2,
    ShiftBucket3                                   = 3,
    ShiftBucket4                                   = 4,
    ShiftBucket5                                   = 5,
    ShiftBucketMax                                 = 6,
    EUpdateRateShiftBucket_MAX                     = 7

};

// Enum  Engine.EShadowMapFlags
enum class EShadowMapFlags : uint8_t
{
    SMF_None                                       = 0,
    SMF_Streamed                                   = 1,
    SMF_MAX                                        = 2

};

// Enum  Engine.ELightMapPaddingType
enum class ELightMapPaddingType : uint8_t
{
    LMPT_NormalPadding                             = 0,
    LMPT_PrePadding                                = 1,
    LMPT_NoPadding                                 = 2,
    LMPT_MAX                                       = 3

};

// Enum  Engine.ECollisionEnabled
enum class ECollisionEnabled : uint8_t
{
    NoCollision                                    = 0,
    QueryOnly                                      = 1,
    PhysicsOnly                                    = 2,
    QueryAndPhysics                                = 3,
    ECollisionEnabled_MAX                          = 4

};

// Enum  Engine.ETimelineSigType
enum class ETimelineSigType : uint8_t
{
    ETS_EventSignature                             = 0,
    ETS_FloatSignature                             = 1,
    ETS_VectorSignature                            = 2,
    ETS_LinearColorSignature                       = 3,
    ETS_InvalidSignature                           = 4,
    ETS_MAX                                        = 5

};

// Enum  Engine.ESleepFamily
enum class ESleepFamily : uint8_t
{
    Normal                                         = 0,
    Sensitive                                      = 1,
    Custom                                         = 2,
    ESleepFamily_MAX                               = 3

};

// Enum  Engine.ERadialImpulseFalloff
enum class ERadialImpulseFalloff : uint8_t
{
    RIF_Constant                                   = 0,
    RIF_Linear                                     = 1,
    RIF_MAX                                        = 2

};

// Enum  Engine.EFilterInterpolationType
enum class EFilterInterpolationType : uint8_t
{
    BSIT_Average                                   = 0,
    BSIT_Linear                                    = 1,
    BSIT_Cubic                                     = 2,
    BSIT_MAX                                       = 3

};

// Enum  Engine.ECollisionResponse
enum class ECollisionResponse : uint8_t
{
    ECR_Ignore                                     = 0,
    ECR_Overlap                                    = 1,
    ECR_Block                                      = 2,
    ECR_MAX                                        = 3

};

// Enum  Engine.ETraceMaskFilter
enum class ETraceMaskFilter : uint8_t
{
    TraceMaskFilter                                = 0,
    TraceMaskFilter                                = 1,
    TraceMaskFilter                                = 2,
    TraceMaskFilter                                = 3,
    TraceMaskFilter                                = 4,
    TraceMaskFilter                                = 5,
    TraceMaskFilter_MAX                            = 6

};

// Enum  Engine.EOverlapFilterOption
enum class EOverlapFilterOption : uint8_t
{
    OverlapFilter_All                              = 0,
    OverlapFilter_DynamicOnly                      = 1,
    OverlapFilter_StaticOnly                       = 2,
    OverlapFilter_MAX                              = 3

};

// Enum  Engine.ENetworkSmoothingMode
enum class ENetworkSmoothingMode : uint8_t
{
    Disabled                                       = 0,
    Linear                                         = 1,
    Exponential                                    = 2,
    Replay                                         = 3,
    ENetworkSmoothingMode_MAX                      = 4

};

// Enum  Engine.ELightingBuildMode
enum class ELightingBuildMode : uint8_t
{
    LBM_Default                                    = 0,
    LBM_BakeForHD                                  = 1,
    LBM_MAX                                        = 2

};

// Enum  Engine.ELightingBuildQuality
enum class ELightingBuildQuality : uint8_t
{
    Quality_Preview                                = 0,
    Quality_Medium                                 = 1,
    Quality_High                                   = 2,
    Quality_Production                             = 3,
    Quality_MAX                                    = 4

};

// Enum  Engine.ESimpleEFXLitQuality
enum class ESimpleEFXLitQuality : uint8_t
{
    SIMPLE_EFX_LIT_QUALITY_NONE                    = 0,
    SIMPLE_EFX_LIT_QUALITY_LOW                     = 1,
    SIMPLE_EFX_LIT_QUALITY_MID                     = 2,
    SIMPLE_EFX_LIT_QUALITY_HIGH                    = 3,
    SIMPLE_EFX_LIT_QUALITY_ULTRA                   = 4,
    SIMPLE_EFX_LIT_QUALITY_COUNT                   = 5,
    SIMPLE_EFX_LIT_QUALITY_MAX                     = 6

};

// Enum  Engine.EMaterialShadingRate
enum class EMaterialShadingRate : uint8_t
{
    MSR_1x1                                        = 0,
    MSR_2x1                                        = 1,
    MSR_1x2                                        = 2,
    MSR_2x2                                        = 3,
    MSR_4x2                                        = 4,
    MSR_2x4                                        = 5,
    MSR_4x4                                        = 6,
    MSR_Count                                      = 7,
    MSR_MAX                                        = 8

};

// Enum  Engine.EMaterialStencilCompare
enum class EMaterialStencilCompare : uint8_t
{
    MSC_Less                                       = 0,
    MSC_LessEqual                                  = 1,
    MSC_Greater                                    = 2,
    MSC_GreaterEqual                               = 3,
    MSC_Equal                                      = 4,
    MSC_NotEqual                                   = 5,
    MSC_Never                                      = 6,
    MSC_Always                                     = 7,
    MSC_Count                                      = 8,
    MSC_MAX                                        = 9

};

// Enum  Engine.EMaterialSamplerType
enum class EMaterialSamplerType : uint8_t
{
    SAMPLERTYPE_Color                              = 0,
    SAMPLERTYPE_Grayscale                          = 1,
    SAMPLERTYPE_Alpha                              = 2,
    SAMPLERTYPE_Normal                             = 3,
    SAMPLERTYPE_Masks                              = 4,
    SAMPLERTYPE_DistanceFieldFont                  = 5,
    SAMPLERTYPE_LinearColor                        = 6,
    SAMPLERTYPE_LinearGrayscale                    = 7,
    SAMPLERTYPE_Data                               = 8,
    SAMPLERTYPE_External                           = 9,
    SAMPLERTYPE_VirtualColor                       = 10,
    SAMPLERTYPE_VirtualGrayscale                   = 11,
    SAMPLERTYPE_VirtualAlpha                       = 12,
    SAMPLERTYPE_VirtualNormal                      = 13,
    SAMPLERTYPE_VirtualMasks                       = 14,
    SAMPLERTYPE_VirtualLinearColor                 = 15,
    SAMPLERTYPE_VirtualLinearGrayscale             = 16,
    SAMPLERTYPE_MAX                                = 17

};

// Enum  Engine.EMaterialTessellationMode
enum class EMaterialTessellationMode : uint8_t
{
    MTM_NoTessellation                             = 0,
    MTM_FlatTessellation                           = 1,
    MTM_PNTriangles                                = 2,
    MTM_MAX                                        = 3

};

// Enum  Engine.EMaterialShadingModel
enum class EMaterialShadingModel : uint8_t
{
    MSM_Unlit                                      = 0,
    MSM_DefaultLit                                 = 1,
    MSM_Subsurface                                 = 2,
    MSM_PreintegratedSkin                          = 3,
    MSM_ClearCoat                                  = 4,
    MSM_SubsurfaceProfile                          = 5,
    MSM_TwoSidedFoliage                            = 6,
    MSM_Hair                                       = 7,
    MSM_Mobile_Hair_Mask                           = 8,
    MSM_Mobile_Hair_Blend                          = 9,
    MSM_Cloth                                      = 10,
    MSM_Eye                                        = 11,
    MSM_SingleLayerWater                           = 12,
    MSM_SGSSS                                      = 13,
    MSM_ThinTranslucent                            = 14,
    MSM_Weapon                                     = 15,
    MSM_NUM                                        = 16,
    MSM_FromMaterialExpression                     = 17,
    MSM_MAX                                        = 18

};

// Enum  Engine.EParticleCollisionMode
enum class EParticleCollisionMode : uint8_t
{
    SceneDepth                                     = 0,
    DistanceField                                  = 1,
    EParticleCollisionMode_MAX                     = 2

};

// Enum  Engine.ETrailWidthMode
enum class ETrailWidthMode : uint8_t
{
    ETrailWidthMode_FromCentre                     = 0,
    ETrailWidthMode_FromFirst                      = 1,
    ETrailWidthMode_FromSecond                     = 2,
    ETrailWidthMode_MAX                            = 3

};

// Enum  Engine.EGBufferFormat
enum class EGBufferFormat : uint8_t
{
    Force8BitsPerChannel                           = 0,
    Default                                        = 1,
    HighPrecisionNormals                           = 3,
    Force16BitsPerChannel                          = 5,
    EGBufferFormat_MAX                             = 6

};

// Enum  Engine.ESceneCaptureCompositeMode
enum class ESceneCaptureCompositeMode : uint8_t
{
    SCCM_Overwrite                                 = 0,
    SCCM_Additive                                  = 1,
    SCCM_Composite                                 = 2,
    SCCM_MAX                                       = 3

};

// Enum  Engine.ESceneCaptureSource
enum class ESceneCaptureSource : uint8_t
{
    SCS_SceneColorHDR                              = 0,
    SCS_SceneColorHDRNoAlpha                       = 1,
    SCS_FinalColorLDR                              = 2,
    SCS_SceneColorSceneDepth                       = 3,
    SCS_SceneDepth                                 = 4,
    SCS_DeviceDepth                                = 5,
    SCS_Normal                                     = 6,
    SCS_BaseColor                                  = 7,
    SCS_FinalColorHDR                              = 8,
    SCS_LinearColorLDR                             = 9,
    SCS_MAX                                        = 10

};

// Enum  Engine.ETranslucentSortPolicy
enum class ETranslucentSortPolicy : uint8_t
{
    SortByDistance                                 = 0,
    SortByProjectedZ                               = 1,
    SortAlongAxis                                  = 2,
    ETranslucentSortPolicy_MAX                     = 3

};

// Enum  Engine.ERefractionMode
enum class ERefractionMode : uint8_t
{
    RM_IndexOfRefraction                           = 0,
    RM_PixelNormalOffset                           = 1,
    RM_MAX                                         = 2

};

// Enum  Engine.ETranslucencyLightingMode
enum class ETranslucencyLightingMode : uint8_t
{
    TLM_VolumetricNonDirectional                   = 0,
    TLM_VolumetricDirectional                      = 1,
    TLM_VolumetricPerVertexNonDirectional          = 2,
    TLM_VolumetricPerVertexDirectional             = 3,
    TLM_Surface                                    = 4,
    TLM_SurfacePerPixelLighting                    = 5,
    TLM_MAX                                        = 6

};

// Enum  Engine.ESamplerSourceMode
enum class ESamplerSourceMode : uint8_t
{
    SSM_FromTextureAsset                           = 0,
    SSM_Wrap_WorldGroupSettings                    = 1,
    SSM_Clamp_WorldGroupSettings                   = 2,
    SSM_MAX                                        = 3

};

// Enum  Engine.EMaterialLightingChannelMask
enum class EMaterialLightingChannelMask : uint8_t
{
    MLCM_0000                                      = 0,
    MLCM_0001                                      = 1,
    MLCM_0010                                      = 2,
    MLCM_0100                                      = 4,
    MLCM                                           = 8,
    MLCM_MAX                                       = 9

};

// Enum  Engine.EMaterialWetnessMode
enum class EMaterialWetnessMode : uint8_t
{
    MWM_None                                       = 0,
    MWM_General                                    = 1,
    MWM_MAX                                        = 2

};

// Enum  Engine.EBlendMode
enum class EBlendMode : uint8_t
{
    BLEND_Opaque                                   = 0,
    BLEND_Masked                                   = 1,
    BLEND_Translucent                              = 2,
    BLEND_Additive                                 = 3,
    BLEND_Modulate                                 = 4,
    BLEND_AlphaComposite                           = 5,
    BLEND_AlphaHoldout                             = 6,
    BLEND_AdditiveRGB                              = 7,
    BLEND_MAX                                      = 8

};

// Enum  Engine.EOcclusionCombineMode
enum class EOcclusionCombineMode : uint8_t
{
    OCM_Minimum                                    = 0,
    OCM_Multiply                                   = 1,
    OCM_MAX                                        = 2

};

// Enum  Engine.ELightmapType
enum class ELightmapType : uint8_t
{
    Default                                        = 0,
    ForceSurface                                   = 1,
    ForceVolumetric                                = 2,
    ELightmapType_MAX                              = 3

};

// Enum  Engine.EIndirectLightingCacheQuality
enum class EIndirectLightingCacheQuality : uint8_t
{
    ILCQ_Off                                       = 0,
    ILCQ_Point                                     = 1,
    ILCQ_Volume                                    = 2,
    ILCQ_MAX                                       = 3

};

// Enum  Engine.ESceneDepthPriorityGroup
enum class ESceneDepthPriorityGroup : uint8_t
{
    SDPG_World                                     = 0,
    SDPG_Foreground                                = 1,
    SDPG_MAX                                       = 2

};

// Enum  Engine.EFontCacheType
enum class EFontCacheType : uint8_t
{
    Offline                                        = 0,
    Runtime                                        = 1,
    EFontCacheType_MAX                             = 2

};

// Enum  Engine.EFontImportCharacterSet
enum class EFontImportCharacterSet : uint8_t
{
    FontICS_Default                                = 0,
    FontICS_Ansi                                   = 1,
    FontICS_Symbol                                 = 2,
    FontICS_MAX                                    = 3

};

// Enum  Engine.EStandbyType
enum class EStandbyType : uint8_t
{
    STDBY_Rx                                       = 0,
    STDBY_Tx                                       = 1,
    STDBY_BadPing                                  = 2,
    STDBY_MAX                                      = 3

};

// Enum  Engine.ESuggestProjVelocityTraceOption
enum class ESuggestProjVelocityTraceOption : uint8_t
{
    DoNotTrace                                     = 0,
    TraceFullPath                                  = 1,
    OnlyTraceWhileAscending                        = 2,
    ESuggestProjVelocityTraceOption_MAX            = 3

};

// Enum  Engine.EWindowMode
enum class EWindowMode : uint8_t
{
    Fullscreen                                     = 0,
    WindowedFullscreen                             = 1,
    Windowed                                       = 2,
    EWindowMode_MAX                                = 3

};

// Enum  Engine.EImportanceWeight
enum class EImportanceWeight : uint8_t
{
    Luminance                                      = 0,
    Red                                            = 1,
    Green                                          = 2,
    Blue                                           = 3,
    Alpha                                          = 4,
    EImportanceWeight_MAX                          = 5

};

// Enum  Engine.EAdManagerDelegate
enum class EAdManagerDelegate : uint8_t
{
    AMD_ClickedBanner                              = 0,
    AMD_UserClosedAd                               = 1,
    AMD_MAX                                        = 2

};

// Enum  Engine.EControllerAnalogStick
enum class EControllerAnalogStick : uint8_t
{
    CAS_LeftStick                                  = 0,
    CAS_RightStick                                 = 1,
    CAS_MAX                                        = 2

};

// Enum  Engine.EAnimAlphaInputType
enum class EAnimAlphaInputType : uint8_t
{
    Float                                          = 0,
    Bool                                           = 1,
    Curve                                          = 2,
    EAnimAlphaInputType_MAX                        = 3

};

// Enum  Engine.ETrackActiveCondition
enum class ETrackActiveCondition : uint8_t
{
    ETAC_Always                                    = 0,
    ETAC_GoreEnabled                               = 1,
    ETAC_GoreDisabled                              = 2,
    ETAC_MAX                                       = 3

};

// Enum  Engine.EInterpTrackMoveRotMode
enum class EInterpTrackMoveRotMode : uint8_t
{
    IMR_Keyframed                                  = 0,
    IMR_LookAtGroup                                = 1,
    IMR_Ignore                                     = 2,
    IMR_MAX                                        = 3

};

// Enum  Engine.EInterpMoveAxis
enum class EInterpMoveAxis : uint8_t
{
    AXIS_TranslationX                              = 0,
    AXIS_TranslationY                              = 1,
    AXIS_TranslationZ                              = 2,
    AXIS_RotationX                                 = 3,
    AXIS_RotationY                                 = 4,
    AXIS_RotationZ                                 = 5,
    AXIS_MAX                                       = 6

};

// Enum  Engine.ETrackToggleAction
enum class ETrackToggleAction : uint8_t
{
    ETTA_Off                                       = 0,
    ETTA_On                                        = 1,
    ETTA_Toggle                                    = 2,
    ETTA_Trigger                                   = 3,
    ETTA_MAX                                       = 4

};

// Enum  Engine.EVisibilityTrackCondition
enum class EVisibilityTrackCondition : uint8_t
{
    EVTC_Always                                    = 0,
    EVTC_GoreEnabled                               = 1,
    EVTC_GoreDisabled                              = 2,
    EVTC_MAX                                       = 3

};

// Enum  Engine.EVisibilityTrackAction
enum class EVisibilityTrackAction : uint8_t
{
    EVTA_Hide                                      = 0,
    EVTA_Show                                      = 1,
    EVTA_Toggle                                    = 2,
    EVTA_MAX                                       = 3

};

// Enum  Engine.ESlateGesture
enum class ESlateGesture : uint8_t
{
    None                                           = 0,
    Scroll                                         = 1,
    Magnify                                        = 2,
    Swipe                                          = 3,
    Rotate                                         = 4,
    LongPress                                      = 5,
    ESlateGesture_MAX                              = 6

};

// Enum  Engine.EMatrixColumns
enum class EMatrixColumns : uint8_t
{
    First                                          = 0,
    Second                                         = 1,
    Third                                          = 2,
    Fourth                                         = 3,
    EMatrixColumns_MAX                             = 4

};

// Enum  Engine.ELerpInterpolationMode
enum class ELerpInterpolationMode : uint8_t
{
    QuatInterp                                     = 0,
    EulerInterp                                    = 1,
    DualQuatInterp                                 = 2,
    ELerpInterpolationMode_MAX                     = 3

};

// Enum  Engine.EEasingFunc
enum class EEasingFunc : uint8_t
{
    Linear                                         = 0,
    Step                                           = 1,
    SinusoidalIn                                   = 2,
    SinusoidalOut                                  = 3,
    SinusoidalInOut                                = 4,
    EaseIn                                         = 5,
    EaseOut                                        = 6,
    EaseInOut                                      = 7,
    ExpoIn                                         = 8,
    ExpoOut                                        = 9,
    ExpoInOut                                      = 10,
    CircularIn                                     = 11,
    CircularOut                                    = 12,
    CircularInOut                                  = 13,
    EEasingFunc_MAX                                = 14

};

// Enum  Engine.EStreamingVolumeUsage
enum class EStreamingVolumeUsage : uint8_t
{
    SVB_Loading                                    = 0,
    SVB_LoadingAndVisibility                       = 1,
    SVB_VisibilityBlockingOnLoad                   = 2,
    SVB_BlockingOnLoad                             = 3,
    SVB_LoadingNotVisible                          = 4,
    SVB_MAX                                        = 5

};

// Enum  Engine.ELocalLightBakeMode
enum class ELocalLightBakeMode : uint8_t
{
    SKY_AO_MODE                                    = 0,
    SDF_SHADOW_MASK_MODE                           = 1,
    OUTDOOR_AO_MODE                                = 2,
    ELocalLightBakeMode_MAX                        = 3

};

// Enum  Engine.EMaterialVertexColorBlendWeightChannels
enum class EMaterialVertexColorBlendWeightChannels : uint8_t
{
    None                                           = 0,
    R                                              = 1,
    RG                                             = 2,
    RGB                                            = 3,
    RGBA                                           = 4,
    EMaterialVertexColorBlendWeightChannels_MAX    = 5

};

// Enum  Engine.EMaterialDecalResponse
enum class EMaterialDecalResponse : uint8_t
{
    MDR_None                                       = 0,
    MDR_ColorNormalRoughness                       = 1,
    MDR_Color                                      = 2,
    MDR_ColorNormal                                = 3,
    MDR_ColorRoughness                             = 4,
    MDR_Normal                                     = 5,
    MDR_NormalRoughness                            = 6,
    MDR_Roughness                                  = 7,
    MDR_MAX                                        = 8

};

// Enum  Engine.EDecalBlendMode
enum class EDecalBlendMode : uint8_t
{
    DBM_Translucent                                = 0,
    DBM_Stain                                      = 1,
    DBM_Normal                                     = 2,
    DBM_Emissive                                   = 3,
    DBM_DBuffer_ColorNormalRoughness               = 4,
    DBM_DBuffer_Color                              = 5,
    DBM_DBuffer_ColorNormal                        = 6,
    DBM_DBuffer_ColorRoughness                     = 7,
    DBM_DBuffer_Normal                             = 8,
    DBM_DBuffer_NormalRoughness                    = 9,
    DBM_DBuffer_Roughness                          = 10,
    DBM_DBuffer_Emissive                           = 11,
    DBM_DBuffer_AlphaComposite                     = 12,
    DBM_DBuffer_EmissiveAlphaComposite             = 13,
    DBM_Volumetric_DistanceFunction                = 14,
    DBM_AlphaComposite                             = 15,
    DBM_AmbientOcclusion                           = 16,
    DBM_MAX                                        = 17

};

// Enum  Engine.ETextureColorChannel
enum class ETextureColorChannel : uint8_t
{
    TCC_Red                                        = 0,
    TCC_Green                                      = 1,
    TCC_Blue                                       = 2,
    TCC_Alpha                                      = 3,
    TCC_MAX                                        = 4

};

// Enum  Engine.EMaterialAttributeBlend
enum class EMaterialAttributeBlend : uint8_t
{
    Blend                                          = 0,
    UseA                                           = 1,
    UseB                                           = 2,
    EMaterialAttributeBlend_MAX                    = 3

};

// Enum  Engine.EChannelMaskParameterColor
enum class EChannelMaskParameterColor : uint8_t
{
    Red                                            = 0,
    Green                                          = 1,
    Blue                                           = 2,
    Alpha                                          = 3,
    EChannelMaskParameterColor_MAX                 = 4

};

// Enum  Engine.EClampMode
enum class EClampMode : uint8_t
{
    CMODE_Clamp                                    = 0,
    CMODE_ClampMin                                 = 1,
    CMODE_ClampMax                                 = 2,
    CMODE_MAX                                      = 3

};

// Enum  Engine.ECustomMaterialOutputType
enum class ECustomMaterialOutputType : uint8_t
{
    CMOT_Float1                                    = 0,
    CMOT_Float2                                    = 1,
    CMOT_Float3                                    = 2,
    CMOT_Float4                                    = 3,
    CMOT_MaterialAttributes                        = 4,
    CMOT_MAX                                       = 5

};

// Enum  Engine.EDepthOfFieldFunctionValue
enum class EDepthOfFieldFunctionValue : uint8_t
{
    TDOF_NearAndFarMask                            = 0,
    TDOF_NearMask                                  = 1,
    TDOF_FarMask                                   = 2,
    TDOF_CircleOfConfusionRadius                   = 3,
    TDOF_MAX                                       = 4

};

// Enum  Engine.EFunctionInputType
enum class EFunctionInputType : uint8_t
{
    FunctionInput_Scalar                           = 0,
    FunctionInput_Vector2                          = 1,
    FunctionInput_Vector3                          = 2,
    FunctionInput_Vector4                          = 3,
    FunctionInput_Texture2D                        = 4,
    FunctionInput_TextureCube                      = 5,
    FunctionInput_Texture2DArray                   = 6,
    FunctionInput_VolumeTexture                    = 7,
    FunctionInput_StaticBool                       = 8,
    FunctionInput_MaterialAttributes               = 9,
    FunctionInput_TextureExternal                  = 10,
    FunctionInput_MAX                              = 11

};

// Enum  Engine.ENoiseFunction
enum class ENoiseFunction : uint8_t
{
    NOISEFUNCTION_SimplexTex                       = 0,
    NOISEFUNCTION_GradientTex                      = 1,
    NOISEFUNCTION_GradientTex3D                    = 2,
    NOISEFUNCTION_GradientALU                      = 3,
    NOISEFUNCTION_ValueALU                         = 4,
    NOISEFUNCTION_VoronoiALU                       = 5,
    NOISEFUNCTION_MAX                              = 6

};

// Enum  Engine.ERuntimeVirtualTextureMipValueMode
enum class ERuntimeVirtualTextureMipValueMode : uint8_t
{
    RVTMVM_None                                    = 0,
    RVTMVM_MipLevel                                = 1,
    RVTMVM_MipBias                                 = 2,
    RVTMVM_MAX                                     = 3

};

// Enum  Engine.EMaterialSceneAttributeInputMode
enum class EMaterialSceneAttributeInputMode : uint8_t
{
    Coordinates                                    = 0,
    OffsetFraction                                 = 1,
    EMaterialSceneAttributeInputMode_MAX           = 2

};

// Enum  Engine.ESpeedTreeLODType
enum class ESpeedTreeLODType : uint8_t
{
    STLOD_Pop                                      = 0,
    STLOD_Smooth                                   = 1,
    STLOD_MAX                                      = 2

};

// Enum  Engine.ESpeedTreeWindType
enum class ESpeedTreeWindType : uint8_t
{
    STW_None                                       = 0,
    STW_Fastest                                    = 1,
    STW_Fast                                       = 2,
    STW_Better                                     = 3,
    STW_Best                                       = 4,
    STW_Palm                                       = 5,
    STW_BestPlus                                   = 6,
    STW_MAX                                        = 7

};

// Enum  Engine.ESpeedTreeGeometryType
enum class ESpeedTreeGeometryType : uint8_t
{
    STG_Branch                                     = 0,
    STG_Frond                                      = 1,
    STG_Leaf                                       = 2,
    STG_FacingLeaf                                 = 3,
    STG_Billboard                                  = 4,
    STG_MAX                                        = 5

};

// Enum  Engine.EMaterialExposedTextureProperty
enum class EMaterialExposedTextureProperty : uint8_t
{
    TMTM_TextureSize                               = 0,
    TMTM_TexelSize                                 = 1,
    TMTM_MAX                                       = 2

};

// Enum  Engine.ETextureMipValueMode
enum class ETextureMipValueMode : uint8_t
{
    TMVM_None                                      = 0,
    TMVM_MipLevel                                  = 1,
    TMVM_MipBias                                   = 2,
    TMVM_Derivative                                = 3,
    TMVM_ClampMipLevel                             = 4,
    TMVM_MAX                                       = 5

};

// Enum  Engine.EMaterialVectorCoordTransform
enum class EMaterialVectorCoordTransform : uint8_t
{
    TRANSFORM_Tangent                              = 0,
    TRANSFORM_Local                                = 1,
    TRANSFORM_World                                = 2,
    TRANSFORM_View                                 = 3,
    TRANSFORM_Camera                               = 4,
    TRANSFORM_ParticleWorld                        = 5,
    TRANSFORM_MAX                                  = 6

};

// Enum  Engine.EMaterialVectorCoordTransformSource
enum class EMaterialVectorCoordTransformSource : uint8_t
{
    TRANSFORMSOURCE_Tangent                        = 0,
    TRANSFORMSOURCE_Local                          = 1,
    TRANSFORMSOURCE_World                          = 2,
    TRANSFORMSOURCE_View                           = 3,
    TRANSFORMSOURCE_Camera                         = 4,
    TRANSFORMSOURCE_ParticleWorld                  = 5,
    TRANSFORMSOURCE_MAX                            = 6

};

// Enum  Engine.EMaterialPositionTransformSource
enum class EMaterialPositionTransformSource : uint8_t
{
    TRANSFORMPOSSOURCE_Local                       = 0,
    TRANSFORMPOSSOURCE_World                       = 1,
    TRANSFORMPOSSOURCE_TranslatedWorld             = 2,
    TRANSFORMPOSSOURCE_View                        = 3,
    TRANSFORMPOSSOURCE_Camera                      = 4,
    TRANSFORMPOSSOURCE_Particle                    = 5,
    TRANSFORMPOSSOURCE_MAX                         = 6

};

// Enum  Engine.EVectorNoiseFunction
enum class EVectorNoiseFunction : uint8_t
{
    VNF_CellnoiseALU                               = 0,
    VNF_VectorALU                                  = 1,
    VNF_GradientALU                                = 2,
    VNF_CurlALU                                    = 3,
    VNF_VoronoiALU                                 = 4,
    VNF_MAX                                        = 5

};

// Enum  Engine.EMaterialExposedViewProperty
enum class EMaterialExposedViewProperty : uint8_t
{
    MEVP_BufferSize                                = 0,
    MEVP_FieldOfView                               = 1,
    MEVP_TanHalfFieldOfView                        = 2,
    MEVP_ViewSize                                  = 3,
    MEVP_WorldSpaceViewPosition                    = 4,
    MEVP_WorldSpaceCameraPosition                  = 5,
    MEVP_ViewportOffset                            = 6,
    MEVP_TemporalSampleCount                       = 7,
    MEVP_TemporalSampleIndex                       = 8,
    MEVP_TemporalSampleOffset                      = 9,
    MEVP_RuntimeVirtualTextureOutputLevel          = 10,
    MEVP_RuntimeVirtualTextureOutputDerivative     = 11,
    MEVP_PreExposure                               = 12,
    MEVP_WindParams                                = 13,
    MEVP_RotateAngle                               = 14,
    MEVP_UnscaledViewSize                          = 15,
    MEVP_MAX                                       = 16

};

// Enum  Engine.EWorldPositionIncludedOffsets
enum class EWorldPositionIncludedOffsets : uint8_t
{
    WPT_Default                                    = 0,
    WPT_ExcludeAllShaderOffsets                    = 1,
    WPT_CameraRelative                             = 2,
    WPT_CameraRelativeNoOffsets                    = 3,
    WPT_MAX                                        = 4

};

// Enum  Engine.EMaterialFunctionUsage
enum class EMaterialFunctionUsage : uint8_t
{
    Default                                        = 0,
    MaterialLayer                                  = 1,
    MaterialLayerBlend                             = 2,
    EMaterialFunctionUsage_MAX                     = 3

};

// Enum  Engine.EMaterialCategory
enum class EMaterialCategory : uint8_t
{
    MC_PBR_Opaque                                  = 0,
    MC_Weapon                                      = 1,
    MC_Character                                   = 2,
    MC_Terrain                                     = 3,
    MC_Sky                                         = 4,
    MC_Grass                                       = 5,
    MC_Rock                                        = 6,
    MC_Tree                                        = 7,
    MC_Tree_Lod                                    = 8,
    MC_Particle                                    = 9,
    MC_Keep_Original                               = 10,
    MC_MAX                                         = 11

};

// Enum  Engine.EMaterialUsage
enum class EMaterialUsage : uint8_t
{
    MATUSAGE_SkeletalMesh                          = 0,
    MATUSAGE_ParticleSprites                       = 1,
    MATUSAGE_BeamTrails                            = 2,
    MATUSAGE_MeshParticles                         = 3,
    MATUSAGE_StaticLighting                        = 4,
    MATUSAGE_MorphTargets                          = 5,
    MATUSAGE_SplineMesh                            = 6,
    MATUSAGE_InstancedStaticMeshes                 = 7,
    MATUSAGE_GeometryCollections                   = 8,
    MATUSAGE_Clothing                              = 9,
    MATUSAGE_NiagaraSprites                        = 10,
    MATUSAGE_NiagaraRibbons                        = 11,
    MATUSAGE_NiagaraMeshParticles                  = 12,
    MATUSAGE_GeometryCache                         = 13,
    MATUSAGE_Water                                 = 14,
    MATUSAGE_WaterCaustics                         = 15,
    MATUSAGE_HairStrands                           = 16,
    MATUSAGE_MAX                                   = 17

};

// Enum  Engine.EMaterialParameterAssociation
enum class EMaterialParameterAssociation : uint8_t
{
    LayerParameter                                 = 0,
    BlendParameter                                 = 1,
    GlobalParameter                                = 2,
    EMaterialParameterAssociation_MAX              = 3

};

// Enum  Engine.EMaterialMergeType
enum class EMaterialMergeType : uint8_t
{
    MaterialMergeType_Default                      = 0,
    MaterialMergeType_Simplygon                    = 1,
    MaterialMergeType_MAX                          = 2

};

// Enum  Engine.ETextureSizingType
enum class ETextureSizingType : uint8_t
{
    TextureSizingType_UseSingleTextureSize         = 0,
    TextureSizingType_UseAutomaticBiasedSizes      = 1,
    TextureSizingType_UseManualOverrideTextureSize = 2,
    TextureSizingType_UseSimplygonAutomaticSizing  = 3,
    TextureSizingType_MAX                          = 4

};

// Enum  Engine.ESceneTextureId
enum class ESceneTextureId : uint8_t
{
    PPI_SceneColor                                 = 0,
    PPI_SceneDepth                                 = 1,
    PPI_DiffuseColor                               = 2,
    PPI_SpecularColor                              = 3,
    PPI_SubsurfaceColor                            = 4,
    PPI_BaseColor                                  = 5,
    PPI_Specular                                   = 6,
    PPI_Metallic                                   = 7,
    PPI_WorldNormal                                = 8,
    PPI_SeparateTranslucency                       = 9,
    PPI_Opacity                                    = 10,
    PPI_Roughness                                  = 11,
    PPI_MaterialAO                                 = 12,
    PPI_CustomDepth                                = 13,
    PPI_PostProcessInput0                          = 14,
    PPI_PostProcessInput1                          = 15,
    PPI_PostProcessInput2                          = 16,
    PPI_PostProcessInput3                          = 17,
    PPI_PostProcessInput4                          = 18,
    PPI_PostProcessInput5                          = 19,
    PPI_PostProcessInput6                          = 20,
    PPI_DecalMask                                  = 21,
    PPI_ShadingModelColor                          = 22,
    PPI_ShadingModelID                             = 23,
    PPI_AmbientOcclusion                           = 24,
    PPI_CustomStencil                              = 25,
    PPI_StoredBaseColor                            = 26,
    PPI_StoredSpecular                             = 27,
    PPI_Velocity                                   = 28,
    PPI_WorldTangent                               = 29,
    PPI_Anisotropy                                 = 30,
    PPI_CustomData                                 = 31,
    PPI_MAX                                        = 32

};

// Enum  Engine.EMaterialDomain
enum class EMaterialDomain : uint8_t
{
    MD_Surface                                     = 0,
    MD_DeferredDecal                               = 1,
    MD_LightFunction                               = 2,
    MD_Volume                                      = 3,
    MD_PostProcess                                 = 4,
    MD_UI                                          = 5,
    MD_RuntimeVirtualTexture                       = 6,
    MD_Missing                                     = 7,
    MD_MAX                                         = 8

};

// Enum  Engine.EVertexPhase
enum class EVertexPhase : uint8_t
{
    VP_ViewResolving                               = 0,
    VP_PositionCalculation                         = 1,
    VP_VariantsCalculation                         = 2,
    VP_MAX                                         = 3

};

// Enum  Engine.EShadingPhase
enum class EShadingPhase : uint8_t
{
    SP_V2F                                         = 0,
    SP_DataPrepare                                 = 1,
    SP_OutColorGenerate                            = 2,
    SP_Debug                                       = 3,
    SP_MAX                                         = 4

};

// Enum  Engine.EMeshInstancingReplacementMethod
enum class EMeshInstancingReplacementMethod : uint8_t
{
    RemoveOriginalActors                           = 0,
    KeepOriginalActorsAsEditorOnly                 = 1,
    EMeshInstancingReplacementMethod_MAX           = 2

};

// Enum  Engine.EUVOutput
enum class EUVOutput : uint8_t
{
    DoNotOutputChannel                             = 0,
    OutputChannel                                  = 1,
    EUVOutput_MAX                                  = 2

};

// Enum  Engine.EMeshMergeType
enum class EMeshMergeType : uint8_t
{
    MeshMergeType_Default                          = 0,
    MeshMergeType_MergeActor                       = 1,
    MeshMergeType_MAX                              = 2

};

// Enum  Engine.EMeshLODSelectionType
enum class EMeshLODSelectionType : uint8_t
{
    AllLODs                                        = 0,
    SpecificLOD                                    = 1,
    CalculateLOD                                   = 2,
    LowestDetailLOD                                = 3,
    EMeshLODSelectionType_MAX                      = 4

};

// Enum  Engine.EProxyNormalComputationMethod
enum class EProxyNormalComputationMethod : uint8_t
{
    AngleWeighted                                  = 0,
    AreaWeighted                                   = 1,
    EqualWeighted                                  = 2,
    EProxyNormalComputationMethod_MAX              = 3

};

// Enum  Engine.ELandscapeCullingPrecision
enum class ELandscapeCullingPrecision : uint8_t
{
    High                                           = 0,
    Medium                                         = 1,
    Low                                            = 2,
    ELandscapeCullingPrecision_MAX                 = 3

};

// Enum  Engine.EStaticMeshReductionTerimationCriterion
enum class EStaticMeshReductionTerimationCriterion : uint8_t
{
    Triangles                                      = 0,
    Vertices                                       = 1,
    Any                                            = 2,
    EStaticMeshReductionTerimationCriterion_MAX    = 3

};

// Enum  Engine.EMeshFeatureImportance
enum class EMeshFeatureImportance : uint8_t
{
    Off                                            = 0,
    Lowest                                         = 1,
    Low                                            = 2,
    Normal                                         = 3,
    High                                           = 4,
    Highest                                        = 5,
    EMeshFeatureImportance_MAX                     = 6

};

// Enum  Engine.EVertexPaintAxis
enum class EVertexPaintAxis : uint8_t
{
    X                                              = 0,
    Y                                              = 1,
    Z                                              = 2,
    EVertexPaintAxis_MAX                           = 3

};

// Enum  Engine.EMicroTransactionResult
enum class EMicroTransactionResult : uint8_t
{
    MTR_Succeeded                                  = 0,
    MTR_Failed                                     = 1,
    MTR_Canceled                                   = 2,
    MTR_RestoredFromServer                         = 3,
    MTR_MAX                                        = 4

};

// Enum  Engine.EMicroTransactionDelegate
enum class EMicroTransactionDelegate : uint8_t
{
    MTD_PurchaseQueryComplete                      = 0,
    MTD_PurchaseComplete                           = 1,
    MTD_MAX                                        = 2

};

// Enum  Engine.FNavigationSystemRunMode
enum class FNavigationSystemRunMode : uint8_t
{
    InvalidMode                                    = 0,
    GameMode                                       = 1,
    EditorMode                                     = 2,
    SimulationMode                                 = 3,
    PIEMode                                        = 4,
    FNavigationSystemRunMode_MAX                   = 5

};

// Enum  Engine.ENavigationQueryResult
enum class ENavigationQueryResult : uint8_t
{
    Invalid                                        = 0,
    Error                                          = 1,
    Fail                                           = 2,
    Success                                        = 3,
    ENavigationQueryResult_MAX                     = 4

};

// Enum  Engine.ENavPathEvent
enum class ENavPathEvent : uint8_t
{
    Cleared                                        = 0,
    NewPath                                        = 1,
    UpdatedDueToGoalMoved                          = 2,
    UpdatedDueToNavigationChanged                  = 3,
    Invalidated                                    = 4,
    RePathFailed                                   = 5,
    MetaPathUpdate                                 = 6,
    Custom                                         = 7,
    ENavPathEvent_MAX                              = 8

};

// Enum  Engine.ENavDataGatheringModeConfig
enum class ENavDataGatheringModeConfig : uint8_t
{
    Invalid                                        = 0,
    Instant                                        = 1,
    Lazy                                           = 2,
    ENavDataGatheringModeConfig_MAX                = 3

};

// Enum  Engine.ENavDataGatheringMode
enum class ENavDataGatheringMode : uint8_t
{
    Default                                        = 0,
    Instant                                        = 1,
    Lazy                                           = 2,
    ENavDataGatheringMode_MAX                      = 3

};

// Enum  Engine.ENavigationOptionFlag
enum class ENavigationOptionFlag : uint8_t
{
    Default                                        = 0,
    Enable                                         = 1,
    Disable                                        = 2,
    MAX                                            = 3

};

// Enum  Engine.ENavLinkDirection
enum class ENavLinkDirection : uint8_t
{
    BothWays                                       = 0,
    LeftToRight                                    = 1,
    RightToLeft                                    = 2,
    ENavLinkDirection_MAX                          = 3

};

// Enum  Engine.EControllMode
enum class EControllMode : uint8_t
{
    ENone                                          = 0,
    EExposureOnly                                  = 1,
    EFullControll                                  = 2,
    EControllMode_MAX                              = 3

};

// Enum  Engine.EEmitterRenderMode
enum class EEmitterRenderMode : uint8_t
{
    ERM_Normal                                     = 0,
    ERM_Point                                      = 1,
    ERM_Cross                                      = 2,
    ERM_LightsOnly                                 = 3,
    ERM_None                                       = 4,
    ERM_MAX                                        = 5

};

// Enum  Engine.EParticleSubUVInterpMethod
enum class EParticleSubUVInterpMethod : uint8_t
{
    PSUVIM_None                                    = 0,
    PSUVIM_Linear                                  = 1,
    PSUVIM_Linear_Blend                            = 2,
    PSUVIM_Random                                  = 3,
    PSUVIM_Random_Blend                            = 4,
    PSUVIM_MAX                                     = 5

};

// Enum  Engine.EParticleBurstMethod
enum class EParticleBurstMethod : uint8_t
{
    EPBM_Instant                                   = 0,
    EPBM_Interpolated                              = 1,
    EPBM_MAX                                       = 2

};

// Enum  Engine.EParticleSystemInsignificanceReaction
enum class EParticleSystemInsignificanceReaction : uint8_t
{
    Auto                                           = 0,
    Complete                                       = 1,
    DisableTick                                    = 2,
    DisableTickAndKill                             = 3,
    Num                                            = 4,
    EParticleSystemInsignificanceReaction_MAX      = 5

};

// Enum  Engine.EParticleVRSShadingRate
enum class EParticleVRSShadingRate : uint8_t
{
    VRS_None                                       = 0,
    VRS_2X2                                        = 1,
    Num                                            = 2,
    EParticleVRSShadingRate_MAX                    = 3

};

// Enum  Engine.EParticleSignificanceLevel
enum class EParticleSignificanceLevel : uint8_t
{
    Low                                            = 0,
    Medium                                         = 1,
    High                                           = 2,
    Critical                                       = 3,
    Num                                            = 4,
    EParticleSignificanceLevel_MAX                 = 5

};

// Enum  Engine.EParticleDetailMode
enum class EParticleDetailMode : uint8_t
{
    PDM_Low                                        = 0,
    PDM_Medium                                     = 1,
    PDM_High                                       = 2,
    PDM_MAX                                        = 3

};

// Enum  Engine.EParticleSourceSelectionMethod
enum class EParticleSourceSelectionMethod : uint8_t
{
    EPSSM_Random                                   = 0,
    EPSSM_Sequential                               = 1,
    EPSSM_MAX                                      = 2

};

// Enum  Engine.EModuleType
enum class EModuleType : uint8_t
{
    EPMT_General                                   = 0,
    EPMT_TypeData                                  = 1,
    EPMT_Beam                                      = 2,
    EPMT_Trail                                     = 3,
    EPMT_Spawn                                     = 4,
    EPMT_Required                                  = 5,
    EPMT_Event                                     = 6,
    EPMT_Light                                     = 7,
    EPMT_SubUV                                     = 8,
    EPMT_MAX                                       = 9

};

// Enum  Engine.EAttractorParticleSelectionMethod
enum class EAttractorParticleSelectionMethod : uint8_t
{
    EAPSM_Random                                   = 0,
    EAPSM_Sequential                               = 1,
    EAPSM_MAX                                      = 2

};

// Enum  Engine.Beam2SourceTargetTangentMethod
enum class Beam2SourceTargetTangentMethod : uint8_t
{
    PEB2STTM_Direct                                = 0,
    PEB2STTM_UserSet                               = 1,
    PEB2STTM_Distribution                          = 2,
    PEB2STTM_Emitter                               = 3,
    PEB2STTM_MAX                                   = 4

};

// Enum  Engine.Beam2SourceTargetMethod
enum class Beam2SourceTargetMethod : uint8_t
{
    PEB2STM_Default                                = 0,
    PEB2STM_UserSet                                = 1,
    PEB2STM_Emitter                                = 2,
    PEB2STM_Particle                               = 3,
    PEB2STM_Actor                                  = 4,
    PEB2STM_MAX                                    = 5

};

// Enum  Engine.BeamModifierType
enum class BeamModifierType : uint8_t
{
    PEB2MT_Source                                  = 0,
    PEB2MT_Target                                  = 1,
    PEB2MT_MAX                                     = 2

};

// Enum  Engine.EParticleCameraOffsetUpdateMethod
enum class EParticleCameraOffsetUpdateMethod : uint8_t
{
    EPCOUM_DirectSet                               = 0,
    EPCOUM_Additive                                = 1,
    EPCOUM_Scalar                                  = 2,
    EPCOUM_MAX                                     = 3

};

// Enum  Engine.EParticleCollisionComplete
enum class EParticleCollisionComplete : uint8_t
{
    EPCC_Kill                                      = 0,
    EPCC_Freeze                                    = 1,
    EPCC_HaltCollisions                            = 2,
    EPCC_FreezeTranslation                         = 3,
    EPCC_FreezeRotation                            = 4,
    EPCC_FreezeMovement                            = 5,
    EPCC_MAX                                       = 6

};

// Enum  Engine.EParticleCollisionResponse
enum class EParticleCollisionResponse : uint8_t
{
    Bounce                                         = 0,
    Stop                                           = 1,
    Kill                                           = 2,
    EParticleCollisionResponse_MAX                 = 3

};

// Enum  Engine.ELocationBoneSocketSelectionMethod
enum class ELocationBoneSocketSelectionMethod : uint8_t
{
    BONESOCKETSEL_Sequential                       = 0,
    BONESOCKETSEL_Random                           = 1,
    BONESOCKETSEL_MAX                              = 2

};

// Enum  Engine.ELocationBoneSocketSource
enum class ELocationBoneSocketSource : uint8_t
{
    BONESOCKETSOURCE_Bones                         = 0,
    BONESOCKETSOURCE_Sockets                       = 1,
    BONESOCKETSOURCE_MAX                           = 2

};

// Enum  Engine.ELocationEmitterSelectionMethod
enum class ELocationEmitterSelectionMethod : uint8_t
{
    ELESM_Random                                   = 0,
    ELESM_Sequential                               = 1,
    ELESM_MAX                                      = 2

};

// Enum  Engine.CylinderHeightAxis
enum class CylinderHeightAxis : uint8_t
{
    PMLPC_HEIGHTAXIS_X                             = 0,
    PMLPC_HEIGHTAXIS_Y                             = 1,
    PMLPC_HEIGHTAXIS_Z                             = 2,
    PMLPC_HEIGHTAXIS_MAX                           = 3

};

// Enum  Engine.ELocationSkelVertSurfaceSource
enum class ELocationSkelVertSurfaceSource : uint8_t
{
    VERTSURFACESOURCE_Vert                         = 0,
    VERTSURFACESOURCE_Surface                      = 1,
    VERTSURFACESOURCE_MAX                          = 2

};

// Enum  Engine.EOrbitChainMode
enum class EOrbitChainMode : uint8_t
{
    EOChainMode_Add                                = 0,
    EOChainMode_Scale                              = 1,
    EOChainMode_Link                               = 2,
    EOChainMode_MAX                                = 3

};

// Enum  Engine.EParticleAxisLock
enum class EParticleAxisLock : uint8_t
{
    EPAL_NONE                                      = 0,
    EPAL_X                                         = 1,
    EPAL_Y                                         = 2,
    EPAL_Z                                         = 3,
    EPAL_NEGATIVE_X                                = 4,
    EPAL_NEGATIVE_Y                                = 5,
    EPAL_NEGATIVE_Z                                = 6,
    EPAL_ROTATE_X                                  = 7,
    EPAL_ROTATE_Y                                  = 8,
    EPAL_ROTATE_Z                                  = 9,
    EPAL_MAX                                       = 10

};

// Enum  Engine.EEmitterDynamicParameterValue
enum class EEmitterDynamicParameterValue : uint8_t
{
    EDPV_UserSet                                   = 0,
    EDPV_AutoSet                                   = 1,
    EDPV_VelocityX                                 = 2,
    EDPV_VelocityY                                 = 3,
    EDPV_VelocityZ                                 = 4,
    EDPV_VelocityMag                               = 5,
    EDPV_MAX                                       = 6

};

// Enum  Engine.EEmitterNormalsMode
enum class EEmitterNormalsMode : uint8_t
{
    ENM_CameraFacing                               = 0,
    ENM_Spherical                                  = 1,
    ENM_Cylindrical                                = 2,
    ENM_MAX                                        = 3

};

// Enum  Engine.EParticleSortMode
enum class EParticleSortMode : uint8_t
{
    PSORTMODE_None                                 = 0,
    PSORTMODE_ViewProjDepth                        = 1,
    PSORTMODE_DistanceToView                       = 2,
    PSORTMODE_Age_OldestFirst                      = 3,
    PSORTMODE_Age_NewestFirst                      = 4,
    PSORTMODE_MAX                                  = 5

};

// Enum  Engine.EParticleUVFlipMode
enum class EParticleUVFlipMode : uint8_t
{
    None                                           = 0,
    FlipUV                                         = 1,
    FlipUOnly                                      = 2,
    FlipVOnly                                      = 3,
    RandomFlipUV                                   = 4,
    RandomFlipUOnly                                = 5,
    RandomFlipVOnly                                = 6,
    RandomFlipUVIndependent                        = 7,
    EParticleUVFlipMode_MAX                        = 8

};

// Enum  Engine.ETrail2SourceMethod
enum class ETrail2SourceMethod : uint8_t
{
    PET2SRCM_Default                               = 0,
    PET2SRCM_Particle                              = 1,
    PET2SRCM_Actor                                 = 2,
    PET2SRCM_MAX                                   = 3

};

// Enum  Engine.EBeamTaperMethod
enum class EBeamTaperMethod : uint8_t
{
    PEBTM_None                                     = 0,
    PEBTM_Full                                     = 1,
    PEBTM_Partial                                  = 2,
    PEBTM_MAX                                      = 3

};

// Enum  Engine.EBeam2Method
enum class EBeam2Method : uint8_t
{
    PEB2M_Distance                                 = 0,
    PEB2M_Target                                   = 1,
    PEB2M_Branch                                   = 2,
    PEB2M_MAX                                      = 3

};

// Enum  Engine.EMeshCameraFacingOptions
enum class EMeshCameraFacingOptions : uint8_t
{
    XAxisFacing_NoUp                               = 0,
    XAxisFacing_ZUp                                = 1,
    XAxisFacing_NegativeZUp                        = 2,
    XAxisFacing_YUp                                = 3,
    XAxisFacing_NegativeYUp                        = 4,
    LockedAxis_ZAxisFacing                         = 5,
    LockedAxis_NegativeZAxisFacing                 = 6,
    LockedAxis_YAxisFacing                         = 7,
    LockedAxis_NegativeYAxisFacing                 = 8,
    VelocityAligned_ZAxisFacing                    = 9,
    VelocityAligned_NegativeZAxisFacing            = 10,
    VelocityAligned_YAxisFacing                    = 11,
    VelocityAligned_NegativeYAxisFacing            = 12,
    EMeshCameraFacingOptions_MAX                   = 13

};

// Enum  Engine.EMeshCameraFacingUpAxis
enum class EMeshCameraFacingUpAxis : uint8_t
{
    CameraFacing_NoneUP                            = 0,
    CameraFacing_ZUp                               = 1,
    CameraFacing_NegativeZUp                       = 2,
    CameraFacing_YUp                               = 3,
    CameraFacing_NegativeYUp                       = 4,
    CameraFacing_MAX                               = 5

};

// Enum  Engine.EMeshScreenAlignment
enum class EMeshScreenAlignment : uint8_t
{
    PSMA_MeshFaceCameraWithRoll                    = 0,
    PSMA_MeshFaceCameraWithSpin                    = 1,
    PSMA_MeshFaceCameraWithLockedAxis              = 2,
    PSMA_MAX                                       = 3

};

// Enum  Engine.ETrailsRenderAxisOption
enum class ETrailsRenderAxisOption : uint8_t
{
    Trails_CameraUp                                = 0,
    Trails_SourceUp                                = 1,
    Trails_WorldUp                                 = 2,
    Trails_MAX                                     = 3

};

// Enum  Engine.EParticleScreenAlignment
enum class EParticleScreenAlignment : uint8_t
{
    PSA_FacingCameraPosition                       = 0,
    PSA_Square                                     = 1,
    PSA_Rectangle                                  = 2,
    PSA_Velocity                                   = 3,
    PSA_AwayFromCenter                             = 4,
    PSA_TypeSpecific                               = 5,
    PSA_FacingCameraDistanceBlend                  = 6,
    PSA_MAX                                        = 7

};

// Enum  Engine.EParticleSystemOcclusionBoundsMethod
enum class EParticleSystemOcclusionBoundsMethod : uint8_t
{
    EPSOBM_None                                    = 0,
    EPSOBM_ParticleBounds                          = 1,
    EPSOBM_CustomBounds                            = 2,
    EPSOBM_MAX                                     = 3

};

// Enum  Engine.ParticleSystemLODMethod
enum class ParticleSystemLODMethod : uint8_t
{
    PARTICLESYSTEMLODMETHOD_Automatic              = 0,
    PARTICLESYSTEMLODMETHOD_DirectSet              = 1,
    PARTICLESYSTEMLODMETHOD_ActivateAutomatic      = 2,
    PARTICLESYSTEMLODMETHOD_MAX                    = 3

};

// Enum  Engine.EParticleSystemUpdateMode
enum class EParticleSystemUpdateMode : uint8_t
{
    EPSUM_RealTime                                 = 0,
    EPSUM_FixedTime                                = 1,
    EPSUM_MAX                                      = 2

};

// Enum  Engine.EParticleEventType
enum class EParticleEventType : uint8_t
{
    EPET_Any                                       = 0,
    EPET_Spawn                                     = 1,
    EPET_Death                                     = 2,
    EPET_Collision                                 = 3,
    EPET_Burst                                     = 4,
    EPET_Blueprint                                 = 5,
    EPET_MAX                                       = 6

};

// Enum  Engine.ParticleReplayState
enum class ParticleReplayState : uint8_t
{
    PRS_Disabled                                   = 0,
    PRS_Capturing                                  = 1,
    PRS_Replaying                                  = 2,
    PRS_MAX                                        = 3

};

// Enum  Engine.EParticleSysParamType
enum class EParticleSysParamType : uint8_t
{
    PSPT_None                                      = 0,
    PSPT_Scalar                                    = 1,
    PSPT_ScalarRand                                = 2,
    PSPT_Vector                                    = 3,
    PSPT_VectorRand                                = 4,
    PSPT_Color                                     = 5,
    PSPT_Actor                                     = 6,
    PSPT_Material                                  = 7,
    PSPT_VectorUnitRand                            = 8,
    PSPT_MAX                                       = 9

};

// Enum  Engine.ESettingsLockedAxis
enum class ESettingsLockedAxis : uint8_t
{
    None                                           = 0,
    X                                              = 1,
    Y                                              = 2,
    Z                                              = 3,
    Invalid                                        = 4,
    ESettingsLockedAxis_MAX                        = 5

};

// Enum  Engine.ESettingsDOF
enum class ESettingsDOF : uint8_t
{
    Full3D                                         = 0,
    YZPlane                                        = 1,
    XZPlane                                        = 2,
    XYPlane                                        = 3,
    ESettingsDOF_MAX                               = 4

};

// Enum  Engine.EFrictionCombineMode
enum class EFrictionCombineMode : uint8_t
{
    Average                                        = 0,
    Min                                            = 1,
    Multiply                                       = 2,
    Max                                            = 3

};

// Enum  Engine.EPhysicsAsyncAddMode
enum class EPhysicsAsyncAddMode : uint8_t
{
    OnceOverlapSwitchToAdd                         = 0,
    OnceOverlapAdditiveToAdd                       = 1,
    OnceOverLapByPhysicsTree                       = 2,
    EPhysicsAsyncAddMode_MAX                       = 3

};

// Enum  Engine.EViewTargetBlendFunction
enum class EViewTargetBlendFunction : uint8_t
{
    VTBlend_Linear                                 = 0,
    VTBlend_Cubic                                  = 1,
    VTBlend_EaseIn                                 = 2,
    VTBlend_EaseOut                                = 3,
    VTBlend_EaseInOut                              = 4,
    VTBlend_MAX                                    = 5

};

// Enum  Engine.EDynamicForceFeedbackAction
enum class EDynamicForceFeedbackAction : uint8_t
{
    Start                                          = 0,
    Update                                         = 1,
    Stop                                           = 2,
    EDynamicForceFeedbackAction_MAX                = 3

};

// Enum  Engine.EPreferredWorldScaleType
enum class EPreferredWorldScaleType : uint8_t
{
    EPWS_MiniWorld                                 = 0,
    EPWS_MidWorld                                  = 1,
    EPWS_BigWorld                                  = 2,
    EPWS_Num                                       = 3,
    EPWS_MAX                                       = 4

};

// Enum  Engine.ERenderMatrixMode
enum class ERenderMatrixMode : uint8_t
{
    ERMM_Default                                   = 0,
    ERMM_IndependentFovFromCameraManager           = 1,
    ERMM_MAX                                       = 2

};

// Enum  Engine.ERendererStencilMask
enum class ERendererStencilMask : uint8_t
{
    ERSM_Default                                   = 0,
    ERSM                                           = 1,
    ERSM                                           = 2,
    ERSM                                           = 3,
    ERSM                                           = 4,
    ERSM                                           = 5,
    ERSM                                           = 6,
    ERSM                                           = 7,
    ERSM                                           = 8,
    ERSM                                           = 9,
    ERSM_MAX                                       = 10

};

// Enum  Engine.EHasCustomNavigableGeometry
enum class EHasCustomNavigableGeometry : uint8_t
{
    No                                             = 0,
    Yes                                            = 1,
    EvenIfNotCollidable                            = 2,
    DontExport                                     = 3,
    EHasCustomNavigableGeometry_MAX                = 4

};

// Enum  Engine.ECanBeCharacterBase
enum class ECanBeCharacterBase : uint8_t
{
    ECB_No                                         = 0,
    ECB_Yes                                        = 1,
    ECB_Owner                                      = 2,
    ECB_MAX                                        = 3

};

// Enum  Engine.EReflectionInfluencePrimitiveType
enum class EReflectionInfluencePrimitiveType : uint8_t
{
    BothStaticAndMovable                           = 0,
    StaticOnly                                     = 1,
    MovableOnly                                    = 2,
    EReflectionInfluencePrimitiveType_MAX          = 3

};

// Enum  Engine.EReflectionSourceType
enum class EReflectionSourceType : uint8_t
{
    CapturedScene                                  = 0,
    SpecifiedCubemap                               = 1,
    EReflectionSourceType_MAX                      = 2

};

// Enum  Engine.EReflectionRangeShape
enum class EReflectionRangeShape : uint8_t
{
    Sphere                                         = 0,
    Box                                            = 1,
    EReflectionRangeShape_MAX                      = 2

};

// Enum  Engine.EDefaultBackBufferPixelFormat
enum class EDefaultBackBufferPixelFormat : uint8_t
{
    DBBPF_B8G8R8A8                                 = 0,
    DBBPF_A16B16G16R16_DEPRECATED                  = 1,
    DBBPF_FloatRGB_DEPRECATED                      = 2,
    DBBPF_FloatRGBA                                = 3,
    DBBPF_A2B10G10R10                              = 4,
    DBBPF_MAX                                      = 5

};

// Enum  Engine.EAutoExposureMethodUI
enum class EAutoExposureMethodUI : uint8_t
{
    AEM_Histogram                                  = 0,
    AEM_Basic                                      = 1,
    AEM_Manual                                     = 2,
    AEM_MAX                                        = 3

};

// Enum  Engine.EAlphaChannelMode
enum class EAlphaChannelMode : uint8_t
{
    Disabled                                       = 0,
    LinearColorSpaceOnly                           = 1,
    AllowThroughTonemapper                         = 2,
    EAlphaChannelMode_MAX                          = 3

};

// Enum  Engine.EVelocityOutputPass
enum class EVelocityOutputPass : uint8_t
{
    DepthPass                                      = 0,
    BasePass                                       = 1,
    AfterBasePass                                  = 2,
    EVelocityOutputPass_MAX                        = 3

};

// Enum  Engine.EEarlyZPass
enum class EEarlyZPass : uint8_t
{
    None                                           = 0,
    OpaqueOnly                                     = 1,
    OpaqueAndMasked                                = 2,
    Auto                                           = 3,
    EEarlyZPass_MAX                                = 4

};

// Enum  Engine.ECustomDepthStencil
enum class ECustomDepthStencil : uint8_t
{
    Disabled                                       = 0,
    Enabled                                        = 1,
    EnabledOnDemand                                = 2,
    EnabledWithStencil                             = 3,
    ECustomDepthStencil_MAX                        = 4

};

// Enum  Engine.EMobileMSAASampleCount
enum class EMobileMSAASampleCount : uint8_t
{
    One                                            = 1,
    Two                                            = 2,
    Four                                           = 4,
    Eight                                          = 8,
    EMobileMSAASampleCount_MAX                     = 9

};

// Enum  Engine.ECompositingSampleCount
enum class ECompositingSampleCount : uint8_t
{
    One                                            = 1,
    Two                                            = 2,
    Four                                           = 4,
    Eight                                          = 8,
    ECompositingSampleCount_MAX                    = 9

};

// Enum  Engine.EClearSceneOptions
enum class EClearSceneOptions : uint8_t
{
    NoClear                                        = 0,
    HardwareClear                                  = 1,
    QuadAtMaxZ                                     = 2,
    EClearSceneOptions_MAX                         = 3

};

// Enum  Engine.EReporterLineStyle
enum class EReporterLineStyle : uint8_t
{
    Line                                           = 0,
    Dash                                           = 1,
    EReporterLineStyle_MAX                         = 2

};

// Enum  Engine.ELegendPosition
enum class ELegendPosition : uint8_t
{
    Outside                                        = 0,
    Inside                                         = 1,
    ELegendPosition_MAX                            = 2

};

// Enum  Engine.EGraphDataStyle
enum class EGraphDataStyle : uint8_t
{
    Lines                                          = 0,
    Filled                                         = 1,
    EGraphDataStyle_MAX                            = 2

};

// Enum  Engine.EGraphAxisStyle
enum class EGraphAxisStyle : uint8_t
{
    Lines                                          = 0,
    Notches                                        = 1,
    Grid                                           = 2,
    EGraphAxisStyle_MAX                            = 3

};

// Enum  Engine.ERichCurveKeyTimeCompressionFormat
enum class ERichCurveKeyTimeCompressionFormat : uint8_t
{
    RCKTCF_uint16                                  = 0,
    RCKTCF_float32                                 = 1,
    RCKTCF_MAX                                     = 2

};

// Enum  Engine.ERichCurveCompressionFormat
enum class ERichCurveCompressionFormat : uint8_t
{
    RCCF_Empty                                     = 0,
    RCCF_Constant                                  = 1,
    RCCF_Linear                                    = 2,
    RCCF_Cubic                                     = 3,
    RCCF_Mixed                                     = 4,
    RCCF_MAX                                       = 5

};

// Enum  Engine.EConstraintTransform
enum class EConstraintTransform : uint8_t
{
    Absolute                                       = 0,
    Relative                                       = 1,
    EConstraintTransform_MAX                       = 2

};

// Enum  Engine.EControlConstraint
enum class EControlConstraint : uint8_t
{
    Orientation                                    = 0,
    Translation                                    = 1,
    MAX                                            = 2

};

// Enum  Engine.ERootMotionFinishVelocityMode
enum class ERootMotionFinishVelocityMode : uint8_t
{
    MaintainLastRootMotionVelocity                 = 0,
    SetVelocity                                    = 1,
    ClampVelocity                                  = 2,
    ERootMotionFinishVelocityMode_MAX              = 3

};

// Enum  Engine.ERootMotionSourceSettingsFlags
enum class ERootMotionSourceSettingsFlags : uint8_t
{
    UseSensitiveLiftoffCheck                       = 1,
    DisablePartialEndTick                          = 2,
    ERootMotionSourceSettingsFlags_MAX             = 3

};

// Enum  Engine.ERootMotionSourceStatusFlags
enum class ERootMotionSourceStatusFlags : uint8_t
{
    Prepared                                       = 1,
    Finished                                       = 2,
    MarkedForRemoval                               = 4,
    ERootMotionSourceStatusFlags_MAX               = 5

};

// Enum  Engine.ERootMotionAccumulateMode
enum class ERootMotionAccumulateMode : uint8_t
{
    Override                                       = 0,
    Additive                                       = 1,
    ERootMotionAccumulateMode_MAX                  = 2

};

// Enum  Engine.ERTCChannelPlane
enum class ERTCChannelPlane : uint8_t
{
    Default                                        = 0,
    R                                              = 1,
    RG                                             = 2,
    RG_B                                           = 3,
    RGB                                            = 4,
    RGBA                                           = 5,
    RGB_A                                          = 6,
    RG_A                                           = 7,
    Count                                          = 8,
    ERTCChannelPlane_MAX                           = 9

};

// Enum  Engine.ERTCColorSpace
enum class ERTCColorSpace : uint8_t
{
    Default                                        = 0,
    LDR                                            = 1,
    Count                                          = 2,
    ERTCColorSpace_MAX                             = 3

};

// Enum  Engine.ERTCQuality
enum class ERTCQuality : uint8_t
{
    Default                                        = 0,
    Fastest                                        = 1,
    Normal                                         = 2,
    High                                           = 3,
    Count                                          = 4,
    ERTCQuality_MAX                                = 5

};

// Enum  Engine.ERTCFormat
enum class ERTCFormat : uint8_t
{
    Default                                        = 0,
    UE4Ori                                         = 1,
    None                                           = 2,
    ASTC_Family                                    = 3,
    ETC_Family                                     = 4,
    DXT_Family                                     = 5,
    Count                                          = 6,
    ERTCFormat_MAX                                 = 7

};

// Enum  Engine.ERuntimeVirtualTextureLayerType
enum class ERuntimeVirtualTextureLayerType : uint8_t
{
    Detail                                         = 0,
    Base                                           = 1,
    Backup                                         = 2,
    Count                                          = 3,
    ERuntimeVirtualTextureLayerType_MAX            = 4

};

// Enum  Engine.ERuntimeVirtualTextureMainPassType
enum class ERuntimeVirtualTextureMainPassType : uint8_t
{
    Never                                          = 0,
    Exclusive                                      = 1,
    Always                                         = 2,
    ERuntimeVirtualTextureMainPassType_MAX         = 3

};

// Enum  Engine.ERuntimeVirtualTextureMaterialType
enum class ERuntimeVirtualTextureMaterialType : uint8_t
{
    BaseColor                                      = 0,
    BaseColor_Normal_DEPRECATED                    = 1,
    BaseColor_Normal_Specular                      = 2,
    BaseColor_Normal_Roughness_Specular_Mask_Height = 3,
    BaseColor_Normal_Specular_YCoCg                = 4,
    BaseColor_Normal_Specular_Mask_YCoCg           = 5,
    WorldHeight                                    = 6,
    Count                                          = 7,
    ERuntimeVirtualTextureMaterialType_MAX         = 8

};

// Enum  Engine.ERayTracingWaterCausticsBufferScale
enum class ERayTracingWaterCausticsBufferScale : uint8_t
{
    FULL                                           = 0,
    HALF                                           = 1,
    QUATER                                         = 2,
    ERayTracingWaterCausticsBufferScale_MAX        = 3

};

// Enum  Engine.ERayTracingWaterCausticsType
enum class ERayTracingWaterCausticsType : uint8_t
{
    Disable                                        = 0,
    SurfelBasedRendering                           = 1,
    ProceduralMeshes                               = 2,
    ERayTracingWaterCausticsType_MAX               = 3

};

// Enum  Engine.EMobilePixelProjectedReflectionQuality
enum class EMobilePixelProjectedReflectionQuality : uint8_t
{
    Disabled                                       = 0,
    BestPerformance                                = 1,
    BetterQuality                                  = 2,
    BestQuality                                    = 3,
    EMobilePixelProjectedReflectionQuality_MAX     = 4

};

// Enum  Engine.EMobilePlanarReflectionMode
enum class EMobilePlanarReflectionMode : uint8_t
{
    Usual                                          = 0,
    MobilePPRExclusive                             = 1,
    MobilePPR                                      = 2,
    EMobilePlanarReflectionMode_MAX                = 3

};

// Enum  Engine.ERayTracingMeshCausticsDebugScreenData
enum class ERayTracingMeshCausticsDebugScreenData : uint8_t
{
    Debug_None                                     = 0,
    Debug_Photon                                   = 1,
    Debug_CausticsVariance                         = 2,
    Debug_MAX                                      = 3

};

// Enum  Engine.ERayTracingMeshCausticsDebugLightData
enum class ERayTracingMeshCausticsDebugLightData : uint8_t
{
    Debug_None                                     = 0,
    Debug_Normal                                   = 1,
    Debug_ScreenArea                               = 2,
    Debug_CausticsVariance                         = 3,
    Debug_RayDensity                               = 4,
    Debug_RayDensityMip                            = 5,
    Debug_LightID                                  = 6,
    Debug_PhotonCount                              = 7,
    Debug_MAX                                      = 8

};

// Enum  Engine.ERayTracingMeshCausticsTranslucentReflectionMode
enum class ERayTracingMeshCausticsTranslucentReflectionMode : uint8_t
{
    TranslucentReflectionMode_NoReflection         = 0,
    TranslucentReflectionMode_AlwaysReflection     = 1,
    TranslucentReflectionMode_RandomReflection     = 2,
    TranslucentReflectionMode_MAX                  = 3

};

// Enum  Engine.ERayTracingMeshCausticsBufferScale
enum class ERayTracingMeshCausticsBufferScale : uint8_t
{
    BufferScale_Full                               = 0,
    BufferScale_Half                               = 1,
    BufferScale_Quarter                            = 2,
    BufferScale_MAX                                = 3

};

// Enum  Engine.ERayTracingMeshCausticsResolutionOverride
enum class ERayTracingMeshCausticsResolutionOverride : uint8_t
{
    Resolution_None                                = 0,
    Resolution                                     = 1,
    Resolution                                     = 2,
    Resolution                                     = 3,
    Resolution                                     = 4,
    Resolution                                     = 5,
    Resolution                                     = 6,
    Resolution_MAX                                 = 7

};

// Enum  Engine.ERayTracingMeshCausticsResolution
enum class ERayTracingMeshCausticsResolution : uint8_t
{
    Resolution                                     = 0,
    Resolution                                     = 1,
    Resolution                                     = 2,
    Resolution                                     = 3,
    Resolution                                     = 4,
    Resolution                                     = 5,
    Resolution_MAX                                 = 6

};

// Enum  Engine.EReflectedAndRefractedRayTracedShadows
enum class EReflectedAndRefractedRayTracedShadows : uint8_t
{
    Disabled                                       = 0,
    Hard_shadows                                   = 1,
    Area_shadows                                   = 2,
    EReflectedAndRefractedRayTracedShadows_MAX     = 3

};

// Enum  Engine.ERayTracingGIDenoiseDebugType
enum class ERayTracingGIDenoiseDebugType : uint8_t
{
    Disabled                                       = 0,
    Variance                                       = 1,
    FirstMoment                                    = 2,
    SecondMoment                                   = 3,
    HistoryLength                                  = 4,
    MotionVector                                   = 5,
    HitDistance                                    = 6,
    RawOutput                                      = 7,
    ERayTracingGIDenoiseDebugType_MAX              = 8

};

// Enum  Engine.ERayTracingGIDenoiseSpatialFilterType
enum class ERayTracingGIDenoiseSpatialFilterType : uint8_t
{
    ATrous                                         = 0,
    Gaussian                                       = 1,
    ERayTracingGIDenoiseSpatialFilterType_MAX      = 2

};

// Enum  Engine.ERayTracingGIDenoiseType
enum class ERayTracingGIDenoiseType : uint8_t
{
    Disabled                                       = 0,
    UE4                                            = 1,
    New                                            = 2,
    ERayTracingGIDenoiseType_MAX                   = 3

};

// Enum  Engine.ERayTracingGlobalIlluminationType
enum class ERayTracingGlobalIlluminationType : uint8_t
{
    Disabled                                       = 0,
    BruteForce                                     = 1,
    FinalGather                                    = 2,
    ERayTracingGlobalIlluminationType_MAX          = 3

};

// Enum  Engine.ETranslucencyType
enum class ETranslucencyType : uint8_t
{
    Raster                                         = 0,
    RayTracing                                     = 1,
    HybridTranslucency                             = 2,
    EnhancedRayTracing                             = 3,
    ETranslucencyType_MAX                          = 4

};

// Enum  Engine.EReflectionsType
enum class EReflectionsType : uint8_t
{
    ScreenSpace                                    = 0,
    RayTracing                                     = 1,
    EReflectionsType_MAX                           = 2

};

// Enum  Engine.ELightUnits
enum class ELightUnits : uint8_t
{
    Unitless                                       = 0,
    Candelas                                       = 1,
    Lumens                                         = 2,
    ELightUnits_MAX                                = 3

};

// Enum  Engine.EPPEdgeDetectMethod
enum class EPPEdgeDetectMethod : uint8_t
{
    DD_NONE                                        = 0,
    DD_Sobel                                       = 1,
    DD_IRoberts                                    = 2,
    DD_MAX                                         = 3

};

// Enum  Engine.EPPBlurMethod
enum class EPPBlurMethod : uint8_t
{
    BB_NONE                                        = 0,
    BB_GB                                          = 1,
    BB_IB                                          = 2,
    BB_MAX                                         = 3

};

// Enum  Engine.ELensFlareMethod
enum class ELensFlareMethod : uint8_t
{
    LFM_UE                                         = 0,
    LFM_OPTIMIZED                                  = 1,
    LFM_CUSTOM                                     = 2,
    LFM_MAX                                        = 3

};

// Enum  Engine.EBloomMethod
enum class EBloomMethod : uint8_t
{
    BM_SOG                                         = 0,
    BM_FFT                                         = 1,
    BM_MAX                                         = 2

};

// Enum  Engine.EAutoExposureMethod
enum class EAutoExposureMethod : uint8_t
{
    AEM_Histogram                                  = 0,
    AEM_Basic                                      = 1,
    AEM_Manual                                     = 2,
    AEM_MAX                                        = 3

};

// Enum  Engine.EDepthOfFieldMethod
enum class EDepthOfFieldMethod : uint8_t
{
    DOFM_BokehDOF                                  = 0,
    DOFM_Gaussian                                  = 1,
    DOFM_CircleDOF                                 = 2,
    DOFM_MAX                                       = 3

};

// Enum  Engine.ELiteRendererUsage
enum class ELiteRendererUsage : uint8_t
{
    Default                                        = 0,
    OnlyTranslucent                                = 1,
    Scope                                          = 2,
    ELiteRendererUsage_MAX                         = 3

};

// Enum  Engine.ESceneCapturePrimitiveRenderMode
enum class ESceneCapturePrimitiveRenderMode : uint8_t
{
    PRM_LegacySceneCapture                         = 0,
    PRM_RenderScenePrimitives                      = 1,
    PRM_UseShowOnlyList                            = 2,
    PRM_MAX                                        = 3

};

// Enum  Engine.ESSAA
enum class ESSAA : uint8_t
{
    SSAA_None                                      = 0,
    SSAA_2X                                        = 2,
    SSAA_3X                                        = 3,
    SSAA_4X                                        = 4,
    SSAA_MAX                                       = 5

};

// Enum  Engine.EMaterialProperty
enum class EMaterialProperty : uint8_t
{
    MP_EmissiveColor                               = 0,
    MP_Opacity                                     = 1,
    MP_OpacityMask                                 = 2,
    MP_DiffuseColor                                = 3,
    MP_SpecularColor                               = 4,
    MP_BaseColor                                   = 5,
    MP_Metallic                                    = 6,
    MP_Specular                                    = 7,
    MP_Roughness                                   = 8,
    MP_Anisotropy                                  = 9,
    MP_Normal                                      = 10,
    MP_Tangent                                     = 11,
    MP_WorldPositionOffset                         = 12,
    MP_WorldDisplacement                           = 13,
    MP_TessellationMultiplier                      = 14,
    MP_SubsurfaceColor                             = 15,
    MP_CustomData0                                 = 16,
    MP_CustomData1                                 = 17,
    MP_AmbientOcclusion                            = 18,
    MP_Refraction                                  = 19,
    MP_CustomizedUVs0                              = 20,
    MP_CustomizedUVs1                              = 21,
    MP_CustomizedUVs2                              = 22,
    MP_CustomizedUVs3                              = 23,
    MP_CustomizedUVs4                              = 24,
    MP_CustomizedUVs5                              = 25,
    MP_CustomizedUVs6                              = 26,
    MP_CustomizedUVs7                              = 27,
    MP_PixelDepthOffset                            = 28,
    MP_ShadingModel                                = 29,
    MP_WetnessMask                                 = 30,
    MP_Porosity                                    = 31,
    MP_PuddleMask                                  = 32,
    MP_MaterialAttributes                          = 33,
    MP_CustomOutput                                = 34,
    MP_MAX                                         = 35

};

// Enum  Engine.EAntiAliasingMethod
enum class EAntiAliasingMethod : uint8_t
{
    AAM_None                                       = 0,
    AAM_FXAA                                       = 1,
    AAM_TemporalAA                                 = 2,
    AAM_MSAA                                       = 3,
    AAM_TSR                                        = 4,
    AAM_SMAA                                       = 5,
    AAM_LWTAA                                      = 6,
    AAM_MAX                                        = 7

};

// Enum  Engine.EPhysicsTransformUpdateMode
enum class EPhysicsTransformUpdateMode : uint8_t
{
    SimulationUpatesComponentTransform             = 0,
    ComponentTransformIsKinematic                  = 1,
    EPhysicsTransformUpdateMode_MAX                = 2

};

// Enum  Engine.EAnimationMode
enum class EAnimationMode : uint8_t
{
    AnimationBlueprint                             = 0,
    AnimationSingleNode                            = 1,
    AnimationCustomMode                            = 2,
    EAnimationMode_MAX                             = 3

};

// Enum  Engine.EKinematicBonesUpdateToPhysics
enum class EKinematicBonesUpdateToPhysics : uint8_t
{
    SkipSimulatingBones                            = 0,
    SkipAllBones                                   = 1,
    EKinematicBonesUpdateToPhysics_MAX             = 2

};

// Enum  Engine.EClothMassMode
enum class EClothMassMode : uint8_t
{
    UniformMass                                    = 0,
    TotalMass                                      = 1,
    Density                                        = 2,
    MaxClothMassMode                               = 3,
    EClothMassMode_MAX                             = 4

};

// Enum  Engine.EAnimCurveType
enum class EAnimCurveType : uint8_t
{
    AttributeCurve                                 = 0,
    MaterialCurve                                  = 1,
    MorphTargetCurve                               = 2,
    MaxAnimCurveType                               = 3,
    EAnimCurveType_MAX                             = 4

};

// Enum  Engine.ESkeletalMeshSkinningImportVersions
enum class ESkeletalMeshSkinningImportVersions : uint8_t
{
    Before_Versionning                             = 0,
    SkeletalMeshBuildRefactor                      = 1,
    VersionPlusOne                                 = 2,
    LatestVersion                                  = 1,
    ESkeletalMeshSkinningImportVersions_MAX        = 3

};

// Enum  Engine.ESkeletalMeshGeoImportVersions
enum class ESkeletalMeshGeoImportVersions : uint8_t
{
    Before_Versionning                             = 0,
    SkeletalMeshBuildRefactor                      = 1,
    VersionPlusOne                                 = 2,
    LatestVersion                                  = 1,
    ESkeletalMeshGeoImportVersions_MAX             = 3

};

// Enum  Engine.EBoneFilterActionOption
enum class EBoneFilterActionOption : uint8_t
{
    Remove                                         = 0,
    Keep                                           = 1,
    Invalid                                        = 2,
    EBoneFilterActionOption_MAX                    = 3

};

// Enum  Engine.SkeletalMeshOptimizationImportance
enum class SkeletalMeshOptimizationImportance : uint8_t
{
    SMOI_Off                                       = 0,
    SMOI_Lowest                                    = 1,
    SMOI_Low                                       = 2,
    SMOI_Normal                                    = 3,
    SMOI_High                                      = 4,
    SMOI_Highest                                   = 5,
    SMOI_MAX                                       = 6

};

// Enum  Engine.SkeletalMeshOptimizationType
enum class SkeletalMeshOptimizationType : uint8_t
{
    SMOT_NumOfTriangles                            = 0,
    SMOT_MaxDeviation                              = 1,
    SMOT_TriangleOrDeviation                       = 2,
    SMOT_MAX                                       = 3

};

// Enum  Engine.SkeletalMeshTerminationCriterion
enum class SkeletalMeshTerminationCriterion : uint8_t
{
    SMTC_NumOfTriangles                            = 0,
    SMTC_NumOfVerts                                = 1,
    SMTC_TriangleOrVert                            = 2,
    SMTC_AbsNumOfTriangles                         = 3,
    SMTC_AbsNumOfVerts                             = 4,
    SMTC_AbsTriangleOrVert                         = 5,
    SMTC_MAX                                       = 6

};

// Enum  Engine.EBoneTranslationRetargetingMode
enum class EBoneTranslationRetargetingMode : uint8_t
{
    Animation                                      = 0,
    Skeleton                                       = 1,
    AnimationScaled                                = 2,
    AnimationRelative                              = 3,
    OrientAndScale                                 = 4,
    EBoneTranslationRetargetingMode_MAX            = 5

};

// Enum  Engine.EBoneSpaces
enum class EBoneSpaces : uint8_t
{
    WorldSpace                                     = 0,
    ComponentSpace                                 = 1,
    EBoneSpaces_MAX                                = 2

};

// Enum  Engine.EVisibilityBasedAnimTickOption
enum class EVisibilityBasedAnimTickOption : uint8_t
{
    AlwaysTickPoseAndRefreshBones                  = 0,
    AlwaysTickPose                                 = 1,
    OnlyTickMontagesWhenNotRendered                = 2,
    OnlyTickPoseWhenRendered                       = 3,
    EVisibilityBasedAnimTickOption_MAX             = 4

};

// Enum  Engine.EPhysBodyOp
enum class EPhysBodyOp : uint8_t
{
    PBO_None                                       = 0,
    PBO_Term                                       = 1,
    PBO_MAX                                        = 2

};

// Enum  Engine.EBoneVisibilityStatus
enum class EBoneVisibilityStatus : uint8_t
{
    BVS_HiddenByParent                             = 0,
    BVS_Visible                                    = 1,
    BVS_ExplicitlyHidden                           = 2,
    BVS_MAX                                        = 3

};

// Enum  Engine.ESkyLightSourceType
enum class ESkyLightSourceType : uint8_t
{
    SLS_CapturedScene                              = 0,
    SLS_SpecifiedCubemap                           = 1,
    SLS_MAX                                        = 2

};

// Enum  Engine.EReverbSendMethod
enum class EReverbSendMethod : uint8_t
{
    Linear                                         = 0,
    CustomCurve                                    = 1,
    Manual                                         = 2,
    EReverbSendMethod_MAX                          = 3

};

// Enum  Engine.EAirAbsorptionMethod
enum class EAirAbsorptionMethod : uint8_t
{
    Linear                                         = 0,
    CustomCurve                                    = 1,
    EAirAbsorptionMethod_MAX                       = 2

};

// Enum  Engine.ESoundSpatializationAlgorithm
enum class ESoundSpatializationAlgorithm : uint8_t
{
    SPATIALIZATION_Default                         = 0,
    SPATIALIZATION_HRTF                            = 1,
    SPATIALIZATION_MAX                             = 2

};

// Enum  Engine.ESoundDistanceCalc
enum class ESoundDistanceCalc : uint8_t
{
    SOUNDDISTANCE_Normal                           = 0,
    SOUNDDISTANCE_InfiniteXYPlane                  = 1,
    SOUNDDISTANCE_InfiniteXZPlane                  = 2,
    SOUNDDISTANCE_InfiniteYZPlane                  = 3,
    SOUNDDISTANCE_MAX                              = 4

};

// Enum  Engine.EVirtualizationMode
enum class EVirtualizationMode : uint8_t
{
    Disabled                                       = 0,
    PlayWhenSilent                                 = 1,
    Restart                                        = 2,
    EVirtualizationMode_MAX                        = 3

};

// Enum  Engine.ESoundWaveLoadingBehavior
enum class ESoundWaveLoadingBehavior : uint8_t
{
    Inherited                                      = 0,
    RetainOnLoad                                   = 1,
    PrimeOnLoad                                    = 2,
    LoadOnDemand                                   = 3,
    ForceInline                                    = 4,
    Uninitialized                                  = 255,
    ESoundWaveLoadingBehavior_MAX                  = 256

};

// Enum  Engine.EAudioOutputTarget
enum class EAudioOutputTarget : uint8_t
{
    Speaker                                        = 0,
    Controller                                     = 1,
    ControllerFallbackToSpeaker                    = 2,
    EAudioOutputTarget_MAX                         = 3

};

// Enum  Engine.EMaxConcurrentResolutionRule
enum class EMaxConcurrentResolutionRule : uint8_t
{
    PreventNew                                     = 0,
    StopOldest                                     = 1,
    StopFarthestThenPreventNew                     = 2,
    StopFarthestThenOldest                         = 3,
    StopLowestPriority                             = 4,
    StopQuietest                                   = 5,
    StopLowestPriorityThenPreventNew               = 6,
    EMaxConcurrentResolutionRule_MAX               = 7

};

// Enum  Engine.ESoundGroup
enum class ESoundGroup : uint8_t
{
    SOUNDGROUP_Default                             = 0,
    SOUNDGROUP_Effects                             = 1,
    SOUNDGROUP_UI                                  = 2,
    SOUNDGROUP_Music                               = 3,
    SOUNDGROUP_Voice                               = 4,
    SOUNDGROUP_GameSoundGroup1                     = 5,
    SOUNDGROUP_GameSoundGroup2                     = 6,
    SOUNDGROUP_GameSoundGroup3                     = 7,
    SOUNDGROUP_GameSoundGroup4                     = 8,
    SOUNDGROUP_GameSoundGroup5                     = 9,
    SOUNDGROUP_GameSoundGroup6                     = 10,
    SOUNDGROUP_GameSoundGroup7                     = 11,
    SOUNDGROUP_GameSoundGroup8                     = 12,
    SOUNDGROUP_GameSoundGroup9                     = 13,
    SOUNDGROUP_GameSoundGroup10                    = 14,
    SOUNDGROUP_GameSoundGroup11                    = 15,
    SOUNDGROUP_GameSoundGroup12                    = 16,
    SOUNDGROUP_GameSoundGroup13                    = 17,
    SOUNDGROUP_GameSoundGroup14                    = 18,
    SOUNDGROUP_GameSoundGroup15                    = 19,
    SOUNDGROUP_GameSoundGroup16                    = 20,
    SOUNDGROUP_GameSoundGroup17                    = 21,
    SOUNDGROUP_GameSoundGroup18                    = 22,
    SOUNDGROUP_GameSoundGroup19                    = 23,
    SOUNDGROUP_GameSoundGroup20                    = 24,
    SOUNDGROUP_MAX                                 = 25

};

// Enum  Engine.ModulationParamMode
enum class ModulationParamMode : uint8_t
{
    MPM_Normal                                     = 0,
    MPM_Abs                                        = 1,
    MPM_Direct                                     = 2,
    MPM_MAX                                        = 3

};

// Enum  Engine.ESourceBusChannels
enum class ESourceBusChannels : uint8_t
{
    Mono                                           = 0,
    Stereo                                         = 1,
    ESourceBusChannels_MAX                         = 2

};

// Enum  Engine.ESourceBusSendLevelControlMethod
enum class ESourceBusSendLevelControlMethod : uint8_t
{
    Linear                                         = 0,
    CustomCurve                                    = 1,
    Manual                                         = 2,
    ESourceBusSendLevelControlMethod_MAX           = 3

};

// Enum  Engine.ESubmixChannelFormat
enum class ESubmixChannelFormat : uint8_t
{
    Device                                         = 0,
    Stereo                                         = 1,
    Quad                                           = 2,
    FiveDotOne                                     = 3,
    SevenDotOne                                    = 4,
    Ambisonics                                     = 5,
    Count                                          = 6,
    ESubmixChannelFormat_MAX                       = 7

};

// Enum  Engine.ESendLevelControlMethod
enum class ESendLevelControlMethod : uint8_t
{
    Linear                                         = 0,
    CustomCurve                                    = 1,
    Manual                                         = 2,
    ESendLevelControlMethod_MAX                    = 3

};

// Enum  Engine.EAudioRecordingExportType
enum class EAudioRecordingExportType : uint8_t
{
    SoundWave                                      = 0,
    WavFile                                        = 1,
    EAudioRecordingExportType_MAX                  = 2

};

// Enum  Engine.ESoundWaveFFTSize
enum class ESoundWaveFFTSize : uint8_t
{
    VerySmall                                      = 0,
    Small                                          = 1,
    Medium                                         = 2,
    Large                                          = 3,
    VeryLarge                                      = 4,
    ESoundWaveFFTSize_MAX                          = 5

};

// Enum  Engine.EDecompressionType
enum class EDecompressionType : uint8_t
{
    DTYPE_Setup                                    = 0,
    DTYPE_Invalid                                  = 1,
    DTYPE_Preview                                  = 2,
    DTYPE_Native                                   = 3,
    DTYPE_RealTime                                 = 4,
    DTYPE_Procedural                               = 5,
    DTYPE_Xenon                                    = 6,
    DTYPE_Streaming                                = 7,
    DTYPE_MAX                                      = 8

};

// Enum  Engine.ESplineCoordinateSpace
enum class ESplineCoordinateSpace : uint8_t
{
    Local                                          = 0,
    World                                          = 1,
    ESplineCoordinateSpace_MAX                     = 2

};

// Enum  Engine.ESplinePointType
enum class ESplinePointType : uint8_t
{
    Linear                                         = 0,
    Curve                                          = 1,
    Constant                                       = 2,
    CurveClamped                                   = 3,
    CurveCustomTangent                             = 4,
    ESplinePointType_MAX                           = 5

};

// Enum  Engine.ESplineMeshAxis
enum class ESplineMeshAxis : uint8_t
{
    X                                              = 0,
    Y                                              = 1,
    Z                                              = 2,
    ESplineMeshAxis_MAX                            = 3

};

// Enum  Engine.EMaterialErrorType
enum class EMaterialErrorType : uint8_t
{
    None                                           = 0,
    WIP                                            = 1,
    Warning                                        = 2,
    Error                                          = 3,
    EMaterialErrorType_MAX                         = 4

};

// Enum  Engine.EOptimizationType
enum class EOptimizationType : uint8_t
{
    OT_NumOfTriangles                              = 0,
    OT_MaxDeviation                                = 1,
    OT_MAX                                         = 2

};

// Enum  Engine.EImportanceLevel
enum class EImportanceLevel : uint8_t
{
    IL_Off                                         = 0,
    IL_Lowest                                      = 1,
    IL_Low                                         = 2,
    IL_Normal                                      = 3,
    IL_High                                        = 4,
    IL_Highest                                     = 5,
    TEMP_BROKEN2                                   = 6,
    EImportanceLevel_MAX                           = 7

};

// Enum  Engine.ENormalMode
enum class ENormalMode : uint8_t
{
    NM_PreserveSmoothingGroups                     = 0,
    NM_RecalculateNormals                          = 1,
    NM_RecalculateNormalsSmooth                    = 2,
    NM_RecalculateNormalsHard                      = 3,
    TEMP_BROKEN                                    = 4,
    ENormalMode_MAX                                = 5

};

// Enum  Engine.EReflectionCachePolicy
enum class EReflectionCachePolicy : uint8_t
{
    CacheRuntime                                   = 0,
    ManuallySpecify                                = 1,
    EReflectionCachePolicy_MAX                     = 2

};

// Enum  Engine.EStereoLayerShape
enum class EStereoLayerShape : uint8_t
{
    SLSH_QuadLayer                                 = 0,
    SLSH_CylinderLayer                             = 1,
    SLSH_CubemapLayer                              = 2,
    SLSH_EquirectLayer                             = 3,
    SLSH_MAX                                       = 4

};

// Enum  Engine.EStereoLayerType
enum class EStereoLayerType : uint8_t
{
    SLT_WorldLocked                                = 0,
    SLT_TrackerLocked                              = 1,
    SLT_FaceLocked                                 = 2,
    SLT_MAX                                        = 3

};

// Enum  Engine.EOpacitySourceMode
enum class EOpacitySourceMode : uint8_t
{
    OSM_Alpha                                      = 0,
    OSM_ColorBrightness                            = 1,
    OSM_RedChannel                                 = 2,
    OSM_GreenChannel                               = 3,
    OSM_BlueChannel                                = 4,
    OSM_MAX                                        = 5

};

// Enum  Engine.ESubUVBoundingVertexCount
enum class ESubUVBoundingVertexCount : uint8_t
{
    BVC_FourVertices                               = 0,
    BVC_EightVertices                              = 1,
    BVC_MAX                                        = 2

};

// Enum  Engine.EABCDirection
enum class EABCDirection : uint8_t
{
    Up                                             = 0,
    Down                                           = 1,
    Right                                          = 2,
    Left                                           = 3,
    Forward                                        = 4,
    Backward                                       = 5,
    EABCDirection_MAX                              = 6

};

// Enum  Engine.EVerticalTextAligment
enum class EVerticalTextAligment : uint8_t
{
    EVRTA_TextTop                                  = 0,
    EVRTA_TextCenter                               = 1,
    EVRTA_TextBottom                               = 2,
    EVRTA_QuadTop                                  = 3,
    EVRTA_MAX                                      = 4

};

// Enum  Engine.EHorizTextAligment
enum class EHorizTextAligment : uint8_t
{
    EHTA_Left                                      = 0,
    EHTA_Center                                    = 1,
    EHTA_Right                                     = 2,
    EHTA_MAX                                       = 3

};

// Enum  Engine.ETextureCompressionQuality
enum class ETextureCompressionQuality : uint8_t
{
    TCQ_Default                                    = 0,
    TCQ_Lowest                                     = 1,
    TCQ_Low                                        = 2,
    TCQ_Medium                                     = 3,
    TCQ_High                                       = 4,
    TCQ_Highest                                    = 5,
    TCQ_MAX                                        = 6

};

// Enum  Engine.ETextureSourceFormat
enum class ETextureSourceFormat : uint8_t
{
    TSF_Invalid                                    = 0,
    TSF_G8                                         = 1,
    TSF_BGRA8                                      = 2,
    TSF_BGRE8                                      = 3,
    TSF_RGBA16                                     = 4,
    TSF_RGBA16F                                    = 5,
    TSF_RGBA8                                      = 6,
    TSF_RGBE8                                      = 7,
    TSF_G16                                        = 8,
    TSF_MAX                                        = 9

};

// Enum  Engine.ETextureSourceArtType
enum class ETextureSourceArtType : uint8_t
{
    TSAT_Uncompressed                              = 0,
    TSAT_PNGCompressed                             = 1,
    TSAT_DDSFile                                   = 2,
    TSAT_MAX                                       = 3

};

// Enum  Engine.ETextureMipCount
enum class ETextureMipCount : uint8_t
{
    TMC_ResidentMips                               = 0,
    TMC_AllMips                                    = 1,
    TMC_AllMipsBiased                              = 2,
    TMC_MAX                                        = 3

};

// Enum  Engine.EBlendChannel
enum class EBlendChannel : uint8_t
{
    BC_BlendToRed                                  = 0,
    BC_BlendToGreen                                = 1,
    BC_BlendToBlue                                 = 2,
    BC_BlendToAlpha                                = 3,
    BC_MAX                                         = 4

};

// Enum  Engine.ECompositeTextureMode
enum class ECompositeTextureMode : uint8_t
{
    CTM_Disabled                                   = 0,
    CTM_NormalRoughnessToRed                       = 1,
    CTM_NormalRoughnessToGreen                     = 2,
    CTM_NormalRoughnessToBlue                      = 3,
    CTM_NormalRoughnessToAlpha                     = 4,
    CTM_MAX                                        = 5

};

// Enum  Engine.ECompositeChannelType
enum class ECompositeChannelType : uint8_t
{
    CCT_None                                       = 0,
    CCT_RG_As_Normalized_Normal                    = 1,
    CCT_MAX                                        = 2

};

// Enum  Engine.TextureAddress
enum class TextureAddress : uint8_t
{
    TA_Wrap                                        = 0,
    TA_Clamp                                       = 1,
    TA_Mirror                                      = 2,
    TA_MAX                                         = 3

};

// Enum  Engine.TextureFilter
enum class TextureFilter : uint8_t
{
    TF_Nearest                                     = 0,
    TF_Bilinear                                    = 1,
    TF_Trilinear                                   = 2,
    TF_Default                                     = 3,
    TF_MAX                                         = 4

};

// Enum  Engine.TextureCompressionSettings
enum class TextureCompressionSettings : uint8_t
{
    TC_Default                                     = 0,
    TC_Normalmap                                   = 1,
    TC_Masks                                       = 2,
    TC_Grayscale                                   = 3,
    TC_Displacementmap                             = 4,
    TC_VectorDisplacementmap                       = 5,
    TC_HDR                                         = 6,
    TC_EditorIcon                                  = 7,
    TC_Alpha                                       = 8,
    TC_DistanceFieldFont                           = 9,
    TC_HDR_Compressed                              = 10,
    TC_BC7                                         = 11,
    TC_HDR_RGBM                                    = 12,
    TC_HDR_RGBM_NoCompressed                       = 13,
    TC_MAX                                         = 14

};

// Enum  Engine.ETextureDownSampleAmount
enum class ETextureDownSampleAmount : uint8_t
{
    TDSA_FromTextureGroup                          = 0,
    TDSA_None                                      = 1,
    TDSA_Low                                       = 2,
    TDSA_Medium                                    = 3,
    TDSA_High                                      = 4,
    TDSA_MAX                                       = 5

};

// Enum  Engine.ETextureLossyCompressionAmount
enum class ETextureLossyCompressionAmount : uint8_t
{
    TLCA_Default                                   = 0,
    TLCA_None                                      = 1,
    TLCA_Lowest                                    = 2,
    TLCA_Low                                       = 3,
    TLCA_Medium                                    = 4,
    TLCA_High                                      = 5,
    TLCA_Highest                                   = 6,
    TLCA_MAX                                       = 7

};

// Enum  Engine.ETextureMipLoadOptions
enum class ETextureMipLoadOptions : uint8_t
{
    Default                                        = 0,
    AllMips                                        = 1,
    OnlyFirstMip                                   = 2,
    ETextureMipLoadOptions_MAX                     = 3

};

// Enum  Engine.ETextureSamplerFilter
enum class ETextureSamplerFilter : uint8_t
{
    Point                                          = 0,
    Bilinear                                       = 1,
    Trilinear                                      = 2,
    AnisotropicPoint                               = 3,
    AnisotropicLinear                              = 4,
    ETextureSamplerFilter_MAX                      = 5

};

// Enum  Engine.ETexturePowerOfTwoSetting
enum class ETexturePowerOfTwoSetting : uint8_t
{
    None                                           = 0,
    PadToPowerOfTwo                                = 1,
    PadToSquarePowerOfTwo                          = 2,
    ETexturePowerOfTwoSetting_MAX                  = 3

};

// Enum  Engine.TextureMipGenSettings
enum class TextureMipGenSettings : uint8_t
{
    TMGS_FromTextureGroup                          = 0,
    TMGS_SimpleAverage                             = 1,
    TMGS_Sharpen0                                  = 2,
    TMGS_Sharpen1                                  = 3,
    TMGS_Sharpen2                                  = 4,
    TMGS_Sharpen3                                  = 5,
    TMGS_Sharpen4                                  = 6,
    TMGS_Sharpen5                                  = 7,
    TMGS_Sharpen6                                  = 8,
    TMGS_Sharpen7                                  = 9,
    TMGS_Sharpen8                                  = 10,
    TMGS_Sharpen9                                  = 11,
    TMGS_Sharpen10                                 = 12,
    TMGS_NoMipmaps                                 = 13,
    TMGS_LeaveExistingMips                         = 14,
    TMGS_Blur1                                     = 15,
    TMGS_Blur2                                     = 16,
    TMGS_Blur3                                     = 17,
    TMGS_Blur4                                     = 18,
    TMGS_Blur5                                     = 19,
    TMGS_Unfiltered                                = 20,
    TMGS_MAX                                       = 21

};

// Enum  Engine.ETextureAstcPreferCompressor
enum class ETextureAstcPreferCompressor : uint8_t
{
    TAPC_Default                                   = 0,
    TAPC_Arm                                       = 1,
    TAPC_IntelISPC                                 = 2,
    TAPC_MAX                                       = 3

};

// Enum  Engine.ETextureAstcCompressionQuality
enum class ETextureAstcCompressionQuality : uint8_t
{
    TCQ_ASTC_Default                               = 0,
    TCQ_ASTC_4x4                                   = 1,
    TCQ_ASTC_5x4                                   = 2,
    TCQ_ASTC_5x5                                   = 3,
    TCQ_ASTC_6x5                                   = 4,
    TCQ_ASTC_6x6                                   = 5,
    TCQ_ASTC_8x5                                   = 6,
    TCQ_ASTC_8x6                                   = 7,
    TCQ_ASTC_10x5                                  = 8,
    TCQ_ASTC_10x6                                  = 9,
    TCQ_ASTC_8x8                                   = 10,
    TCQ_ASTC_10x8                                  = 11,
    TCQ_ASTC_10x10                                 = 12,
    TCQ_ASTC_12x10                                 = 13,
    TCQ_ASTC_12x12                                 = 14,
    TCQ_ASTC_Max                                   = 15

};

// Enum  Engine.ETextureRenderTargetFormat
enum class ETextureRenderTargetFormat : uint8_t
{
    RTF_R8                                         = 0,
    RTF_RG8                                        = 1,
    RTF_RGBA8                                      = 2,
    RTF_RGBA8_SRGB                                 = 3,
    RTF_R16f                                       = 4,
    RTF_RG16f                                      = 5,
    RTF_RGBA16f                                    = 6,
    RTF_R32f                                       = 7,
    RTF_RG32f                                      = 8,
    RTF_RGBA32f                                    = 9,
    RTF_RGB10A2                                    = 10,
    RTF_MAX                                        = 11

};

// Enum  Engine.ETimecodeProviderSynchronizationState
enum class ETimecodeProviderSynchronizationState : uint8_t
{
    Closed                                         = 0,
    Error                                          = 1,
    Synchronized                                   = 2,
    Synchronizing                                  = 3,
    ETimecodeProviderSynchronizationState_MAX      = 4

};

// Enum  Engine.ETimelineDirection
enum class ETimelineDirection : uint8_t
{
    Forward                                        = 0,
    Backward                                       = 1,
    ETimelineDirection_MAX                         = 2

};

// Enum  Engine.ETimelineLengthMode
enum class ETimelineLengthMode : uint8_t
{
    TL_TimelineLength                              = 0,
    TL_LastKeyFrame                                = 1,
    TL_MAX                                         = 2

};

// Enum  Engine.ETimeStretchCurveMapping
enum class ETimeStretchCurveMapping : uint8_t
{
    T_Original                                     = 0,
    T_TargetMin                                    = 1,
    T_TargetMax                                    = 2,
    MAX                                            = 3

};

// Enum  Engine.ETwitterIntegrationDelegate
enum class ETwitterIntegrationDelegate : uint8_t
{
    TID_AuthorizeComplete                          = 0,
    TID_TweetUIComplete                            = 1,
    TID_RequestComplete                            = 2,
    TID_MAX                                        = 3

};

// Enum  Engine.ETwitterRequestMethod
enum class ETwitterRequestMethod : uint8_t
{
    TRM_Get                                        = 0,
    TRM_Post                                       = 1,
    TRM_Delete                                     = 2,
    TRM_MAX                                        = 3

};

// Enum  Engine.EUserDefinedStructureStatus
enum class EUserDefinedStructureStatus : uint8_t
{
    UDSS_UpToDate                                  = 0,
    UDSS_Dirty                                     = 1,
    UDSS_Error                                     = 2,
    UDSS_Duplicate                                 = 3,
    UDSS_MAX                                       = 4

};

// Enum  Engine.EUIScalingRule
enum class EUIScalingRule : uint8_t
{
    ShortestSide                                   = 0,
    LongestSide                                    = 1,
    Horizontal                                     = 2,
    Vertical                                       = 3,
    Custom                                         = 4,
    EUIScalingRule_MAX                             = 5

};

// Enum  Engine.ERenderFocusRule
enum class ERenderFocusRule : uint8_t
{
    Always                                         = 0,
    NonPointer                                     = 1,
    NavigationOnly                                 = 2,
    Never                                          = 3,
    ERenderFocusRule_MAX                           = 4

};

// Enum  Engine.EVectorFieldConstructionOp
enum class EVectorFieldConstructionOp : uint8_t
{
    VFCO_Extrude                                   = 0,
    VFCO_Revolve                                   = 1,
    VFCO_MAX                                       = 2

};

// Enum  Engine.EWindSourceType
enum class EWindSourceType : uint8_t
{
    Directional                                    = 0,
    Point                                          = 1,
    EWindSourceType_MAX                            = 2

};

// Enum  Engine.EPSCPoolMethod
enum class EPSCPoolMethod : uint8_t
{
    None                                           = 0,
    AutoRelease                                    = 1,
    ManualRelease                                  = 2,
    ManualRelease_OnComplete                       = 3,
    FreeInPool                                     = 4,
    EPSCPoolMethod_MAX                             = 5

};

// Enum  Engine.EVolumeLightingMethod
enum class EVolumeLightingMethod : uint8_t
{
    VLM_VolumetricLightmap                         = 0,
    VLM_SparseVolumeLightingSamples                = 1,
    VLM_MAX                                        = 2

};

// Enum  Engine.EVisibilityAggressiveness
enum class EVisibilityAggressiveness : uint8_t
{
    VIS_LeastAggressive                            = 0,
    VIS_ModeratelyAggressive                       = 1,
    VIS_MostAggressive                             = 2,
    VIS_Max                                        = 3

};

// Enum  Engine.EStaticShadowmapScale
enum class EStaticShadowmapScale : uint8_t
{
    StaticShadowmapScale_Complete                  = 0,
    StaticShadowmapScale_Half                      = 1,
    StaticShadowmapScale_Quarter                   = 2,
    StaticShadowmapScale_Max                       = 3

};

// Enum  MediaUtils.EMediaPlayerOptionBooleanOverride
enum class EMediaPlayerOptionBooleanOverride : uint8_t
{
    UseMediaPlayerSetting                          = 0,
    Enabled                                        = 1,
    Disabled                                       = 2,
    EMediaPlayerOptionBooleanOverride_MAX          = 3

};

// Enum  ClothingSystemRuntimeNv.EClothingWindMethod
enum class EClothingWindMethod : uint8_t
{
    Legacy                                         = 0,
    Accurate                                       = 1,
    EClothingWindMethod_MAX                        = 2

};

// Enum  ClothingSystemRuntimeNv.MaskTarget_PhysMesh
enum class MaskTarget_PhysMesh : uint8_t
{
    None                                           = 0,
    MaxDistance                                    = 1,
    BackstopDistance                               = 2,
    BackstopRadius                                 = 3,
    AnimDriveMultiplier                            = 4,
    MaskTarget_MAX                                 = 5

};

// Enum  MediaAssets.EMediaWebcamCaptureDeviceFilter
enum class EMediaWebcamCaptureDeviceFilter : uint8_t
{
    None                                           = 0,
    DepthSensor                                    = 1,
    Front                                          = 2,
    Rear                                           = 4,
    Unknown                                        = 8,
    EMediaWebcamCaptureDeviceFilter_MAX            = 9

};

// Enum  MediaAssets.EMediaVideoCaptureDeviceFilter
enum class EMediaVideoCaptureDeviceFilter : uint8_t
{
    None                                           = 0,
    Card                                           = 1,
    Software                                       = 2,
    Unknown                                        = 4,
    Webcam                                         = 8,
    EMediaVideoCaptureDeviceFilter_MAX             = 9

};

// Enum  MediaAssets.EMediaAudioCaptureDeviceFilter
enum class EMediaAudioCaptureDeviceFilter : uint8_t
{
    None                                           = 0,
    Card                                           = 1,
    Microphone                                     = 2,
    Software                                       = 4,
    Unknown                                        = 8,
    EMediaAudioCaptureDeviceFilter_MAX             = 9

};

// Enum  MediaAssets.EMediaPlayerTrack
enum class EMediaPlayerTrack : uint8_t
{
    Audio                                          = 0,
    Caption                                        = 1,
    Metadata                                       = 2,
    Script                                         = 3,
    Subtitle                                       = 4,
    Text                                           = 5,
    Video                                          = 6,
    EMediaPlayerTrack_MAX                          = 7

};

// Enum  MediaAssets.EMediaSoundComponentFFTSize
enum class EMediaSoundComponentFFTSize : uint8_t
{
    Min                                            = 0,
    Small                                          = 1,
    Medium                                         = 2,
    Large                                          = 3,
    EMediaSoundComponentFFTSize_MAX                = 4

};

// Enum  MediaAssets.EMediaSoundChannels
enum class EMediaSoundChannels : uint8_t
{
    Mono                                           = 0,
    Stereo                                         = 1,
    Surround                                       = 2,
    EMediaSoundChannels_MAX                        = 3

};

// Enum  NavigationSystem.ERuntimeGenerationType
enum class ERuntimeGenerationType : uint8_t
{
    Static                                         = 0,
    DynamicModifiersOnly                           = 1,
    Dynamic                                        = 2,
    LegacyGeneration                               = 3,
    ERuntimeGenerationType_MAX                     = 4

};

// Enum  NavigationSystem.ENavCostDisplay
enum class ENavCostDisplay : uint8_t
{
    TotalCost                                      = 0,
    HeuristicOnly                                  = 1,
    RealCostOnly                                   = 2,
    ENavCostDisplay_MAX                            = 3

};

// Enum  NavigationSystem.ENavSystemOverridePolicy
enum class ENavSystemOverridePolicy : uint8_t
{
    Override                                       = 0,
    Append                                         = 1,
    Skip                                           = 2,
    ENavSystemOverridePolicy_MAX                   = 3

};

// Enum  NavigationSystem.ERecastPartitioning
enum class ERecastPartitioning : uint8_t
{
    Monotone                                       = 0,
    Watershed                                      = 1,
    ChunkyMonotone                                 = 2,
    ERecastPartitioning_MAX                        = 3

};

// Enum  GameplayTasks.EGameplayTaskState
enum class EGameplayTaskState : uint8_t
{
    Uninitialized                                  = 0,
    AwaitingActivation                             = 1,
    Paused                                         = 2,
    Active                                         = 3,
    Finished                                       = 4,
    EGameplayTaskState_MAX                         = 5

};

// Enum  AIModule.EAISenseNotifyType
enum class EAISenseNotifyType : uint8_t
{
    OnEveryPerception                              = 0,
    OnPerceptionChange                             = 1,
    EAISenseNotifyType_MAX                         = 2

};

// Enum  AIModule.EAITaskPriority
enum class EAITaskPriority : uint8_t
{
    Lowest                                         = 0,
    Low                                            = 64,
    AutonomousAI                                   = 127,
    High                                           = 192,
    Ultimate                                       = 254,
    EAITaskPriority_MAX                            = 255

};

// Enum  AIModule.EGenericAICheck
enum class EGenericAICheck : uint8_t
{
    Less                                           = 0,
    LessOrEqual                                    = 1,
    Equal                                          = 2,
    NotEqual                                       = 3,
    GreaterOrEqual                                 = 4,
    Greater                                        = 5,
    IsTrue                                         = 6,
    MAX                                            = 7

};

// Enum  AIModule.EAILockSource
enum class EAILockSource : uint8_t
{
    Animation                                      = 0,
    Logic                                          = 1,
    Script                                         = 2,
    Gameplay                                       = 3,
    MAX                                            = 4

};

// Enum  AIModule.EAIRequestPriority
enum class EAIRequestPriority : uint8_t
{
    SoftScript                                     = 0,
    Logic                                          = 1,
    HardScript                                     = 2,
    Reaction                                       = 3,
    Ultimate                                       = 4,
    MAX                                            = 5

};

// Enum  AIModule.EPawnActionEventType
enum class EPawnActionEventType : uint8_t
{
    Invalid                                        = 0,
    FailedToStart                                  = 1,
    InstantAbort                                   = 2,
    FinishedAborting                               = 3,
    FinishedExecution                              = 4,
    Push                                           = 5,
    EPawnActionEventType_MAX                       = 6

};

// Enum  AIModule.EPawnActionResult
enum class EPawnActionResult : uint8_t
{
    NotStarted                                     = 0,
    InProgress                                     = 1,
    Success                                        = 2,
    Failed                                         = 3,
    Aborted                                        = 4,
    EPawnActionResult_MAX                          = 5

};

// Enum  AIModule.EPawnActionAbortState
enum class EPawnActionAbortState : uint8_t
{
    NeverStarted                                   = 0,
    NotBeingAborted                                = 1,
    MarkPendingAbort                               = 2,
    LatentAbortInProgress                          = 3,
    AbortDone                                      = 4,
    MAX                                            = 5

};

// Enum  AIModule.FAIDistanceType
enum class FAIDistanceType : uint8_t
{
    Distance3D                                     = 0,
    Distance2D                                     = 1,
    DistanceZ                                      = 2,
    MAX                                            = 3

};

// Enum  AIModule.EAIOptionFlag
enum class EAIOptionFlag : uint8_t
{
    Default                                        = 0,
    Enable                                         = 1,
    Disable                                        = 2,
    MAX                                            = 3

};

// Enum  AIModule.EBTFlowAbortMode
enum class EBTFlowAbortMode : uint8_t
{
    None                                           = 0,
    LowerPriority                                  = 1,
    Self                                           = 2,
    Both                                           = 3,
    EBTFlowAbortMode_MAX                           = 4

};

// Enum  AIModule.EBTNodeResult
enum class EBTNodeResult : uint8_t
{
    Succeeded                                      = 0,
    Failed                                         = 1,
    Aborted                                        = 2,
    InProgress                                     = 3,
    EBTNodeResult_MAX                              = 4

};

// Enum  AIModule.ETextKeyOperation
enum class ETextKeyOperation : uint8_t
{
    Equal                                          = 0,
    NotEqual                                       = 1,
    Contain                                        = 2,
    NotContain                                     = 3,
    ETextKeyOperation_MAX                          = 4

};

// Enum  AIModule.EArithmeticKeyOperation
enum class EArithmeticKeyOperation : uint8_t
{
    Equal                                          = 0,
    NotEqual                                       = 1,
    Less                                           = 2,
    LessOrEqual                                    = 3,
    Greater                                        = 4,
    GreaterOrEqual                                 = 5,
    EArithmeticKeyOperation_MAX                    = 6

};

// Enum  AIModule.EBasicKeyOperation
enum class EBasicKeyOperation : uint8_t
{
    Set                                            = 0,
    NotSet                                         = 1,
    EBasicKeyOperation_MAX                         = 2

};

// Enum  AIModule.EBTParallelMode
enum class EBTParallelMode : uint8_t
{
    AbortBackground                                = 0,
    WaitForBackground                              = 1,
    EBTParallelMode_MAX                            = 2

};

// Enum  AIModule.EBTDecoratorLogic
enum class EBTDecoratorLogic : uint8_t
{
    Invalid                                        = 0,
    Test                                           = 1,
    And                                            = 2,
    Or                                             = 3,
    Not                                            = 4,
    EBTDecoratorLogic_MAX                          = 5

};

// Enum  AIModule.EBTChildIndex
enum class EBTChildIndex : uint8_t
{
    FirstNode                                      = 0,
    TaskNode                                       = 1,
    EBTChildIndex_MAX                              = 2

};

// Enum  AIModule.EBTBlackboardRestart
enum class EBTBlackboardRestart : uint8_t
{
    ValueChange                                    = 0,
    ResultChange                                   = 1,
    EBTBlackboardRestart_MAX                       = 2

};

// Enum  AIModule.EBlackBoardEntryComparison
enum class EBlackBoardEntryComparison : uint8_t
{
    Equal                                          = 0,
    NotEqual                                       = 1,
    EBlackBoardEntryComparison_MAX                 = 2

};

// Enum  AIModule.EPathExistanceQueryType
enum class EPathExistanceQueryType : uint8_t
{
    NavmeshRaycast2D                               = 0,
    HierarchicalQuery                              = 1,
    RegularPathFinding                             = 2,
    EPathExistanceQueryType_MAX                    = 3

};

// Enum  AIModule.EPointOnCircleSpacingMethod
enum class EPointOnCircleSpacingMethod : uint8_t
{
    BySpaceBetween                                 = 0,
    ByNumberOfPoints                               = 1,
    EPointOnCircleSpacingMethod_MAX                = 2

};

// Enum  AIModule.EEQSNormalizationType
enum class EEQSNormalizationType : uint8_t
{
    Absolute                                       = 0,
    RelativeToScores                               = 1,
    EEQSNormalizationType_MAX                      = 2

};

// Enum  AIModule.EEnvTestDistance
enum class EEnvTestDistance : uint8_t
{
    Distance3D                                     = 0,
    Distance2D                                     = 1,
    DistanceZ                                      = 2,
    DistanceAbsoluteZ                              = 3,
    EEnvTestDistance_MAX                           = 4

};

// Enum  AIModule.EEnvTestDot
enum class EEnvTestDot : uint8_t
{
    Dot3D                                          = 0,
    Dot2D                                          = 1,
    EEnvTestDot_MAX                                = 2

};

// Enum  AIModule.EEnvTestPathfinding
enum class EEnvTestPathfinding : uint8_t
{
    PathExist                                      = 0,
    PathCost                                       = 1,
    PathLength                                     = 2,
    EEnvTestPathfinding_MAX                        = 3

};

// Enum  AIModule.EEnvQueryTestClamping
enum class EEnvQueryTestClamping : uint8_t
{
    None                                           = 0,
    SpecifiedValue                                 = 1,
    FilterThreshold                                = 2,
    EEnvQueryTestClamping_MAX                      = 3

};

// Enum  AIModule.EEnvDirection
enum class EEnvDirection : uint8_t
{
    TwoPoints                                      = 0,
    Rotation                                       = 1,
    EEnvDirection_MAX                              = 2

};

// Enum  AIModule.EEnvOverlapShape
enum class EEnvOverlapShape : uint8_t
{
    Box                                            = 0,
    Sphere                                         = 1,
    Capsule                                        = 2,
    EEnvOverlapShape_MAX                           = 3

};

// Enum  AIModule.EEnvTraceShape
enum class EEnvTraceShape : uint8_t
{
    Line                                           = 0,
    Box                                            = 1,
    Sphere                                         = 2,
    Capsule                                        = 3,
    EEnvTraceShape_MAX                             = 4

};

// Enum  AIModule.EEnvQueryTrace
enum class EEnvQueryTrace : uint8_t
{
    None                                           = 0,
    Navigation                                     = 1,
    Geometry                                       = 2,
    NavigationOverLedges                           = 3,
    EEnvQueryTrace_MAX                             = 4

};

// Enum  AIModule.EAIParamType
enum class EAIParamType : uint8_t
{
    Float                                          = 0,
    Int                                            = 1,
    Bool                                           = 2,
    MAX                                            = 3

};

// Enum  AIModule.EEnvQueryParam
enum class EEnvQueryParam : uint8_t
{
    Float                                          = 0,
    Int                                            = 1,
    Bool                                           = 2,
    EEnvQueryParam_MAX                             = 3

};

// Enum  AIModule.EEnvQueryRunMode
enum class EEnvQueryRunMode : uint8_t
{
    SingleResult                                   = 0,
    RandomBest5Pct                                 = 1,
    RandomBest25Pct                                = 2,
    AllMatching                                    = 3,
    EEnvQueryRunMode_MAX                           = 4

};

// Enum  AIModule.EEnvTestScoreOperator
enum class EEnvTestScoreOperator : uint8_t
{
    AverageScore                                   = 0,
    MinScore                                       = 1,
    MaxScore                                       = 2,
    Multiply                                       = 3,
    EEnvTestScoreOperator_MAX                      = 4

};

// Enum  AIModule.EEnvTestFilterOperator
enum class EEnvTestFilterOperator : uint8_t
{
    AllPass                                        = 0,
    AnyPass                                        = 1,
    EEnvTestFilterOperator_MAX                     = 2

};

// Enum  AIModule.EEnvTestCost
enum class EEnvTestCost : uint8_t
{
    Low                                            = 0,
    Medium                                         = 1,
    High                                           = 2,
    EEnvTestCost_MAX                               = 3

};

// Enum  AIModule.EEnvTestWeight
enum class EEnvTestWeight : uint8_t
{
    None                                           = 0,
    Square                                         = 1,
    Inverse                                        = 2,
    Unused                                         = 3,
    Constant                                       = 4,
    Skip                                           = 5,
    EEnvTestWeight_MAX                             = 6

};

// Enum  AIModule.EEnvTestScoreEquation
enum class EEnvTestScoreEquation : uint8_t
{
    Linear                                         = 0,
    Square                                         = 1,
    InverseLinear                                  = 2,
    SquareRoot                                     = 3,
    Constant                                       = 4,
    EEnvTestScoreEquation_MAX                      = 5

};

// Enum  AIModule.EEnvTestFilterType
enum class EEnvTestFilterType : uint8_t
{
    Minimum                                        = 0,
    Maximum                                        = 1,
    Range                                          = 2,
    Match                                          = 3,
    EEnvTestFilterType_MAX                         = 4

};

// Enum  AIModule.EEnvTestPurpose
enum class EEnvTestPurpose : uint8_t
{
    Filter                                         = 0,
    Score                                          = 1,
    FilterAndScore                                 = 2,
    EEnvTestPurpose_MAX                            = 3

};

// Enum  AIModule.EEnvQueryHightlightMode
enum class EEnvQueryHightlightMode : uint8_t
{
    All                                            = 0,
    Best5Pct                                       = 1,
    Best25Pct                                      = 2,
    EEnvQueryHightlightMode_MAX                    = 3

};

// Enum  AIModule.ETeamAttitude
enum class ETeamAttitude : uint8_t
{
    Friendly                                       = 0,
    Neutral                                        = 1,
    Hostile                                        = 2,
    ETeamAttitude_MAX                              = 3

};

// Enum  AIModule.EPathFollowingRequestResult
enum class EPathFollowingRequestResult : uint8_t
{
    Failed                                         = 0,
    AlreadyAtGoal                                  = 1,
    RequestSuccessful                              = 2,
    EPathFollowingRequestResult_MAX                = 3

};

// Enum  AIModule.EPathFollowingAction
enum class EPathFollowingAction : uint8_t
{
    Error                                          = 0,
    NoMove                                         = 1,
    DirectMove                                     = 2,
    PartialPath                                    = 3,
    PathToGoal                                     = 4,
    EPathFollowingAction_MAX                       = 5

};

// Enum  AIModule.EPathFollowingStatus
enum class EPathFollowingStatus : uint8_t
{
    Idle                                           = 0,
    Waiting                                        = 1,
    Paused                                         = 2,
    Moving                                         = 3,
    EPathFollowingStatus_MAX                       = 4

};

// Enum  AIModule.EPawnActionFailHandling
enum class EPawnActionFailHandling : uint8_t
{
    RequireSuccess                                 = 0,
    IgnoreFailure                                  = 1,
    EPawnActionFailHandling_MAX                    = 2

};

// Enum  AIModule.EPawnSubActionTriggeringPolicy
enum class EPawnSubActionTriggeringPolicy : uint8_t
{
    CopyBeforeTriggering                           = 0,
    ReuseInstances                                 = 1,
    EPawnSubActionTriggeringPolicy_MAX             = 2

};

// Enum  AIModule.EPawnActionMoveMode
enum class EPawnActionMoveMode : uint8_t
{
    UsePathfinding                                 = 0,
    StraightLine                                   = 1,
    EPawnActionMoveMode_MAX                        = 2

};

// Enum  InteractiveToolsFramework.EInputCaptureState
enum class EInputCaptureState : uint8_t
{
    Begin                                          = 1,
    Continue                                       = 2,
    End                                            = 3,
    Ignore                                         = 4,
    EInputCaptureState_MAX                         = 5

};

// Enum  InteractiveToolsFramework.EInputCaptureRequestType
enum class EInputCaptureRequestType : uint8_t
{
    Begin                                          = 1,
    Ignore                                         = 2,
    EInputCaptureRequestType_MAX                   = 3

};

// Enum  InteractiveToolsFramework.EInputCaptureSide
enum class EInputCaptureSide : uint8_t
{
    None                                           = 0,
    Left                                           = 1,
    Right                                          = 2,
    Both                                           = 3,
    Any                                            = 99,
    EInputCaptureSide_MAX                          = 100

};

// Enum  InteractiveToolsFramework.EInputDevices
enum class EInputDevices : uint32_t
{
    None                                           = 0,
    Keyboard                                       = 1,
    Mouse                                          = 2,
    Gamepad                                        = 4,
    OculusTouch                                    = 8,
    HTCViveWands                                   = 16,
    AnySpatialDevice                               = 24,
    TabletFingers                                  = 1024,
    EInputDevices_MAX                              = 1025

};

// Enum  InteractiveToolsFramework.ETransformGizmoSubElements
enum class ETransformGizmoSubElements : uint32_t
{
    None                                           = 0,
    TranslateAxisX                                 = 2,
    TranslateAxisY                                 = 4,
    TranslateAxisZ                                 = 8,
    TranslateAllAxes                               = 14,
    TranslatePlaneXY                               = 16,
    TranslatePlaneXZ                               = 32,
    TranslatePlaneYZ                               = 64,
    TranslateAllPlanes                             = 112,
    RotateAxisX                                    = 128,
    RotateAxisY                                    = 256,
    RotateAxisZ                                    = 512,
    RotateAllAxes                                  = 896,
    ScaleAxisX                                     = 1024,
    ScaleAxisY                                     = 2048,
    ScaleAxisZ                                     = 4096,
    ScaleAllAxes                                   = 7168,
    ScalePlaneYZ                                   = 8192,
    ScalePlaneXZ                                   = 16384,
    ScalePlaneXY                                   = 32768,
    ScaleAllPlanes                                 = 57344,
    ScaleUniform                                   = 65536,
    StandardTranslateRotate                        = 1022,
    TranslateRotateUniformScale                    = 66558,
    FullTranslateRotateScale                       = 131070,
    ETransformGizmoSubElements_MAX                 = 131071

};

// Enum  InteractiveToolsFramework.EToolChangeTrackingMode
enum class EToolChangeTrackingMode : uint8_t
{
    NoChangeTracking                               = 1,
    UndoToExit                                     = 2,
    FullUndoRedo                                   = 3,
    EToolChangeTrackingMode_MAX                    = 4

};

// Enum  InteractiveToolsFramework.EToolSide
enum class EToolSide : uint8_t
{
    Left                                           = 1,
    Mouse                                          = 1,
    Right                                          = 2,
    EToolSide_MAX                                  = 3

};

// Enum  InteractiveToolsFramework.ESelectedObjectsModificationType
enum class ESelectedObjectsModificationType : uint8_t
{
    Replace                                        = 0,
    Add                                            = 1,
    Remove                                         = 2,
    Clear                                          = 3,
    ESelectedObjectsModificationType_MAX           = 4

};

// Enum  InteractiveToolsFramework.EToolMessageLevel
enum class EToolMessageLevel : uint8_t
{
    Internal                                       = 0,
    UserMessage                                    = 1,
    UserNotification                               = 2,
    UserWarning                                    = 3,
    UserError                                      = 4,
    EToolMessageLevel_MAX                          = 5

};

// Enum  InteractiveToolsFramework.EToolContextCoordinateSystem
enum class EToolContextCoordinateSystem : uint8_t
{
    World                                          = 0,
    Local                                          = 1,
    EToolContextCoordinateSystem_MAX               = 2

};

// Enum  InteractiveToolsFramework.EStandardToolContextMaterials
enum class EStandardToolContextMaterials : uint8_t
{
    VertexColorMaterial                            = 1,
    EStandardToolContextMaterials_MAX              = 2

};

// Enum  InteractiveToolsFramework.ESceneSnapQueryTargetType
enum class ESceneSnapQueryTargetType : uint8_t
{
    None                                           = 0,
    MeshVertex                                     = 1,
    MeshEdge                                       = 2,
    Grid                                           = 4,
    All                                            = 7,
    ESceneSnapQueryTargetType_MAX                  = 8

};

// Enum  InteractiveToolsFramework.ESceneSnapQueryType
enum class ESceneSnapQueryType : uint8_t
{
    Position                                       = 1,
    ESceneSnapQueryType_MAX                        = 2

};

// Enum  ImGui.EImGuiDPIScaleMethod
enum class EImGuiDPIScaleMethod : uint8_t
{
    ImGui                                          = 0,
    Slate                                          = 1,
    EImGuiDPIScaleMethod_MAX                       = 2

};

// Enum  ImGui.EImGuiCanvasSizeType
enum class EImGuiCanvasSizeType : uint8_t
{
    Custom                                         = 0,
    Desktop                                        = 1,
    Viewport                                       = 2,
    EImGuiCanvasSizeType_MAX                       = 3

};

// Enum  ChaosSolverEngine.EClusterConnectionTypeEnum
enum class EClusterConnectionTypeEnum : uint8_t
{
    Chaos_PointImplicit                            = 1,
    Chaos_DelaunayTriangulation                    = 2,
    Chaos_MinimalSpanningSubsetDelaunayTriangulation = 3,
    Chaos_PointImplicitAugmentedWithMinimalDelaunay = 4,
    Chaos_None                                     = 0,
    Chaos_EClsuterCreationParameters_Max           = 1,
    Chaos_MAX                                      = 5

};

// Enum  GeometryCollectionEngine.EChaosBreakingSortMethod
enum class EChaosBreakingSortMethod : uint8_t
{
    SortNone                                       = 0,
    SortByHighestMass                              = 1,
    SortByHighestSpeed                             = 2,
    SortByNearestFirst                             = 3,
    Count                                          = 4,
    EChaosBreakingSortMethod_MAX                   = 5

};

// Enum  GeometryCollectionEngine.EChaosCollisionSortMethod
enum class EChaosCollisionSortMethod : uint8_t
{
    SortNone                                       = 0,
    SortByHighestMass                              = 1,
    SortByHighestSpeed                             = 2,
    SortByHighestImpulse                           = 3,
    SortByNearestFirst                             = 4,
    Count                                          = 5,
    EChaosCollisionSortMethod_MAX                  = 6

};

// Enum  GeometryCollectionEngine.EChaosTrailingSortMethod
enum class EChaosTrailingSortMethod : uint8_t
{
    SortNone                                       = 0,
    SortByHighestMass                              = 1,
    SortByHighestSpeed                             = 2,
    SortByNearestFirst                             = 3,
    Count                                          = 4,
    EChaosTrailingSortMethod_MAX                   = 5

};

// Enum  GeometryCollectionEngine.EGeometryCollectionDebugDrawActorHideGeometry
enum class EGeometryCollectionDebugDrawActorHideGeometry : uint8_t
{
    HideNone                                       = 0,
    HideWithCollision                              = 1,
    HideSelected                                   = 2,
    HideWholeCollection                            = 3,
    HideAll                                        = 4,
    EGeometryCollectionDebugDrawActorHideGeometry_MAX = 5

};

// Enum  GeometryCollectionEngine.ECollectionGroupEnum
enum class ECollectionGroupEnum : uint8_t
{
    Chaos_Traansform                               = 0,
    Chaos_Max                                      = 1

};

// Enum  GeometryCollectionEngine.ECollectionAttributeEnum
enum class ECollectionAttributeEnum : uint8_t
{
    Chaos_Active                                   = 0,
    Chaos_DynamicState                             = 1,
    Chaos_CollisionGroup                           = 2,
    Chaos_Max                                      = 3

};

// UserDefinedEnum  Engine.Default__UserDefinedEnum
enum class Default__UserDefinedEnum : uint8_t
{

};

// UserDefinedEnum  EFontConfigData_zh.EFontConfigData_zh
enum class EFontConfigData_zh : uint8_t
{
    NewEnumerator0                                 = 0,
    NewEnumerator1                                 = 1,
    NewEnumerator2                                 = 2,
    NewEnumerator3                                 = 3,
    NewEnumerator32                                = 4,
    NewEnumerator4                                 = 5,
    NewEnumerator5                                 = 6,
    NewEnumerator6                                 = 7,
    NewEnumerator7                                 = 8,
    NewEnumerator8                                 = 9,
    NewEnumerator9                                 = 10,
    NewEnumerator10                                = 11,
    NewEnumerator42                                = 12,
    NewEnumerator11                                = 13,
    NewEnumerator12                                = 14,
    NewEnumerator13                                = 15,
    NewEnumerator14                                = 16,
    NewEnumerator15                                = 17,
    NewEnumerator33                                = 18,
    NewEnumerator34                                = 19,
    NewEnumerator35                                = 20,
    NewEnumerator16                                = 21,
    NewEnumerator46                                = 22,
    NewEnumerator17                                = 23,
    NewEnumerator44                                = 24,
    NewEnumerator18                                = 25,
    NewEnumerator19                                = 26,
    NewEnumerator37                                = 27,
    NewEnumerator20                                = 28,
    NewEnumerator21                                = 29,
    NewEnumerator22                                = 30,
    NewEnumerator23                                = 31,
    NewEnumerator24                                = 32,
    NewEnumerator48                                = 33,
    NewEnumerator53                                = 34,
    NewEnumerator25                                = 35,
    NewEnumerator26                                = 36,
    NewEnumerator30                                = 37,
    NewEnumerator31                                = 38,
    NewEnumerator29                                = 39,
    NewEnumerator49                                = 40,
    NewEnumerator27                                = 41,
    NewEnumerator28                                = 42,
    NewEnumerator36                                = 43,
    NewEnumerator38                                = 44,
    NewEnumerator39                                = 45,
    NewEnumerator40                                = 46,
    NewEnumerator41                                = 47,
    NewEnumerator50                                = 48,
    NewEnumerator43                                = 49,
    NewEnumerator55                                = 50,
    NewEnumerator47                                = 51,
    NewEnumerator51                                = 52,
    NewEnumerator52                                = 53,
    NewEnumerator54                                = 54,
    NewEnumerator56                                = 55,
    EFontConfigData_MAX                            = 56

};

// UserDefinedEnum  EnumDamArea.EnumDamArea
enum class EnumDamArea : uint8_t
{
    NewEnumerator21                                = 0,
    NewEnumerator0                                 = 1,
    NewEnumerator1                                 = 2,
    NewEnumerator2                                 = 3,
    NewEnumerator3                                 = 4,
    NewEnumerator19                                = 5,
    NewEnumerator4                                 = 6,
    NewEnumerator5                                 = 7,
    NewEnumerator6                                 = 8,
    NewEnumerator7                                 = 9,
    NewEnumerator20                                = 10,
    NewEnumerator78                                = 11,
    NewEnumerator23                                = 12,
    NewEnumerator24                                = 13,
    NewEnumerator25                                = 14,
    NewEnumerator26                                = 15,
    NewEnumerator27                                = 16,
    NewEnumerator28                                = 17,
    NewEnumerator29                                = 18,
    NewEnumerator30                                = 19,
    NewEnumerator31                                = 20,
    NewEnumerator32                                = 21,
    NewEnumerator33                                = 22,
    NewEnumerator34                                = 23,
    NewEnumerator35                                = 24,
    NewEnumerator36                                = 25,
    NewEnumerator37                                = 26,
    NewEnumerator39                                = 27,
    NewEnumerator47                                = 28,
    NewEnumerator48                                = 29,
    NewEnumerator40                                = 30,
    NewEnumerator41                                = 31,
    NewEnumerator42                                = 32,
    NewEnumerator43                                = 33,
    NewEnumerator44                                = 34,
    NewEnumerator45                                = 35,
    NewEnumerator46                                = 36,
    NewEnumerator49                                = 37,
    NewEnumerator50                                = 38,
    NewEnumerator51                                = 39,
    NewEnumerator52                                = 40,
    NewEnumerator53                                = 41,
    NewEnumerator55                                = 42,
    NewEnumerator56                                = 43,
    NewEnumerator57                                = 44,
    NewEnumerator58                                = 45,
    NewEnumerator59                                = 46,
    NewEnumerator60                                = 47,
    NewEnumerator61                                = 48,
    NewEnumerator62                                = 49,
    NewEnumerator63                                = 50,
    NewEnumerator64                                = 51,
    NewEnumerator65                                = 52,
    NewEnumerator66                                = 53,
    NewEnumerator67                                = 54,
    NewEnumerator68                                = 55,
    NewEnumerator69                                = 56,
    NewEnumerator70                                = 57,
    NewEnumerator71                                = 58,
    NewEnumerator76                                = 59,
    NewEnumerator77                                = 60,
    NewEnumerator79                                = 61,
    NewEnumerator80                                = 62,
    NewEnumerator81                                = 63,
    NewEnumerator82                                = 64,
    NewEnumerator83                                = 65,
    NewEnumerator84                                = 66,
    NewEnumerator85                                = 67,
    NewEnumerator86                                = 68,
    NewEnumerator87                                = 69,
    NewEnumerator88                                = 70,
    NewEnumerator89                                = 71,
    NewEnumerator90                                = 72,
    NewEnumerator91                                = 73,
    NewEnumerator92                                = 74,
    NewEnumerator93                                = 75,
    NewEnumerator94                                = 76,
    EnumDamArea_MAX                                = 77

};

// UserDefinedEnum  EnumLootBoxType.EnumLootBoxType
enum class EnumLootBoxType : uint8_t
{
    NewEnumerator23                                = 0,
    NewEnumerator0                                 = 1,
    NewEnumerator32                                = 2,
    NewEnumerator8                                 = 3,
    NewEnumerator25                                = 4,
    NewEnumerator33                                = 5,
    NewEnumerator1                                 = 6,
    NewEnumerator2                                 = 7,
    NewEnumerator34                                = 8,
    NewEnumerator22                                = 9,
    NewEnumerator6                                 = 10,
    NewEnumerator13                                = 11,
    NewEnumerator14                                = 12,
    NewEnumerator7                                 = 13,
    NewEnumerator35                                = 14,
    NewEnumerator36                                = 15,
    NewEnumerator5                                 = 16,
    NewEnumerator24                                = 17,
    NewEnumerator17                                = 18,
    NewEnumerator3                                 = 19,
    NewEnumerator4                                 = 20,
    NewEnumerator9                                 = 21,
    NewEnumerator10                                = 22,
    NewEnumerator15                                = 23,
    NewEnumerator16                                = 24,
    NewEnumerator19                                = 25,
    NewEnumerator20                                = 26,
    NewEnumerator21                                = 27,
    NewEnumerator26                                = 28,
    NewEnumerator27                                = 29,
    NewEnumerator28                                = 30,
    NewEnumerator30                                = 31,
    NewEnumerator31                                = 32,
    NewEnumerator37                                = 33,
    NewEnumerator38                                = 34,
    NewEnumerator39                                = 35,
    NewEnumerator40                                = 36,
    NewEnumerator41                                = 37,
    NewEnumerator42                                = 38,
    NewEnumerator43                                = 39,
    NewEnumerator44                                = 40,
    NewEnumerator45                                = 41,
    NewEnumerator46                                = 42,
    NewEnumerator47                                = 43,
    NewEnumerator48                                = 44,
    NewEnumerator49                                = 45,
    NewEnumerator52                                = 46,
    NewEnumerator53                                = 47,
    NewEnumerator54                                = 48,
    NewEnumerator55                                = 49,
    NewEnumerator56                                = 50,
    NewEnumerator57                                = 51,
    NewEnumerator58                                = 52,
    NewEnumerator59                                = 53,
    NewEnumerator60                                = 54,
    NewEnumerator61                                = 55,
    NewEnumerator62                                = 56,
    NewEnumerator64                                = 57,
    NewEnumerator65                                = 58,
    NewEnumerator67                                = 59,
    NewEnumerator68                                = 60,
    NewEnumerator69                                = 61,
    NewEnumerator70                                = 62,
    NewEnumerator71                                = 63,
    NewEnumerator72                                = 64,
    EnumLootBoxType_MAX                            = 65

};

// UserDefinedEnum  EnumLootLevel.EnumLootLevel
enum class EnumLootLevel : uint8_t
{
    NewEnumerator0                                 = 0,
    NewEnumerator1                                 = 1,
    NewEnumerator2                                 = 2,
    NewEnumerator19                                = 3,
    NewEnumerator20                                = 4,
    NewEnumerator21                                = 5,
    NewEnumerator24                                = 6,
    NewEnumerator25                                = 7,
    EnumLootLevel_MAX                              = 8

};

// UserDefinedEnum  EnumLootMapName.EnumLootMapName
enum class EnumLootMapName : uint8_t
{
    NewEnumerator1                                 = 0,
    NewEnumerator0                                 = 1,
    NewEnumerator2                                 = 2,
    NewEnumerator3                                 = 3,
    NewEnumerator4                                 = 4,
    NewEnumerator5                                 = 5,
    NewEnumerator6                                 = 6,
    EnumLootMapName_MAX                            = 7

};

// UserDefinedEnum  EnumLootRandomObjConfig.EnumLootRandomObjConfig
enum class EnumLootRandomObjConfig : uint8_t
{
    NewEnumerator0                                 = 0,
    NewEnumerator1                                 = 1,
    NewEnumerator24                                = 2,
    NewEnumerator25                                = 3,
    NewEnumerator26                                = 4,
    NewEnumerator27                                = 5,
    NewEnumerator28                                = 6,
    NewEnumerator29                                = 7,
    NewEnumerator30                                = 8,
    NewEnumerator31                                = 9,
    NewEnumerator32                                = 10,
    NewEnumerator33                                = 11,
    NewEnumerator34                                = 12,
    NewEnumerator35                                = 13,
    NewEnumerator36                                = 14,
    NewEnumerator37                                = 15,
    NewEnumerator38                                = 16,
    NewEnumerator39                                = 17,
    NewEnumerator40                                = 18,
    NewEnumerator41                                = 19,
    EnumLootRandomObjConfig_MAX                    = 20

};

// UserDefinedEnum  QMarkerCustomImage.QMarkerCustomImage
enum class QMarkerCustomImage : uint8_t
{
    NewEnumerator0                                 = 0,
    NewEnumerator1                                 = 1,
    QMarkerCustomImage_MAX                         = 2

};

// UserDefinedEnum  NearFogType.NearFogType
enum class NearFogType : uint8_t
{
    NewEnumerator0                                 = 0,
    NewEnumerator1                                 = 1,
    NewEnumerator2                                 = 2,
    NewEnumerator3                                 = 3,
    NewEnumerator4                                 = 4,
    NewEnumerator5                                 = 5,
    NearFogType_MAX                                = 6

};

// UserDefinedEnum  PrefetureInitStyles.PrefetureInitStyles
enum class PrefetureInitStyles : uint8_t
{
    NewEnumerator0                                 = 0,
    NewEnumerator1                                 = 1,
    NewEnumerator2                                 = 2,
    NewEnumerator3                                 = 3,
    NewEnumerator4                                 = 4,
    NewEnumerator5                                 = 5,
    NewEnumerator6                                 = 6,
    PrefetureInitStyles_MAX                        = 7

};

// UserDefinedEnum  Enum_RT_Quality_Preset.Enum_RT_Quality_Preset
enum class Enum_RT_Quality_Preset : uint8_t
{
    NewEnumerator6                                 = 0,
    NewEnumerator5                                 = 1,
    NewEnumerator0                                 = 2,
    NewEnumerator1                                 = 3,
    NewEnumerator2                                 = 4,
    NewEnumerator3                                 = 5,
    Enum_RT_Quality_MAX                            = 6

};

